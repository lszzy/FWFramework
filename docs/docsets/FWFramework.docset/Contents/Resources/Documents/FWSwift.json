[{
  "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Kernel\/FWDefine.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 1218,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public func FWBenchmarkBegin(_ name: <Type usr=\"s:SS\">String<\/Type> = &quot;&quot;)<\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 245
          }
        ],
        "key.bodylength" : 29,
        "key.bodyoffset" : 296,
        "key.column" : 13,
        "key.decl_lang" : "source.lang.swift",
        "key.doc.column" : 13,
        "key.doc.comment" : "标记时间调试开始\n\n- Parameter name: 调试标签，默认空字符串",
        "key.doc.declaration" : "public func FWBenchmarkBegin(_ name: String = \"\")",
        "key.doc.file" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Kernel\/FWDefine.swift",
        "key.doc.full_as_xml" : "<Function file=\"\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Kernel\/FWDefine.swift\" line=\"14\" column=\"13\"><Name>FWBenchmarkBegin(_:)<\/Name><USR>s:11FWFramework16FWBenchmarkBeginyySSF<\/USR><Declaration>public func FWBenchmarkBegin(_ name: String = &quot;&quot;)<\/Declaration><CommentParts><Abstract><Para>标记时间调试开始<\/Para><\/Abstract><Parameters><Parameter><Name>name<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>调试标签，默认空字符串<\/Para><\/Discussion><\/Parameter><\/Parameters><\/CommentParts><\/Function>",
        "key.doc.line" : 14,
        "key.doc.name" : "FWBenchmarkBegin(_:)",
        "key.doc.parameters" : [
          {
            "discussion" : [
              {
                "Para" : "调试标签，默认空字符串"
              }
            ],
            "name" : "name"
          }
        ],
        "key.doc.type" : "Function",
        "key.doclength" : 89,
        "key.docoffset" : 156,
        "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Kernel\/FWDefine.swift",
        "key.fully_annotated_decl" : "<decl.function.free><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>FWBenchmarkBegin<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>name<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type> = &quot;&quot;<\/decl.var.parameter>)<\/decl.function.free>",
        "key.kind" : "source.lang.swift.decl.function.free",
        "key.length" : 74,
        "key.line" : 14,
        "key.name" : "FWBenchmarkBegin(_:)",
        "key.namelength" : 37,
        "key.nameoffset" : 257,
        "key.offset" : 252,
        "key.parsed_declaration" : "public func FWBenchmarkBegin(_ name: String = \"\")",
        "key.parsed_scope.end" : 16,
        "key.parsed_scope.start" : 14,
        "key.substructure" : [

        ],
        "key.typename" : "(String) -> ()",
        "key.typeusr" : "$syySScD",
        "key.usr" : "s:11FWFramework16FWBenchmarkBeginyySSF"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>@discardableResult public func FWBenchmarkEnd(_ name: <Type usr=\"s:SS\">String<\/Type> = &quot;&quot;) -&gt; <Type usr=\"c:@T@NSTimeInterval\">TimeInterval<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 485
          },
          {
            "key.attribute" : "source.decl.attribute.discardableResult",
            "key.length" : 18,
            "key.offset" : 466
          }
        ],
        "key.bodylength" : 34,
        "key.bodyoffset" : 550,
        "key.column" : 13,
        "key.decl_lang" : "source.lang.swift",
        "key.doc.column" : 13,
        "key.doc.comment" : "标记时间调试结束并打印消耗时间\n\n- Parameter name: 调试标签，默认空字符串\n- Returns: 消耗时间",
        "key.doc.declaration" : "public func FWBenchmarkEnd(_ name: String = \"\") -> TimeInterval",
        "key.doc.file" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Kernel\/FWDefine.swift",
        "key.doc.full_as_xml" : "<Function file=\"\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Kernel\/FWDefine.swift\" line=\"23\" column=\"13\"><Name>FWBenchmarkEnd(_:)<\/Name><USR>s:11FWFramework14FWBenchmarkEndySdSSF<\/USR><Declaration>public func FWBenchmarkEnd(_ name: String = &quot;&quot;) -&gt; TimeInterval<\/Declaration><CommentParts><Abstract><Para>标记时间调试结束并打印消耗时间<\/Para><\/Abstract><Parameters><Parameter><Name>name<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>调试标签，默认空字符串<\/Para><\/Discussion><\/Parameter><\/Parameters><ResultDiscussion><Para>消耗时间<\/Para><\/ResultDiscussion><\/CommentParts><\/Function>",
        "key.doc.line" : 23,
        "key.doc.name" : "FWBenchmarkEnd(_:)",
        "key.doc.parameters" : [
          {
            "discussion" : [
              {
                "Para" : "调试标签，默认空字符串"
              }
            ],
            "name" : "name"
          }
        ],
        "key.doc.result_discussion" : [
          {
            "Para" : "消耗时间"
          }
        ],
        "key.doc.type" : "Function",
        "key.doclength" : 138,
        "key.docoffset" : 328,
        "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Kernel\/FWDefine.swift",
        "key.fully_annotated_decl" : "<decl.function.free><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@discardableResult<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>FWBenchmarkEnd<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>name<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type> = &quot;&quot;<\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"c:@T@NSTimeInterval\">TimeInterval<\/ref.typealias><\/decl.function.returntype><\/decl.function.free>",
        "key.kind" : "source.lang.swift.decl.function.free",
        "key.length" : 93,
        "key.line" : 23,
        "key.name" : "FWBenchmarkEnd(_:)",
        "key.namelength" : 35,
        "key.nameoffset" : 497,
        "key.offset" : 492,
        "key.parsed_declaration" : "public func FWBenchmarkEnd(_ name: String = \"\") -> TimeInterval",
        "key.parsed_scope.end" : 25,
        "key.parsed_scope.start" : 23,
        "key.substructure" : [

        ],
        "key.typename" : "(String) -> Double",
        "key.typeusr" : "$sySdSScD",
        "key.usr" : "s:11FWFramework14FWBenchmarkEndySdSSF"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>@objcMembers public class FWBenchmark : <Type usr=\"c:objc(cs)NSObject\">NSObject<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 620
          },
          {
            "key.attribute" : "source.decl.attribute.objcMembers",
            "key.length" : 12,
            "key.offset" : 607
          }
        ],
        "key.bodylength" : 560,
        "key.bodyoffset" : 656,
        "key.column" : 27,
        "key.decl_lang" : "source.lang.swift",
        "key.doc.column" : 27,
        "key.doc.comment" : "时间调试器",
        "key.doc.declaration" : "@objcMembers public class FWBenchmark : NSObject",
        "key.doc.file" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Kernel\/FWDefine.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Kernel\/FWDefine.swift\" line=\"28\" column=\"27\"><Name>FWBenchmark<\/Name><USR>c:@M@FWFramework@objc(cs)FWBenchmark<\/USR><Declaration>@objcMembers public class FWBenchmark : NSObject<\/Declaration><CommentParts><Abstract><Para>时间调试器<\/Para><\/Abstract><\/CommentParts><\/Class>",
        "key.doc.line" : 28,
        "key.doc.name" : "FWBenchmark",
        "key.doc.type" : "Class",
        "key.doclength" : 20,
        "key.docoffset" : 587,
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 8,
            "key.offset" : 646
          }
        ],
        "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Kernel\/FWDefine.swift",
        "key.fully_annotated_decl" : "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objcMembers<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>class<\/syntaxtype.keyword> <decl.name>FWBenchmark<\/decl.name> : <ref.class usr=\"c:objc(cs)NSObject\">NSObject<\/ref.class><\/decl.class>",
        "key.inheritedtypes" : [
          {
            "key.name" : "NSObject"
          }
        ],
        "key.kind" : "source.lang.swift.decl.class",
        "key.length" : 590,
        "key.line" : 28,
        "key.name" : "FWBenchmark",
        "key.namelength" : 11,
        "key.nameoffset" : 633,
        "key.offset" : 627,
        "key.parsed_declaration" : "@objcMembers public class FWBenchmark: NSObject",
        "key.parsed_scope.end" : 43,
        "key.parsed_scope.start" : 28,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>private static var times: [<Type usr=\"s:SS\">String<\/Type> : <Type usr=\"c:@T@NSTimeInterval\">TimeInterval<\/Type>]<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.private",
                "key.length" : 7,
                "key.offset" : 661
              }
            ],
            "key.column" : 24,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Kernel\/FWDefine.swift",
            "key.fully_annotated_decl" : "<decl.var.static><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>times<\/decl.name>: <decl.var.type>[<ref.struct usr=\"s:SS\">String<\/ref.struct> : <ref.typealias usr=\"c:@T@NSTimeInterval\">TimeInterval<\/ref.typealias>]<\/decl.var.type><\/decl.var.static>",
            "key.kind" : "source.lang.swift.decl.var.static",
            "key.length" : 47,
            "key.line" : 29,
            "key.name" : "times",
            "key.namelength" : 5,
            "key.nameoffset" : 680,
            "key.offset" : 669,
            "key.parsed_declaration" : "private static var times: [String : TimeInterval] = [:]",
            "key.parsed_scope.end" : 29,
            "key.parsed_scope.start" : 29,
            "key.setter_accessibility" : "source.lang.swift.accessibility.private",
            "key.typename" : "[String : Double]",
            "key.typeusr" : "$sSDySSSdGD",
            "key.usr" : "s:11FWFramework11FWBenchmarkC5times33_2113AB96ED3A52860FC5710FBC36AE3BLLSDySSSdGvpZ"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public static func begin(_ name: <Type usr=\"s:SS\">String<\/Type>)<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 759
              }
            ],
            "key.bodylength" : 56,
            "key.bodyoffset" : 801,
            "key.column" : 24,
            "key.decl_lang" : "source.lang.swift",
            "key.doc.column" : 24,
            "key.doc.comment" : "标记时间调试开始",
            "key.doc.declaration" : "public static func begin(_ name: String)",
            "key.doc.file" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Kernel\/FWDefine.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Kernel\/FWDefine.swift\" line=\"32\" column=\"24\"><Name>begin(_:)<\/Name><USR>c:@M@FWFramework@objc(cs)FWBenchmark(cm)begin:<\/USR><Declaration>public static func begin(_ name: String)<\/Declaration><CommentParts><Abstract><Para>标记时间调试开始<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 32,
            "key.doc.name" : "begin(_:)",
            "key.doc.type" : "Function",
            "key.doclength" : 29,
            "key.docoffset" : 726,
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Kernel\/FWDefine.swift",
            "key.fully_annotated_decl" : "<decl.function.method.static><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>begin<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>name<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.method.static>",
            "key.kind" : "source.lang.swift.decl.function.method.static",
            "key.length" : 92,
            "key.line" : 32,
            "key.name" : "begin(_:)",
            "key.namelength" : 21,
            "key.nameoffset" : 778,
            "key.offset" : 766,
            "key.parsed_declaration" : "public static func begin(_ name: String)",
            "key.parsed_scope.end" : 34,
            "key.parsed_scope.start" : 32,
            "key.substructure" : [

            ],
            "key.typename" : "(FWBenchmark.Type) -> (String) -> ()",
            "key.typeusr" : "$syySScD",
            "key.usr" : "c:@M@FWFramework@objc(cs)FWBenchmark(cm)begin:"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public static func end(_ name: <Type usr=\"s:SS\">String<\/Type>) -&gt; <Type usr=\"c:@T@NSTimeInterval\">TimeInterval<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 922
              }
            ],
            "key.bodylength" : 236,
            "key.bodyoffset" : 978,
            "key.column" : 24,
            "key.decl_lang" : "source.lang.swift",
            "key.doc.column" : 24,
            "key.doc.comment" : "标记时间调试结束并打印消耗时间",
            "key.doc.declaration" : "public static func end(_ name: String) -> TimeInterval",
            "key.doc.file" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Kernel\/FWDefine.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Kernel\/FWDefine.swift\" line=\"37\" column=\"24\"><Name>end(_:)<\/Name><USR>c:@M@FWFramework@objc(cs)FWBenchmark(cm)end:<\/USR><Declaration>public static func end(_ name: String) -&gt; TimeInterval<\/Declaration><CommentParts><Abstract><Para>标记时间调试结束并打印消耗时间<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 37,
            "key.doc.name" : "end(_:)",
            "key.doc.type" : "Function",
            "key.doclength" : 50,
            "key.docoffset" : 868,
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Kernel\/FWDefine.swift",
            "key.fully_annotated_decl" : "<decl.function.method.static><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>end<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>name<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"c:@T@NSTimeInterval\">TimeInterval<\/ref.typealias><\/decl.function.returntype><\/decl.function.method.static>",
            "key.kind" : "source.lang.swift.decl.function.method.static",
            "key.length" : 286,
            "key.line" : 37,
            "key.name" : "end(_:)",
            "key.namelength" : 19,
            "key.nameoffset" : 941,
            "key.offset" : 929,
            "key.parsed_declaration" : "public static func end(_ name: String) -> TimeInterval",
            "key.parsed_scope.end" : 42,
            "key.parsed_scope.start" : 37,
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>let beginTime: <Type usr=\"c:@T@NSTimeInterval\">TimeInterval<\/Type><\/Declaration>",
                "key.column" : 13,
                "key.decl_lang" : "source.lang.swift",
                "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Kernel\/FWDefine.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>beginTime<\/decl.name>: <decl.var.type><ref.typealias usr=\"c:@T@NSTimeInterval\">TimeInterval<\/ref.typealias><\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 59,
                "key.line" : 38,
                "key.name" : "beginTime",
                "key.namelength" : 9,
                "key.nameoffset" : 991,
                "key.offset" : 987,
                "key.parsed_declaration" : "let beginTime = times[name] ?? Date().timeIntervalSince1970",
                "key.parsed_scope.end" : 38,
                "key.parsed_scope.start" : 38,
                "key.typename" : "Double",
                "key.typeusr" : "$sSdD",
                "key.usr" : "s:11FWFramework11FWBenchmarkC3endySdSSFZ9beginTimeL_Sdvp"
              },
              {
                "key.annotated_decl" : "<Declaration>let timeInterval: <Type usr=\"c:@T@NSTimeInterval\">TimeInterval<\/Type><\/Declaration>",
                "key.column" : 13,
                "key.decl_lang" : "source.lang.swift",
                "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Kernel\/FWDefine.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>timeInterval<\/decl.name>: <decl.var.type><ref.typealias usr=\"c:@T@NSTimeInterval\">TimeInterval<\/ref.typealias><\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 59,
                "key.line" : 39,
                "key.name" : "timeInterval",
                "key.namelength" : 12,
                "key.nameoffset" : 1059,
                "key.offset" : 1055,
                "key.parsed_declaration" : "let timeInterval = Date().timeIntervalSince1970 - beginTime",
                "key.parsed_scope.end" : 39,
                "key.parsed_scope.start" : 39,
                "key.typename" : "Double",
                "key.typeusr" : "$sSdD",
                "key.usr" : "s:11FWFramework11FWBenchmarkC3endySdSSFZ12timeIntervalL_Sdvp"
              }
            ],
            "key.typename" : "(FWBenchmark.Type) -> (String) -> Double",
            "key.typeusr" : "$sySdSScD",
            "key.usr" : "c:@M@FWFramework@objc(cs)FWBenchmark(cm)end:"
          }
        ],
        "key.typename" : "FWBenchmark.Type",
        "key.typeusr" : "$s11FWFramework11FWBenchmarkCmD",
        "key.usr" : "c:@M@FWFramework@objc(cs)FWBenchmark"
      }
    ]
  }
}, {
  "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Kernel\/FWLog.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 6381,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public func FWLogTrace(_ format: <Type usr=\"s:SS\">String<\/Type>, _ arguments: <Type usr=\"s:s7CVarArgP\">CVarArg<\/Type>..., file: <Type usr=\"s:SS\">String<\/Type> = #file, function: <Type usr=\"s:SS\">String<\/Type> = #function, line: <Type usr=\"s:Si\">Int<\/Type> = #line)<\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 401
          }
        ],
        "key.bodylength" : 210,
        "key.bodyoffset" : 539,
        "key.column" : 13,
        "key.decl_lang" : "source.lang.swift",
        "key.doc.column" : 13,
        "key.doc.comment" : "记录跟踪日志\n\n- Parameters:\n  - format: 格式化字符串\n  - arguments: 可变参数列表，可不传\n  - file: 文件名，默认传参\n  - function: 方法名，默认传参\n  - line: 行数，默认传参",
        "key.doc.declaration" : "public func FWLogTrace(_ format: String, _ arguments: CVarArg..., file: String = #file, function: String = #function, line: Int = #line)",
        "key.doc.file" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Kernel\/FWLog.swift",
        "key.doc.full_as_xml" : "<Function file=\"\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Kernel\/FWLog.swift\" line=\"19\" column=\"13\"><Name>FWLogTrace(_:_:file:function:line:)<\/Name><USR>s:11FWFramework10FWLogTrace__4file8function4lineySS_s7CVarArg_pdS2SSitF<\/USR><Declaration>public func FWLogTrace(_ format: String, _ arguments: CVarArg..., file: String = #file, function: String = #function, line: Int = #line)<\/Declaration><CommentParts><Abstract><Para>记录跟踪日志<\/Para><\/Abstract><Parameters><Parameter><Name>format<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>格式化字符串<\/Para><\/Discussion><\/Parameter><Parameter><Name>arguments<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>可变参数列表，可不传<\/Para><\/Discussion><\/Parameter><Parameter><Name>file<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>文件名，默认传参<\/Para><\/Discussion><\/Parameter><Parameter><Name>function<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>方法名，默认传参<\/Para><\/Discussion><\/Parameter><Parameter><Name>line<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>行数，默认传参<\/Para><\/Discussion><\/Parameter><\/Parameters><\/CommentParts><\/Function>",
        "key.doc.line" : 19,
        "key.doc.name" : "FWLogTrace(_:_:file:function:line:)",
        "key.doc.parameters" : [
          {
            "discussion" : [
              {
                "Para" : "格式化字符串"
              }
            ],
            "name" : "format"
          },
          {
            "discussion" : [
              {
                "Para" : "可变参数列表，可不传"
              }
            ],
            "name" : "arguments"
          },
          {
            "discussion" : [
              {
                "Para" : "文件名，默认传参"
              }
            ],
            "name" : "file"
          },
          {
            "discussion" : [
              {
                "Para" : "方法名，默认传参"
              }
            ],
            "name" : "function"
          },
          {
            "discussion" : [
              {
                "Para" : "行数，默认传参"
              }
            ],
            "name" : "line"
          }
        ],
        "key.doc.type" : "Function",
        "key.doclength" : 248,
        "key.docoffset" : 153,
        "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Kernel\/FWLog.swift",
        "key.fully_annotated_decl" : "<decl.function.free><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>FWLogTrace<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>format<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>arguments<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.protocol usr=\"s:s7CVarArgP\">CVarArg<\/ref.protocol><\/decl.var.parameter.type>...<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>file<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type> = <syntaxtype.keyword>#file<\/syntaxtype.keyword><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>function<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type> = <syntaxtype.keyword>#function<\/syntaxtype.keyword><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>line<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type> = <syntaxtype.keyword>#line<\/syntaxtype.keyword><\/decl.var.parameter>)<\/decl.function.free>",
        "key.kind" : "source.lang.swift.decl.function.free",
        "key.length" : 342,
        "key.line" : 19,
        "key.name" : "FWLogTrace(_:_:file:function:line:)",
        "key.namelength" : 124,
        "key.nameoffset" : 413,
        "key.offset" : 408,
        "key.parsed_declaration" : "public func FWLogTrace(_ format: String, _ arguments: CVarArg..., file: String = #file, function: String = #function, line: Int = #line)",
        "key.parsed_scope.end" : 21,
        "key.parsed_scope.start" : 19,
        "key.substructure" : [

        ],
        "key.typename" : "(String, CVarArg..., String, String, Int) -> ()",
        "key.typeusr" : "$s__4file8function4lineySS_s7CVarArg_pdS2SSitcD",
        "key.usr" : "s:11FWFramework10FWLogTrace__4file8function4lineySS_s7CVarArg_pdS2SSitF"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public func FWLogDebug(_ format: <Type usr=\"s:SS\">String<\/Type>, _ arguments: <Type usr=\"s:s7CVarArgP\">CVarArg<\/Type>..., file: <Type usr=\"s:SS\">String<\/Type> = #file, function: <Type usr=\"s:SS\">String<\/Type> = #function, line: <Type usr=\"s:Si\">Int<\/Type> = #line)<\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 1000
          }
        ],
        "key.bodylength" : 210,
        "key.bodyoffset" : 1138,
        "key.column" : 13,
        "key.decl_lang" : "source.lang.swift",
        "key.doc.column" : 13,
        "key.doc.comment" : "记录调试日志\n\n- Parameters:\n  - format: 格式化字符串\n  - arguments: 可变参数列表，可不传\n  - file: 文件名，默认传参\n  - function: 方法名，默认传参\n  - line: 行数，默认传参",
        "key.doc.declaration" : "public func FWLogDebug(_ format: String, _ arguments: CVarArg..., file: String = #file, function: String = #function, line: Int = #line)",
        "key.doc.file" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Kernel\/FWLog.swift",
        "key.doc.full_as_xml" : "<Function file=\"\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Kernel\/FWLog.swift\" line=\"31\" column=\"13\"><Name>FWLogDebug(_:_:file:function:line:)<\/Name><USR>s:11FWFramework10FWLogDebug__4file8function4lineySS_s7CVarArg_pdS2SSitF<\/USR><Declaration>public func FWLogDebug(_ format: String, _ arguments: CVarArg..., file: String = #file, function: String = #function, line: Int = #line)<\/Declaration><CommentParts><Abstract><Para>记录调试日志<\/Para><\/Abstract><Parameters><Parameter><Name>format<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>格式化字符串<\/Para><\/Discussion><\/Parameter><Parameter><Name>arguments<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>可变参数列表，可不传<\/Para><\/Discussion><\/Parameter><Parameter><Name>file<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>文件名，默认传参<\/Para><\/Discussion><\/Parameter><Parameter><Name>function<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>方法名，默认传参<\/Para><\/Discussion><\/Parameter><Parameter><Name>line<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>行数，默认传参<\/Para><\/Discussion><\/Parameter><\/Parameters><\/CommentParts><\/Function>",
        "key.doc.line" : 31,
        "key.doc.name" : "FWLogDebug(_:_:file:function:line:)",
        "key.doc.parameters" : [
          {
            "discussion" : [
              {
                "Para" : "格式化字符串"
              }
            ],
            "name" : "format"
          },
          {
            "discussion" : [
              {
                "Para" : "可变参数列表，可不传"
              }
            ],
            "name" : "arguments"
          },
          {
            "discussion" : [
              {
                "Para" : "文件名，默认传参"
              }
            ],
            "name" : "file"
          },
          {
            "discussion" : [
              {
                "Para" : "方法名，默认传参"
              }
            ],
            "name" : "function"
          },
          {
            "discussion" : [
              {
                "Para" : "行数，默认传参"
              }
            ],
            "name" : "line"
          }
        ],
        "key.doc.type" : "Function",
        "key.doclength" : 248,
        "key.docoffset" : 752,
        "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Kernel\/FWLog.swift",
        "key.fully_annotated_decl" : "<decl.function.free><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>FWLogDebug<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>format<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>arguments<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.protocol usr=\"s:s7CVarArgP\">CVarArg<\/ref.protocol><\/decl.var.parameter.type>...<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>file<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type> = <syntaxtype.keyword>#file<\/syntaxtype.keyword><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>function<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type> = <syntaxtype.keyword>#function<\/syntaxtype.keyword><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>line<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type> = <syntaxtype.keyword>#line<\/syntaxtype.keyword><\/decl.var.parameter>)<\/decl.function.free>",
        "key.kind" : "source.lang.swift.decl.function.free",
        "key.length" : 342,
        "key.line" : 31,
        "key.name" : "FWLogDebug(_:_:file:function:line:)",
        "key.namelength" : 124,
        "key.nameoffset" : 1012,
        "key.offset" : 1007,
        "key.parsed_declaration" : "public func FWLogDebug(_ format: String, _ arguments: CVarArg..., file: String = #file, function: String = #function, line: Int = #line)",
        "key.parsed_scope.end" : 33,
        "key.parsed_scope.start" : 31,
        "key.substructure" : [

        ],
        "key.typename" : "(String, CVarArg..., String, String, Int) -> ()",
        "key.typeusr" : "$s__4file8function4lineySS_s7CVarArg_pdS2SSitcD",
        "key.usr" : "s:11FWFramework10FWLogDebug__4file8function4lineySS_s7CVarArg_pdS2SSitF"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public func FWLogInfo(_ format: <Type usr=\"s:SS\">String<\/Type>, _ arguments: <Type usr=\"s:s7CVarArgP\">CVarArg<\/Type>..., file: <Type usr=\"s:SS\">String<\/Type> = #file, function: <Type usr=\"s:SS\">String<\/Type> = #function, line: <Type usr=\"s:Si\">Int<\/Type> = #line)<\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 1599
          }
        ],
        "key.bodylength" : 209,
        "key.bodyoffset" : 1736,
        "key.column" : 13,
        "key.decl_lang" : "source.lang.swift",
        "key.doc.column" : 13,
        "key.doc.comment" : "记录信息日志\n\n- Parameters:\n  - format: 格式化字符串\n  - arguments: 可变参数列表，可不传\n  - file: 文件名，默认传参\n  - function: 方法名，默认传参\n  - line: 行数，默认传参",
        "key.doc.declaration" : "public func FWLogInfo(_ format: String, _ arguments: CVarArg..., file: String = #file, function: String = #function, line: Int = #line)",
        "key.doc.file" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Kernel\/FWLog.swift",
        "key.doc.full_as_xml" : "<Function file=\"\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Kernel\/FWLog.swift\" line=\"43\" column=\"13\"><Name>FWLogInfo(_:_:file:function:line:)<\/Name><USR>s:11FWFramework9FWLogInfo__4file8function4lineySS_s7CVarArg_pdS2SSitF<\/USR><Declaration>public func FWLogInfo(_ format: String, _ arguments: CVarArg..., file: String = #file, function: String = #function, line: Int = #line)<\/Declaration><CommentParts><Abstract><Para>记录信息日志<\/Para><\/Abstract><Parameters><Parameter><Name>format<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>格式化字符串<\/Para><\/Discussion><\/Parameter><Parameter><Name>arguments<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>可变参数列表，可不传<\/Para><\/Discussion><\/Parameter><Parameter><Name>file<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>文件名，默认传参<\/Para><\/Discussion><\/Parameter><Parameter><Name>function<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>方法名，默认传参<\/Para><\/Discussion><\/Parameter><Parameter><Name>line<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>行数，默认传参<\/Para><\/Discussion><\/Parameter><\/Parameters><\/CommentParts><\/Function>",
        "key.doc.line" : 43,
        "key.doc.name" : "FWLogInfo(_:_:file:function:line:)",
        "key.doc.parameters" : [
          {
            "discussion" : [
              {
                "Para" : "格式化字符串"
              }
            ],
            "name" : "format"
          },
          {
            "discussion" : [
              {
                "Para" : "可变参数列表，可不传"
              }
            ],
            "name" : "arguments"
          },
          {
            "discussion" : [
              {
                "Para" : "文件名，默认传参"
              }
            ],
            "name" : "file"
          },
          {
            "discussion" : [
              {
                "Para" : "方法名，默认传参"
              }
            ],
            "name" : "function"
          },
          {
            "discussion" : [
              {
                "Para" : "行数，默认传参"
              }
            ],
            "name" : "line"
          }
        ],
        "key.doc.type" : "Function",
        "key.doclength" : 248,
        "key.docoffset" : 1351,
        "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Kernel\/FWLog.swift",
        "key.fully_annotated_decl" : "<decl.function.free><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>FWLogInfo<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>format<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>arguments<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.protocol usr=\"s:s7CVarArgP\">CVarArg<\/ref.protocol><\/decl.var.parameter.type>...<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>file<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type> = <syntaxtype.keyword>#file<\/syntaxtype.keyword><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>function<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type> = <syntaxtype.keyword>#function<\/syntaxtype.keyword><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>line<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type> = <syntaxtype.keyword>#line<\/syntaxtype.keyword><\/decl.var.parameter>)<\/decl.function.free>",
        "key.kind" : "source.lang.swift.decl.function.free",
        "key.length" : 340,
        "key.line" : 43,
        "key.name" : "FWLogInfo(_:_:file:function:line:)",
        "key.namelength" : 123,
        "key.nameoffset" : 1611,
        "key.offset" : 1606,
        "key.parsed_declaration" : "public func FWLogInfo(_ format: String, _ arguments: CVarArg..., file: String = #file, function: String = #function, line: Int = #line)",
        "key.parsed_scope.end" : 45,
        "key.parsed_scope.start" : 43,
        "key.substructure" : [

        ],
        "key.typename" : "(String, CVarArg..., String, String, Int) -> ()",
        "key.typeusr" : "$s__4file8function4lineySS_s7CVarArg_pdS2SSitcD",
        "key.usr" : "s:11FWFramework9FWLogInfo__4file8function4lineySS_s7CVarArg_pdS2SSitF"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public func FWLogWarn(_ format: <Type usr=\"s:SS\">String<\/Type>, _ arguments: <Type usr=\"s:s7CVarArgP\">CVarArg<\/Type>..., file: <Type usr=\"s:SS\">String<\/Type> = #file, function: <Type usr=\"s:SS\">String<\/Type> = #function, line: <Type usr=\"s:Si\">Int<\/Type> = #line)<\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 2196
          }
        ],
        "key.bodylength" : 209,
        "key.bodyoffset" : 2333,
        "key.column" : 13,
        "key.decl_lang" : "source.lang.swift",
        "key.doc.column" : 13,
        "key.doc.comment" : "记录警告日志\n\n- Parameters:\n  - format: 格式化字符串\n  - arguments: 可变参数列表，可不传\n  - file: 文件名，默认传参\n  - function: 方法名，默认传参\n  - line: 行数，默认传参",
        "key.doc.declaration" : "public func FWLogWarn(_ format: String, _ arguments: CVarArg..., file: String = #file, function: String = #function, line: Int = #line)",
        "key.doc.file" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Kernel\/FWLog.swift",
        "key.doc.full_as_xml" : "<Function file=\"\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Kernel\/FWLog.swift\" line=\"55\" column=\"13\"><Name>FWLogWarn(_:_:file:function:line:)<\/Name><USR>s:11FWFramework9FWLogWarn__4file8function4lineySS_s7CVarArg_pdS2SSitF<\/USR><Declaration>public func FWLogWarn(_ format: String, _ arguments: CVarArg..., file: String = #file, function: String = #function, line: Int = #line)<\/Declaration><CommentParts><Abstract><Para>记录警告日志<\/Para><\/Abstract><Parameters><Parameter><Name>format<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>格式化字符串<\/Para><\/Discussion><\/Parameter><Parameter><Name>arguments<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>可变参数列表，可不传<\/Para><\/Discussion><\/Parameter><Parameter><Name>file<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>文件名，默认传参<\/Para><\/Discussion><\/Parameter><Parameter><Name>function<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>方法名，默认传参<\/Para><\/Discussion><\/Parameter><Parameter><Name>line<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>行数，默认传参<\/Para><\/Discussion><\/Parameter><\/Parameters><\/CommentParts><\/Function>",
        "key.doc.line" : 55,
        "key.doc.name" : "FWLogWarn(_:_:file:function:line:)",
        "key.doc.parameters" : [
          {
            "discussion" : [
              {
                "Para" : "格式化字符串"
              }
            ],
            "name" : "format"
          },
          {
            "discussion" : [
              {
                "Para" : "可变参数列表，可不传"
              }
            ],
            "name" : "arguments"
          },
          {
            "discussion" : [
              {
                "Para" : "文件名，默认传参"
              }
            ],
            "name" : "file"
          },
          {
            "discussion" : [
              {
                "Para" : "方法名，默认传参"
              }
            ],
            "name" : "function"
          },
          {
            "discussion" : [
              {
                "Para" : "行数，默认传参"
              }
            ],
            "name" : "line"
          }
        ],
        "key.doc.type" : "Function",
        "key.doclength" : 248,
        "key.docoffset" : 1948,
        "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Kernel\/FWLog.swift",
        "key.fully_annotated_decl" : "<decl.function.free><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>FWLogWarn<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>format<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>arguments<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.protocol usr=\"s:s7CVarArgP\">CVarArg<\/ref.protocol><\/decl.var.parameter.type>...<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>file<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type> = <syntaxtype.keyword>#file<\/syntaxtype.keyword><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>function<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type> = <syntaxtype.keyword>#function<\/syntaxtype.keyword><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>line<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type> = <syntaxtype.keyword>#line<\/syntaxtype.keyword><\/decl.var.parameter>)<\/decl.function.free>",
        "key.kind" : "source.lang.swift.decl.function.free",
        "key.length" : 340,
        "key.line" : 55,
        "key.name" : "FWLogWarn(_:_:file:function:line:)",
        "key.namelength" : 123,
        "key.nameoffset" : 2208,
        "key.offset" : 2203,
        "key.parsed_declaration" : "public func FWLogWarn(_ format: String, _ arguments: CVarArg..., file: String = #file, function: String = #function, line: Int = #line)",
        "key.parsed_scope.end" : 57,
        "key.parsed_scope.start" : 55,
        "key.substructure" : [

        ],
        "key.typename" : "(String, CVarArg..., String, String, Int) -> ()",
        "key.typeusr" : "$s__4file8function4lineySS_s7CVarArg_pdS2SSitcD",
        "key.usr" : "s:11FWFramework9FWLogWarn__4file8function4lineySS_s7CVarArg_pdS2SSitF"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public func FWLogError(_ format: <Type usr=\"s:SS\">String<\/Type>, _ arguments: <Type usr=\"s:s7CVarArgP\">CVarArg<\/Type>..., file: <Type usr=\"s:SS\">String<\/Type> = #file, function: <Type usr=\"s:SS\">String<\/Type> = #function, line: <Type usr=\"s:Si\">Int<\/Type> = #line)<\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 2793
          }
        ],
        "key.bodylength" : 210,
        "key.bodyoffset" : 2931,
        "key.column" : 13,
        "key.decl_lang" : "source.lang.swift",
        "key.doc.column" : 13,
        "key.doc.comment" : "记录错误日志\n\n- Parameters:\n  - format: 格式化字符串\n  - arguments: 可变参数列表，可不传\n  - file: 文件名，默认传参\n  - function: 方法名，默认传参\n  - line: 行数，默认传参",
        "key.doc.declaration" : "public func FWLogError(_ format: String, _ arguments: CVarArg..., file: String = #file, function: String = #function, line: Int = #line)",
        "key.doc.file" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Kernel\/FWLog.swift",
        "key.doc.full_as_xml" : "<Function file=\"\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Kernel\/FWLog.swift\" line=\"67\" column=\"13\"><Name>FWLogError(_:_:file:function:line:)<\/Name><USR>s:11FWFramework10FWLogError__4file8function4lineySS_s7CVarArg_pdS2SSitF<\/USR><Declaration>public func FWLogError(_ format: String, _ arguments: CVarArg..., file: String = #file, function: String = #function, line: Int = #line)<\/Declaration><CommentParts><Abstract><Para>记录错误日志<\/Para><\/Abstract><Parameters><Parameter><Name>format<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>格式化字符串<\/Para><\/Discussion><\/Parameter><Parameter><Name>arguments<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>可变参数列表，可不传<\/Para><\/Discussion><\/Parameter><Parameter><Name>file<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>文件名，默认传参<\/Para><\/Discussion><\/Parameter><Parameter><Name>function<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>方法名，默认传参<\/Para><\/Discussion><\/Parameter><Parameter><Name>line<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>行数，默认传参<\/Para><\/Discussion><\/Parameter><\/Parameters><\/CommentParts><\/Function>",
        "key.doc.line" : 67,
        "key.doc.name" : "FWLogError(_:_:file:function:line:)",
        "key.doc.parameters" : [
          {
            "discussion" : [
              {
                "Para" : "格式化字符串"
              }
            ],
            "name" : "format"
          },
          {
            "discussion" : [
              {
                "Para" : "可变参数列表，可不传"
              }
            ],
            "name" : "arguments"
          },
          {
            "discussion" : [
              {
                "Para" : "文件名，默认传参"
              }
            ],
            "name" : "file"
          },
          {
            "discussion" : [
              {
                "Para" : "方法名，默认传参"
              }
            ],
            "name" : "function"
          },
          {
            "discussion" : [
              {
                "Para" : "行数，默认传参"
              }
            ],
            "name" : "line"
          }
        ],
        "key.doc.type" : "Function",
        "key.doclength" : 248,
        "key.docoffset" : 2545,
        "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Kernel\/FWLog.swift",
        "key.fully_annotated_decl" : "<decl.function.free><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>FWLogError<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>format<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>arguments<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.protocol usr=\"s:s7CVarArgP\">CVarArg<\/ref.protocol><\/decl.var.parameter.type>...<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>file<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type> = <syntaxtype.keyword>#file<\/syntaxtype.keyword><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>function<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type> = <syntaxtype.keyword>#function<\/syntaxtype.keyword><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>line<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type> = <syntaxtype.keyword>#line<\/syntaxtype.keyword><\/decl.var.parameter>)<\/decl.function.free>",
        "key.kind" : "source.lang.swift.decl.function.free",
        "key.length" : 342,
        "key.line" : 67,
        "key.name" : "FWLogError(_:_:file:function:line:)",
        "key.namelength" : 124,
        "key.nameoffset" : 2805,
        "key.offset" : 2800,
        "key.parsed_declaration" : "public func FWLogError(_ format: String, _ arguments: CVarArg..., file: String = #file, function: String = #function, line: Int = #line)",
        "key.parsed_scope.end" : 69,
        "key.parsed_scope.start" : 67,
        "key.substructure" : [

        ],
        "key.typename" : "(String, CVarArg..., String, String, Int) -> ()",
        "key.typeusr" : "$s__4file8function4lineySS_s7CVarArg_pdS2SSitcD",
        "key.usr" : "s:11FWFramework10FWLogError__4file8function4lineySS_s7CVarArg_pdS2SSitF"
      },
      {
        "key.annotated_decl" : "<Declaration>class FWLog : <Type usr=\"c:objc(cs)NSObject\">NSObject<\/Type><\/Declaration>",
        "key.bodylength" : 3202,
        "key.bodyoffset" : 3177,
        "key.column" : 12,
        "key.decl_lang" : "source.lang.objc",
        "key.doc.column" : 12,
        "key.doc.comment" : "FWLog扩展",
        "key.doc.declaration" : "class FWLog : NSObject",
        "key.doc.file" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Kernel\/FWLog.h",
        "key.doc.full_as_xml" : "<Other file=\"\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Kernel\/FWLog.h\" line=\"99\" column=\"12\"><Name>FWLog<\/Name><USR>c:objc(cs)FWLog<\/USR><Declaration>class FWLog : NSObject<\/Declaration><Abstract><Para> 日志记录类。支持设置全局日志级别和自定义FWLogPlugin插件<\/Para><\/Abstract><\/Other>",
        "key.doc.line" : 99,
        "key.doc.name" : "FWLog",
        "key.doc.type" : "Other",
        "key.doclength" : 16,
        "key.docoffset" : 3144,
        "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Kernel\/FWLog.h",
        "key.fully_annotated_decl" : "<decl.class><syntaxtype.keyword>class<\/syntaxtype.keyword> <decl.name>FWLog<\/decl.name> : <ref.class usr=\"c:objc(cs)NSObject\">NSObject<\/ref.class><\/decl.class>",
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 3220,
        "key.line" : 99,
        "key.modulename" : "FWFramework.FWLog",
        "key.name" : "FWLog",
        "key.namelength" : 5,
        "key.nameoffset" : 3170,
        "key.offset" : 3160,
        "key.parsed_declaration" : "extension FWLog",
        "key.parsed_scope.end" : 132,
        "key.parsed_scope.start" : 72,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public class func trace(_ format: <Type usr=\"s:SS\">String<\/Type>, _ arguments: <Type usr=\"s:s7CVarArgP\">CVarArg<\/Type>..., file: <Type usr=\"s:SS\">String<\/Type> = #file, function: <Type usr=\"s:SS\">String<\/Type> = #function, line: <Type usr=\"s:Si\">Int<\/Type> = #line)<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 3462
              }
            ],
            "key.bodylength" : 212,
            "key.bodyoffset" : 3601,
            "key.column" : 23,
            "key.decl_lang" : "source.lang.swift",
            "key.doc.column" : 23,
            "key.doc.comment" : "记录跟踪日志\n\n- Parameters:\n  - format: 格式化字符串\n  - arguments: 可变参数列表，可不传\n  - file: 文件名，默认传参\n  - function: 方法名，默认传参\n  - line: 行数，默认传参",
            "key.doc.declaration" : "public class func trace(_ format: String, _ arguments: CVarArg..., file: String = #file, function: String = #function, line: Int = #line)",
            "key.doc.file" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Kernel\/FWLog.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Kernel\/FWLog.swift\" line=\"81\" column=\"23\"><Name>trace(_:_:file:function:line:)<\/Name><USR>s:So5FWLogC11FWFrameworkE5trace__4file8function4lineySS_s7CVarArg_pdS2SSitFZ<\/USR><Declaration>public class func trace(_ format: String, _ arguments: CVarArg..., file: String = #file, function: String = #function, line: Int = #line)<\/Declaration><CommentParts><Abstract><Para>记录跟踪日志<\/Para><\/Abstract><Parameters><Parameter><Name>format<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>格式化字符串<\/Para><\/Discussion><\/Parameter><Parameter><Name>arguments<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>可变参数列表，可不传<\/Para><\/Discussion><\/Parameter><Parameter><Name>file<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>文件名，默认传参<\/Para><\/Discussion><\/Parameter><Parameter><Name>function<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>方法名，默认传参<\/Para><\/Discussion><\/Parameter><Parameter><Name>line<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>行数，默认传参<\/Para><\/Discussion><\/Parameter><\/Parameters><\/CommentParts><\/Function>",
            "key.doc.line" : 81,
            "key.doc.name" : "trace(_:_:file:function:line:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "格式化字符串"
                  }
                ],
                "name" : "format"
              },
              {
                "discussion" : [
                  {
                    "Para" : "可变参数列表，可不传"
                  }
                ],
                "name" : "arguments"
              },
              {
                "discussion" : [
                  {
                    "Para" : "文件名，默认传参"
                  }
                ],
                "name" : "file"
              },
              {
                "discussion" : [
                  {
                    "Para" : "方法名，默认传参"
                  }
                ],
                "name" : "function"
              },
              {
                "discussion" : [
                  {
                    "Para" : "行数，默认传参"
                  }
                ],
                "name" : "line"
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 276,
            "key.docoffset" : 3182,
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Kernel\/FWLog.swift",
            "key.fully_annotated_decl" : "<decl.function.method.class><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>class<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>trace<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>format<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>arguments<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.protocol usr=\"s:s7CVarArgP\">CVarArg<\/ref.protocol><\/decl.var.parameter.type>...<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>file<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type> = <syntaxtype.keyword>#file<\/syntaxtype.keyword><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>function<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type> = <syntaxtype.keyword>#function<\/syntaxtype.keyword><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>line<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type> = <syntaxtype.keyword>#line<\/syntaxtype.keyword><\/decl.var.parameter>)<\/decl.function.method.class>",
            "key.kind" : "source.lang.swift.decl.function.method.class",
            "key.length" : 345,
            "key.line" : 81,
            "key.name" : "trace(_:_:file:function:line:)",
            "key.namelength" : 119,
            "key.nameoffset" : 3480,
            "key.offset" : 3469,
            "key.parsed_declaration" : "public class func trace(_ format: String, _ arguments: CVarArg..., file: String = #file, function: String = #function, line: Int = #line)",
            "key.parsed_scope.end" : 83,
            "key.parsed_scope.start" : 81,
            "key.substructure" : [

            ],
            "key.typename" : "(FWLog.Type) -> (String, CVarArg..., String, String, Int) -> ()",
            "key.typeusr" : "$s__4file8function4lineySS_s7CVarArg_pdS2SSitcD",
            "key.usr" : "s:So5FWLogC11FWFrameworkE5trace__4file8function4lineySS_s7CVarArg_pdS2SSitFZ"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public class func debug(_ format: <Type usr=\"s:SS\">String<\/Type>, _ arguments: <Type usr=\"s:s7CVarArgP\">CVarArg<\/Type>..., file: <Type usr=\"s:SS\">String<\/Type> = #file, function: <Type usr=\"s:SS\">String<\/Type> = #function, line: <Type usr=\"s:Si\">Int<\/Type> = #line)<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 4104
              }
            ],
            "key.bodylength" : 212,
            "key.bodyoffset" : 4243,
            "key.column" : 23,
            "key.decl_lang" : "source.lang.swift",
            "key.doc.column" : 23,
            "key.doc.comment" : "记录调试日志\n\n- Parameters:\n  - format: 格式化字符串\n  - arguments: 可变参数列表，可不传\n  - file: 文件名，默认传参\n  - function: 方法名，默认传参\n  - line: 行数，默认传参",
            "key.doc.declaration" : "public class func debug(_ format: String, _ arguments: CVarArg..., file: String = #file, function: String = #function, line: Int = #line)",
            "key.doc.file" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Kernel\/FWLog.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Kernel\/FWLog.swift\" line=\"93\" column=\"23\"><Name>debug(_:_:file:function:line:)<\/Name><USR>s:So5FWLogC11FWFrameworkE5debug__4file8function4lineySS_s7CVarArg_pdS2SSitFZ<\/USR><Declaration>public class func debug(_ format: String, _ arguments: CVarArg..., file: String = #file, function: String = #function, line: Int = #line)<\/Declaration><CommentParts><Abstract><Para>记录调试日志<\/Para><\/Abstract><Parameters><Parameter><Name>format<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>格式化字符串<\/Para><\/Discussion><\/Parameter><Parameter><Name>arguments<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>可变参数列表，可不传<\/Para><\/Discussion><\/Parameter><Parameter><Name>file<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>文件名，默认传参<\/Para><\/Discussion><\/Parameter><Parameter><Name>function<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>方法名，默认传参<\/Para><\/Discussion><\/Parameter><Parameter><Name>line<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>行数，默认传参<\/Para><\/Discussion><\/Parameter><\/Parameters><\/CommentParts><\/Function>",
            "key.doc.line" : 93,
            "key.doc.name" : "debug(_:_:file:function:line:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "格式化字符串"
                  }
                ],
                "name" : "format"
              },
              {
                "discussion" : [
                  {
                    "Para" : "可变参数列表，可不传"
                  }
                ],
                "name" : "arguments"
              },
              {
                "discussion" : [
                  {
                    "Para" : "文件名，默认传参"
                  }
                ],
                "name" : "file"
              },
              {
                "discussion" : [
                  {
                    "Para" : "方法名，默认传参"
                  }
                ],
                "name" : "function"
              },
              {
                "discussion" : [
                  {
                    "Para" : "行数，默认传参"
                  }
                ],
                "name" : "line"
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 276,
            "key.docoffset" : 3824,
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Kernel\/FWLog.swift",
            "key.fully_annotated_decl" : "<decl.function.method.class><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>class<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>debug<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>format<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>arguments<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.protocol usr=\"s:s7CVarArgP\">CVarArg<\/ref.protocol><\/decl.var.parameter.type>...<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>file<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type> = <syntaxtype.keyword>#file<\/syntaxtype.keyword><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>function<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type> = <syntaxtype.keyword>#function<\/syntaxtype.keyword><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>line<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type> = <syntaxtype.keyword>#line<\/syntaxtype.keyword><\/decl.var.parameter>)<\/decl.function.method.class>",
            "key.kind" : "source.lang.swift.decl.function.method.class",
            "key.length" : 345,
            "key.line" : 93,
            "key.name" : "debug(_:_:file:function:line:)",
            "key.namelength" : 119,
            "key.nameoffset" : 4122,
            "key.offset" : 4111,
            "key.parsed_declaration" : "public class func debug(_ format: String, _ arguments: CVarArg..., file: String = #file, function: String = #function, line: Int = #line)",
            "key.parsed_scope.end" : 95,
            "key.parsed_scope.start" : 93,
            "key.substructure" : [

            ],
            "key.typename" : "(FWLog.Type) -> (String, CVarArg..., String, String, Int) -> ()",
            "key.typeusr" : "$s__4file8function4lineySS_s7CVarArg_pdS2SSitcD",
            "key.usr" : "s:So5FWLogC11FWFrameworkE5debug__4file8function4lineySS_s7CVarArg_pdS2SSitFZ"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public class func info(_ format: <Type usr=\"s:SS\">String<\/Type>, _ arguments: <Type usr=\"s:s7CVarArgP\">CVarArg<\/Type>..., file: <Type usr=\"s:SS\">String<\/Type> = #file, function: <Type usr=\"s:SS\">String<\/Type> = #function, line: <Type usr=\"s:Si\">Int<\/Type> = #line)<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 4746
              }
            ],
            "key.bodylength" : 211,
            "key.bodyoffset" : 4884,
            "key.column" : 23,
            "key.decl_lang" : "source.lang.swift",
            "key.doc.column" : 23,
            "key.doc.comment" : "记录信息日志\n\n- Parameters:\n  - format: 格式化字符串\n  - arguments: 可变参数列表，可不传\n  - file: 文件名，默认传参\n  - function: 方法名，默认传参\n  - line: 行数，默认传参",
            "key.doc.declaration" : "public class func info(_ format: String, _ arguments: CVarArg..., file: String = #file, function: String = #function, line: Int = #line)",
            "key.doc.file" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Kernel\/FWLog.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Kernel\/FWLog.swift\" line=\"105\" column=\"23\"><Name>info(_:_:file:function:line:)<\/Name><USR>s:So5FWLogC11FWFrameworkE4info__4file8function4lineySS_s7CVarArg_pdS2SSitFZ<\/USR><Declaration>public class func info(_ format: String, _ arguments: CVarArg..., file: String = #file, function: String = #function, line: Int = #line)<\/Declaration><CommentParts><Abstract><Para>记录信息日志<\/Para><\/Abstract><Parameters><Parameter><Name>format<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>格式化字符串<\/Para><\/Discussion><\/Parameter><Parameter><Name>arguments<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>可变参数列表，可不传<\/Para><\/Discussion><\/Parameter><Parameter><Name>file<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>文件名，默认传参<\/Para><\/Discussion><\/Parameter><Parameter><Name>function<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>方法名，默认传参<\/Para><\/Discussion><\/Parameter><Parameter><Name>line<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>行数，默认传参<\/Para><\/Discussion><\/Parameter><\/Parameters><\/CommentParts><\/Function>",
            "key.doc.line" : 105,
            "key.doc.name" : "info(_:_:file:function:line:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "格式化字符串"
                  }
                ],
                "name" : "format"
              },
              {
                "discussion" : [
                  {
                    "Para" : "可变参数列表，可不传"
                  }
                ],
                "name" : "arguments"
              },
              {
                "discussion" : [
                  {
                    "Para" : "文件名，默认传参"
                  }
                ],
                "name" : "file"
              },
              {
                "discussion" : [
                  {
                    "Para" : "方法名，默认传参"
                  }
                ],
                "name" : "function"
              },
              {
                "discussion" : [
                  {
                    "Para" : "行数，默认传参"
                  }
                ],
                "name" : "line"
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 276,
            "key.docoffset" : 4466,
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Kernel\/FWLog.swift",
            "key.fully_annotated_decl" : "<decl.function.method.class><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>class<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>info<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>format<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>arguments<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.protocol usr=\"s:s7CVarArgP\">CVarArg<\/ref.protocol><\/decl.var.parameter.type>...<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>file<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type> = <syntaxtype.keyword>#file<\/syntaxtype.keyword><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>function<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type> = <syntaxtype.keyword>#function<\/syntaxtype.keyword><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>line<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type> = <syntaxtype.keyword>#line<\/syntaxtype.keyword><\/decl.var.parameter>)<\/decl.function.method.class>",
            "key.kind" : "source.lang.swift.decl.function.method.class",
            "key.length" : 343,
            "key.line" : 105,
            "key.name" : "info(_:_:file:function:line:)",
            "key.namelength" : 118,
            "key.nameoffset" : 4764,
            "key.offset" : 4753,
            "key.parsed_declaration" : "public class func info(_ format: String, _ arguments: CVarArg..., file: String = #file, function: String = #function, line: Int = #line)",
            "key.parsed_scope.end" : 107,
            "key.parsed_scope.start" : 105,
            "key.substructure" : [

            ],
            "key.typename" : "(FWLog.Type) -> (String, CVarArg..., String, String, Int) -> ()",
            "key.typeusr" : "$s__4file8function4lineySS_s7CVarArg_pdS2SSitcD",
            "key.usr" : "s:So5FWLogC11FWFrameworkE4info__4file8function4lineySS_s7CVarArg_pdS2SSitFZ"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public class func warn(_ format: <Type usr=\"s:SS\">String<\/Type>, _ arguments: <Type usr=\"s:s7CVarArgP\">CVarArg<\/Type>..., file: <Type usr=\"s:SS\">String<\/Type> = #file, function: <Type usr=\"s:SS\">String<\/Type> = #function, line: <Type usr=\"s:Si\">Int<\/Type> = #line)<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 5386
              }
            ],
            "key.bodylength" : 211,
            "key.bodyoffset" : 5524,
            "key.column" : 23,
            "key.decl_lang" : "source.lang.swift",
            "key.doc.column" : 23,
            "key.doc.comment" : "记录警告日志\n\n- Parameters:\n  - format: 格式化字符串\n  - arguments: 可变参数列表，可不传\n  - file: 文件名，默认传参\n  - function: 方法名，默认传参\n  - line: 行数，默认传参",
            "key.doc.declaration" : "public class func warn(_ format: String, _ arguments: CVarArg..., file: String = #file, function: String = #function, line: Int = #line)",
            "key.doc.file" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Kernel\/FWLog.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Kernel\/FWLog.swift\" line=\"117\" column=\"23\"><Name>warn(_:_:file:function:line:)<\/Name><USR>s:So5FWLogC11FWFrameworkE4warn__4file8function4lineySS_s7CVarArg_pdS2SSitFZ<\/USR><Declaration>public class func warn(_ format: String, _ arguments: CVarArg..., file: String = #file, function: String = #function, line: Int = #line)<\/Declaration><CommentParts><Abstract><Para>记录警告日志<\/Para><\/Abstract><Parameters><Parameter><Name>format<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>格式化字符串<\/Para><\/Discussion><\/Parameter><Parameter><Name>arguments<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>可变参数列表，可不传<\/Para><\/Discussion><\/Parameter><Parameter><Name>file<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>文件名，默认传参<\/Para><\/Discussion><\/Parameter><Parameter><Name>function<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>方法名，默认传参<\/Para><\/Discussion><\/Parameter><Parameter><Name>line<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>行数，默认传参<\/Para><\/Discussion><\/Parameter><\/Parameters><\/CommentParts><\/Function>",
            "key.doc.line" : 117,
            "key.doc.name" : "warn(_:_:file:function:line:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "格式化字符串"
                  }
                ],
                "name" : "format"
              },
              {
                "discussion" : [
                  {
                    "Para" : "可变参数列表，可不传"
                  }
                ],
                "name" : "arguments"
              },
              {
                "discussion" : [
                  {
                    "Para" : "文件名，默认传参"
                  }
                ],
                "name" : "file"
              },
              {
                "discussion" : [
                  {
                    "Para" : "方法名，默认传参"
                  }
                ],
                "name" : "function"
              },
              {
                "discussion" : [
                  {
                    "Para" : "行数，默认传参"
                  }
                ],
                "name" : "line"
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 276,
            "key.docoffset" : 5106,
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Kernel\/FWLog.swift",
            "key.fully_annotated_decl" : "<decl.function.method.class><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>class<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>warn<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>format<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>arguments<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.protocol usr=\"s:s7CVarArgP\">CVarArg<\/ref.protocol><\/decl.var.parameter.type>...<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>file<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type> = <syntaxtype.keyword>#file<\/syntaxtype.keyword><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>function<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type> = <syntaxtype.keyword>#function<\/syntaxtype.keyword><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>line<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type> = <syntaxtype.keyword>#line<\/syntaxtype.keyword><\/decl.var.parameter>)<\/decl.function.method.class>",
            "key.kind" : "source.lang.swift.decl.function.method.class",
            "key.length" : 343,
            "key.line" : 117,
            "key.name" : "warn(_:_:file:function:line:)",
            "key.namelength" : 118,
            "key.nameoffset" : 5404,
            "key.offset" : 5393,
            "key.parsed_declaration" : "public class func warn(_ format: String, _ arguments: CVarArg..., file: String = #file, function: String = #function, line: Int = #line)",
            "key.parsed_scope.end" : 119,
            "key.parsed_scope.start" : 117,
            "key.substructure" : [

            ],
            "key.typename" : "(FWLog.Type) -> (String, CVarArg..., String, String, Int) -> ()",
            "key.typeusr" : "$s__4file8function4lineySS_s7CVarArg_pdS2SSitcD",
            "key.usr" : "s:So5FWLogC11FWFrameworkE4warn__4file8function4lineySS_s7CVarArg_pdS2SSitFZ"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public class func error(_ format: <Type usr=\"s:SS\">String<\/Type>, _ arguments: <Type usr=\"s:s7CVarArgP\">CVarArg<\/Type>..., file: <Type usr=\"s:SS\">String<\/Type> = #file, function: <Type usr=\"s:SS\">String<\/Type> = #function, line: <Type usr=\"s:Si\">Int<\/Type> = #line)<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 6026
              }
            ],
            "key.bodylength" : 212,
            "key.bodyoffset" : 6165,
            "key.column" : 23,
            "key.decl_lang" : "source.lang.swift",
            "key.doc.column" : 23,
            "key.doc.comment" : "记录错误日志\n\n- Parameters:\n  - format: 格式化字符串\n  - arguments: 可变参数列表，可不传\n  - file: 文件名，默认传参\n  - function: 方法名，默认传参\n  - line: 行数，默认传参",
            "key.doc.declaration" : "public class func error(_ format: String, _ arguments: CVarArg..., file: String = #file, function: String = #function, line: Int = #line)",
            "key.doc.file" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Kernel\/FWLog.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Kernel\/FWLog.swift\" line=\"129\" column=\"23\"><Name>error(_:_:file:function:line:)<\/Name><USR>s:So5FWLogC11FWFrameworkE5error__4file8function4lineySS_s7CVarArg_pdS2SSitFZ<\/USR><Declaration>public class func error(_ format: String, _ arguments: CVarArg..., file: String = #file, function: String = #function, line: Int = #line)<\/Declaration><CommentParts><Abstract><Para>记录错误日志<\/Para><\/Abstract><Parameters><Parameter><Name>format<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>格式化字符串<\/Para><\/Discussion><\/Parameter><Parameter><Name>arguments<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>可变参数列表，可不传<\/Para><\/Discussion><\/Parameter><Parameter><Name>file<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>文件名，默认传参<\/Para><\/Discussion><\/Parameter><Parameter><Name>function<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>方法名，默认传参<\/Para><\/Discussion><\/Parameter><Parameter><Name>line<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>行数，默认传参<\/Para><\/Discussion><\/Parameter><\/Parameters><\/CommentParts><\/Function>",
            "key.doc.line" : 129,
            "key.doc.name" : "error(_:_:file:function:line:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "格式化字符串"
                  }
                ],
                "name" : "format"
              },
              {
                "discussion" : [
                  {
                    "Para" : "可变参数列表，可不传"
                  }
                ],
                "name" : "arguments"
              },
              {
                "discussion" : [
                  {
                    "Para" : "文件名，默认传参"
                  }
                ],
                "name" : "file"
              },
              {
                "discussion" : [
                  {
                    "Para" : "方法名，默认传参"
                  }
                ],
                "name" : "function"
              },
              {
                "discussion" : [
                  {
                    "Para" : "行数，默认传参"
                  }
                ],
                "name" : "line"
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 276,
            "key.docoffset" : 5746,
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Kernel\/FWLog.swift",
            "key.fully_annotated_decl" : "<decl.function.method.class><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>class<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>error<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>format<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>arguments<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.protocol usr=\"s:s7CVarArgP\">CVarArg<\/ref.protocol><\/decl.var.parameter.type>...<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>file<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type> = <syntaxtype.keyword>#file<\/syntaxtype.keyword><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>function<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type> = <syntaxtype.keyword>#function<\/syntaxtype.keyword><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>line<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type> = <syntaxtype.keyword>#line<\/syntaxtype.keyword><\/decl.var.parameter>)<\/decl.function.method.class>",
            "key.kind" : "source.lang.swift.decl.function.method.class",
            "key.length" : 345,
            "key.line" : 129,
            "key.name" : "error(_:_:file:function:line:)",
            "key.namelength" : 119,
            "key.nameoffset" : 6044,
            "key.offset" : 6033,
            "key.parsed_declaration" : "public class func error(_ format: String, _ arguments: CVarArg..., file: String = #file, function: String = #function, line: Int = #line)",
            "key.parsed_scope.end" : 131,
            "key.parsed_scope.start" : 129,
            "key.substructure" : [

            ],
            "key.typename" : "(FWLog.Type) -> (String, CVarArg..., String, String, Int) -> ()",
            "key.typeusr" : "$s__4file8function4lineySS_s7CVarArg_pdS2SSitcD",
            "key.usr" : "s:So5FWLogC11FWFrameworkE5error__4file8function4lineySS_s7CVarArg_pdS2SSitFZ"
          }
        ],
        "key.typename" : "FWLog.Type",
        "key.typeusr" : "$sSo5FWLogCmD",
        "key.usr" : "c:objc(cs)FWLog"
      }
    ]
  }
}, {
  "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Kernel\/FWPromise.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 13954,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>@discardableResult public func fw_async(_ block: @escaping () throws -&gt; Any?) -&gt; <Type usr=\"c:@M@FWFramework@objc(cs)FWPromise\">FWPromise<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 209
          },
          {
            "key.attribute" : "source.decl.attribute.discardableResult",
            "key.length" : 18,
            "key.offset" : 190
          }
        ],
        "key.bodylength" : 35,
        "key.bodyoffset" : 282,
        "key.column" : 13,
        "key.decl_lang" : "source.lang.swift",
        "key.doc.column" : 13,
        "key.doc.comment" : "仿协程异步执行方法",
        "key.doc.declaration" : "public func fw_async(_ block: @escaping () throws -> Any?) -> FWPromise",
        "key.doc.file" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Kernel\/FWPromise.swift",
        "key.doc.full_as_xml" : "<Function file=\"\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Kernel\/FWPromise.swift\" line=\"13\" column=\"13\"><Name>fw_async(_:)<\/Name><USR>s:11FWFramework8fw_asyncyAA9FWPromiseCypSgyKcF<\/USR><Declaration>public func fw_async(_ block: @escaping () throws -&gt; Any?) -&gt; FWPromise<\/Declaration><CommentParts><Abstract><Para>仿协程异步执行方法<\/Para><\/Abstract><\/CommentParts><\/Function>",
        "key.doc.line" : 13,
        "key.doc.name" : "fw_async(_:)",
        "key.doc.type" : "Function",
        "key.doclength" : 32,
        "key.docoffset" : 158,
        "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Kernel\/FWPromise.swift",
        "key.fully_annotated_decl" : "<decl.function.free><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@discardableResult<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>fw_async<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>block<\/decl.var.parameter.name>: <decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> () <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><syntaxtype.keyword>Any<\/syntaxtype.keyword>?<\/decl.function.returntype><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"c:@M@FWFramework@objc(cs)FWPromise\">FWPromise<\/ref.class><\/decl.function.returntype><\/decl.function.free>",
        "key.kind" : "source.lang.swift.decl.function.free",
        "key.length" : 102,
        "key.line" : 13,
        "key.name" : "fw_async(_:)",
        "key.namelength" : 46,
        "key.nameoffset" : 221,
        "key.offset" : 216,
        "key.parsed_declaration" : "public func fw_async(_ block: @escaping () throws -> Any?) -> FWPromise",
        "key.parsed_scope.end" : 15,
        "key.parsed_scope.start" : 13,
        "key.substructure" : [

        ],
        "key.typename" : "(@escaping () throws -> Any?) -> FWPromise",
        "key.typeusr" : "$sy11FWFramework9FWPromiseCypSgyKccD",
        "key.usr" : "s:11FWFramework8fw_asyncyAA9FWPromiseCypSgyKcF"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>@discardableResult public func fw_await(_ promise: <Type usr=\"c:@M@FWFramework@objc(cs)FWPromise\">FWPromise<\/Type>) throws -&gt; Any?<\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 371
          },
          {
            "key.attribute" : "source.decl.attribute.discardableResult",
            "key.length" : 18,
            "key.offset" : 352
          }
        ],
        "key.bodylength" : 41,
        "key.bodyoffset" : 430,
        "key.column" : 13,
        "key.decl_lang" : "source.lang.swift",
        "key.doc.column" : 13,
        "key.doc.comment" : "仿协程同步返回结果",
        "key.doc.declaration" : "public func fw_await(_ promise: FWPromise) throws -> Any?",
        "key.doc.file" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Kernel\/FWPromise.swift",
        "key.doc.full_as_xml" : "<Function file=\"\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Kernel\/FWPromise.swift\" line=\"19\" column=\"13\"><Name>fw_await(_:)<\/Name><USR>s:11FWFramework8fw_awaityypSgAA9FWPromiseCKF<\/USR><Declaration>public func fw_await(_ promise: FWPromise) throws -&gt; Any?<\/Declaration><CommentParts><Abstract><Para>仿协程同步返回结果<\/Para><\/Abstract><\/CommentParts><\/Function>",
        "key.doc.line" : 19,
        "key.doc.name" : "fw_await(_:)",
        "key.doc.type" : "Function",
        "key.doclength" : 32,
        "key.docoffset" : 320,
        "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Kernel\/FWPromise.swift",
        "key.fully_annotated_decl" : "<decl.function.free><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@discardableResult<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>fw_await<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>promise<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"c:@M@FWFramework@objc(cs)FWPromise\">FWPromise<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><syntaxtype.keyword>Any<\/syntaxtype.keyword>?<\/decl.function.returntype><\/decl.function.free>",
        "key.kind" : "source.lang.swift.decl.function.free",
        "key.length" : 94,
        "key.line" : 19,
        "key.name" : "fw_await(_:)",
        "key.namelength" : 30,
        "key.nameoffset" : 383,
        "key.offset" : 378,
        "key.parsed_declaration" : "public func fw_await(_ promise: FWPromise) throws -> Any?",
        "key.parsed_scope.end" : 21,
        "key.parsed_scope.start" : 19,
        "key.substructure" : [

        ],
        "key.typename" : "(FWPromise) throws -> Any?",
        "key.typeusr" : "$syypSg11FWFramework9FWPromiseCKcD",
        "key.usr" : "s:11FWFramework8fw_awaityypSgAA9FWPromiseCKF"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>@objcMembers public class FWPromise : <Type usr=\"c:objc(cs)NSObject\">NSObject<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 507
          },
          {
            "key.attribute" : "source.decl.attribute.objcMembers",
            "key.length" : 12,
            "key.offset" : 494
          }
        ],
        "key.bodylength" : 13411,
        "key.bodyoffset" : 541,
        "key.column" : 27,
        "key.decl_lang" : "source.lang.swift",
        "key.doc.column" : 27,
        "key.doc.comment" : "框架约定类",
        "key.doc.declaration" : "@objcMembers public class FWPromise : NSObject",
        "key.doc.file" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Kernel\/FWPromise.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Kernel\/FWPromise.swift\" line=\"24\" column=\"27\"><Name>FWPromise<\/Name><USR>c:@M@FWFramework@objc(cs)FWPromise<\/USR><Declaration>@objcMembers public class FWPromise : NSObject<\/Declaration><CommentParts><Abstract><Para>框架约定类<\/Para><\/Abstract><\/CommentParts><\/Class>",
        "key.doc.line" : 24,
        "key.doc.name" : "FWPromise",
        "key.doc.type" : "Class",
        "key.doclength" : 20,
        "key.docoffset" : 474,
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 8,
            "key.offset" : 531
          }
        ],
        "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Kernel\/FWPromise.swift",
        "key.fully_annotated_decl" : "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objcMembers<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>class<\/syntaxtype.keyword> <decl.name>FWPromise<\/decl.name> : <ref.class usr=\"c:objc(cs)NSObject\">NSObject<\/ref.class><\/decl.class>",
        "key.inheritedtypes" : [
          {
            "key.name" : "NSObject"
          }
        ],
        "key.kind" : "source.lang.swift.decl.class",
        "key.length" : 13439,
        "key.line" : 24,
        "key.name" : "FWPromise",
        "key.namelength" : 9,
        "key.nameoffset" : 520,
        "key.offset" : 514,
        "key.parsed_declaration" : "@objcMembers public class FWPromise: NSObject",
        "key.parsed_scope.end" : 352,
        "key.parsed_scope.start" : 24,
        "key.substructure" : [
          {
            "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
            "key.length" : 14,
            "key.name" : "MARK: - Config",
            "key.namelength" : 0,
            "key.nameoffset" : 0,
            "key.offset" : 549
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public static var completionQueue: <Type usr=\"c:objc(cs)OS_dispatch_queue\">DispatchQueue<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 614
              }
            ],
            "key.column" : 23,
            "key.decl_lang" : "source.lang.swift",
            "key.doc.column" : 23,
            "key.doc.comment" : "约定回调队列，默认main队列",
            "key.doc.declaration" : "public static var completionQueue: DispatchQueue",
            "key.doc.file" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Kernel\/FWPromise.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Kernel\/FWPromise.swift\" line=\"27\" column=\"23\"><Name>completionQueue<\/Name><USR>c:@M@FWFramework@objc(cs)FWPromise(cpy)completionQueue<\/USR><Declaration>public static var completionQueue: DispatchQueue<\/Declaration><CommentParts><Abstract><Para>约定回调队列，默认main队列<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 27,
            "key.doc.name" : "completionQueue",
            "key.doc.type" : "Other",
            "key.doclength" : 42,
            "key.docoffset" : 568,
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Kernel\/FWPromise.swift",
            "key.fully_annotated_decl" : "<decl.var.static><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>completionQueue<\/decl.name>: <decl.var.type><ref.class usr=\"c:objc(cs)OS_dispatch_queue\">DispatchQueue<\/ref.class><\/decl.var.type><\/decl.var.static>",
            "key.kind" : "source.lang.swift.decl.var.static",
            "key.length" : 62,
            "key.line" : 27,
            "key.name" : "completionQueue",
            "key.namelength" : 15,
            "key.nameoffset" : 632,
            "key.offset" : 621,
            "key.parsed_declaration" : "public static var completionQueue: DispatchQueue = DispatchQueue.main",
            "key.parsed_scope.end" : 27,
            "key.parsed_scope.start" : 27,
            "key.setter_accessibility" : "source.lang.swift.accessibility.public",
            "key.typename" : "DispatchQueue",
            "key.typeusr" : "$sSo17OS_dispatch_queueCD",
            "key.usr" : "c:@M@FWFramework@objc(cs)FWPromise(cpy)completionQueue"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public static var defaultError: <Type usr=\"s:s5ErrorP\">Error<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 787
              }
            ],
            "key.column" : 23,
            "key.decl_lang" : "source.lang.swift",
            "key.doc.column" : 23,
            "key.doc.comment" : "约定默认错误，约定失败时可选使用，可用于错误判断，支持自定义",
            "key.doc.declaration" : "public static var defaultError: Error",
            "key.doc.file" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Kernel\/FWPromise.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Kernel\/FWPromise.swift\" line=\"29\" column=\"23\"><Name>defaultError<\/Name><USR>c:@M@FWFramework@objc(cs)FWPromise(cpy)defaultError<\/USR><Declaration>public static var defaultError: Error<\/Declaration><CommentParts><Abstract><Para>约定默认错误，约定失败时可选使用，可用于错误判断，支持自定义<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 29,
            "key.doc.name" : "defaultError",
            "key.doc.type" : "Other",
            "key.doclength" : 95,
            "key.docoffset" : 688,
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Kernel\/FWPromise.swift",
            "key.fully_annotated_decl" : "<decl.var.static><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>defaultError<\/decl.name>: <decl.var.type><ref.protocol usr=\"s:s5ErrorP\">Error<\/ref.protocol><\/decl.var.type><\/decl.var.static>",
            "key.kind" : "source.lang.swift.decl.var.static",
            "key.length" : 143,
            "key.line" : 29,
            "key.name" : "defaultError",
            "key.namelength" : 12,
            "key.nameoffset" : 805,
            "key.offset" : 794,
            "key.parsed_declaration" : "public static var defaultError: Error = NSError(domain: \"site.wuyong.error.promise\", code: 0, userInfo: [NSLocalizedDescriptionKey: \"Promise failed\"])",
            "key.parsed_scope.end" : 29,
            "key.parsed_scope.start" : 29,
            "key.setter_accessibility" : "source.lang.swift.accessibility.public",
            "key.typename" : "Error",
            "key.typeusr" : "$ss5Error_pD",
            "key.usr" : "c:@M@FWFramework@objc(cs)FWPromise(cpy)defaultError"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public static var validationError: <Type usr=\"s:s5ErrorP\">Error<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 1041
              }
            ],
            "key.column" : 23,
            "key.decl_lang" : "source.lang.swift",
            "key.doc.column" : 23,
            "key.doc.comment" : "约定验证错误，验证失败时默认使用，可用于错误判断，支持自定义",
            "key.doc.declaration" : "public static var validationError: Error",
            "key.doc.file" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Kernel\/FWPromise.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Kernel\/FWPromise.swift\" line=\"31\" column=\"23\"><Name>validationError<\/Name><USR>c:@M@FWFramework@objc(cs)FWPromise(cpy)validationError<\/USR><Declaration>public static var validationError: Error<\/Declaration><CommentParts><Abstract><Para>约定验证错误，验证失败时默认使用，可用于错误判断，支持自定义<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 31,
            "key.doc.name" : "validationError",
            "key.doc.type" : "Other",
            "key.doclength" : 95,
            "key.docoffset" : 942,
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Kernel\/FWPromise.swift",
            "key.fully_annotated_decl" : "<decl.var.static><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>validationError<\/decl.name>: <decl.var.type><ref.protocol usr=\"s:s5ErrorP\">Error<\/ref.protocol><\/decl.var.type><\/decl.var.static>",
            "key.kind" : "source.lang.swift.decl.var.static",
            "key.length" : 157,
            "key.line" : 31,
            "key.name" : "validationError",
            "key.namelength" : 15,
            "key.nameoffset" : 1059,
            "key.offset" : 1048,
            "key.parsed_declaration" : "public static var validationError: Error = NSError(domain: \"site.wuyong.error.promise\", code: 1, userInfo: [NSLocalizedDescriptionKey: \"Promise validation failed\"])",
            "key.parsed_scope.end" : 31,
            "key.parsed_scope.start" : 31,
            "key.setter_accessibility" : "source.lang.swift.accessibility.public",
            "key.typename" : "Error",
            "key.typeusr" : "$ss5Error_pD",
            "key.usr" : "c:@M@FWFramework@objc(cs)FWPromise(cpy)validationError"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public static var timeoutError: <Type usr=\"s:s5ErrorP\">Error<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 1309
              }
            ],
            "key.column" : 23,
            "key.decl_lang" : "source.lang.swift",
            "key.doc.column" : 23,
            "key.doc.comment" : "约定超时错误，约定超时时默认使用，可用于错误判断，支持自定义",
            "key.doc.declaration" : "public static var timeoutError: Error",
            "key.doc.file" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Kernel\/FWPromise.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Kernel\/FWPromise.swift\" line=\"33\" column=\"23\"><Name>timeoutError<\/Name><USR>c:@M@FWFramework@objc(cs)FWPromise(cpy)timeoutError<\/USR><Declaration>public static var timeoutError: Error<\/Declaration><CommentParts><Abstract><Para>约定超时错误，约定超时时默认使用，可用于错误判断，支持自定义<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 33,
            "key.doc.name" : "timeoutError",
            "key.doc.type" : "Other",
            "key.doclength" : 95,
            "key.docoffset" : 1210,
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Kernel\/FWPromise.swift",
            "key.fully_annotated_decl" : "<decl.var.static><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>timeoutError<\/decl.name>: <decl.var.type><ref.protocol usr=\"s:s5ErrorP\">Error<\/ref.protocol><\/decl.var.type><\/decl.var.static>",
            "key.kind" : "source.lang.swift.decl.var.static",
            "key.length" : 144,
            "key.line" : 33,
            "key.name" : "timeoutError",
            "key.namelength" : 12,
            "key.nameoffset" : 1327,
            "key.offset" : 1316,
            "key.parsed_declaration" : "public static var timeoutError: Error = NSError(domain: \"site.wuyong.error.promise\", code: 2, userInfo: [NSLocalizedDescriptionKey: \"Promise timeout\"])",
            "key.parsed_scope.end" : 33,
            "key.parsed_scope.start" : 33,
            "key.setter_accessibility" : "source.lang.swift.accessibility.public",
            "key.typename" : "Error",
            "key.typeusr" : "$ss5Error_pD",
            "key.usr" : "c:@M@FWFramework@objc(cs)FWPromise(cpy)timeoutError"
          },
          {
            "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
            "key.length" : 15,
            "key.name" : "MARK: - Private",
            "key.namelength" : 0,
            "key.nameoffset" : 0,
            "key.offset" : 1473
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>private let operation: (@escaping (_ result: Any?) -&gt; <Type usr=\"s:s4Voida\">Void<\/Type>) -&gt; <Type usr=\"s:s4Voida\">Void<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.private",
                "key.length" : 7,
                "key.offset" : 1520
              }
            ],
            "key.column" : 17,
            "key.decl_lang" : "source.lang.swift",
            "key.doc.column" : 17,
            "key.doc.comment" : "约定内部属性",
            "key.doc.declaration" : "private let operation: (@escaping (_ result: Any?) -> Void) -> Void",
            "key.doc.file" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Kernel\/FWPromise.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Kernel\/FWPromise.swift\" line=\"37\" column=\"17\"><Name>operation<\/Name><USR>s:11FWFramework9FWPromiseC9operation33_C404F9F501BA3EFB848FA86B534B127ELLyyyypSgccvp<\/USR><Declaration>private let operation: (@escaping (_ result: Any?) -&gt; Void) -&gt; Void<\/Declaration><CommentParts><Abstract><Para>约定内部属性<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 37,
            "key.doc.name" : "operation",
            "key.doc.type" : "Other",
            "key.doclength" : 23,
            "key.docoffset" : 1493,
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Kernel\/FWPromise.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>operation<\/decl.name>: <decl.var.type>(<decl.var.parameter><decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>result<\/decl.var.parameter.name>: <decl.var.parameter.type><syntaxtype.keyword>Any<\/syntaxtype.keyword>?<\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:s4Voida\">Void<\/ref.typealias><\/decl.function.returntype><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:s4Voida\">Void<\/ref.typealias><\/decl.function.returntype><\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 59,
            "key.line" : 37,
            "key.name" : "operation",
            "key.namelength" : 9,
            "key.nameoffset" : 1532,
            "key.offset" : 1528,
            "key.parsed_declaration" : "private let operation: (@escaping (_ result: Any?) -> Void) -> Void",
            "key.parsed_scope.end" : 37,
            "key.parsed_scope.start" : 37,
            "key.typename" : "(@escaping (Any?) -> ()) -> ()",
            "key.typeusr" : "$syyyypSgccD",
            "key.usr" : "s:11FWFramework9FWPromiseC9operation33_C404F9F501BA3EFB848FA86B534B127ELLyyyypSgccvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>private var finished: <Type usr=\"s:Sb\">Bool<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.private",
                "key.length" : 7,
                "key.offset" : 1592
              }
            ],
            "key.column" : 17,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Kernel\/FWPromise.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>finished<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 26,
            "key.line" : 38,
            "key.name" : "finished",
            "key.namelength" : 8,
            "key.nameoffset" : 1604,
            "key.offset" : 1600,
            "key.parsed_declaration" : "private var finished: Bool = false",
            "key.parsed_scope.end" : 38,
            "key.parsed_scope.start" : 38,
            "key.setter_accessibility" : "source.lang.swift.accessibility.private",
            "key.typename" : "Bool",
            "key.typeusr" : "$sSbD",
            "key.usr" : "s:11FWFramework9FWPromiseC8finished33_C404F9F501BA3EFB848FA86B534B127ELLSbvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>private struct <Type usr=\"c:@M@FWFramework@objc(cs)FWPromise\">FWPromise<\/Type>.Progress<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.private",
                "key.length" : 7,
                "key.offset" : 1631
              }
            ],
            "key.bodylength" : 19,
            "key.bodyoffset" : 1656,
            "key.column" : 20,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Kernel\/FWPromise.swift",
            "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>struct<\/syntaxtype.keyword> <ref.class usr=\"c:@M@FWFramework@objc(cs)FWPromise\">FWPromise<\/ref.class>.<decl.name>Progress<\/decl.name><\/decl.struct>",
            "key.kind" : "source.lang.swift.decl.struct",
            "key.length" : 37,
            "key.line" : 39,
            "key.name" : "Progress",
            "key.namelength" : 8,
            "key.nameoffset" : 1646,
            "key.offset" : 1639,
            "key.parsed_declaration" : "private struct Progress",
            "key.parsed_scope.end" : 39,
            "key.parsed_scope.start" : 39,
            "key.substructure" : [
              {
                "key.accessibility" : "source.lang.swift.accessibility.internal",
                "key.annotated_decl" : "<Declaration>var value: <Type usr=\"s:Sd\">Double<\/Type><\/Declaration>",
                "key.column" : 35,
                "key.decl_lang" : "source.lang.swift",
                "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Kernel\/FWPromise.swift",
                "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>value<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Sd\">Double<\/ref.struct><\/decl.var.type><\/decl.var.instance>",
                "key.kind" : "source.lang.swift.decl.var.instance",
                "key.length" : 17,
                "key.line" : 39,
                "key.name" : "value",
                "key.namelength" : 5,
                "key.nameoffset" : 1661,
                "key.offset" : 1657,
                "key.parsed_declaration" : "private struct Progress { var value: Double",
                "key.parsed_scope.end" : 39,
                "key.parsed_scope.start" : 39,
                "key.setter_accessibility" : "source.lang.swift.accessibility.internal",
                "key.typename" : "Double",
                "key.typeusr" : "$sSdD",
                "key.usr" : "s:11FWFramework9FWPromiseC8Progress33_C404F9F501BA3EFB848FA86B534B127ELLV5valueSdvp"
              }
            ],
            "key.typename" : "FWPromise.Progress.Type",
            "key.typeusr" : "$s11FWFramework9FWPromiseC8Progress33_C404F9F501BA3EFB848FA86B534B127ELLVmD",
            "key.usr" : "s:11FWFramework9FWPromiseC8Progress33_C404F9F501BA3EFB848FA86B534B127ELLV"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>private func execute(progress: <Type usr=\"s:Sb\">Bool<\/Type>, completion: @escaping (_ result: Any?) -&gt; <Type usr=\"s:s4Voida\">Void<\/Type>)<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.private",
                "key.length" : 7,
                "key.offset" : 1719
              }
            ],
            "key.bodylength" : 408,
            "key.bodyoffset" : 1805,
            "key.column" : 18,
            "key.decl_lang" : "source.lang.swift",
            "key.doc.column" : 18,
            "key.doc.comment" : "约定内部执行方法",
            "key.doc.declaration" : "private func execute(progress: Bool, completion: @escaping (_ result: Any?) -> Void)",
            "key.doc.file" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Kernel\/FWPromise.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Kernel\/FWPromise.swift\" line=\"42\" column=\"18\"><Name>execute(progress:completion:)<\/Name><USR>s:11FWFramework9FWPromiseC7execute33_C404F9F501BA3EFB848FA86B534B127ELL8progress10completionySb_yypSgctF<\/USR><Declaration>private func execute(progress: Bool, completion: @escaping (_ result: Any?) -&gt; Void)<\/Declaration><CommentParts><Abstract><Para>约定内部执行方法<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 42,
            "key.doc.name" : "execute(progress:completion:)",
            "key.doc.type" : "Function",
            "key.doclength" : 29,
            "key.docoffset" : 1686,
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Kernel\/FWPromise.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>execute<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>progress<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>completion<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>result<\/decl.var.parameter.name>: <decl.var.parameter.type><syntaxtype.keyword>Any<\/syntaxtype.keyword>?<\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:s4Voida\">Void<\/ref.typealias><\/decl.function.returntype><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 487,
            "key.line" : 42,
            "key.name" : "execute(progress:completion:)",
            "key.namelength" : 71,
            "key.nameoffset" : 1732,
            "key.offset" : 1727,
            "key.parsed_declaration" : "private func execute(progress: Bool, completion: @escaping (_ result: Any?) -> Void)",
            "key.parsed_scope.end" : 55,
            "key.parsed_scope.start" : 42,
            "key.substructure" : [

            ],
            "key.typename" : "(FWPromise) -> (Bool, @escaping (Any?) -> ()) -> ()",
            "key.typeusr" : "$s8progress10completionySb_yypSgctcD",
            "key.usr" : "s:11FWFramework9FWPromiseC7execute33_C404F9F501BA3EFB848FA86B534B127ELL8progress10completionySb_yypSgctF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>private static func delay(_ time: <Type usr=\"c:@T@NSTimeInterval\">TimeInterval<\/Type>, block: @escaping () -&gt; <Type usr=\"s:s4Voida\">Void<\/Type>)<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.private",
                "key.length" : 7,
                "key.offset" : 2257
              }
            ],
            "key.bodylength" : 91,
            "key.bodyoffset" : 2335,
            "key.column" : 25,
            "key.decl_lang" : "source.lang.swift",
            "key.doc.column" : 25,
            "key.doc.comment" : "约定内部延时方法",
            "key.doc.declaration" : "private static func delay(_ time: TimeInterval, block: @escaping () -> Void)",
            "key.doc.file" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Kernel\/FWPromise.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Kernel\/FWPromise.swift\" line=\"58\" column=\"25\"><Name>delay(_:block:)<\/Name><USR>s:11FWFramework9FWPromiseC5delay33_C404F9F501BA3EFB848FA86B534B127ELL_5blockySd_yyctFZ<\/USR><Declaration>private static func delay(_ time: TimeInterval, block: @escaping () -&gt; Void)<\/Declaration><CommentParts><Abstract><Para>约定内部延时方法<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 58,
            "key.doc.name" : "delay(_:block:)",
            "key.doc.type" : "Function",
            "key.doclength" : 29,
            "key.docoffset" : 2224,
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Kernel\/FWPromise.swift",
            "key.fully_annotated_decl" : "<decl.function.method.static><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>delay<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>time<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.typealias usr=\"c:@T@NSTimeInterval\">TimeInterval<\/ref.typealias><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>block<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> () -&gt; <decl.function.returntype><ref.typealias usr=\"s:s4Voida\">Void<\/ref.typealias><\/decl.function.returntype><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.method.static>",
            "key.kind" : "source.lang.swift.decl.function.method.static",
            "key.length" : 162,
            "key.line" : 58,
            "key.name" : "delay(_:block:)",
            "key.namelength" : 56,
            "key.nameoffset" : 2277,
            "key.offset" : 2265,
            "key.parsed_declaration" : "private static func delay(_ time: TimeInterval, block: @escaping () -> Void)",
            "key.parsed_scope.end" : 60,
            "key.parsed_scope.start" : 58,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"c:@M@FWFramework@objc(cs)FWPromise(im)delay:force:\">delay(_:force:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"c:@M@FWFramework@objc(cs)FWPromise(cm)delay:\">delay(_:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "(FWPromise.Type) -> (Double, @escaping () -> ()) -> ()",
            "key.typeusr" : "$s_5blockySd_yyctcD",
            "key.usr" : "s:11FWFramework9FWPromiseC5delay33_C404F9F501BA3EFB848FA86B534B127ELL_5blockySd_yyctFZ"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>private static func retry(_ initialPromise: <Type usr=\"c:@M@FWFramework@objc(cs)FWPromise\">FWPromise<\/Type>?, times: <Type usr=\"s:Si\">Int<\/Type>, delay: <Type usr=\"c:@T@NSTimeInterval\">TimeInterval<\/Type>, block: @escaping () -&gt; <Type usr=\"c:@M@FWFramework@objc(cs)FWPromise\">FWPromise<\/Type>) -&gt; <Type usr=\"c:@M@FWFramework@objc(cs)FWPromise\">FWPromise<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.private",
                "key.length" : 7,
                "key.offset" : 2470
              }
            ],
            "key.bodylength" : 258,
            "key.bodyoffset" : 2607,
            "key.column" : 25,
            "key.decl_lang" : "source.lang.swift",
            "key.doc.column" : 25,
            "key.doc.comment" : "约定内部重试方法",
            "key.doc.declaration" : "private static func retry(_ initialPromise: FWPromise?, times: Int, delay: TimeInterval, block: @escaping () -> FWPromise) -> FWPromise",
            "key.doc.file" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Kernel\/FWPromise.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Kernel\/FWPromise.swift\" line=\"63\" column=\"25\"><Name>retry(_:times:delay:block:)<\/Name><USR>s:11FWFramework9FWPromiseC5retry33_C404F9F501BA3EFB848FA86B534B127ELL_5times5delay5blockA2CSg_SiSdACyctFZ<\/USR><Declaration>private static func retry(_ initialPromise: FWPromise?, times: Int, delay: TimeInterval, block: @escaping () -&gt; FWPromise) -&gt; FWPromise<\/Declaration><CommentParts><Abstract><Para>约定内部重试方法<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 63,
            "key.doc.name" : "retry(_:times:delay:block:)",
            "key.doc.type" : "Function",
            "key.doclength" : 29,
            "key.docoffset" : 2437,
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Kernel\/FWPromise.swift",
            "key.fully_annotated_decl" : "<decl.function.method.static><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>retry<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>initialPromise<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"c:@M@FWFramework@objc(cs)FWPromise\">FWPromise<\/ref.class>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>times<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>delay<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.typealias usr=\"c:@T@NSTimeInterval\">TimeInterval<\/ref.typealias><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>block<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> () -&gt; <decl.function.returntype><ref.class usr=\"c:@M@FWFramework@objc(cs)FWPromise\">FWPromise<\/ref.class><\/decl.function.returntype><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"c:@M@FWFramework@objc(cs)FWPromise\">FWPromise<\/ref.class><\/decl.function.returntype><\/decl.function.method.static>",
            "key.kind" : "source.lang.swift.decl.function.method.static",
            "key.length" : 388,
            "key.line" : 63,
            "key.name" : "retry(_:times:delay:block:)",
            "key.namelength" : 102,
            "key.nameoffset" : 2490,
            "key.offset" : 2478,
            "key.parsed_declaration" : "private static func retry(_ initialPromise: FWPromise?, times: Int, delay: TimeInterval, block: @escaping () -> FWPromise) -> FWPromise",
            "key.parsed_scope.end" : 69,
            "key.parsed_scope.start" : 63,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"c:@M@FWFramework@objc(cs)FWPromise(im)retry:delay:block:\">retry(_: Int = 1, delay: TimeInterval = 0, block: @escaping () -&gt; FWPromise) -&gt; FWPromise<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"c:@M@FWFramework@objc(cs)FWPromise(cm)retry:delay:block:\">retry(_: Int = 1, delay: TimeInterval = 0, block: @escaping () -&gt; FWPromise) -&gt; FWPromise<\/RelatedName>"
              }
            ],
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>let promise: <Type usr=\"c:@M@FWFramework@objc(cs)FWPromise\">FWPromise<\/Type><\/Declaration>",
                "key.column" : 13,
                "key.decl_lang" : "source.lang.swift",
                "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Kernel\/FWPromise.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>promise<\/decl.name>: <decl.var.type><ref.class usr=\"c:@M@FWFramework@objc(cs)FWPromise\">FWPromise<\/ref.class><\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 77,
                "key.line" : 64,
                "key.name" : "promise",
                "key.namelength" : 7,
                "key.nameoffset" : 2620,
                "key.offset" : 2616,
                "key.parsed_declaration" : "let promise = initialPromise ?? FWPromise.delay(delay).then({ _ in block() })",
                "key.parsed_scope.end" : 64,
                "key.parsed_scope.start" : 64,
                "key.typename" : "FWPromise",
                "key.typeusr" : "$s11FWFramework9FWPromiseCD",
                "key.usr" : "s:11FWFramework9FWPromiseC5retry33_C404F9F501BA3EFB848FA86B534B127ELL_5times5delay5blockA2CSg_SiSdACyctFZ7promiseL_ACvp"
              }
            ],
            "key.typename" : "(FWPromise.Type) -> (FWPromise?, Int, Double, @escaping () -> FWPromise) -> FWPromise",
            "key.typeusr" : "$s_5times5delay5block11FWFramework9FWPromiseCAFSg_SiSdAFyctcD",
            "key.usr" : "s:11FWFramework9FWPromiseC5retry33_C404F9F501BA3EFB848FA86B534B127ELL_5times5delay5blockA2CSg_SiSdACyctFZ"
          },
          {
            "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
            "key.length" : 14,
            "key.name" : "MARK: - Public",
            "key.namelength" : 0,
            "key.nameoffset" : 0,
            "key.offset" : 2879
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public init(completion: @escaping (_ completion: @escaping (_ result: Any?) -&gt; <Type usr=\"s:s4Voida\">Void<\/Type>) -&gt; <Type usr=\"s:s4Voida\">Void<\/Type>)<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 2940
              }
            ],
            "key.bodylength" : 41,
            "key.bodyoffset" : 3035,
            "key.column" : 12,
            "key.decl_lang" : "source.lang.swift",
            "key.doc.column" : 12,
            "key.doc.comment" : "指定操作完成句柄初始化",
            "key.doc.declaration" : "public init(completion: @escaping (_ completion: @escaping (_ result: Any?) -> Void) -> Void)",
            "key.doc.file" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Kernel\/FWPromise.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Kernel\/FWPromise.swift\" line=\"73\" column=\"12\"><Name>init(completion:)<\/Name><USR>c:@M@FWFramework@objc(cs)FWPromise(im)initWithCompletion:<\/USR><Declaration>public init(completion: @escaping (_ completion: @escaping (_ result: Any?) -&gt; Void) -&gt; Void)<\/Declaration><CommentParts><Abstract><Para>指定操作完成句柄初始化<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 73,
            "key.doc.name" : "init(completion:)",
            "key.doc.type" : "Function",
            "key.doclength" : 38,
            "key.docoffset" : 2898,
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Kernel\/FWPromise.swift",
            "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>init<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>completion<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>completion<\/decl.var.parameter.name>: <decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>result<\/decl.var.parameter.name>: <decl.var.parameter.type><syntaxtype.keyword>Any<\/syntaxtype.keyword>?<\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:s4Voida\">Void<\/ref.typealias><\/decl.function.returntype><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:s4Voida\">Void<\/ref.typealias><\/decl.function.returntype><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.constructor>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 130,
            "key.line" : 73,
            "key.name" : "init(completion:)",
            "key.namelength" : 86,
            "key.nameoffset" : 2947,
            "key.offset" : 2947,
            "key.parsed_declaration" : "public init(completion: @escaping (_ completion: @escaping (_ result: Any?) -> Void) -> Void)",
            "key.parsed_scope.end" : 75,
            "key.parsed_scope.start" : 73,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"c:@M@FWFramework@objc(cs)FWPromise(im)initWithBlock:\">init(block:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"c:@M@FWFramework@objc(cs)FWPromise(im)initWithProgress:\">init(progress:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"c:@M@FWFramework@objc(cs)FWPromise(im)initWithValue:\">init(value:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"c:@M@FWFramework@objc(cs)FWPromise(im)initWithError:\">init(error:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "(FWPromise.Type) -> (@escaping (@escaping (Any?) -> ()) -> ()) -> FWPromise",
            "key.typeusr" : "$s10completion11FWFramework9FWPromiseCyyypSgcc_tcD",
            "key.usr" : "c:@M@FWFramework@objc(cs)FWPromise(im)initWithCompletion:"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public convenience init(block: @escaping (_ resolve: @escaping (_ value: Any?) -&gt; <Type usr=\"s:s4Voida\">Void<\/Type>, _ reject: @escaping (_ error: <Type usr=\"s:s5ErrorP\">Error<\/Type>) -&gt; <Type usr=\"s:s4Voida\">Void<\/Type>) -&gt; <Type usr=\"s:s4Voida\">Void<\/Type>)<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.convenience",
                "key.length" : 11,
                "key.offset" : 3145
              },
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 3138
              }
            ],
            "key.bodylength" : 104,
            "key.bodyoffset" : 3282,
            "key.column" : 24,
            "key.decl_lang" : "source.lang.swift",
            "key.doc.column" : 24,
            "key.doc.comment" : "指定操作成功和失败句柄初始化",
            "key.doc.declaration" : "public convenience init(block: @escaping (_ resolve: @escaping (_ value: Any?) -> Void, _ reject: @escaping (_ error: Error) -> Void) -> Void)",
            "key.doc.file" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Kernel\/FWPromise.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Kernel\/FWPromise.swift\" line=\"78\" column=\"24\"><Name>init(block:)<\/Name><USR>c:@M@FWFramework@objc(cs)FWPromise(im)initWithBlock:<\/USR><Declaration>public convenience init(block: @escaping (_ resolve: @escaping (_ value: Any?) -&gt; Void, _ reject: @escaping (_ error: Error) -&gt; Void) -&gt; Void)<\/Declaration><CommentParts><Abstract><Para>指定操作成功和失败句柄初始化<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 78,
            "key.doc.name" : "init(block:)",
            "key.doc.type" : "Function",
            "key.doclength" : 47,
            "key.docoffset" : 3087,
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Kernel\/FWPromise.swift",
            "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>convenience<\/syntaxtype.keyword> <syntaxtype.keyword>init<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>block<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>resolve<\/decl.var.parameter.name>: <decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>value<\/decl.var.parameter.name>: <decl.var.parameter.type><syntaxtype.keyword>Any<\/syntaxtype.keyword>?<\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:s4Voida\">Void<\/ref.typealias><\/decl.function.returntype><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>reject<\/decl.var.parameter.name>: <decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>error<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.protocol usr=\"s:s5ErrorP\">Error<\/ref.protocol><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:s4Voida\">Void<\/ref.typealias><\/decl.function.returntype><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:s4Voida\">Void<\/ref.typealias><\/decl.function.returntype><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.constructor>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 230,
            "key.line" : 78,
            "key.name" : "init(block:)",
            "key.namelength" : 123,
            "key.nameoffset" : 3157,
            "key.offset" : 3157,
            "key.parsed_declaration" : "public convenience init(block: @escaping (_ resolve: @escaping (_ value: Any?) -> Void, _ reject: @escaping (_ error: Error) -> Void) -> Void)",
            "key.parsed_scope.end" : 82,
            "key.parsed_scope.start" : 78,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"c:@M@FWFramework@objc(cs)FWPromise(im)initWithCompletion:\">init(completion:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"c:@M@FWFramework@objc(cs)FWPromise(im)initWithProgress:\">init(progress:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"c:@M@FWFramework@objc(cs)FWPromise(im)initWithValue:\">init(value:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"c:@M@FWFramework@objc(cs)FWPromise(im)initWithError:\">init(error:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "(FWPromise.Type) -> (@escaping (@escaping (Any?) -> (), @escaping (Error) -> ()) -> ()) -> FWPromise",
            "key.typeusr" : "$s5block11FWFramework9FWPromiseCyyypSgc_ys5Error_pctc_tcD",
            "key.usr" : "c:@M@FWFramework@objc(cs)FWPromise(im)initWithBlock:"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public convenience init(progress: @escaping (_ resolve: @escaping (_ value: Any?) -&gt; <Type usr=\"s:s4Voida\">Void<\/Type>, _ reject: @escaping (_ error: <Type usr=\"s:s5ErrorP\">Error<\/Type>) -&gt; <Type usr=\"s:s4Voida\">Void<\/Type>, _ progress: @escaping (_ value: <Type usr=\"s:Sd\">Double<\/Type>) -&gt; <Type usr=\"s:s4Voida\">Void<\/Type>) -&gt; <Type usr=\"s:s4Voida\">Void<\/Type>)<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.convenience",
                "key.length" : 11,
                "key.offset" : 3470
              },
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 3463
              }
            ],
            "key.bodylength" : 184,
            "key.bodyoffset" : 3660,
            "key.column" : 24,
            "key.decl_lang" : "source.lang.swift",
            "key.doc.column" : 24,
            "key.doc.comment" : "指定操作成功、失败句柄和进度句柄初始化",
            "key.doc.declaration" : "public convenience init(progress: @escaping (_ resolve: @escaping (_ value: Any?) -> Void, _ reject: @escaping (_ error: Error) -> Void, _ progress: @escaping (_ value: Double) -> Void) -> Void)",
            "key.doc.file" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Kernel\/FWPromise.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Kernel\/FWPromise.swift\" line=\"85\" column=\"24\"><Name>init(progress:)<\/Name><USR>c:@M@FWFramework@objc(cs)FWPromise(im)initWithProgress:<\/USR><Declaration>public convenience init(progress: @escaping (_ resolve: @escaping (_ value: Any?) -&gt; Void, _ reject: @escaping (_ error: Error) -&gt; Void, _ progress: @escaping (_ value: Double) -&gt; Void) -&gt; Void)<\/Declaration><CommentParts><Abstract><Para>指定操作成功、失败句柄和进度句柄初始化<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 85,
            "key.doc.name" : "init(progress:)",
            "key.doc.type" : "Function",
            "key.doclength" : 62,
            "key.docoffset" : 3397,
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Kernel\/FWPromise.swift",
            "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>convenience<\/syntaxtype.keyword> <syntaxtype.keyword>init<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>progress<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>resolve<\/decl.var.parameter.name>: <decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>value<\/decl.var.parameter.name>: <decl.var.parameter.type><syntaxtype.keyword>Any<\/syntaxtype.keyword>?<\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:s4Voida\">Void<\/ref.typealias><\/decl.function.returntype><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>reject<\/decl.var.parameter.name>: <decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>error<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.protocol usr=\"s:s5ErrorP\">Error<\/ref.protocol><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:s4Voida\">Void<\/ref.typealias><\/decl.function.returntype><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>progress<\/decl.var.parameter.name>: <decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>value<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Sd\">Double<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:s4Voida\">Void<\/ref.typealias><\/decl.function.returntype><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:s4Voida\">Void<\/ref.typealias><\/decl.function.returntype><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.constructor>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 363,
            "key.line" : 85,
            "key.name" : "init(progress:)",
            "key.namelength" : 176,
            "key.nameoffset" : 3482,
            "key.offset" : 3482,
            "key.parsed_declaration" : "public convenience init(progress: @escaping (_ resolve: @escaping (_ value: Any?) -> Void, _ reject: @escaping (_ error: Error) -> Void, _ progress: @escaping (_ value : Double) -> Void) -> Void)",
            "key.parsed_scope.end" : 91,
            "key.parsed_scope.start" : 85,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"c:@M@FWFramework@objc(cs)FWPromise(im)initWithCompletion:\">init(completion:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"c:@M@FWFramework@objc(cs)FWPromise(im)initWithBlock:\">init(block:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"c:@M@FWFramework@objc(cs)FWPromise(im)initWithValue:\">init(value:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"c:@M@FWFramework@objc(cs)FWPromise(im)initWithError:\">init(error:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "(FWPromise.Type) -> (@escaping (@escaping (Any?) -> (), @escaping (Error) -> (), @escaping (Double) -> ()) -> ()) -> FWPromise",
            "key.typeusr" : "$s8progress11FWFramework9FWPromiseCyyypSgc_ys5Error_pcySdctc_tcD",
            "key.usr" : "c:@M@FWFramework@objc(cs)FWPromise(im)initWithProgress:"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public convenience init(value: Any?)<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.convenience",
                "key.length" : 11,
                "key.offset" : 3895
              },
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 3888
              }
            ],
            "key.bodylength" : 92,
            "key.bodyoffset" : 3926,
            "key.column" : 24,
            "key.decl_lang" : "source.lang.swift",
            "key.doc.column" : 24,
            "key.doc.comment" : "快速创建成功实例",
            "key.doc.declaration" : "public convenience init(value: Any?)",
            "key.doc.file" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Kernel\/FWPromise.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Kernel\/FWPromise.swift\" line=\"94\" column=\"24\"><Name>init(value:)<\/Name><USR>c:@M@FWFramework@objc(cs)FWPromise(im)initWithValue:<\/USR><Declaration>public convenience init(value: Any?)<\/Declaration><CommentParts><Abstract><Para>快速创建成功实例<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 94,
            "key.doc.name" : "init(value:)",
            "key.doc.type" : "Function",
            "key.doclength" : 29,
            "key.docoffset" : 3855,
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Kernel\/FWPromise.swift",
            "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>convenience<\/syntaxtype.keyword> <syntaxtype.keyword>init<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>value<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><syntaxtype.keyword>Any<\/syntaxtype.keyword>?<\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.constructor>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 112,
            "key.line" : 94,
            "key.name" : "init(value:)",
            "key.namelength" : 17,
            "key.nameoffset" : 3907,
            "key.offset" : 3907,
            "key.parsed_declaration" : "public convenience init(value: Any?)",
            "key.parsed_scope.end" : 98,
            "key.parsed_scope.start" : 94,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"c:@M@FWFramework@objc(cs)FWPromise(im)initWithCompletion:\">init(completion:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"c:@M@FWFramework@objc(cs)FWPromise(im)initWithBlock:\">init(block:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"c:@M@FWFramework@objc(cs)FWPromise(im)initWithProgress:\">init(progress:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"c:@M@FWFramework@objc(cs)FWPromise(im)initWithError:\">init(error:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "(FWPromise.Type) -> (Any?) -> FWPromise",
            "key.typeusr" : "$s5value11FWFramework9FWPromiseCypSg_tcD",
            "key.usr" : "c:@M@FWFramework@objc(cs)FWPromise(im)initWithValue:"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public convenience init(error: <Type usr=\"s:s5ErrorP\">Error<\/Type>)<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.convenience",
                "key.length" : 11,
                "key.offset" : 4069
              },
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 4062
              }
            ],
            "key.bodylength" : 92,
            "key.bodyoffset" : 4101,
            "key.column" : 24,
            "key.decl_lang" : "source.lang.swift",
            "key.doc.column" : 24,
            "key.doc.comment" : "快速创建失败实例",
            "key.doc.declaration" : "public convenience init(error: Error)",
            "key.doc.file" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Kernel\/FWPromise.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Kernel\/FWPromise.swift\" line=\"101\" column=\"24\"><Name>init(error:)<\/Name><USR>c:@M@FWFramework@objc(cs)FWPromise(im)initWithError:<\/USR><Declaration>public convenience init(error: Error)<\/Declaration><CommentParts><Abstract><Para>快速创建失败实例<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 101,
            "key.doc.name" : "init(error:)",
            "key.doc.type" : "Function",
            "key.doclength" : 29,
            "key.docoffset" : 4029,
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Kernel\/FWPromise.swift",
            "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>convenience<\/syntaxtype.keyword> <syntaxtype.keyword>init<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>error<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.protocol usr=\"s:s5ErrorP\">Error<\/ref.protocol><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.constructor>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 113,
            "key.line" : 101,
            "key.name" : "init(error:)",
            "key.namelength" : 18,
            "key.nameoffset" : 4081,
            "key.offset" : 4081,
            "key.parsed_declaration" : "public convenience init(error: Error)",
            "key.parsed_scope.end" : 105,
            "key.parsed_scope.start" : 101,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"c:@M@FWFramework@objc(cs)FWPromise(im)initWithCompletion:\">init(completion:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"c:@M@FWFramework@objc(cs)FWPromise(im)initWithBlock:\">init(block:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"c:@M@FWFramework@objc(cs)FWPromise(im)initWithProgress:\">init(progress:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"c:@M@FWFramework@objc(cs)FWPromise(im)initWithValue:\">init(value:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "(FWPromise.Type) -> (Error) -> FWPromise",
            "key.typeusr" : "$s5error11FWFramework9FWPromiseCs5Error_p_tcD",
            "key.usr" : "c:@M@FWFramework@objc(cs)FWPromise(im)initWithError:"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func done(_ completion: @escaping (_ result: Any?) -&gt; <Type usr=\"s:s4Voida\">Void<\/Type>)<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 4246
              }
            ],
            "key.bodylength" : 67,
            "key.bodyoffset" : 4314,
            "key.column" : 17,
            "key.decl_lang" : "source.lang.swift",
            "key.doc.column" : 17,
            "key.doc.comment" : "执行约定并回调完成句柄",
            "key.doc.declaration" : "public func done(_ completion: @escaping (_ result: Any?) -> Void)",
            "key.doc.file" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Kernel\/FWPromise.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Kernel\/FWPromise.swift\" line=\"108\" column=\"17\"><Name>done(_:)<\/Name><USR>c:@M@FWFramework@objc(cs)FWPromise(im)done:<\/USR><Declaration>public func done(_ completion: @escaping (_ result: Any?) -&gt; Void)<\/Declaration><CommentParts><Abstract><Para>执行约定并回调完成句柄<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 108,
            "key.doc.name" : "done(_:)",
            "key.doc.type" : "Function",
            "key.doclength" : 38,
            "key.docoffset" : 4204,
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Kernel\/FWPromise.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>done<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>completion<\/decl.var.parameter.name>: <decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>result<\/decl.var.parameter.name>: <decl.var.parameter.type><syntaxtype.keyword>Any<\/syntaxtype.keyword>?<\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:s4Voida\">Void<\/ref.typealias><\/decl.function.returntype><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 129,
            "key.line" : 108,
            "key.name" : "done(_:)",
            "key.namelength" : 54,
            "key.nameoffset" : 4258,
            "key.offset" : 4253,
            "key.parsed_declaration" : "public func done(_ completion: @escaping (_ result: Any?) -> Void)",
            "key.parsed_scope.end" : 110,
            "key.parsed_scope.start" : 108,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"c:@M@FWFramework@objc(cs)FWPromise(im)done:catch:finally:\">done(_:catch:finally:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"c:@M@FWFramework@objc(cs)FWPromise(im)done:catch:progress:finally:\">done(_:catch:progress:finally:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "(FWPromise) -> (@escaping (Any?) -> ()) -> ()",
            "key.typeusr" : "$syyyypSgccD",
            "key.usr" : "c:@M@FWFramework@objc(cs)FWPromise(im)done:"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func done(_ done: @escaping (_ value: Any?) -&gt; <Type usr=\"s:s4Voida\">Void<\/Type>, catch: ((_ error: <Type usr=\"s:s5ErrorP\">Error<\/Type>) -&gt; <Type usr=\"s:s4Voida\">Void<\/Type>)?, finally: (() -&gt; <Type usr=\"s:s4Voida\">Void<\/Type>)? = nil)<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 4476
              }
            ],
            "key.bodylength" : 230,
            "key.bodyoffset" : 4603,
            "key.column" : 17,
            "key.decl_lang" : "source.lang.swift",
            "key.doc.column" : 17,
            "key.doc.comment" : "执行约定并分别回调成功、失败句柄，统一回调收尾句柄",
            "key.doc.declaration" : "public func done(_ done: @escaping (_ value: Any?) -> Void, catch: ((_ error: Error) -> Void)?, finally: (() -> Void)? = nil)",
            "key.doc.file" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Kernel\/FWPromise.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Kernel\/FWPromise.swift\" line=\"113\" column=\"17\"><Name>done(_:catch:finally:)<\/Name><USR>c:@M@FWFramework@objc(cs)FWPromise(im)done:catch:finally:<\/USR><Declaration>public func done(_ done: @escaping (_ value: Any?) -&gt; Void, catch: ((_ error: Error) -&gt; Void)?, finally: (() -&gt; Void)? = nil)<\/Declaration><CommentParts><Abstract><Para>执行约定并分别回调成功、失败句柄，统一回调收尾句柄<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 113,
            "key.doc.name" : "done(_:catch:finally:)",
            "key.doc.type" : "Function",
            "key.doclength" : 80,
            "key.docoffset" : 4392,
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Kernel\/FWPromise.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>done<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>done<\/decl.var.parameter.name>: <decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>value<\/decl.var.parameter.name>: <decl.var.parameter.type><syntaxtype.keyword>Any<\/syntaxtype.keyword>?<\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:s4Voida\">Void<\/ref.typealias><\/decl.function.returntype><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>catch<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><tuple>(<tuple.element><tuple.element.type>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>error<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.protocol usr=\"s:s5ErrorP\">Error<\/ref.protocol><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:s4Voida\">Void<\/ref.typealias><\/decl.function.returntype><\/tuple.element.type><\/tuple.element>)<\/tuple>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>finally<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><tuple>(<tuple.element><tuple.element.type>() -&gt; <decl.function.returntype><ref.typealias usr=\"s:s4Voida\">Void<\/ref.typealias><\/decl.function.returntype><\/tuple.element.type><\/tuple.element>)<\/tuple>?<\/decl.var.parameter.type> = nil<\/decl.var.parameter>)<\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 351,
            "key.line" : 113,
            "key.name" : "done(_:catch:finally:)",
            "key.namelength" : 113,
            "key.nameoffset" : 4488,
            "key.offset" : 4483,
            "key.parsed_declaration" : "public func done(_ done: @escaping (_ value: Any?) -> Void, catch: ((_ error: Error) -> Void)?, finally: (() -> Void)? = nil)",
            "key.parsed_scope.end" : 122,
            "key.parsed_scope.start" : 113,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"c:@M@FWFramework@objc(cs)FWPromise(im)done:\">done(_:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"c:@M@FWFramework@objc(cs)FWPromise(im)done:catch:progress:finally:\">done(_:catch:progress:finally:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "(FWPromise) -> (@escaping (Any?) -> (), ((Error) -> ())?, (() -> ())?) -> ()",
            "key.typeusr" : "$s_5catch7finallyyyypSgc_ys5Error_pcSgyycSgtcD",
            "key.usr" : "c:@M@FWFramework@objc(cs)FWPromise(im)done:catch:finally:"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func done(_ done: @escaping (_ value: Any?) -&gt; <Type usr=\"s:s4Voida\">Void<\/Type>, catch: ((_ error: <Type usr=\"s:s5ErrorP\">Error<\/Type>) -&gt; <Type usr=\"s:s4Voida\">Void<\/Type>)?, progress: ((_ value: <Type usr=\"s:Sd\">Double<\/Type>) -&gt; <Type usr=\"s:s4Voida\">Void<\/Type>)?, finally: (() -&gt; <Type usr=\"s:s4Voida\">Void<\/Type>)? = nil)<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 4943
              }
            ],
            "key.bodylength" : 381,
            "key.bodyoffset" : 5110,
            "key.column" : 17,
            "key.decl_lang" : "source.lang.swift",
            "key.doc.column" : 17,
            "key.doc.comment" : "执行约定并分别回调成功、失败句柄、进度句柄，统一回调收尾句柄",
            "key.doc.declaration" : "public func done(_ done: @escaping (_ value: Any?) -> Void, catch: ((_ error: Error) -> Void)?, progress: ((_ value: Double) -> Void)?, finally: (() -> Void)? = nil)",
            "key.doc.file" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Kernel\/FWPromise.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Kernel\/FWPromise.swift\" line=\"125\" column=\"17\"><Name>done(_:catch:progress:finally:)<\/Name><USR>c:@M@FWFramework@objc(cs)FWPromise(im)done:catch:progress:finally:<\/USR><Declaration>public func done(_ done: @escaping (_ value: Any?) -&gt; Void, catch: ((_ error: Error) -&gt; Void)?, progress: ((_ value: Double) -&gt; Void)?, finally: (() -&gt; Void)? = nil)<\/Declaration><CommentParts><Abstract><Para>执行约定并分别回调成功、失败句柄、进度句柄，统一回调收尾句柄<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 125,
            "key.doc.name" : "done(_:catch:progress:finally:)",
            "key.doc.type" : "Function",
            "key.doclength" : 95,
            "key.docoffset" : 4844,
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Kernel\/FWPromise.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>done<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>done<\/decl.var.parameter.name>: <decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>value<\/decl.var.parameter.name>: <decl.var.parameter.type><syntaxtype.keyword>Any<\/syntaxtype.keyword>?<\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:s4Voida\">Void<\/ref.typealias><\/decl.function.returntype><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>catch<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><tuple>(<tuple.element><tuple.element.type>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>error<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.protocol usr=\"s:s5ErrorP\">Error<\/ref.protocol><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:s4Voida\">Void<\/ref.typealias><\/decl.function.returntype><\/tuple.element.type><\/tuple.element>)<\/tuple>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>progress<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><tuple>(<tuple.element><tuple.element.type>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>value<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Sd\">Double<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:s4Voida\">Void<\/ref.typealias><\/decl.function.returntype><\/tuple.element.type><\/tuple.element>)<\/tuple>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>finally<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><tuple>(<tuple.element><tuple.element.type>() -&gt; <decl.function.returntype><ref.typealias usr=\"s:s4Voida\">Void<\/ref.typealias><\/decl.function.returntype><\/tuple.element.type><\/tuple.element>)<\/tuple>?<\/decl.var.parameter.type> = nil<\/decl.var.parameter>)<\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 542,
            "key.line" : 125,
            "key.name" : "done(_:catch:progress:finally:)",
            "key.namelength" : 153,
            "key.nameoffset" : 4955,
            "key.offset" : 4950,
            "key.parsed_declaration" : "public func done(_ done: @escaping (_ value: Any?) -> Void, catch: ((_ error: Error) -> Void)?, progress: ((_ value: Double) -> Void)?, finally: (() -> Void)? = nil)",
            "key.parsed_scope.end" : 137,
            "key.parsed_scope.start" : 125,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"c:@M@FWFramework@objc(cs)FWPromise(im)done:\">done(_:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"c:@M@FWFramework@objc(cs)FWPromise(im)done:catch:finally:\">done(_:catch:finally:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "(FWPromise) -> (@escaping (Any?) -> (), ((Error) -> ())?, ((Double) -> ())?, (() -> ())?) -> ()",
            "key.typeusr" : "$s_5catch8progress7finallyyyypSgc_ys5Error_pcSgySdcSgyycSgtcD",
            "key.usr" : "c:@M@FWFramework@objc(cs)FWPromise(im)done:catch:progress:finally:"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func then(_ block: @escaping (_ value: Any?) -&gt; Any?) -&gt; <Type usr=\"c:@M@FWFramework@objc(cs)FWPromise\">FWPromise<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 5592
              }
            ],
            "key.bodylength" : 514,
            "key.bodyoffset" : 5667,
            "key.column" : 17,
            "key.decl_lang" : "source.lang.swift",
            "key.doc.column" : 17,
            "key.doc.comment" : "执行当前约定，成功时调用句柄处理结果或者返回下一个约定",
            "key.doc.declaration" : "public func then(_ block: @escaping (_ value: Any?) -> Any?) -> FWPromise",
            "key.doc.file" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Kernel\/FWPromise.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Kernel\/FWPromise.swift\" line=\"140\" column=\"17\"><Name>then(_:)<\/Name><USR>c:@M@FWFramework@objc(cs)FWPromise(im)then:<\/USR><Declaration>public func then(_ block: @escaping (_ value: Any?) -&gt; Any?) -&gt; FWPromise<\/Declaration><CommentParts><Abstract><Para>执行当前约定，成功时调用句柄处理结果或者返回下一个约定<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 140,
            "key.doc.name" : "then(_:)",
            "key.doc.type" : "Function",
            "key.doclength" : 86,
            "key.docoffset" : 5502,
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Kernel\/FWPromise.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>then<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>block<\/decl.var.parameter.name>: <decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>value<\/decl.var.parameter.name>: <decl.var.parameter.type><syntaxtype.keyword>Any<\/syntaxtype.keyword>?<\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><syntaxtype.keyword>Any<\/syntaxtype.keyword>?<\/decl.function.returntype><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"c:@M@FWFramework@objc(cs)FWPromise\">FWPromise<\/ref.class><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 583,
            "key.line" : 140,
            "key.name" : "then(_:)",
            "key.namelength" : 48,
            "key.nameoffset" : 5604,
            "key.offset" : 5599,
            "key.parsed_declaration" : "public func then(_ block: @escaping (_ value: Any?) -> Any?) -> FWPromise",
            "key.parsed_scope.end" : 155,
            "key.parsed_scope.start" : 140,
            "key.substructure" : [

            ],
            "key.typename" : "(FWPromise) -> (@escaping (Any?) -> Any?) -> FWPromise",
            "key.typeusr" : "$sy11FWFramework9FWPromiseCypSgADccD",
            "key.usr" : "c:@M@FWFramework@objc(cs)FWPromise(im)then:"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func recover(_ block: @escaping (_ error: <Type usr=\"s:s5ErrorP\">Error<\/Type>) -&gt; Any?) -&gt; <Type usr=\"c:@M@FWFramework@objc(cs)FWPromise\">FWPromise<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 6282
              }
            ],
            "key.bodylength" : 514,
            "key.bodyoffset" : 6361,
            "key.column" : 17,
            "key.decl_lang" : "source.lang.swift",
            "key.doc.column" : 17,
            "key.doc.comment" : "执行当前约定，失败时调用句柄恢复结果或者返回下一个约定",
            "key.doc.declaration" : "public func recover(_ block: @escaping (_ error: Error) -> Any?) -> FWPromise",
            "key.doc.file" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Kernel\/FWPromise.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Kernel\/FWPromise.swift\" line=\"158\" column=\"17\"><Name>recover(_:)<\/Name><USR>c:@M@FWFramework@objc(cs)FWPromise(im)recover:<\/USR><Declaration>public func recover(_ block: @escaping (_ error: Error) -&gt; Any?) -&gt; FWPromise<\/Declaration><CommentParts><Abstract><Para>执行当前约定，失败时调用句柄恢复结果或者返回下一个约定<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 158,
            "key.doc.name" : "recover(_:)",
            "key.doc.type" : "Function",
            "key.doclength" : 86,
            "key.docoffset" : 6192,
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Kernel\/FWPromise.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>recover<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>block<\/decl.var.parameter.name>: <decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>error<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.protocol usr=\"s:s5ErrorP\">Error<\/ref.protocol><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><syntaxtype.keyword>Any<\/syntaxtype.keyword>?<\/decl.function.returntype><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"c:@M@FWFramework@objc(cs)FWPromise\">FWPromise<\/ref.class><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 587,
            "key.line" : 158,
            "key.name" : "recover(_:)",
            "key.namelength" : 52,
            "key.nameoffset" : 6294,
            "key.offset" : 6289,
            "key.parsed_declaration" : "public func recover(_ block: @escaping (_ error: Error) -> Any?) -> FWPromise",
            "key.parsed_scope.end" : 173,
            "key.parsed_scope.start" : 158,
            "key.substructure" : [

            ],
            "key.typename" : "(FWPromise) -> (@escaping (Error) -> Any?) -> FWPromise",
            "key.typeusr" : "$sy11FWFramework9FWPromiseCypSgs5Error_pccD",
            "key.usr" : "c:@M@FWFramework@objc(cs)FWPromise(im)recover:"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func validate(_ block: @escaping (_ value: Any?) -&gt; Any?) -&gt; <Type usr=\"c:@M@FWFramework@objc(cs)FWPromise\">FWPromise<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 7034
              }
            ],
            "key.bodylength" : 591,
            "key.bodyoffset" : 7113,
            "key.column" : 17,
            "key.decl_lang" : "source.lang.swift",
            "key.doc.column" : 17,
            "key.doc.comment" : "验证约定，当前约定成功时验证结果，可返回Bool或Error?；验证通过时返回结果，验证失败时返回验证错误",
            "key.doc.declaration" : "public func validate(_ block: @escaping (_ value: Any?) -> Any?) -> FWPromise",
            "key.doc.file" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Kernel\/FWPromise.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Kernel\/FWPromise.swift\" line=\"176\" column=\"17\"><Name>validate(_:)<\/Name><USR>c:@M@FWFramework@objc(cs)FWPromise(im)validate:<\/USR><Declaration>public func validate(_ block: @escaping (_ value: Any?) -&gt; Any?) -&gt; FWPromise<\/Declaration><CommentParts><Abstract><Para>验证约定，当前约定成功时验证结果，可返回Bool或Error?；验证通过时返回结果，验证失败时返回验证错误<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 176,
            "key.doc.name" : "validate(_:)",
            "key.doc.type" : "Function",
            "key.doclength" : 144,
            "key.docoffset" : 6886,
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Kernel\/FWPromise.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>validate<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>block<\/decl.var.parameter.name>: <decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>value<\/decl.var.parameter.name>: <decl.var.parameter.type><syntaxtype.keyword>Any<\/syntaxtype.keyword>?<\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><syntaxtype.keyword>Any<\/syntaxtype.keyword>?<\/decl.function.returntype><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"c:@M@FWFramework@objc(cs)FWPromise\">FWPromise<\/ref.class><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 664,
            "key.line" : 176,
            "key.name" : "validate(_:)",
            "key.namelength" : 52,
            "key.nameoffset" : 7046,
            "key.offset" : 7041,
            "key.parsed_declaration" : "public func validate(_ block: @escaping (_ value: Any?) -> Any?) -> FWPromise",
            "key.parsed_scope.end" : 193,
            "key.parsed_scope.start" : 176,
            "key.substructure" : [

            ],
            "key.typename" : "(FWPromise) -> (@escaping (Any?) -> Any?) -> FWPromise",
            "key.typeusr" : "$sy11FWFramework9FWPromiseCypSgADccD",
            "key.usr" : "c:@M@FWFramework@objc(cs)FWPromise(im)validate:"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func reduce(_ items: [Any], reducer: @escaping (_ value: Any?, _ item: Any) -&gt; Any?) -&gt; <Type usr=\"c:@M@FWFramework@objc(cs)FWPromise\">FWPromise<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 7897
              }
            ],
            "key.bodylength" : 198,
            "key.bodyoffset" : 8003,
            "key.column" : 17,
            "key.decl_lang" : "source.lang.swift",
            "key.doc.column" : 17,
            "key.doc.comment" : "减少约定，当前约定结果作为初始值value，顺序使用value和数组值item调用reducer，产生新的value继续循环直至结束，类似数组reduce方法",
            "key.doc.declaration" : "public func reduce(_ items: [Any], reducer: @escaping (_ value: Any?, _ item: Any) -> Any?) -> FWPromise",
            "key.doc.file" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Kernel\/FWPromise.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Kernel\/FWPromise.swift\" line=\"196\" column=\"17\"><Name>reduce(_:reducer:)<\/Name><USR>c:@M@FWFramework@objc(cs)FWPromise(im)reduce:reducer:<\/USR><Declaration>public func reduce(_ items: [Any], reducer: @escaping (_ value: Any?, _ item: Any) -&gt; Any?) -&gt; FWPromise<\/Declaration><CommentParts><Abstract><Para>减少约定，当前约定结果作为初始值value，顺序使用value和数组值item调用reducer，产生新的value继续循环直至结束，类似数组reduce方法<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 196,
            "key.doc.name" : "reduce(_:reducer:)",
            "key.doc.type" : "Function",
            "key.doclength" : 178,
            "key.docoffset" : 7715,
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Kernel\/FWPromise.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>reduce<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>items<\/decl.var.parameter.name>: <decl.var.parameter.type>[<syntaxtype.keyword>Any<\/syntaxtype.keyword>]<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>reducer<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>value<\/decl.var.parameter.name>: <decl.var.parameter.type><syntaxtype.keyword>Any<\/syntaxtype.keyword>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>item<\/decl.var.parameter.name>: <decl.var.parameter.type><syntaxtype.keyword>Any<\/syntaxtype.keyword><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><syntaxtype.keyword>Any<\/syntaxtype.keyword>?<\/decl.function.returntype><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"c:@M@FWFramework@objc(cs)FWPromise\">FWPromise<\/ref.class><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 298,
            "key.line" : 196,
            "key.name" : "reduce(_:reducer:)",
            "key.namelength" : 79,
            "key.nameoffset" : 7909,
            "key.offset" : 7904,
            "key.parsed_declaration" : "public func reduce(_ items: [Any], reducer: @escaping (_ value: Any?, _ item: Any) -> Any?) -> FWPromise",
            "key.parsed_scope.end" : 204,
            "key.parsed_scope.start" : 196,
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>var promise: <Type usr=\"c:@M@FWFramework@objc(cs)FWPromise\">FWPromise<\/Type><\/Declaration>",
                "key.column" : 13,
                "key.decl_lang" : "source.lang.swift",
                "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Kernel\/FWPromise.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>promise<\/decl.name>: <decl.var.type><ref.class usr=\"c:@M@FWFramework@objc(cs)FWPromise\">FWPromise<\/ref.class><\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 18,
                "key.line" : 197,
                "key.name" : "promise",
                "key.namelength" : 7,
                "key.nameoffset" : 8016,
                "key.offset" : 8012,
                "key.parsed_declaration" : "var promise = self",
                "key.parsed_scope.end" : 197,
                "key.parsed_scope.start" : 197,
                "key.typename" : "FWPromise",
                "key.typeusr" : "$s11FWFramework9FWPromiseCD",
                "key.usr" : "s:11FWFramework9FWPromiseC6reduce_7reducerACSayypG_ypSgAG_yptctF7promiseL_ACvp"
              }
            ],
            "key.typename" : "(FWPromise) -> ([Any], @escaping (Any?, Any) -> Any?) -> FWPromise",
            "key.typeusr" : "$s_7reducer11FWFramework9FWPromiseCSayypG_ypSgAF_yptctcD",
            "key.usr" : "c:@M@FWFramework@objc(cs)FWPromise(im)reduce:reducer:"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func delay(_ time: <Type usr=\"c:@T@NSTimeInterval\">TimeInterval<\/Type>, force: <Type usr=\"s:Sb\">Bool<\/Type> = false) -&gt; <Type usr=\"c:@M@FWFramework@objc(cs)FWPromise\">FWPromise<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 8343
              }
            ],
            "key.bodylength" : 536,
            "key.bodyoffset" : 8418,
            "key.column" : 17,
            "key.decl_lang" : "source.lang.swift",
            "key.doc.column" : 17,
            "key.doc.comment" : "约定延时，当前约定成功时延时返回结果；默认失败时不延时，可设置force强制失败时也延时",
            "key.doc.declaration" : "public func delay(_ time: TimeInterval, force: Bool = false) -> FWPromise",
            "key.doc.file" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Kernel\/FWPromise.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Kernel\/FWPromise.swift\" line=\"207\" column=\"17\"><Name>delay(_:force:)<\/Name><USR>c:@M@FWFramework@objc(cs)FWPromise(im)delay:force:<\/USR><Declaration>public func delay(_ time: TimeInterval, force: Bool = false) -&gt; FWPromise<\/Declaration><CommentParts><Abstract><Para>约定延时，当前约定成功时延时返回结果；默认失败时不延时，可设置force强制失败时也延时<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 207,
            "key.doc.name" : "delay(_:force:)",
            "key.doc.type" : "Function",
            "key.doclength" : 127,
            "key.docoffset" : 8212,
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Kernel\/FWPromise.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>delay<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>time<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.typealias usr=\"c:@T@NSTimeInterval\">TimeInterval<\/ref.typealias><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>force<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.var.parameter.type> = false<\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"c:@M@FWFramework@objc(cs)FWPromise\">FWPromise<\/ref.class><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 605,
            "key.line" : 207,
            "key.name" : "delay(_:force:)",
            "key.namelength" : 48,
            "key.nameoffset" : 8355,
            "key.offset" : 8350,
            "key.parsed_declaration" : "public func delay(_ time: TimeInterval, force: Bool = false) -> FWPromise",
            "key.parsed_scope.end" : 225,
            "key.parsed_scope.start" : 207,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework9FWPromiseC5delay33_C404F9F501BA3EFB848FA86B534B127ELL_5blockySd_yyctFZ\">delay(_:block:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"c:@M@FWFramework@objc(cs)FWPromise(cm)delay:\">delay(_:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "(FWPromise) -> (Double, Bool) -> FWPromise",
            "key.typeusr" : "$s_5force11FWFramework9FWPromiseCSd_SbtcD",
            "key.usr" : "c:@M@FWFramework@objc(cs)FWPromise(im)delay:force:"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func timeout(_ time: <Type usr=\"c:@T@NSTimeInterval\">TimeInterval<\/Type>, error: <Type usr=\"s:s5ErrorP\">Error<\/Type>? = nil) -&gt; <Type usr=\"c:@M@FWFramework@objc(cs)FWPromise\">FWPromise<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 9058
              }
            ],
            "key.bodylength" : 220,
            "key.bodyoffset" : 9135,
            "key.column" : 17,
            "key.decl_lang" : "source.lang.swift",
            "key.doc.column" : 17,
            "key.doc.comment" : "约定超时，当前约定未超时时返回结果；否则返回超时错误信息",
            "key.doc.declaration" : "public func timeout(_ time: TimeInterval, error: Error? = nil) -> FWPromise",
            "key.doc.file" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Kernel\/FWPromise.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Kernel\/FWPromise.swift\" line=\"228\" column=\"17\"><Name>timeout(_:error:)<\/Name><USR>c:@M@FWFramework@objc(cs)FWPromise(im)timeout:error:<\/USR><Declaration>public func timeout(_ time: TimeInterval, error: Error? = nil) -&gt; FWPromise<\/Declaration><CommentParts><Abstract><Para>约定超时，当前约定未超时时返回结果；否则返回超时错误信息<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 228,
            "key.doc.name" : "timeout(_:error:)",
            "key.doc.type" : "Function",
            "key.doclength" : 89,
            "key.docoffset" : 8965,
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Kernel\/FWPromise.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>timeout<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>time<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.typealias usr=\"c:@T@NSTimeInterval\">TimeInterval<\/ref.typealias><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>error<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.protocol usr=\"s:s5ErrorP\">Error<\/ref.protocol>?<\/decl.var.parameter.type> = nil<\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"c:@M@FWFramework@objc(cs)FWPromise\">FWPromise<\/ref.class><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 291,
            "key.line" : 228,
            "key.name" : "timeout(_:error:)",
            "key.namelength" : 50,
            "key.nameoffset" : 9070,
            "key.offset" : 9065,
            "key.parsed_declaration" : "public func timeout(_ time: TimeInterval, error: Error? = nil) -> FWPromise",
            "key.parsed_scope.end" : 235,
            "key.parsed_scope.start" : 228,
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>let promise: <Type usr=\"c:@M@FWFramework@objc(cs)FWPromise\">FWPromise<\/Type><\/Declaration>",
                "key.column" : 13,
                "key.decl_lang" : "source.lang.swift",
                "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Kernel\/FWPromise.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>promise<\/decl.name>: <decl.var.type><ref.class usr=\"c:@M@FWFramework@objc(cs)FWPromise\">FWPromise<\/ref.class><\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 159,
                "key.line" : 229,
                "key.name" : "promise",
                "key.namelength" : 7,
                "key.nameoffset" : 9148,
                "key.offset" : 9144,
                "key.parsed_declaration" : "let promise = FWPromise { completion in\n    FWPromise.delay(time) {\n        completion(error ?? FWPromise.timeoutError)\n    }\n}",
                "key.parsed_scope.end" : 229,
                "key.parsed_scope.start" : 229,
                "key.typename" : "FWPromise",
                "key.typeusr" : "$s11FWFramework9FWPromiseCD",
                "key.usr" : "s:11FWFramework9FWPromiseC7timeout_5errorACSd_s5Error_pSgtF7promiseL_ACvp"
              }
            ],
            "key.typename" : "(FWPromise) -> (Double, Error?) -> FWPromise",
            "key.typeusr" : "$s_5error11FWFramework9FWPromiseCSd_s5Error_pSgtcD",
            "key.usr" : "c:@M@FWFramework@objc(cs)FWPromise(im)timeout:error:"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func retry(_ times: <Type usr=\"s:Si\">Int<\/Type> = 1, delay: <Type usr=\"c:@T@NSTimeInterval\">TimeInterval<\/Type> = 0, block: @escaping () -&gt; <Type usr=\"c:@M@FWFramework@objc(cs)FWPromise\">FWPromise<\/Type>) -&gt; <Type usr=\"c:@M@FWFramework@objc(cs)FWPromise\">FWPromise<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 9541
              }
            ],
            "key.bodylength" : 84,
            "key.bodyoffset" : 9650,
            "key.column" : 17,
            "key.decl_lang" : "source.lang.swift",
            "key.doc.column" : 17,
            "key.doc.comment" : "约定重试，block需返回新创建的约定，当前约定失败时延迟指定时间后调用block创建约定并执行，直至成功或达到最大重试次数",
            "key.doc.declaration" : "public func retry(_ times: Int = 1, delay: TimeInterval = 0, block: @escaping () -> FWPromise) -> FWPromise",
            "key.doc.file" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Kernel\/FWPromise.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Kernel\/FWPromise.swift\" line=\"238\" column=\"17\"><Name>retry(_:delay:block:)<\/Name><USR>c:@M@FWFramework@objc(cs)FWPromise(im)retry:delay:block:<\/USR><Declaration>public func retry(_ times: Int = 1, delay: TimeInterval = 0, block: @escaping () -&gt; FWPromise) -&gt; FWPromise<\/Declaration><CommentParts><Abstract><Para>约定重试，block需返回新创建的约定，当前约定失败时延迟指定时间后调用block创建约定并执行，直至成功或达到最大重试次数<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 238,
            "key.doc.name" : "retry(_:delay:block:)",
            "key.doc.type" : "Function",
            "key.doclength" : 171,
            "key.docoffset" : 9366,
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Kernel\/FWPromise.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>retry<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>times<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type> = 1<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>delay<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.typealias usr=\"c:@T@NSTimeInterval\">TimeInterval<\/ref.typealias><\/decl.var.parameter.type> = 0<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>block<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> () -&gt; <decl.function.returntype><ref.class usr=\"c:@M@FWFramework@objc(cs)FWPromise\">FWPromise<\/ref.class><\/decl.function.returntype><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"c:@M@FWFramework@objc(cs)FWPromise\">FWPromise<\/ref.class><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 187,
            "key.line" : 238,
            "key.name" : "retry(_:delay:block:)",
            "key.namelength" : 82,
            "key.nameoffset" : 9553,
            "key.offset" : 9548,
            "key.parsed_declaration" : "public func retry(_ times: Int = 1, delay: TimeInterval = 0, block: @escaping () -> FWPromise) -> FWPromise",
            "key.parsed_scope.end" : 240,
            "key.parsed_scope.start" : 238,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework9FWPromiseC5retry33_C404F9F501BA3EFB848FA86B534B127ELL_5times5delay5blockA2CSg_SiSdACyctFZ\">retry(_:times:delay:block:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"c:@M@FWFramework@objc(cs)FWPromise(cm)retry:delay:block:\">retry(_: Int = 1, delay: TimeInterval = 0, block: @escaping () -&gt; FWPromise) -&gt; FWPromise<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "(FWPromise) -> (Int, Double, @escaping () -> FWPromise) -> FWPromise",
            "key.typeusr" : "$s_5delay5block11FWFramework9FWPromiseCSi_SdAEyctcD",
            "key.usr" : "c:@M@FWFramework@objc(cs)FWPromise(im)retry:delay:block:"
          },
          {
            "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
            "key.length" : 14,
            "key.name" : "MARK: - Static",
            "key.namelength" : 0,
            "key.nameoffset" : 0,
            "key.offset" : 9748
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>@discardableResult public static func async(_ block: @escaping () throws -&gt; Any?) -&gt; <Type usr=\"c:@M@FWFramework@objc(cs)FWPromise\">FWPromise<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 9826
              },
              {
                "key.attribute" : "source.decl.attribute.discardableResult",
                "key.length" : 18,
                "key.offset" : 9803
              }
            ],
            "key.bodylength" : 357,
            "key.bodyoffset" : 9903,
            "key.column" : 24,
            "key.decl_lang" : "source.lang.swift",
            "key.doc.column" : 24,
            "key.doc.comment" : "仿协程异步执行方法",
            "key.doc.declaration" : "public static func async(_ block: @escaping () throws -> Any?) -> FWPromise",
            "key.doc.file" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Kernel\/FWPromise.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Kernel\/FWPromise.swift\" line=\"245\" column=\"24\"><Name>async(_:)<\/Name><USR>s:11FWFramework9FWPromiseC5asyncyACypSgyKcFZ<\/USR><Declaration>public static func async(_ block: @escaping () throws -&gt; Any?) -&gt; FWPromise<\/Declaration><CommentParts><Abstract><Para>仿协程异步执行方法<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 245,
            "key.doc.name" : "async(_:)",
            "key.doc.type" : "Function",
            "key.doclength" : 32,
            "key.docoffset" : 9767,
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Kernel\/FWPromise.swift",
            "key.fully_annotated_decl" : "<decl.function.method.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@discardableResult<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>async<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>block<\/decl.var.parameter.name>: <decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> () <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><syntaxtype.keyword>Any<\/syntaxtype.keyword>?<\/decl.function.returntype><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"c:@M@FWFramework@objc(cs)FWPromise\">FWPromise<\/ref.class><\/decl.function.returntype><\/decl.function.method.static>",
            "key.kind" : "source.lang.swift.decl.function.method.static",
            "key.length" : 428,
            "key.line" : 245,
            "key.name" : "async(_:)",
            "key.namelength" : 43,
            "key.nameoffset" : 9845,
            "key.offset" : 9833,
            "key.parsed_declaration" : "public static func async(_ block: @escaping () throws -> Any?) -> FWPromise",
            "key.parsed_scope.end" : 256,
            "key.parsed_scope.start" : 245,
            "key.substructure" : [

            ],
            "key.typename" : "(FWPromise.Type) -> (@escaping () throws -> Any?) -> FWPromise",
            "key.typeusr" : "$sy11FWFramework9FWPromiseCypSgyKccD",
            "key.usr" : "s:11FWFramework9FWPromiseC5asyncyACypSgyKcFZ"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>@discardableResult public static func await(_ promise: <Type usr=\"c:@M@FWFramework@objc(cs)FWPromise\">FWPromise<\/Type>) throws -&gt; Any?<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 10330
              },
              {
                "key.attribute" : "source.decl.attribute.discardableResult",
                "key.length" : 18,
                "key.offset" : 10307
              }
            ],
            "key.bodylength" : 383,
            "key.bodyoffset" : 10393,
            "key.column" : 24,
            "key.decl_lang" : "source.lang.swift",
            "key.doc.column" : 24,
            "key.doc.comment" : "仿协程同步返回结果",
            "key.doc.declaration" : "public static func await(_ promise: FWPromise) throws -> Any?",
            "key.doc.file" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Kernel\/FWPromise.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Kernel\/FWPromise.swift\" line=\"260\" column=\"24\"><Name>await(_:)<\/Name><USR>s:11FWFramework9FWPromiseC5awaityypSgACKFZ<\/USR><Declaration>public static func await(_ promise: FWPromise) throws -&gt; Any?<\/Declaration><CommentParts><Abstract><Para>仿协程同步返回结果<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 260,
            "key.doc.name" : "await(_:)",
            "key.doc.type" : "Function",
            "key.doclength" : 32,
            "key.docoffset" : 10271,
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Kernel\/FWPromise.swift",
            "key.fully_annotated_decl" : "<decl.function.method.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@discardableResult<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>await<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>promise<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"c:@M@FWFramework@objc(cs)FWPromise\">FWPromise<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><syntaxtype.keyword>Any<\/syntaxtype.keyword>?<\/decl.function.returntype><\/decl.function.method.static>",
            "key.kind" : "source.lang.swift.decl.function.method.static",
            "key.length" : 440,
            "key.line" : 260,
            "key.name" : "await(_:)",
            "key.namelength" : 27,
            "key.nameoffset" : 10349,
            "key.offset" : 10337,
            "key.parsed_declaration" : "public static func await(_ promise: FWPromise) throws -> Any?",
            "key.parsed_scope.end" : 277,
            "key.parsed_scope.start" : 260,
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>var result: Any?<\/Declaration>",
                "key.column" : 13,
                "key.decl_lang" : "source.lang.swift",
                "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Kernel\/FWPromise.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>result<\/decl.name>: <decl.var.type><syntaxtype.keyword>Any<\/syntaxtype.keyword>?<\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 16,
                "key.line" : 261,
                "key.name" : "result",
                "key.namelength" : 6,
                "key.nameoffset" : 10406,
                "key.offset" : 10402,
                "key.parsed_declaration" : "var result: Any?",
                "key.parsed_scope.end" : 261,
                "key.parsed_scope.start" : 261,
                "key.typename" : "Any?",
                "key.typeusr" : "$sypSgD",
                "key.usr" : "s:11FWFramework9FWPromiseC5awaityypSgACKFZ6resultL_AEvp"
              },
              {
                "key.annotated_decl" : "<Declaration>var error: <Type usr=\"s:s5ErrorP\">Error<\/Type>?<\/Declaration>",
                "key.column" : 13,
                "key.decl_lang" : "source.lang.swift",
                "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Kernel\/FWPromise.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>error<\/decl.name>: <decl.var.type><ref.protocol usr=\"s:s5ErrorP\">Error<\/ref.protocol>?<\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 17,
                "key.line" : 262,
                "key.name" : "error",
                "key.namelength" : 5,
                "key.nameoffset" : 10431,
                "key.offset" : 10427,
                "key.parsed_declaration" : "var error: Error?",
                "key.parsed_scope.end" : 262,
                "key.parsed_scope.start" : 262,
                "key.typename" : "Error?",
                "key.typeusr" : "$ss5Error_pSgD",
                "key.usr" : "s:11FWFramework9FWPromiseC5awaityypSgACKFZ5errorL_s5Error_pSgvp"
              },
              {
                "key.annotated_decl" : "<Declaration>let group: <Type usr=\"c:objc(cs)OS_dispatch_group\">DispatchGroup<\/Type><\/Declaration>",
                "key.column" : 13,
                "key.decl_lang" : "source.lang.swift",
                "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Kernel\/FWPromise.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>group<\/decl.name>: <decl.var.type><ref.class usr=\"c:objc(cs)OS_dispatch_group\">DispatchGroup<\/ref.class><\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 27,
                "key.line" : 263,
                "key.name" : "group",
                "key.namelength" : 5,
                "key.nameoffset" : 10457,
                "key.offset" : 10453,
                "key.parsed_declaration" : "let group = DispatchGroup()",
                "key.parsed_scope.end" : 263,
                "key.parsed_scope.start" : 263,
                "key.related_decls" : [
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"c:@S@group\">group<\/RelatedName>"
                  }
                ],
                "key.typename" : "DispatchGroup",
                "key.typeusr" : "$sSo17OS_dispatch_groupCD",
                "key.usr" : "s:11FWFramework9FWPromiseC5awaityypSgACKFZ5groupL_So012OS_dispatch_D0Cvp"
              }
            ],
            "key.typename" : "(FWPromise.Type) -> (FWPromise) throws -> Any?",
            "key.typeusr" : "$syypSg11FWFramework9FWPromiseCKcD",
            "key.usr" : "s:11FWFramework9FWPromiseC5awaityypSgACKFZ"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public static func all(_ promises: [<Type usr=\"c:@M@FWFramework@objc(cs)FWPromise\">FWPromise<\/Type>]) -&gt; <Type usr=\"c:@M@FWFramework@objc(cs)FWPromise\">FWPromise<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 10949
              }
            ],
            "key.bodylength" : 729,
            "key.bodyoffset" : 11011,
            "key.column" : 24,
            "key.decl_lang" : "source.lang.swift",
            "key.doc.column" : 24,
            "key.doc.comment" : "全部约定，所有约定成功才返回约定结果合集；如果某一个失败了，则返回该错误信息；约定进度为所有约定总进度",
            "key.doc.declaration" : "public static func all(_ promises: [FWPromise]) -> FWPromise",
            "key.doc.file" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Kernel\/FWPromise.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Kernel\/FWPromise.swift\" line=\"280\" column=\"24\"><Name>all(_:)<\/Name><USR>c:@M@FWFramework@objc(cs)FWPromise(cm)all:<\/USR><Declaration>public static func all(_ promises: [FWPromise]) -&gt; FWPromise<\/Declaration><CommentParts><Abstract><Para>全部约定，所有约定成功才返回约定结果合集；如果某一个失败了，则返回该错误信息；约定进度为所有约定总进度<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 280,
            "key.doc.name" : "all(_:)",
            "key.doc.type" : "Function",
            "key.doclength" : 158,
            "key.docoffset" : 10787,
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Kernel\/FWPromise.swift",
            "key.fully_annotated_decl" : "<decl.function.method.static><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>all<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>promises<\/decl.var.parameter.name>: <decl.var.parameter.type>[<ref.class usr=\"c:@M@FWFramework@objc(cs)FWPromise\">FWPromise<\/ref.class>]<\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"c:@M@FWFramework@objc(cs)FWPromise\">FWPromise<\/ref.class><\/decl.function.returntype><\/decl.function.method.static>",
            "key.kind" : "source.lang.swift.decl.function.method.static",
            "key.length" : 785,
            "key.line" : 280,
            "key.name" : "all(_:)",
            "key.namelength" : 28,
            "key.nameoffset" : 10968,
            "key.offset" : 10956,
            "key.parsed_declaration" : "public static func all(_ promises: [FWPromise]) -> FWPromise",
            "key.parsed_scope.end" : 299,
            "key.parsed_scope.start" : 280,
            "key.substructure" : [

            ],
            "key.typename" : "(FWPromise.Type) -> ([FWPromise]) -> FWPromise",
            "key.typeusr" : "$sy11FWFramework9FWPromiseCSayACGcD",
            "key.usr" : "c:@M@FWFramework@objc(cs)FWPromise(cm)all:"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public static func any(_ promises: [<Type usr=\"c:@M@FWFramework@objc(cs)FWPromise\">FWPromise<\/Type>]) -&gt; <Type usr=\"c:@M@FWFramework@objc(cs)FWPromise\">FWPromise<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 11907
              }
            ],
            "key.bodylength" : 643,
            "key.bodyoffset" : 11969,
            "key.column" : 24,
            "key.decl_lang" : "source.lang.swift",
            "key.doc.column" : 24,
            "key.doc.comment" : "某个约定，返回最先成功的约定结果；如果都失败了，返回最后一个错误信息；约定进度为最先成功的约定进度",
            "key.doc.declaration" : "public static func any(_ promises: [FWPromise]) -> FWPromise",
            "key.doc.file" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Kernel\/FWPromise.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Kernel\/FWPromise.swift\" line=\"302\" column=\"24\"><Name>any(_:)<\/Name><USR>c:@M@FWFramework@objc(cs)FWPromise(cm)any:<\/USR><Declaration>public static func any(_ promises: [FWPromise]) -&gt; FWPromise<\/Declaration><CommentParts><Abstract><Para>某个约定，返回最先成功的约定结果；如果都失败了，返回最后一个错误信息；约定进度为最先成功的约定进度<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 302,
            "key.doc.name" : "any(_:)",
            "key.doc.type" : "Function",
            "key.doclength" : 152,
            "key.docoffset" : 11751,
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Kernel\/FWPromise.swift",
            "key.fully_annotated_decl" : "<decl.function.method.static><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>any<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>promises<\/decl.var.parameter.name>: <decl.var.parameter.type>[<ref.class usr=\"c:@M@FWFramework@objc(cs)FWPromise\">FWPromise<\/ref.class>]<\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"c:@M@FWFramework@objc(cs)FWPromise\">FWPromise<\/ref.class><\/decl.function.returntype><\/decl.function.method.static>",
            "key.kind" : "source.lang.swift.decl.function.method.static",
            "key.length" : 699,
            "key.line" : 302,
            "key.name" : "any(_:)",
            "key.namelength" : 28,
            "key.nameoffset" : 11926,
            "key.offset" : 11914,
            "key.parsed_declaration" : "public static func any(_ promises: [FWPromise]) -> FWPromise",
            "key.parsed_scope.end" : 320,
            "key.parsed_scope.start" : 302,
            "key.substructure" : [

            ],
            "key.typename" : "(FWPromise.Type) -> ([FWPromise]) -> FWPromise",
            "key.typeusr" : "$sy11FWFramework9FWPromiseCSayACGcD",
            "key.usr" : "c:@M@FWFramework@objc(cs)FWPromise(cm)any:"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public static func race(_ promises: [<Type usr=\"c:@M@FWFramework@objc(cs)FWPromise\">FWPromise<\/Type>]) -&gt; <Type usr=\"c:@M@FWFramework@objc(cs)FWPromise\">FWPromise<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 12749
              }
            ],
            "key.bodylength" : 493,
            "key.bodyoffset" : 12812,
            "key.column" : 24,
            "key.decl_lang" : "source.lang.swift",
            "key.doc.column" : 24,
            "key.doc.comment" : "约定竞速，返回最先结束的约定结果，不管成功或失败；约定进度为最先结束的约定进度",
            "key.doc.declaration" : "public static func race(_ promises: [FWPromise]) -> FWPromise",
            "key.doc.file" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Kernel\/FWPromise.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Kernel\/FWPromise.swift\" line=\"323\" column=\"24\"><Name>race(_:)<\/Name><USR>c:@M@FWFramework@objc(cs)FWPromise(cm)race:<\/USR><Declaration>public static func race(_ promises: [FWPromise]) -&gt; FWPromise<\/Declaration><CommentParts><Abstract><Para>约定竞速，返回最先结束的约定结果，不管成功或失败；约定进度为最先结束的约定进度<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 323,
            "key.doc.name" : "race(_:)",
            "key.doc.type" : "Function",
            "key.doclength" : 122,
            "key.docoffset" : 12623,
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Kernel\/FWPromise.swift",
            "key.fully_annotated_decl" : "<decl.function.method.static><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>race<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>promises<\/decl.var.parameter.name>: <decl.var.parameter.type>[<ref.class usr=\"c:@M@FWFramework@objc(cs)FWPromise\">FWPromise<\/ref.class>]<\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"c:@M@FWFramework@objc(cs)FWPromise\">FWPromise<\/ref.class><\/decl.function.returntype><\/decl.function.method.static>",
            "key.kind" : "source.lang.swift.decl.function.method.static",
            "key.length" : 550,
            "key.line" : 323,
            "key.name" : "race(_:)",
            "key.namelength" : 29,
            "key.nameoffset" : 12768,
            "key.offset" : 12756,
            "key.parsed_declaration" : "public static func race(_ promises: [FWPromise]) -> FWPromise",
            "key.parsed_scope.end" : 337,
            "key.parsed_scope.start" : 323,
            "key.substructure" : [

            ],
            "key.typename" : "(FWPromise.Type) -> ([FWPromise]) -> FWPromise",
            "key.typeusr" : "$sy11FWFramework9FWPromiseCSayACGcD",
            "key.usr" : "c:@M@FWFramework@objc(cs)FWPromise(cm)race:"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public static func delay(_ time: <Type usr=\"c:@T@NSTimeInterval\">TimeInterval<\/Type>) -&gt; <Type usr=\"c:@M@FWFramework@objc(cs)FWPromise\">FWPromise<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 13367
              }
            ],
            "key.bodylength" : 139,
            "key.bodyoffset" : 13428,
            "key.column" : 24,
            "key.decl_lang" : "source.lang.swift",
            "key.doc.column" : 24,
            "key.doc.comment" : "延时约定，延时完成时必定成功",
            "key.doc.declaration" : "public static func delay(_ time: TimeInterval) -> FWPromise",
            "key.doc.file" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Kernel\/FWPromise.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Kernel\/FWPromise.swift\" line=\"340\" column=\"24\"><Name>delay(_:)<\/Name><USR>c:@M@FWFramework@objc(cs)FWPromise(cm)delay:<\/USR><Declaration>public static func delay(_ time: TimeInterval) -&gt; FWPromise<\/Declaration><CommentParts><Abstract><Para>延时约定，延时完成时必定成功<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 340,
            "key.doc.name" : "delay(_:)",
            "key.doc.type" : "Function",
            "key.doclength" : 47,
            "key.docoffset" : 13316,
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Kernel\/FWPromise.swift",
            "key.fully_annotated_decl" : "<decl.function.method.static><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>delay<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>time<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.typealias usr=\"c:@T@NSTimeInterval\">TimeInterval<\/ref.typealias><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"c:@M@FWFramework@objc(cs)FWPromise\">FWPromise<\/ref.class><\/decl.function.returntype><\/decl.function.method.static>",
            "key.kind" : "source.lang.swift.decl.function.method.static",
            "key.length" : 194,
            "key.line" : 340,
            "key.name" : "delay(_:)",
            "key.namelength" : 27,
            "key.nameoffset" : 13386,
            "key.offset" : 13374,
            "key.parsed_declaration" : "public static func delay(_ time: TimeInterval) -> FWPromise",
            "key.parsed_scope.end" : 346,
            "key.parsed_scope.start" : 340,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework9FWPromiseC5delay33_C404F9F501BA3EFB848FA86B534B127ELL_5blockySd_yyctFZ\">delay(_:block:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"c:@M@FWFramework@objc(cs)FWPromise(im)delay:force:\">delay(_:force:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "(FWPromise.Type) -> (Double) -> FWPromise",
            "key.typeusr" : "$sy11FWFramework9FWPromiseCSdcD",
            "key.usr" : "c:@M@FWFramework@objc(cs)FWPromise(cm)delay:"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public static func retry(_ times: <Type usr=\"s:Si\">Int<\/Type> = 1, delay: <Type usr=\"c:@T@NSTimeInterval\">TimeInterval<\/Type> = 0, block: @escaping () -&gt; <Type usr=\"c:@M@FWFramework@objc(cs)FWPromise\">FWPromise<\/Type>) -&gt; <Type usr=\"c:@M@FWFramework@objc(cs)FWPromise\">FWPromise<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 13757
              }
            ],
            "key.bodylength" : 77,
            "key.bodyoffset" : 13873,
            "key.column" : 24,
            "key.decl_lang" : "source.lang.swift",
            "key.doc.column" : 24,
            "key.doc.comment" : "约定重试，block需返回新创建的约定，该约定失败时延迟指定时间后重新创建并执行，直至成功或达到最大重试次数(总次数retry+1)",
            "key.doc.declaration" : "public static func retry(_ times: Int = 1, delay: TimeInterval = 0, block: @escaping () -> FWPromise) -> FWPromise",
            "key.doc.file" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Kernel\/FWPromise.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Kernel\/FWPromise.swift\" line=\"349\" column=\"24\"><Name>retry(_:delay:block:)<\/Name><USR>c:@M@FWFramework@objc(cs)FWPromise(cm)retry:delay:block:<\/USR><Declaration>public static func retry(_ times: Int = 1, delay: TimeInterval = 0, block: @escaping () -&gt; FWPromise) -&gt; FWPromise<\/Declaration><CommentParts><Abstract><Para>约定重试，block需返回新创建的约定，该约定失败时延迟指定时间后重新创建并执行，直至成功或达到最大重试次数(总次数retry+1)<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 349,
            "key.doc.name" : "retry(_:delay:block:)",
            "key.doc.type" : "Function",
            "key.doclength" : 175,
            "key.docoffset" : 13578,
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Kernel\/FWPromise.swift",
            "key.fully_annotated_decl" : "<decl.function.method.static><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>retry<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>times<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type> = 1<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>delay<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.typealias usr=\"c:@T@NSTimeInterval\">TimeInterval<\/ref.typealias><\/decl.var.parameter.type> = 0<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>block<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> () -&gt; <decl.function.returntype><ref.class usr=\"c:@M@FWFramework@objc(cs)FWPromise\">FWPromise<\/ref.class><\/decl.function.returntype><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"c:@M@FWFramework@objc(cs)FWPromise\">FWPromise<\/ref.class><\/decl.function.returntype><\/decl.function.method.static>",
            "key.kind" : "source.lang.swift.decl.function.method.static",
            "key.length" : 187,
            "key.line" : 349,
            "key.name" : "retry(_:delay:block:)",
            "key.namelength" : 82,
            "key.nameoffset" : 13776,
            "key.offset" : 13764,
            "key.parsed_declaration" : "public static func retry(_ times: Int = 1, delay: TimeInterval = 0, block: @escaping () -> FWPromise) -> FWPromise",
            "key.parsed_scope.end" : 351,
            "key.parsed_scope.start" : 349,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework9FWPromiseC5retry33_C404F9F501BA3EFB848FA86B534B127ELL_5times5delay5blockA2CSg_SiSdACyctFZ\">retry(_:times:delay:block:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"c:@M@FWFramework@objc(cs)FWPromise(im)retry:delay:block:\">retry(_: Int = 1, delay: TimeInterval = 0, block: @escaping () -&gt; FWPromise) -&gt; FWPromise<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "(FWPromise.Type) -> (Int, Double, @escaping () -> FWPromise) -> FWPromise",
            "key.typeusr" : "$s_5delay5block11FWFramework9FWPromiseCSi_SdAEyctcD",
            "key.usr" : "c:@M@FWFramework@objc(cs)FWPromise(cm)retry:delay:block:"
          }
        ],
        "key.typename" : "FWPromise.Type",
        "key.typeusr" : "$s11FWFramework9FWPromiseCmD",
        "key.usr" : "c:@M@FWFramework@objc(cs)FWPromise"
      }
    ]
  }
}, {
  "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Kernel\/FWTest.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 701,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
        "key.length" : 18,
        "key.name" : "MARK: - FWTestCase",
        "key.namelength" : 0,
        "key.nameoffset" : 0,
        "key.offset" : 211
      },
      {
        "key.annotated_decl" : "<Declaration>class FWTestCase : <Type usr=\"c:objc(cs)NSObject\">NSObject<\/Type><\/Declaration>",
        "key.bodylength" : 362,
        "key.bodyoffset" : 329,
        "key.column" : 12,
        "key.decl_lang" : "source.lang.objc",
        "key.doc.column" : 12,
        "key.doc.comment" : "FWTestCase扩展，注意测试方法需标记@objc，让OC可以访问",
        "key.doc.declaration" : "class FWTestCase : NSObject",
        "key.doc.discussion" : [
          {
            "Para" : " 调试模式下自动执行，按模块单元测试命名格式：FWTestCase_module_name"
          }
        ],
        "key.doc.file" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Kernel\/FWTest.h",
        "key.doc.full_as_xml" : "<Other file=\"\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Kernel\/FWTest.h\" line=\"31\" column=\"12\"><Name>FWTestCase<\/Name><USR>c:objc(cs)FWTestCase<\/USR><Declaration>class FWTestCase : NSObject<\/Declaration><Abstract><Para> 单元测试用例基类，所有单元测试用例必须继承 <\/Para><\/Abstract><Discussion><Para> 调试模式下自动执行，按模块单元测试命名格式：FWTestCase_module_name<\/Para><\/Discussion><\/Other>",
        "key.doc.line" : 31,
        "key.doc.name" : "FWTestCase",
        "key.doc.type" : "Other",
        "key.doclength" : 76,
        "key.docoffset" : 231,
        "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Kernel\/FWTest.h",
        "key.fully_annotated_decl" : "<decl.class><syntaxtype.keyword>class<\/syntaxtype.keyword> <decl.name>FWTestCase<\/decl.name> : <ref.class usr=\"c:objc(cs)NSObject\">NSObject<\/ref.class><\/decl.class>",
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 385,
        "key.line" : 31,
        "key.modulename" : "FWFramework.FWTest",
        "key.name" : "FWTestCase",
        "key.namelength" : 10,
        "key.nameoffset" : 317,
        "key.offset" : 307,
        "key.parsed_declaration" : "extension FWTestCase",
        "key.parsed_scope.end" : 27,
        "key.parsed_scope.start" : 17,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func assertTrue(_ value: <Type usr=\"s:Sb\">Bool<\/Type>, _ expression: <Type usr=\"s:SS\">String<\/Type> = &quot;&quot;, file: <Type usr=\"s:SS\">String<\/Type> = #file, line: <Type usr=\"s:Si\">Int<\/Type> = #line)<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 503
              }
            ],
            "key.bodylength" : 79,
            "key.bodyoffset" : 610,
            "key.column" : 17,
            "key.decl_lang" : "source.lang.swift",
            "key.doc.column" : 17,
            "key.doc.comment" : "断言方法\n\n- Parameters:\n  - value: 断言表达式\n  - file: 文件名，默认传参\n  - line: 行数，默认传参",
            "key.doc.declaration" : "public func assertTrue(_ value: Bool, _ expression: String = \"\", file: String = #file, line: Int = #line)",
            "key.doc.file" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Kernel\/FWTest.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Kernel\/FWTest.swift\" line=\"24\" column=\"17\"><Name>assertTrue(_:_:file:line:)<\/Name><USR>s:So10FWTestCaseC11FWFrameworkE10assertTrue__4file4lineySb_S2SSitF<\/USR><Declaration>public func assertTrue(_ value: Bool, _ expression: String = &quot;&quot;, file: String = #file, line: Int = #line)<\/Declaration><CommentParts><Abstract><Para>断言方法<\/Para><\/Abstract><Parameters><Parameter><Name>value<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>断言表达式<\/Para><\/Discussion><\/Parameter><Parameter><Name>file<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>文件名，默认传参<\/Para><\/Discussion><\/Parameter><Parameter><Name>line<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>行数，默认传参<\/Para><\/Discussion><\/Parameter><\/Parameters><\/CommentParts><\/Function>",
            "key.doc.line" : 24,
            "key.doc.name" : "assertTrue(_:_:file:line:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "断言表达式"
                  }
                ],
                "name" : "value"
              },
              {
                "discussion" : [
                  {
                    "Para" : "文件名，默认传参"
                  }
                ],
                "name" : "file"
              },
              {
                "discussion" : [
                  {
                    "Para" : "行数，默认传参"
                  }
                ],
                "name" : "line"
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 165,
            "key.docoffset" : 334,
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Kernel\/FWTest.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>assertTrue<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>value<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>expression<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type> = &quot;&quot;<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>file<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type> = <syntaxtype.keyword>#file<\/syntaxtype.keyword><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>line<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type> = <syntaxtype.keyword>#line<\/syntaxtype.keyword><\/decl.var.parameter>)<\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 180,
            "key.line" : 24,
            "key.name" : "assertTrue(_:_:file:line:)",
            "key.namelength" : 93,
            "key.nameoffset" : 515,
            "key.offset" : 510,
            "key.parsed_declaration" : "public func assertTrue(_ value: Bool, _ expression: String = \"\", file: String = #file, line: Int = #line)",
            "key.parsed_scope.end" : 26,
            "key.parsed_scope.start" : 24,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"c:objc(cs)FWTestCase(im)assertTrue:expression:file:line:\">assertTrue(_:expression:file:line:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "(FWTestCase) -> (Bool, String, String, Int) -> ()",
            "key.typeusr" : "$s__4file4lineySb_S2SSitcD",
            "key.usr" : "s:So10FWTestCaseC11FWFrameworkE10assertTrue__4file4lineySb_S2SSitF"
          }
        ],
        "key.typename" : "FWTestCase.Type",
        "key.typeusr" : "$sSo10FWTestCaseCmD",
        "key.usr" : "c:objc(cs)FWTestCase"
      }
    ]
  }
}, {
  "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWEncode.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 13260,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
        "key.length" : 20,
        "key.name" : "MARK: - FWAnyEncoder",
        "key.namelength" : 0,
        "key.nameoffset" : 0,
        "key.offset" : 160
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public protocol FWAnyEncoder<\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 229
          }
        ],
        "key.bodylength" : 58,
        "key.bodyoffset" : 259,
        "key.column" : 17,
        "key.decl_lang" : "source.lang.swift",
        "key.doc.column" : 17,
        "key.doc.comment" : "https:\/\/github.com\/JohnSundell\/Codextended",
        "key.doc.declaration" : "public protocol FWAnyEncoder",
        "key.doc.file" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWEncode.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWEncode.swift\" line=\"14\" column=\"17\"><Name>FWAnyEncoder<\/Name><USR>s:11FWFramework12FWAnyEncoderP<\/USR><Declaration>public protocol FWAnyEncoder<\/Declaration><CommentParts><Abstract><Para>https:\/\/github.com\/JohnSundell\/Codextended<\/Para><\/Abstract><\/CommentParts><\/Class>",
        "key.doc.line" : 14,
        "key.doc.name" : "FWAnyEncoder",
        "key.doc.type" : "Class",
        "key.doclength" : 47,
        "key.docoffset" : 182,
        "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWEncode.swift",
        "key.fully_annotated_decl" : "<decl.protocol><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>protocol<\/syntaxtype.keyword> <decl.name>FWAnyEncoder<\/decl.name><\/decl.protocol>",
        "key.kind" : "source.lang.swift.decl.protocol",
        "key.length" : 82,
        "key.line" : 14,
        "key.name" : "FWAnyEncoder",
        "key.namelength" : 12,
        "key.nameoffset" : 245,
        "key.offset" : 236,
        "key.parsed_declaration" : "public protocol FWAnyEncoder",
        "key.parsed_scope.end" : 16,
        "key.parsed_scope.start" : 14,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>func encode&lt;T&gt;(_ value: <Type usr=\"s:11FWFramework12FWAnyEncoderP6encodey10Foundation4DataVqd__KSERd__lF1TL_qd__mfp\">T<\/Type>) throws -&gt; <Type usr=\"s:10Foundation4DataV\">Data<\/Type> where <Type usr=\"s:11FWFramework12FWAnyEncoderP6encodey10Foundation4DataVqd__KSERd__lF1TL_qd__mfp\">T<\/Type> : <Type usr=\"s:SE\">Encodable<\/Type><\/Declaration>",
            "key.column" : 10,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWEncode.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>encode<\/decl.name>&lt;<decl.generic_type_param usr=\"s:11FWFramework12FWAnyEncoderP6encodey10Foundation4DataVqd__KSERd__lF1TL_qd__mfp\"><decl.generic_type_param.name>T<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>value<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:11FWFramework12FWAnyEncoderP6encodey10Foundation4DataVqd__KSERd__lF1TL_qd__mfp\">T<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><ref.struct usr=\"s:10Foundation4DataV\">Data<\/ref.struct><\/decl.function.returntype> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement><ref.generic_type_param usr=\"s:11FWFramework12FWAnyEncoderP6encodey10Foundation4DataVqd__KSERd__lF1TL_qd__mfp\">T<\/ref.generic_type_param> : <ref.protocol usr=\"s:SE\">Encodable<\/ref.protocol><\/decl.generic_type_requirement><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 52,
            "key.line" : 15,
            "key.name" : "encode(_:)",
            "key.namelength" : 32,
            "key.nameoffset" : 269,
            "key.offset" : 264,
            "key.parsed_declaration" : "func encode<T: Encodable>(_ value: T) throws -> Data",
            "key.parsed_scope.end" : 15,
            "key.parsed_scope.start" : 15,
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>T : <Type usr=\"s:SE\">Encodable<\/Type><\/Declaration>",
                "key.column" : 17,
                "key.decl_lang" : "source.lang.swift",
                "key.elements" : [
                  {
                    "key.kind" : "source.lang.swift.structure.elem.typeref",
                    "key.length" : 9,
                    "key.offset" : 279
                  }
                ],
                "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWEncode.swift",
                "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>T<\/decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:SE\">Encodable<\/ref.protocol><\/decl.generic_type_param.constraint><\/decl.generic_type_param>",
                "key.inheritedtypes" : [
                  {
                    "key.name" : "Encodable"
                  }
                ],
                "key.kind" : "source.lang.swift.decl.generic_type_param",
                "key.length" : 12,
                "key.line" : 15,
                "key.name" : "T",
                "key.namelength" : 1,
                "key.nameoffset" : 276,
                "key.offset" : 276,
                "key.parsed_declaration" : "func encode<T: Encodable",
                "key.parsed_scope.end" : 15,
                "key.parsed_scope.start" : 15,
                "key.typename" : "T.Type",
                "key.typeusr" : "$sqd__mD",
                "key.usr" : "s:11FWFramework12FWAnyEncoderP6encodey10Foundation4DataVqd__KSERd__lF1TL_qd__mfp"
              }
            ],
            "key.typename" : "<Self, T where Self : FWAnyEncoder, T : Encodable> (Self) -> (T) throws -> Data",
            "key.typeusr" : "$sy10Foundation4DataVqd__KcSERd__luD",
            "key.usr" : "s:11FWFramework12FWAnyEncoderP6encodey10Foundation4DataVqd__KSERd__lF"
          }
        ],
        "key.typename" : "FWAnyEncoder.Protocol",
        "key.typeusr" : "$s11FWFramework12FWAnyEncoder_pmD",
        "key.usr" : "s:11FWFramework12FWAnyEncoderP"
      },
      {
        "key.annotated_decl" : "<Declaration>class JSONEncoder<\/Declaration>",
        "key.bodylength" : 0,
        "key.bodyoffset" : 357,
        "key.decl_lang" : "source.lang.swift",
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 12,
            "key.offset" : 343
          }
        ],
        "key.fully_annotated_decl" : "<decl.class><syntaxtype.keyword>class<\/syntaxtype.keyword> <decl.name>JSONEncoder<\/decl.name><\/decl.class>",
        "key.inheritedtypes" : [
          {
            "key.name" : "FWAnyEncoder"
          }
        ],
        "key.is_system" : true,
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 38,
        "key.modulename" : "Foundation",
        "key.name" : "JSONEncoder",
        "key.namelength" : 11,
        "key.nameoffset" : 330,
        "key.offset" : 320,
        "key.parsed_declaration" : "extension JSONEncoder: FWAnyEncoder",
        "key.parsed_scope.end" : 18,
        "key.parsed_scope.start" : 18,
        "key.typename" : "JSONEncoder.Type",
        "key.typeusr" : "$s10Foundation11JSONEncoderCmD",
        "key.usr" : "s:10Foundation11JSONEncoderC"
      },
      {
        "key.annotated_decl" : "<Declaration>class PropertyListEncoder<\/Declaration>",
        "key.bodylength" : 0,
        "key.bodyoffset" : 447,
        "key.decl_lang" : "source.lang.swift",
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 12,
            "key.offset" : 433
          }
        ],
        "key.fully_annotated_decl" : "<decl.class><syntaxtype.keyword>class<\/syntaxtype.keyword> <decl.name>PropertyListEncoder<\/decl.name><\/decl.class>",
        "key.inheritedtypes" : [
          {
            "key.name" : "FWAnyEncoder"
          }
        ],
        "key.is_system" : true,
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 46,
        "key.modulename" : "Foundation",
        "key.name" : "PropertyListEncoder",
        "key.namelength" : 19,
        "key.nameoffset" : 412,
        "key.offset" : 402,
        "key.parsed_declaration" : "extension PropertyListEncoder: FWAnyEncoder",
        "key.parsed_scope.end" : 21,
        "key.parsed_scope.start" : 21,
        "key.typename" : "PropertyListEncoder.Type",
        "key.typeusr" : "$s10Foundation19PropertyListEncoderCmD",
        "key.usr" : "s:10Foundation19PropertyListEncoderC"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>protocol Encodable<\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 457
          }
        ],
        "key.bodylength" : 128,
        "key.bodyoffset" : 485,
        "key.decl_lang" : "source.lang.swift",
        "key.doc.declaration" : "protocol Encodable",
        "key.doc.full_as_xml" : "<Class><Name>Encodable<\/Name><USR>s:SE<\/USR><Declaration>protocol Encodable<\/Declaration><CommentParts><Abstract><Para>A type that can encode itself to an external representation.<\/Para><\/Abstract><\/CommentParts><\/Class>",
        "key.doc.name" : "Encodable",
        "key.doc.type" : "Class",
        "key.fully_annotated_decl" : "<decl.protocol><syntaxtype.keyword>protocol<\/syntaxtype.keyword> <decl.name>Encodable<\/decl.name><\/decl.protocol>",
        "key.groupname" : "Misc",
        "key.is_system" : true,
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 150,
        "key.modulename" : "Swift",
        "key.name" : "Encodable",
        "key.namelength" : 9,
        "key.nameoffset" : 474,
        "key.offset" : 464,
        "key.parsed_declaration" : "public extension Encodable",
        "key.parsed_scope.end" : 28,
        "key.parsed_scope.start" : 24,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>func fwEncoded(using encoder: <Type usr=\"s:11FWFramework12FWAnyEncoderP\">FWAnyEncoder<\/Type> = JSONEncoder()) throws -&gt; <Type usr=\"s:10Foundation4DataV\">Data<\/Type><\/Declaration>",
            "key.bodylength" : 45,
            "key.bodyoffset" : 566,
            "key.column" : 10,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWEncode.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>fwEncoded<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>using<\/decl.var.parameter.argument_label> <decl.var.parameter.name>encoder<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.protocol usr=\"s:11FWFramework12FWAnyEncoderP\">FWAnyEncoder<\/ref.protocol><\/decl.var.parameter.type> = JSONEncoder()<\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><ref.struct usr=\"s:10Foundation4DataV\">Data<\/ref.struct><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.groupname" : "Misc",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 122,
            "key.line" : 25,
            "key.name" : "fwEncoded(using:)",
            "key.namelength" : 54,
            "key.nameoffset" : 495,
            "key.offset" : 490,
            "key.parsed_declaration" : "func fwEncoded(using encoder: FWAnyEncoder = JSONEncoder()) throws -> Data",
            "key.parsed_scope.end" : 27,
            "key.parsed_scope.start" : 25,
            "key.substructure" : [

            ],
            "key.typename" : "<Self where Self : Encodable> (Self) -> (FWAnyEncoder) throws -> Data",
            "key.typeusr" : "$s5using10Foundation4DataV11FWFramework12FWAnyEncoder_p_tKcD",
            "key.usr" : "s:SE11FWFrameworkE9fwEncoded5using10Foundation4DataVAA12FWAnyEncoder_p_tKF"
          }
        ],
        "key.typename" : "Encodable.Protocol",
        "key.typeusr" : "$sSE_pmD",
        "key.usr" : "s:SE"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>protocol Encoder<\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 616
          }
        ],
        "key.bodylength" : 856,
        "key.bodyoffset" : 642,
        "key.decl_lang" : "source.lang.swift",
        "key.doc.declaration" : "protocol Encoder",
        "key.doc.full_as_xml" : "<Class><Name>Encoder<\/Name><USR>s:s7EncoderP<\/USR><Declaration>protocol Encoder<\/Declaration><CommentParts><Abstract><Para>A type that can encode values into a native format for external representation.<\/Para><\/Abstract><\/CommentParts><\/Class>",
        "key.doc.name" : "Encoder",
        "key.doc.type" : "Class",
        "key.fully_annotated_decl" : "<decl.protocol><syntaxtype.keyword>protocol<\/syntaxtype.keyword> <decl.name>Encoder<\/decl.name><\/decl.protocol>",
        "key.groupname" : "Misc",
        "key.is_system" : true,
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 876,
        "key.modulename" : "Swift",
        "key.name" : "Encoder",
        "key.namelength" : 7,
        "key.nameoffset" : 633,
        "key.offset" : 623,
        "key.parsed_declaration" : "public extension Encoder",
        "key.parsed_scope.end" : 53,
        "key.parsed_scope.start" : 30,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>func fwEncodeSingle&lt;T&gt;(_ value: <Type usr=\"s:s7EncoderP11FWFrameworkE14fwEncodeSingleyyqd__KSERd__lF1TL_qd__mfp\">T<\/Type>) throws where <Type usr=\"s:s7EncoderP11FWFrameworkE14fwEncodeSingleyyqd__KSERd__lF1TL_qd__mfp\">T<\/Type> : <Type usr=\"s:SE\">Encodable<\/Type><\/Declaration>",
            "key.bodylength" : 88,
            "key.bodyoffset" : 701,
            "key.column" : 10,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWEncode.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>fwEncodeSingle<\/decl.name>&lt;<decl.generic_type_param usr=\"s:s7EncoderP11FWFrameworkE14fwEncodeSingleyyqd__KSERd__lF1TL_qd__mfp\"><decl.generic_type_param.name>T<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>value<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:s7EncoderP11FWFrameworkE14fwEncodeSingleyyqd__KSERd__lF1TL_qd__mfp\">T<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement><ref.generic_type_param usr=\"s:s7EncoderP11FWFrameworkE14fwEncodeSingleyyqd__KSERd__lF1TL_qd__mfp\">T<\/ref.generic_type_param> : <ref.protocol usr=\"s:SE\">Encodable<\/ref.protocol><\/decl.generic_type_requirement><\/decl.function.method.instance>",
            "key.groupname" : "Misc",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 143,
            "key.line" : 31,
            "key.name" : "fwEncodeSingle(_:)",
            "key.namelength" : 40,
            "key.nameoffset" : 652,
            "key.offset" : 647,
            "key.parsed_declaration" : "func fwEncodeSingle<T: Encodable>(_ value: T) throws",
            "key.parsed_scope.end" : 34,
            "key.parsed_scope.start" : 31,
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>T : <Type usr=\"s:SE\">Encodable<\/Type><\/Declaration>",
                "key.column" : 25,
                "key.decl_lang" : "source.lang.swift",
                "key.elements" : [
                  {
                    "key.kind" : "source.lang.swift.structure.elem.typeref",
                    "key.length" : 9,
                    "key.offset" : 670
                  }
                ],
                "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWEncode.swift",
                "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>T<\/decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:SE\">Encodable<\/ref.protocol><\/decl.generic_type_param.constraint><\/decl.generic_type_param>",
                "key.groupname" : "Misc",
                "key.inheritedtypes" : [
                  {
                    "key.name" : "Encodable"
                  }
                ],
                "key.kind" : "source.lang.swift.decl.generic_type_param",
                "key.length" : 12,
                "key.line" : 31,
                "key.name" : "T",
                "key.namelength" : 1,
                "key.nameoffset" : 667,
                "key.offset" : 667,
                "key.parsed_declaration" : "func fwEncodeSingle<T: Encodable",
                "key.parsed_scope.end" : 31,
                "key.parsed_scope.start" : 31,
                "key.typename" : "T.Type",
                "key.typeusr" : "$sqd__mD",
                "key.usr" : "s:s7EncoderP11FWFrameworkE14fwEncodeSingleyyqd__KSERd__lF1TL_qd__mfp"
              },
              {
                "key.annotated_decl" : "<Declaration>var container: <Type usr=\"s:s28SingleValueEncodingContainerP\">SingleValueEncodingContainer<\/Type><\/Declaration>",
                "key.column" : 13,
                "key.decl_lang" : "source.lang.swift",
                "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWEncode.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>container<\/decl.name>: <decl.var.type><ref.protocol usr=\"s:s28SingleValueEncodingContainerP\">SingleValueEncodingContainer<\/ref.protocol><\/decl.var.type><\/decl.var.local>",
                "key.groupname" : "Misc",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 38,
                "key.line" : 32,
                "key.name" : "container",
                "key.namelength" : 9,
                "key.nameoffset" : 714,
                "key.offset" : 710,
                "key.parsed_declaration" : "var container = singleValueContainer()",
                "key.parsed_scope.end" : 32,
                "key.parsed_scope.start" : 32,
                "key.typename" : "SingleValueEncodingContainer",
                "key.typeusr" : "$ss28SingleValueEncodingContainer_pD",
                "key.usr" : "s:s7EncoderP11FWFrameworkE14fwEncodeSingleyyqd__KSERd__lF9containerL_s0E22ValueEncodingContainer_pvp"
              }
            ],
            "key.typename" : "<Self, T where Self : Encoder, T : Encodable> (Self) -> (T) throws -> ()",
            "key.typeusr" : "$syyqd__KcSERd__luD",
            "key.usr" : "s:s7EncoderP11FWFrameworkE14fwEncodeSingleyyqd__KSERd__lF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>func fwEncode&lt;T&gt;(_ value: <Type usr=\"s:s7EncoderP11FWFrameworkE8fwEncode_3foryqd___SStKSERd__lF1TL_qd__mfp\">T<\/Type>, for key: <Type usr=\"s:SS\">String<\/Type>) throws where <Type usr=\"s:s7EncoderP11FWFrameworkE8fwEncode_3foryqd___SStKSERd__lF1TL_qd__mfp\">T<\/Type> : <Type usr=\"s:SE\">Encodable<\/Type><\/Declaration>",
            "key.bodylength" : 59,
            "key.bodyoffset" : 861,
            "key.column" : 10,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWEncode.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>fwEncode<\/decl.name>&lt;<decl.generic_type_param usr=\"s:s7EncoderP11FWFrameworkE8fwEncode_3foryqd___SStKSERd__lF1TL_qd__mfp\"><decl.generic_type_param.name>T<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>value<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:s7EncoderP11FWFrameworkE8fwEncode_3foryqd___SStKSERd__lF1TL_qd__mfp\">T<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>for<\/decl.var.parameter.argument_label> <decl.var.parameter.name>key<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement><ref.generic_type_param usr=\"s:s7EncoderP11FWFrameworkE8fwEncode_3foryqd___SStKSERd__lF1TL_qd__mfp\">T<\/ref.generic_type_param> : <ref.protocol usr=\"s:SE\">Encodable<\/ref.protocol><\/decl.generic_type_requirement><\/decl.function.method.instance>",
            "key.groupname" : "Misc",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 125,
            "key.line" : 36,
            "key.name" : "fwEncode(_:for:)",
            "key.namelength" : 51,
            "key.nameoffset" : 801,
            "key.offset" : 796,
            "key.parsed_declaration" : "func fwEncode<T: Encodable>(_ value: T, for key: String) throws",
            "key.parsed_scope.end" : 38,
            "key.parsed_scope.start" : 36,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s7EncoderP11FWFrameworkE8fwEncode_3foryqd___qd_0_tKSERd__s9CodingKeyRd_0_r0_lF\">fwEncode&lt;T, K&gt;(_: T, for: K) throws where T : Encodable, K : CodingKey<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s7EncoderP11FWFrameworkE8fwEncode_3for5usingy10Foundation4DateV_SSqd__tKAC05FWAnyH9FormatterRd__lF\">fwEncode&lt;F&gt;(_: Date, for: String, using: F) throws where F : FWAnyDateFormatter<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s7EncoderP11FWFrameworkE8fwEncode_3for5usingy10Foundation4DateV_qd__qd_0_tKs9CodingKeyRd__AC05FWAnyH9FormatterRd_0_r0_lF\">fwEncode&lt;K, F&gt;(_: Date, for: K, using: F) throws where K : CodingKey, F : FWAnyDateFormatter<\/RelatedName>"
              }
            ],
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>T : <Type usr=\"s:SE\">Encodable<\/Type><\/Declaration>",
                "key.column" : 19,
                "key.decl_lang" : "source.lang.swift",
                "key.elements" : [
                  {
                    "key.kind" : "source.lang.swift.structure.elem.typeref",
                    "key.length" : 9,
                    "key.offset" : 813
                  }
                ],
                "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWEncode.swift",
                "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>T<\/decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:SE\">Encodable<\/ref.protocol><\/decl.generic_type_param.constraint><\/decl.generic_type_param>",
                "key.groupname" : "Misc",
                "key.inheritedtypes" : [
                  {
                    "key.name" : "Encodable"
                  }
                ],
                "key.kind" : "source.lang.swift.decl.generic_type_param",
                "key.length" : 12,
                "key.line" : 36,
                "key.name" : "T",
                "key.namelength" : 1,
                "key.nameoffset" : 810,
                "key.offset" : 810,
                "key.parsed_declaration" : "func fwEncode<T: Encodable",
                "key.parsed_scope.end" : 36,
                "key.parsed_scope.start" : 36,
                "key.typename" : "T.Type",
                "key.typeusr" : "$sqd__mD",
                "key.usr" : "s:s7EncoderP11FWFrameworkE8fwEncode_3foryqd___SStKSERd__lF1TL_qd__mfp"
              }
            ],
            "key.typename" : "<Self, T where Self : Encoder, T : Encodable> (Self) -> (T, String) throws -> ()",
            "key.typeusr" : "$s_3foryqd___SStKcSERd__luD",
            "key.usr" : "s:s7EncoderP11FWFrameworkE8fwEncode_3foryqd___SStKSERd__lF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>func fwEncode&lt;T, K&gt;(_ value: <Type usr=\"s:s7EncoderP11FWFrameworkE8fwEncode_3foryqd___qd_0_tKSERd__s9CodingKeyRd_0_r0_lF1TL_qd__mfp\">T<\/Type>, for key: <Type usr=\"s:s7EncoderP11FWFrameworkE8fwEncode_3foryqd___qd_0_tKSERd__s9CodingKeyRd_0_r0_lF1KL_qd_0_mfp\">K<\/Type>) throws where <Type usr=\"s:s7EncoderP11FWFrameworkE8fwEncode_3foryqd___qd_0_tKSERd__s9CodingKeyRd_0_r0_lF1TL_qd__mfp\">T<\/Type> : <Type usr=\"s:SE\">Encodable<\/Type>, <Type usr=\"s:s7EncoderP11FWFrameworkE8fwEncode_3foryqd___qd_0_tKSERd__s9CodingKeyRd_0_r0_lF1KL_qd_0_mfp\">K<\/Type> : <Type usr=\"s:s9CodingKeyP\">CodingKey<\/Type><\/Declaration>",
            "key.bodylength" : 110,
            "key.bodyoffset" : 1001,
            "key.column" : 10,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWEncode.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>fwEncode<\/decl.name>&lt;<decl.generic_type_param usr=\"s:s7EncoderP11FWFrameworkE8fwEncode_3foryqd___qd_0_tKSERd__s9CodingKeyRd_0_r0_lF1TL_qd__mfp\"><decl.generic_type_param.name>T<\/decl.generic_type_param.name><\/decl.generic_type_param>, <decl.generic_type_param usr=\"s:s7EncoderP11FWFrameworkE8fwEncode_3foryqd___qd_0_tKSERd__s9CodingKeyRd_0_r0_lF1KL_qd_0_mfp\"><decl.generic_type_param.name>K<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>value<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:s7EncoderP11FWFrameworkE8fwEncode_3foryqd___qd_0_tKSERd__s9CodingKeyRd_0_r0_lF1TL_qd__mfp\">T<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>for<\/decl.var.parameter.argument_label> <decl.var.parameter.name>key<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:s7EncoderP11FWFrameworkE8fwEncode_3foryqd___qd_0_tKSERd__s9CodingKeyRd_0_r0_lF1KL_qd_0_mfp\">K<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement><ref.generic_type_param usr=\"s:s7EncoderP11FWFrameworkE8fwEncode_3foryqd___qd_0_tKSERd__s9CodingKeyRd_0_r0_lF1TL_qd__mfp\">T<\/ref.generic_type_param> : <ref.protocol usr=\"s:SE\">Encodable<\/ref.protocol><\/decl.generic_type_requirement>, <decl.generic_type_requirement><ref.generic_type_param usr=\"s:s7EncoderP11FWFrameworkE8fwEncode_3foryqd___qd_0_tKSERd__s9CodingKeyRd_0_r0_lF1KL_qd_0_mfp\">K<\/ref.generic_type_param> : <ref.protocol usr=\"s:s9CodingKeyP\">CodingKey<\/ref.protocol><\/decl.generic_type_requirement><\/decl.function.method.instance>",
            "key.groupname" : "Misc",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 185,
            "key.line" : 40,
            "key.name" : "fwEncode(_:for:)",
            "key.namelength" : 60,
            "key.nameoffset" : 932,
            "key.offset" : 927,
            "key.parsed_declaration" : "func fwEncode<T: Encodable, K: CodingKey>(_ value: T, for key: K) throws",
            "key.parsed_scope.end" : 43,
            "key.parsed_scope.start" : 40,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s7EncoderP11FWFrameworkE8fwEncode_3foryqd___SStKSERd__lF\">fwEncode&lt;T&gt;(_: T, for: String) throws where T : Encodable<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s7EncoderP11FWFrameworkE8fwEncode_3for5usingy10Foundation4DateV_SSqd__tKAC05FWAnyH9FormatterRd__lF\">fwEncode&lt;F&gt;(_: Date, for: String, using: F) throws where F : FWAnyDateFormatter<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s7EncoderP11FWFrameworkE8fwEncode_3for5usingy10Foundation4DateV_qd__qd_0_tKs9CodingKeyRd__AC05FWAnyH9FormatterRd_0_r0_lF\">fwEncode&lt;K, F&gt;(_: Date, for: K, using: F) throws where K : CodingKey, F : FWAnyDateFormatter<\/RelatedName>"
              }
            ],
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>T : <Type usr=\"s:SE\">Encodable<\/Type><\/Declaration>",
                "key.column" : 19,
                "key.decl_lang" : "source.lang.swift",
                "key.elements" : [
                  {
                    "key.kind" : "source.lang.swift.structure.elem.typeref",
                    "key.length" : 9,
                    "key.offset" : 944
                  }
                ],
                "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWEncode.swift",
                "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>T<\/decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:SE\">Encodable<\/ref.protocol><\/decl.generic_type_param.constraint><\/decl.generic_type_param>",
                "key.groupname" : "Misc",
                "key.inheritedtypes" : [
                  {
                    "key.name" : "Encodable"
                  }
                ],
                "key.kind" : "source.lang.swift.decl.generic_type_param",
                "key.length" : 12,
                "key.line" : 40,
                "key.name" : "T",
                "key.namelength" : 1,
                "key.nameoffset" : 941,
                "key.offset" : 941,
                "key.parsed_declaration" : "func fwEncode<T: Encodable",
                "key.parsed_scope.end" : 40,
                "key.parsed_scope.start" : 40,
                "key.typename" : "T.Type",
                "key.typeusr" : "$sqd__mD",
                "key.usr" : "s:s7EncoderP11FWFrameworkE8fwEncode_3foryqd___qd_0_tKSERd__s9CodingKeyRd_0_r0_lF1TL_qd__mfp"
              },
              {
                "key.annotated_decl" : "<Declaration>K : <Type usr=\"s:s9CodingKeyP\">CodingKey<\/Type><\/Declaration>",
                "key.column" : 33,
                "key.decl_lang" : "source.lang.swift",
                "key.elements" : [
                  {
                    "key.kind" : "source.lang.swift.structure.elem.typeref",
                    "key.length" : 9,
                    "key.offset" : 958
                  }
                ],
                "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWEncode.swift",
                "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>K<\/decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:s9CodingKeyP\">CodingKey<\/ref.protocol><\/decl.generic_type_param.constraint><\/decl.generic_type_param>",
                "key.groupname" : "Misc",
                "key.inheritedtypes" : [
                  {
                    "key.name" : "CodingKey"
                  }
                ],
                "key.kind" : "source.lang.swift.decl.generic_type_param",
                "key.length" : 12,
                "key.line" : 40,
                "key.name" : "K",
                "key.namelength" : 1,
                "key.nameoffset" : 955,
                "key.offset" : 955,
                "key.parsed_declaration" : "func fwEncode<T: Encodable, K: CodingKey",
                "key.parsed_scope.end" : 40,
                "key.parsed_scope.start" : 40,
                "key.typename" : "K.Type",
                "key.typeusr" : "$sqd_0_mD",
                "key.usr" : "s:s7EncoderP11FWFrameworkE8fwEncode_3foryqd___qd_0_tKSERd__s9CodingKeyRd_0_r0_lF1KL_qd_0_mfp"
              },
              {
                "key.annotated_decl" : "<Declaration>var container: <Type usr=\"s:s22KeyedEncodingContainerV\">KeyedEncodingContainer<\/Type>&lt;<Type usr=\"s:s7EncoderP11FWFrameworkE8fwEncode_3foryqd___qd_0_tKSERd__s9CodingKeyRd_0_r0_lF1KL_qd_0_mfp\">K<\/Type>&gt;<\/Declaration>",
                "key.column" : 13,
                "key.decl_lang" : "source.lang.swift",
                "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWEncode.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>container<\/decl.name>: <decl.var.type><ref.struct usr=\"s:s22KeyedEncodingContainerV\">KeyedEncodingContainer<\/ref.struct>&lt;<ref.generic_type_param usr=\"s:s7EncoderP11FWFrameworkE8fwEncode_3foryqd___qd_0_tKSERd__s9CodingKeyRd_0_r0_lF1KL_qd_0_mfp\">K<\/ref.generic_type_param>&gt;<\/decl.var.type><\/decl.var.local>",
                "key.groupname" : "Misc",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 47,
                "key.line" : 41,
                "key.name" : "container",
                "key.namelength" : 9,
                "key.nameoffset" : 1014,
                "key.offset" : 1010,
                "key.parsed_declaration" : "var container = self.container(keyedBy: K.self)",
                "key.parsed_scope.end" : 41,
                "key.parsed_scope.start" : 41,
                "key.typename" : "KeyedEncodingContainer<K>",
                "key.typeusr" : "$ss22KeyedEncodingContainerVyqd_0_GD",
                "key.usr" : "s:s7EncoderP11FWFrameworkE8fwEncode_3foryqd___qd_0_tKSERd__s9CodingKeyRd_0_r0_lF9containerL_s22KeyedEncodingContainerVyqd_0_Gvp"
              }
            ],
            "key.typename" : "<Self, T, K where Self : Encoder, T : Encodable, K : CodingKey> (Self) -> (T, K) throws -> ()",
            "key.typeusr" : "$s_3foryqd___qd_0_tKcSERd__s9CodingKeyRd_0_r0_luD",
            "key.usr" : "s:s7EncoderP11FWFrameworkE8fwEncode_3foryqd___qd_0_tKSERd__s9CodingKeyRd_0_r0_lF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>func fwEncode&lt;F&gt;(_ date: <Type usr=\"s:10Foundation4DateV\">Date<\/Type>, for key: <Type usr=\"s:SS\">String<\/Type>, using formatter: <Type usr=\"s:s7EncoderP11FWFrameworkE8fwEncode_3for5usingy10Foundation4DateV_SSqd__tKAC05FWAnyH9FormatterRd__lF1FL_qd__mfp\">F<\/Type>) throws where <Type usr=\"s:s7EncoderP11FWFrameworkE8fwEncode_3for5usingy10Foundation4DateV_SSqd__tKAC05FWAnyH9FormatterRd__lF1FL_qd__mfp\">F<\/Type> : <Type usr=\"s:11FWFramework18FWAnyDateFormatterP\">FWAnyDateFormatter<\/Type><\/Declaration>",
            "key.bodylength" : 76,
            "key.bodyoffset" : 1214,
            "key.column" : 10,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWEncode.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>fwEncode<\/decl.name>&lt;<decl.generic_type_param usr=\"s:s7EncoderP11FWFrameworkE8fwEncode_3for5usingy10Foundation4DateV_SSqd__tKAC05FWAnyH9FormatterRd__lF1FL_qd__mfp\"><decl.generic_type_param.name>F<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>date<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:10Foundation4DateV\">Date<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>for<\/decl.var.parameter.argument_label> <decl.var.parameter.name>key<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>using<\/decl.var.parameter.argument_label> <decl.var.parameter.name>formatter<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:s7EncoderP11FWFrameworkE8fwEncode_3for5usingy10Foundation4DateV_SSqd__tKAC05FWAnyH9FormatterRd__lF1FL_qd__mfp\">F<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement><ref.generic_type_param usr=\"s:s7EncoderP11FWFrameworkE8fwEncode_3for5usingy10Foundation4DateV_SSqd__tKAC05FWAnyH9FormatterRd__lF1FL_qd__mfp\">F<\/ref.generic_type_param> : <ref.protocol usr=\"s:11FWFramework18FWAnyDateFormatterP\">FWAnyDateFormatter<\/ref.protocol><\/decl.generic_type_requirement><\/decl.function.method.instance>",
            "key.groupname" : "Misc",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 173,
            "key.line" : 45,
            "key.name" : "fwEncode(_:for:using:)",
            "key.namelength" : 82,
            "key.nameoffset" : 1123,
            "key.offset" : 1118,
            "key.parsed_declaration" : "func fwEncode<F: FWAnyDateFormatter>(_ date: Date, for key: String, using formatter: F) throws",
            "key.parsed_scope.end" : 47,
            "key.parsed_scope.start" : 45,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s7EncoderP11FWFrameworkE8fwEncode_3foryqd___SStKSERd__lF\">fwEncode&lt;T&gt;(_: T, for: String) throws where T : Encodable<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s7EncoderP11FWFrameworkE8fwEncode_3foryqd___qd_0_tKSERd__s9CodingKeyRd_0_r0_lF\">fwEncode&lt;T, K&gt;(_: T, for: K) throws where T : Encodable, K : CodingKey<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s7EncoderP11FWFrameworkE8fwEncode_3for5usingy10Foundation4DateV_qd__qd_0_tKs9CodingKeyRd__AC05FWAnyH9FormatterRd_0_r0_lF\">fwEncode&lt;K, F&gt;(_: Date, for: K, using: F) throws where K : CodingKey, F : FWAnyDateFormatter<\/RelatedName>"
              }
            ],
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>F : <Type usr=\"s:11FWFramework18FWAnyDateFormatterP\">FWAnyDateFormatter<\/Type><\/Declaration>",
                "key.column" : 19,
                "key.decl_lang" : "source.lang.swift",
                "key.elements" : [
                  {
                    "key.kind" : "source.lang.swift.structure.elem.typeref",
                    "key.length" : 18,
                    "key.offset" : 1135
                  }
                ],
                "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWEncode.swift",
                "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>F<\/decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:11FWFramework18FWAnyDateFormatterP\">FWAnyDateFormatter<\/ref.protocol><\/decl.generic_type_param.constraint><\/decl.generic_type_param>",
                "key.groupname" : "Misc",
                "key.inheritedtypes" : [
                  {
                    "key.name" : "FWAnyDateFormatter"
                  }
                ],
                "key.kind" : "source.lang.swift.decl.generic_type_param",
                "key.length" : 21,
                "key.line" : 45,
                "key.name" : "F",
                "key.namelength" : 1,
                "key.nameoffset" : 1132,
                "key.offset" : 1132,
                "key.parsed_declaration" : "func fwEncode<F: FWAnyDateFormatter",
                "key.parsed_scope.end" : 45,
                "key.parsed_scope.start" : 45,
                "key.typename" : "F.Type",
                "key.typeusr" : "$sqd__mD",
                "key.usr" : "s:s7EncoderP11FWFrameworkE8fwEncode_3for5usingy10Foundation4DateV_SSqd__tKAC05FWAnyH9FormatterRd__lF1FL_qd__mfp"
              }
            ],
            "key.typename" : "<Self, F where Self : Encoder, F : FWAnyDateFormatter> (Self) -> (Date, String, F) throws -> ()",
            "key.typeusr" : "$s_3for5usingy10Foundation4DateV_SSqd__tKc11FWFramework05FWAnyD9FormatterRd__luD",
            "key.usr" : "s:s7EncoderP11FWFrameworkE8fwEncode_3for5usingy10Foundation4DateV_SSqd__tKAC05FWAnyH9FormatterRd__lF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>func fwEncode&lt;K, F&gt;(_ date: <Type usr=\"s:10Foundation4DateV\">Date<\/Type>, for key: <Type usr=\"s:s7EncoderP11FWFrameworkE8fwEncode_3for5usingy10Foundation4DateV_qd__qd_0_tKs9CodingKeyRd__AC05FWAnyH9FormatterRd_0_r0_lF1KL_qd__mfp\">K<\/Type>, using formatter: <Type usr=\"s:s7EncoderP11FWFrameworkE8fwEncode_3for5usingy10Foundation4DateV_qd__qd_0_tKs9CodingKeyRd__AC05FWAnyH9FormatterRd_0_r0_lF1FL_qd_0_mfp\">F<\/Type>) throws where <Type usr=\"s:s7EncoderP11FWFrameworkE8fwEncode_3for5usingy10Foundation4DateV_qd__qd_0_tKs9CodingKeyRd__AC05FWAnyH9FormatterRd_0_r0_lF1KL_qd__mfp\">K<\/Type> : <Type usr=\"s:s9CodingKeyP\">CodingKey<\/Type>, <Type usr=\"s:s7EncoderP11FWFrameworkE8fwEncode_3for5usingy10Foundation4DateV_qd__qd_0_tKs9CodingKeyRd__AC05FWAnyH9FormatterRd_0_r0_lF1FL_qd_0_mfp\">F<\/Type> : <Type usr=\"s:11FWFramework18FWAnyDateFormatterP\">FWAnyDateFormatter<\/Type><\/Declaration>",
            "key.bodylength" : 94,
            "key.bodyoffset" : 1402,
            "key.column" : 10,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWEncode.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>fwEncode<\/decl.name>&lt;<decl.generic_type_param usr=\"s:s7EncoderP11FWFrameworkE8fwEncode_3for5usingy10Foundation4DateV_qd__qd_0_tKs9CodingKeyRd__AC05FWAnyH9FormatterRd_0_r0_lF1KL_qd__mfp\"><decl.generic_type_param.name>K<\/decl.generic_type_param.name><\/decl.generic_type_param>, <decl.generic_type_param usr=\"s:s7EncoderP11FWFrameworkE8fwEncode_3for5usingy10Foundation4DateV_qd__qd_0_tKs9CodingKeyRd__AC05FWAnyH9FormatterRd_0_r0_lF1FL_qd_0_mfp\"><decl.generic_type_param.name>F<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>date<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:10Foundation4DateV\">Date<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>for<\/decl.var.parameter.argument_label> <decl.var.parameter.name>key<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:s7EncoderP11FWFrameworkE8fwEncode_3for5usingy10Foundation4DateV_qd__qd_0_tKs9CodingKeyRd__AC05FWAnyH9FormatterRd_0_r0_lF1KL_qd__mfp\">K<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>using<\/decl.var.parameter.argument_label> <decl.var.parameter.name>formatter<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:s7EncoderP11FWFrameworkE8fwEncode_3for5usingy10Foundation4DateV_qd__qd_0_tKs9CodingKeyRd__AC05FWAnyH9FormatterRd_0_r0_lF1FL_qd_0_mfp\">F<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement><ref.generic_type_param usr=\"s:s7EncoderP11FWFrameworkE8fwEncode_3for5usingy10Foundation4DateV_qd__qd_0_tKs9CodingKeyRd__AC05FWAnyH9FormatterRd_0_r0_lF1KL_qd__mfp\">K<\/ref.generic_type_param> : <ref.protocol usr=\"s:s9CodingKeyP\">CodingKey<\/ref.protocol><\/decl.generic_type_requirement>, <decl.generic_type_requirement><ref.generic_type_param usr=\"s:s7EncoderP11FWFrameworkE8fwEncode_3for5usingy10Foundation4DateV_qd__qd_0_tKs9CodingKeyRd__AC05FWAnyH9FormatterRd_0_r0_lF1FL_qd_0_mfp\">F<\/ref.generic_type_param> : <ref.protocol usr=\"s:11FWFramework18FWAnyDateFormatterP\">FWAnyDateFormatter<\/ref.protocol><\/decl.generic_type_requirement><\/decl.function.method.instance>",
            "key.groupname" : "Misc",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 200,
            "key.line" : 49,
            "key.name" : "fwEncode(_:for:using:)",
            "key.namelength" : 91,
            "key.nameoffset" : 1302,
            "key.offset" : 1297,
            "key.parsed_declaration" : "func fwEncode<K: CodingKey, F: FWAnyDateFormatter>(_ date: Date, for key: K, using formatter: F) throws",
            "key.parsed_scope.end" : 52,
            "key.parsed_scope.start" : 49,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s7EncoderP11FWFrameworkE8fwEncode_3foryqd___SStKSERd__lF\">fwEncode&lt;T&gt;(_: T, for: String) throws where T : Encodable<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s7EncoderP11FWFrameworkE8fwEncode_3foryqd___qd_0_tKSERd__s9CodingKeyRd_0_r0_lF\">fwEncode&lt;T, K&gt;(_: T, for: K) throws where T : Encodable, K : CodingKey<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s7EncoderP11FWFrameworkE8fwEncode_3for5usingy10Foundation4DateV_SSqd__tKAC05FWAnyH9FormatterRd__lF\">fwEncode&lt;F&gt;(_: Date, for: String, using: F) throws where F : FWAnyDateFormatter<\/RelatedName>"
              }
            ],
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>K : <Type usr=\"s:s9CodingKeyP\">CodingKey<\/Type><\/Declaration>",
                "key.column" : 19,
                "key.decl_lang" : "source.lang.swift",
                "key.elements" : [
                  {
                    "key.kind" : "source.lang.swift.structure.elem.typeref",
                    "key.length" : 9,
                    "key.offset" : 1314
                  }
                ],
                "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWEncode.swift",
                "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>K<\/decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:s9CodingKeyP\">CodingKey<\/ref.protocol><\/decl.generic_type_param.constraint><\/decl.generic_type_param>",
                "key.groupname" : "Misc",
                "key.inheritedtypes" : [
                  {
                    "key.name" : "CodingKey"
                  }
                ],
                "key.kind" : "source.lang.swift.decl.generic_type_param",
                "key.length" : 12,
                "key.line" : 49,
                "key.name" : "K",
                "key.namelength" : 1,
                "key.nameoffset" : 1311,
                "key.offset" : 1311,
                "key.parsed_declaration" : "func fwEncode<K: CodingKey",
                "key.parsed_scope.end" : 49,
                "key.parsed_scope.start" : 49,
                "key.typename" : "K.Type",
                "key.typeusr" : "$sqd__mD",
                "key.usr" : "s:s7EncoderP11FWFrameworkE8fwEncode_3for5usingy10Foundation4DateV_qd__qd_0_tKs9CodingKeyRd__AC05FWAnyH9FormatterRd_0_r0_lF1KL_qd__mfp"
              },
              {
                "key.annotated_decl" : "<Declaration>F : <Type usr=\"s:11FWFramework18FWAnyDateFormatterP\">FWAnyDateFormatter<\/Type><\/Declaration>",
                "key.column" : 33,
                "key.decl_lang" : "source.lang.swift",
                "key.elements" : [
                  {
                    "key.kind" : "source.lang.swift.structure.elem.typeref",
                    "key.length" : 18,
                    "key.offset" : 1328
                  }
                ],
                "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWEncode.swift",
                "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>F<\/decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:11FWFramework18FWAnyDateFormatterP\">FWAnyDateFormatter<\/ref.protocol><\/decl.generic_type_param.constraint><\/decl.generic_type_param>",
                "key.groupname" : "Misc",
                "key.inheritedtypes" : [
                  {
                    "key.name" : "FWAnyDateFormatter"
                  }
                ],
                "key.kind" : "source.lang.swift.decl.generic_type_param",
                "key.length" : 21,
                "key.line" : 49,
                "key.name" : "F",
                "key.namelength" : 1,
                "key.nameoffset" : 1325,
                "key.offset" : 1325,
                "key.parsed_declaration" : "func fwEncode<K: CodingKey, F: FWAnyDateFormatter",
                "key.parsed_scope.end" : 49,
                "key.parsed_scope.start" : 49,
                "key.typename" : "F.Type",
                "key.typeusr" : "$sqd_0_mD",
                "key.usr" : "s:s7EncoderP11FWFrameworkE8fwEncode_3for5usingy10Foundation4DateV_qd__qd_0_tKs9CodingKeyRd__AC05FWAnyH9FormatterRd_0_r0_lF1FL_qd_0_mfp"
              },
              {
                "key.annotated_decl" : "<Declaration>let string: <Type usr=\"s:SS\">String<\/Type><\/Declaration>",
                "key.column" : 13,
                "key.decl_lang" : "source.lang.swift",
                "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWEncode.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>string<\/decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.type><\/decl.var.local>",
                "key.groupname" : "Misc",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 41,
                "key.line" : 50,
                "key.name" : "string",
                "key.namelength" : 6,
                "key.nameoffset" : 1415,
                "key.offset" : 1411,
                "key.parsed_declaration" : "let string = formatter.string(from: date)",
                "key.parsed_scope.end" : 50,
                "key.parsed_scope.start" : 50,
                "key.typename" : "String",
                "key.typeusr" : "$sSSD",
                "key.usr" : "s:s7EncoderP11FWFrameworkE8fwEncode_3for5usingy10Foundation4DateV_qd__qd_0_tKs9CodingKeyRd__AC05FWAnyH9FormatterRd_0_r0_lF6stringL_SSvp"
              }
            ],
            "key.typename" : "<Self, K, F where Self : Encoder, K : CodingKey, F : FWAnyDateFormatter> (Self) -> (Date, K, F) throws -> ()",
            "key.typeusr" : "$s_3for5usingy10Foundation4DateV_qd__qd_0_tKcs9CodingKeyRd__11FWFramework05FWAnyD9FormatterRd_0_r0_luD",
            "key.usr" : "s:s7EncoderP11FWFrameworkE8fwEncode_3for5usingy10Foundation4DateV_qd__qd_0_tKs9CodingKeyRd__AC05FWAnyH9FormatterRd_0_r0_lF"
          }
        ],
        "key.typename" : "Encoder.Protocol",
        "key.typeusr" : "$ss7Encoder_pmD",
        "key.usr" : "s:s7EncoderP"
      },
      {
        "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
        "key.length" : 20,
        "key.name" : "MARK: - FWAnyDecoder",
        "key.namelength" : 0,
        "key.nameoffset" : 0,
        "key.offset" : 1504
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public protocol FWAnyDecoder<\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 1526
          }
        ],
        "key.bodylength" : 76,
        "key.bodyoffset" : 1556,
        "key.column" : 17,
        "key.decl_lang" : "source.lang.swift",
        "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWEncode.swift",
        "key.fully_annotated_decl" : "<decl.protocol><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>protocol<\/syntaxtype.keyword> <decl.name>FWAnyDecoder<\/decl.name><\/decl.protocol>",
        "key.kind" : "source.lang.swift.decl.protocol",
        "key.length" : 100,
        "key.line" : 57,
        "key.name" : "FWAnyDecoder",
        "key.namelength" : 12,
        "key.nameoffset" : 1542,
        "key.offset" : 1533,
        "key.parsed_declaration" : "public protocol FWAnyDecoder",
        "key.parsed_scope.end" : 59,
        "key.parsed_scope.start" : 57,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>func decode&lt;T&gt;(_ type: <Type usr=\"s:11FWFramework12FWAnyDecoderP6decode_4fromqd__qd__m_10Foundation4DataVtKSeRd__lF1TL_qd__mfp\">T<\/Type>.Type, from data: <Type usr=\"s:10Foundation4DataV\">Data<\/Type>) throws -&gt; <Type usr=\"s:11FWFramework12FWAnyDecoderP6decode_4fromqd__qd__m_10Foundation4DataVtKSeRd__lF1TL_qd__mfp\">T<\/Type> where <Type usr=\"s:11FWFramework12FWAnyDecoderP6decode_4fromqd__qd__m_10Foundation4DataVtKSeRd__lF1TL_qd__mfp\">T<\/Type> : <Type usr=\"s:Se\">Decodable<\/Type><\/Declaration>",
            "key.column" : 10,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWEncode.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>decode<\/decl.name>&lt;<decl.generic_type_param usr=\"s:11FWFramework12FWAnyDecoderP6decode_4fromqd__qd__m_10Foundation4DataVtKSeRd__lF1TL_qd__mfp\"><decl.generic_type_param.name>T<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>type<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:11FWFramework12FWAnyDecoderP6decode_4fromqd__qd__m_10Foundation4DataVtKSeRd__lF1TL_qd__mfp\">T<\/ref.generic_type_param>.Type<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>from<\/decl.var.parameter.argument_label> <decl.var.parameter.name>data<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:10Foundation4DataV\">Data<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:11FWFramework12FWAnyDecoderP6decode_4fromqd__qd__m_10Foundation4DataVtKSeRd__lF1TL_qd__mfp\">T<\/ref.generic_type_param><\/decl.function.returntype> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement><ref.generic_type_param usr=\"s:11FWFramework12FWAnyDecoderP6decode_4fromqd__qd__m_10Foundation4DataVtKSeRd__lF1TL_qd__mfp\">T<\/ref.generic_type_param> : <ref.protocol usr=\"s:Se\">Decodable<\/ref.protocol><\/decl.generic_type_requirement><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 70,
            "key.line" : 58,
            "key.name" : "decode(_:from:)",
            "key.namelength" : 53,
            "key.nameoffset" : 1566,
            "key.offset" : 1561,
            "key.parsed_declaration" : "func decode<T: Decodable>(_ type: T.Type, from data: Data) throws -> T",
            "key.parsed_scope.end" : 58,
            "key.parsed_scope.start" : 58,
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>T : <Type usr=\"s:Se\">Decodable<\/Type><\/Declaration>",
                "key.column" : 17,
                "key.decl_lang" : "source.lang.swift",
                "key.elements" : [
                  {
                    "key.kind" : "source.lang.swift.structure.elem.typeref",
                    "key.length" : 9,
                    "key.offset" : 1576
                  }
                ],
                "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWEncode.swift",
                "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>T<\/decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:Se\">Decodable<\/ref.protocol><\/decl.generic_type_param.constraint><\/decl.generic_type_param>",
                "key.inheritedtypes" : [
                  {
                    "key.name" : "Decodable"
                  }
                ],
                "key.kind" : "source.lang.swift.decl.generic_type_param",
                "key.length" : 12,
                "key.line" : 58,
                "key.name" : "T",
                "key.namelength" : 1,
                "key.nameoffset" : 1573,
                "key.offset" : 1573,
                "key.parsed_declaration" : "func decode<T: Decodable",
                "key.parsed_scope.end" : 58,
                "key.parsed_scope.start" : 58,
                "key.typename" : "T.Type",
                "key.typeusr" : "$sqd__mD",
                "key.usr" : "s:11FWFramework12FWAnyDecoderP6decode_4fromqd__qd__m_10Foundation4DataVtKSeRd__lF1TL_qd__mfp"
              }
            ],
            "key.typename" : "<Self, T where Self : FWAnyDecoder, T : Decodable> (Self) -> (T.Type, Data) throws -> T",
            "key.typeusr" : "$s_4fromqd__qd__m_10Foundation4DataVtKcSeRd__luD",
            "key.usr" : "s:11FWFramework12FWAnyDecoderP6decode_4fromqd__qd__m_10Foundation4DataVtKSeRd__lF"
          }
        ],
        "key.typename" : "FWAnyDecoder.Protocol",
        "key.typeusr" : "$s11FWFramework12FWAnyDecoder_pmD",
        "key.usr" : "s:11FWFramework12FWAnyDecoderP"
      },
      {
        "key.annotated_decl" : "<Declaration>class JSONDecoder<\/Declaration>",
        "key.bodylength" : 0,
        "key.bodyoffset" : 1672,
        "key.decl_lang" : "source.lang.swift",
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 12,
            "key.offset" : 1658
          }
        ],
        "key.fully_annotated_decl" : "<decl.class><syntaxtype.keyword>class<\/syntaxtype.keyword> <decl.name>JSONDecoder<\/decl.name><\/decl.class>",
        "key.inheritedtypes" : [
          {
            "key.name" : "FWAnyDecoder"
          }
        ],
        "key.is_system" : true,
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 38,
        "key.modulename" : "Foundation",
        "key.name" : "JSONDecoder",
        "key.namelength" : 11,
        "key.nameoffset" : 1645,
        "key.offset" : 1635,
        "key.parsed_declaration" : "extension JSONDecoder: FWAnyDecoder",
        "key.parsed_scope.end" : 61,
        "key.parsed_scope.start" : 61,
        "key.typename" : "JSONDecoder.Type",
        "key.typeusr" : "$s10Foundation11JSONDecoderCmD",
        "key.usr" : "s:10Foundation11JSONDecoderC"
      },
      {
        "key.annotated_decl" : "<Declaration>class PropertyListDecoder<\/Declaration>",
        "key.bodylength" : 0,
        "key.bodyoffset" : 1762,
        "key.decl_lang" : "source.lang.swift",
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 12,
            "key.offset" : 1748
          }
        ],
        "key.fully_annotated_decl" : "<decl.class><syntaxtype.keyword>class<\/syntaxtype.keyword> <decl.name>PropertyListDecoder<\/decl.name><\/decl.class>",
        "key.inheritedtypes" : [
          {
            "key.name" : "FWAnyDecoder"
          }
        ],
        "key.is_system" : true,
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 46,
        "key.modulename" : "Foundation",
        "key.name" : "PropertyListDecoder",
        "key.namelength" : 19,
        "key.nameoffset" : 1727,
        "key.offset" : 1717,
        "key.parsed_declaration" : "extension PropertyListDecoder: FWAnyDecoder",
        "key.parsed_scope.end" : 64,
        "key.parsed_scope.start" : 64,
        "key.typename" : "PropertyListDecoder.Type",
        "key.typeusr" : "$s10Foundation19PropertyListDecoderCmD",
        "key.usr" : "s:10Foundation19PropertyListDecoderC"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>@frozen struct Data : <Type usr=\"s:10Foundation20ReferenceConvertibleP\">ReferenceConvertible<\/Type>, <Type usr=\"s:SQ\">Equatable<\/Type>, <Type usr=\"s:SH\">Hashable<\/Type>, <Type usr=\"s:Sk\">RandomAccessCollection<\/Type>, <Type usr=\"s:SM\">MutableCollection<\/Type>, <Type usr=\"s:Sm\">RangeReplaceableCollection<\/Type>, <Type usr=\"s:10Foundation19MutableDataProtocolP\">MutableDataProtocol<\/Type>, <Type usr=\"s:10Foundation15ContiguousBytesP\">ContiguousBytes<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 1772
          }
        ],
        "key.bodylength" : 210,
        "key.bodyoffset" : 1795,
        "key.decl_lang" : "source.lang.swift",
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@frozen<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>Data<\/decl.name> : <ref.protocol usr=\"s:10Foundation20ReferenceConvertibleP\">ReferenceConvertible<\/ref.protocol>, <ref.protocol usr=\"s:SQ\">Equatable<\/ref.protocol>, <ref.protocol usr=\"s:SH\">Hashable<\/ref.protocol>, <ref.protocol usr=\"s:Sk\">RandomAccessCollection<\/ref.protocol>, <ref.protocol usr=\"s:SM\">MutableCollection<\/ref.protocol>, <ref.protocol usr=\"s:Sm\">RangeReplaceableCollection<\/ref.protocol>, <ref.protocol usr=\"s:10Foundation19MutableDataProtocolP\">MutableDataProtocol<\/ref.protocol>, <ref.protocol usr=\"s:10Foundation15ContiguousBytesP\">ContiguousBytes<\/ref.protocol><\/decl.struct>",
        "key.is_system" : true,
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 227,
        "key.modulename" : "Foundation",
        "key.name" : "Data",
        "key.namelength" : 4,
        "key.nameoffset" : 1789,
        "key.offset" : 1779,
        "key.parsed_declaration" : "public extension Data",
        "key.parsed_scope.end" : 72,
        "key.parsed_scope.start" : 67,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>func fwDecoded&lt;T&gt;(as type: <Type usr=\"s:10Foundation4DataV11FWFrameworkE9fwDecoded2as5usingxxm_AD12FWAnyDecoder_ptKSeRzlF1TL_xmfp\">T<\/Type>.Type = T.self, using decoder: <Type usr=\"s:11FWFramework12FWAnyDecoderP\">FWAnyDecoder<\/Type> = JSONDecoder()) throws -&gt; <Type usr=\"s:10Foundation4DataV11FWFrameworkE9fwDecoded2as5usingxxm_AD12FWAnyDecoder_ptKSeRzlF1TL_xmfp\">T<\/Type> where <Type usr=\"s:10Foundation4DataV11FWFrameworkE9fwDecoded2as5usingxxm_AD12FWAnyDecoder_ptKSeRzlF1TL_xmfp\">T<\/Type> : <Type usr=\"s:Se\">Decodable<\/Type><\/Declaration>",
            "key.bodylength" : 59,
            "key.bodyoffset" : 1944,
            "key.column" : 10,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWEncode.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>fwDecoded<\/decl.name>&lt;<decl.generic_type_param usr=\"s:10Foundation4DataV11FWFrameworkE9fwDecoded2as5usingxxm_AD12FWAnyDecoder_ptKSeRzlF1TL_xmfp\"><decl.generic_type_param.name>T<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>as<\/decl.var.parameter.argument_label> <decl.var.parameter.name>type<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:10Foundation4DataV11FWFrameworkE9fwDecoded2as5usingxxm_AD12FWAnyDecoder_ptKSeRzlF1TL_xmfp\">T<\/ref.generic_type_param>.Type<\/decl.var.parameter.type> = T.self<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>using<\/decl.var.parameter.argument_label> <decl.var.parameter.name>decoder<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.protocol usr=\"s:11FWFramework12FWAnyDecoderP\">FWAnyDecoder<\/ref.protocol><\/decl.var.parameter.type> = JSONDecoder()<\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:10Foundation4DataV11FWFrameworkE9fwDecoded2as5usingxxm_AD12FWAnyDecoder_ptKSeRzlF1TL_xmfp\">T<\/ref.generic_type_param><\/decl.function.returntype> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement><ref.generic_type_param usr=\"s:10Foundation4DataV11FWFrameworkE9fwDecoded2as5usingxxm_AD12FWAnyDecoder_ptKSeRzlF1TL_xmfp\">T<\/ref.generic_type_param> : <ref.protocol usr=\"s:Se\">Decodable<\/ref.protocol><\/decl.generic_type_requirement><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 204,
            "key.line" : 68,
            "key.name" : "fwDecoded(as:using:)",
            "key.namelength" : 125,
            "key.nameoffset" : 1805,
            "key.offset" : 1800,
            "key.parsed_declaration" : "func fwDecoded<T: Decodable>(as type: T.Type = T.self,\n                           using decoder: FWAnyDecoder = JSONDecoder()) throws -> T",
            "key.parsed_scope.end" : 71,
            "key.parsed_scope.start" : 68,
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>T : <Type usr=\"s:Se\">Decodable<\/Type><\/Declaration>",
                "key.column" : 20,
                "key.decl_lang" : "source.lang.swift",
                "key.elements" : [
                  {
                    "key.kind" : "source.lang.swift.structure.elem.typeref",
                    "key.length" : 9,
                    "key.offset" : 1818
                  }
                ],
                "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWEncode.swift",
                "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>T<\/decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:Se\">Decodable<\/ref.protocol><\/decl.generic_type_param.constraint><\/decl.generic_type_param>",
                "key.inheritedtypes" : [
                  {
                    "key.name" : "Decodable"
                  }
                ],
                "key.kind" : "source.lang.swift.decl.generic_type_param",
                "key.length" : 12,
                "key.line" : 68,
                "key.name" : "T",
                "key.namelength" : 1,
                "key.nameoffset" : 1815,
                "key.offset" : 1815,
                "key.parsed_declaration" : "func fwDecoded<T: Decodable",
                "key.parsed_scope.end" : 68,
                "key.parsed_scope.start" : 68,
                "key.typename" : "T.Type",
                "key.typeusr" : "$sxmD",
                "key.usr" : "s:10Foundation4DataV11FWFrameworkE9fwDecoded2as5usingxxm_AD12FWAnyDecoder_ptKSeRzlF1TL_xmfp"
              }
            ],
            "key.typename" : "<T where T : Decodable> (Data) -> (T.Type, FWAnyDecoder) throws -> T",
            "key.typeusr" : "$s2as5usingxxm_11FWFramework12FWAnyDecoder_ptKcSeRzluD",
            "key.usr" : "s:10Foundation4DataV11FWFrameworkE9fwDecoded2as5usingxxm_AD12FWAnyDecoder_ptKSeRzlF"
          }
        ],
        "key.typename" : "Data.Type",
        "key.typeusr" : "$s10Foundation4DataVmD",
        "key.usr" : "s:10Foundation4DataV"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>protocol Decoder<\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 2008
          }
        ],
        "key.bodylength" : 4543,
        "key.bodyoffset" : 2034,
        "key.decl_lang" : "source.lang.swift",
        "key.doc.declaration" : "protocol Decoder",
        "key.doc.full_as_xml" : "<Class><Name>Decoder<\/Name><USR>s:s7DecoderP<\/USR><Declaration>protocol Decoder<\/Declaration><CommentParts><Abstract><Para>A type that can decode values from a native format into in-memory representations.<\/Para><\/Abstract><\/CommentParts><\/Class>",
        "key.doc.name" : "Decoder",
        "key.doc.type" : "Class",
        "key.fully_annotated_decl" : "<decl.protocol><syntaxtype.keyword>protocol<\/syntaxtype.keyword> <decl.name>Decoder<\/decl.name><\/decl.protocol>",
        "key.groupname" : "Misc",
        "key.is_system" : true,
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 4563,
        "key.modulename" : "Swift",
        "key.name" : "Decoder",
        "key.namelength" : 7,
        "key.nameoffset" : 2025,
        "key.offset" : 2015,
        "key.parsed_declaration" : "public extension Decoder",
        "key.parsed_scope.end" : 204,
        "key.parsed_scope.start" : 74,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>func fwDecodeSingle&lt;T&gt;(as type: <Type usr=\"s:s7DecoderP11FWFrameworkE14fwDecodeSingle2asqd__qd__m_tKSeRd__lF1TL_qd__mfp\">T<\/Type>.Type = T.self) throws -&gt; <Type usr=\"s:s7DecoderP11FWFrameworkE14fwDecodeSingle2asqd__qd__m_tKSeRd__lF1TL_qd__mfp\">T<\/Type> where <Type usr=\"s:s7DecoderP11FWFrameworkE14fwDecodeSingle2asqd__qd__m_tKSeRd__lF1TL_qd__mfp\">T<\/Type> : <Type usr=\"s:Se\">Decodable<\/Type><\/Declaration>",
            "key.bodylength" : 98,
            "key.bodyoffset" : 2112,
            "key.column" : 10,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWEncode.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>fwDecodeSingle<\/decl.name>&lt;<decl.generic_type_param usr=\"s:s7DecoderP11FWFrameworkE14fwDecodeSingle2asqd__qd__m_tKSeRd__lF1TL_qd__mfp\"><decl.generic_type_param.name>T<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>as<\/decl.var.parameter.argument_label> <decl.var.parameter.name>type<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:s7DecoderP11FWFrameworkE14fwDecodeSingle2asqd__qd__m_tKSeRd__lF1TL_qd__mfp\">T<\/ref.generic_type_param>.Type<\/decl.var.parameter.type> = T.self<\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:s7DecoderP11FWFrameworkE14fwDecodeSingle2asqd__qd__m_tKSeRd__lF1TL_qd__mfp\">T<\/ref.generic_type_param><\/decl.function.returntype> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement><ref.generic_type_param usr=\"s:s7DecoderP11FWFrameworkE14fwDecodeSingle2asqd__qd__m_tKSeRd__lF1TL_qd__mfp\">T<\/ref.generic_type_param> : <ref.protocol usr=\"s:Se\">Decodable<\/ref.protocol><\/decl.generic_type_requirement><\/decl.function.method.instance>",
            "key.groupname" : "Misc",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 172,
            "key.line" : 75,
            "key.name" : "fwDecodeSingle(as:)",
            "key.namelength" : 54,
            "key.nameoffset" : 2044,
            "key.offset" : 2039,
            "key.parsed_declaration" : "func fwDecodeSingle<T: Decodable>(as type: T.Type = T.self) throws -> T",
            "key.parsed_scope.end" : 78,
            "key.parsed_scope.start" : 75,
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>T : <Type usr=\"s:Se\">Decodable<\/Type><\/Declaration>",
                "key.column" : 25,
                "key.decl_lang" : "source.lang.swift",
                "key.elements" : [
                  {
                    "key.kind" : "source.lang.swift.structure.elem.typeref",
                    "key.length" : 9,
                    "key.offset" : 2062
                  }
                ],
                "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWEncode.swift",
                "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>T<\/decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:Se\">Decodable<\/ref.protocol><\/decl.generic_type_param.constraint><\/decl.generic_type_param>",
                "key.groupname" : "Misc",
                "key.inheritedtypes" : [
                  {
                    "key.name" : "Decodable"
                  }
                ],
                "key.kind" : "source.lang.swift.decl.generic_type_param",
                "key.length" : 12,
                "key.line" : 75,
                "key.name" : "T",
                "key.namelength" : 1,
                "key.nameoffset" : 2059,
                "key.offset" : 2059,
                "key.parsed_declaration" : "func fwDecodeSingle<T: Decodable",
                "key.parsed_scope.end" : 75,
                "key.parsed_scope.start" : 75,
                "key.typename" : "T.Type",
                "key.typeusr" : "$sqd__mD",
                "key.usr" : "s:s7DecoderP11FWFrameworkE14fwDecodeSingle2asqd__qd__m_tKSeRd__lF1TL_qd__mfp"
              },
              {
                "key.annotated_decl" : "<Declaration>let container: <Type usr=\"s:s28SingleValueDecodingContainerP\">SingleValueDecodingContainer<\/Type><\/Declaration>",
                "key.column" : 13,
                "key.decl_lang" : "source.lang.swift",
                "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWEncode.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>container<\/decl.name>: <decl.var.type><ref.protocol usr=\"s:s28SingleValueDecodingContainerP\">SingleValueDecodingContainer<\/ref.protocol><\/decl.var.type><\/decl.var.local>",
                "key.groupname" : "Misc",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 42,
                "key.line" : 76,
                "key.name" : "container",
                "key.namelength" : 9,
                "key.nameoffset" : 2125,
                "key.offset" : 2121,
                "key.parsed_declaration" : "let container = try singleValueContainer()",
                "key.parsed_scope.end" : 76,
                "key.parsed_scope.start" : 76,
                "key.typename" : "SingleValueDecodingContainer",
                "key.typeusr" : "$ss28SingleValueDecodingContainer_pD",
                "key.usr" : "s:s7DecoderP11FWFrameworkE14fwDecodeSingle2asqd__qd__m_tKSeRd__lF9containerL_s0E22ValueDecodingContainer_pvp"
              }
            ],
            "key.typename" : "<Self, T where Self : Decoder, T : Decodable> (Self) -> (T.Type) throws -> T",
            "key.typeusr" : "$s2asqd__qd__m_tKcSeRd__luD",
            "key.usr" : "s:s7DecoderP11FWFrameworkE14fwDecodeSingle2asqd__qd__m_tKSeRd__lF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>func fwDecode&lt;T&gt;(_ key: <Type usr=\"s:SS\">String<\/Type>, as type: <Type usr=\"s:s7DecoderP11FWFrameworkE8fwDecode_2asqd__SS_qd__mtKSeRd__lF1TL_qd__mfp\">T<\/Type>.Type = T.self) throws -&gt; <Type usr=\"s:s7DecoderP11FWFrameworkE8fwDecode_2asqd__SS_qd__mtKSeRd__lF1TL_qd__mfp\">T<\/Type> where <Type usr=\"s:s7DecoderP11FWFrameworkE8fwDecode_2asqd__SS_qd__mtKSeRd__lF1TL_qd__mfp\">T<\/Type> : <Type usr=\"s:Se\">Decodable<\/Type><\/Declaration>",
            "key.bodylength" : 64,
            "key.bodyoffset" : 2299,
            "key.column" : 10,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWEncode.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>fwDecode<\/decl.name>&lt;<decl.generic_type_param usr=\"s:s7DecoderP11FWFrameworkE8fwDecode_2asqd__SS_qd__mtKSeRd__lF1TL_qd__mfp\"><decl.generic_type_param.name>T<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>key<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>as<\/decl.var.parameter.argument_label> <decl.var.parameter.name>type<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:s7DecoderP11FWFrameworkE8fwDecode_2asqd__SS_qd__mtKSeRd__lF1TL_qd__mfp\">T<\/ref.generic_type_param>.Type<\/decl.var.parameter.type> = T.self<\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:s7DecoderP11FWFrameworkE8fwDecode_2asqd__SS_qd__mtKSeRd__lF1TL_qd__mfp\">T<\/ref.generic_type_param><\/decl.function.returntype> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement><ref.generic_type_param usr=\"s:s7DecoderP11FWFrameworkE8fwDecode_2asqd__SS_qd__mtKSeRd__lF1TL_qd__mfp\">T<\/ref.generic_type_param> : <ref.protocol usr=\"s:Se\">Decodable<\/ref.protocol><\/decl.generic_type_requirement><\/decl.function.method.instance>",
            "key.groupname" : "Misc",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 147,
            "key.line" : 80,
            "key.name" : "fwDecode(_:as:)",
            "key.namelength" : 63,
            "key.nameoffset" : 2222,
            "key.offset" : 2217,
            "key.parsed_declaration" : "func fwDecode<T: Decodable>(_ key: String, as type: T.Type = T.self) throws -> T",
            "key.parsed_scope.end" : 82,
            "key.parsed_scope.start" : 80,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s7DecoderP11FWFrameworkE8fwDecode_2asqd__qd_0__qd__mtKSeRd__s9CodingKeyRd_0_r0_lF\">fwDecode&lt;T, K&gt;(_: K, as: T.Type = T.self) throws -&gt; T where T : Decodable, K : CodingKey<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s7DecoderP11FWFrameworkE8fwDecode_5using10Foundation4DateVSS_qd__tKAC05FWAnyG9FormatterRd__lF\">fwDecode&lt;F&gt;(_: String, using: F) throws -&gt; Date where F : FWAnyDateFormatter<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s7DecoderP11FWFrameworkE8fwDecode_5using10Foundation4DateVqd___qd_0_tKs9CodingKeyRd__AC05FWAnyG9FormatterRd_0_r0_lF\">fwDecode&lt;K, F&gt;(_: K, using: F) throws -&gt; Date where K : CodingKey, F : FWAnyDateFormatter<\/RelatedName>"
              }
            ],
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>T : <Type usr=\"s:Se\">Decodable<\/Type><\/Declaration>",
                "key.column" : 19,
                "key.decl_lang" : "source.lang.swift",
                "key.elements" : [
                  {
                    "key.kind" : "source.lang.swift.structure.elem.typeref",
                    "key.length" : 9,
                    "key.offset" : 2234
                  }
                ],
                "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWEncode.swift",
                "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>T<\/decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:Se\">Decodable<\/ref.protocol><\/decl.generic_type_param.constraint><\/decl.generic_type_param>",
                "key.groupname" : "Misc",
                "key.inheritedtypes" : [
                  {
                    "key.name" : "Decodable"
                  }
                ],
                "key.kind" : "source.lang.swift.decl.generic_type_param",
                "key.length" : 12,
                "key.line" : 80,
                "key.name" : "T",
                "key.namelength" : 1,
                "key.nameoffset" : 2231,
                "key.offset" : 2231,
                "key.parsed_declaration" : "func fwDecode<T: Decodable",
                "key.parsed_scope.end" : 80,
                "key.parsed_scope.start" : 80,
                "key.typename" : "T.Type",
                "key.typeusr" : "$sqd__mD",
                "key.usr" : "s:s7DecoderP11FWFrameworkE8fwDecode_2asqd__SS_qd__mtKSeRd__lF1TL_qd__mfp"
              }
            ],
            "key.typename" : "<Self, T where Self : Decoder, T : Decodable> (Self) -> (String, T.Type) throws -> T",
            "key.typeusr" : "$s_2asqd__SS_qd__mtKcSeRd__luD",
            "key.usr" : "s:s7DecoderP11FWFrameworkE8fwDecode_2asqd__SS_qd__mtKSeRd__lF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>func fwDecode&lt;T, K&gt;(_ key: <Type usr=\"s:s7DecoderP11FWFrameworkE8fwDecode_2asqd__qd_0__qd__mtKSeRd__s9CodingKeyRd_0_r0_lF1KL_qd_0_mfp\">K<\/Type>, as type: <Type usr=\"s:s7DecoderP11FWFrameworkE8fwDecode_2asqd__qd_0__qd__mtKSeRd__s9CodingKeyRd_0_r0_lF1TL_qd__mfp\">T<\/Type>.Type = T.self) throws -&gt; <Type usr=\"s:s7DecoderP11FWFrameworkE8fwDecode_2asqd__qd_0__qd__mtKSeRd__s9CodingKeyRd_0_r0_lF1TL_qd__mfp\">T<\/Type> where <Type usr=\"s:s7DecoderP11FWFrameworkE8fwDecode_2asqd__qd_0__qd__mtKSeRd__s9CodingKeyRd_0_r0_lF1TL_qd__mfp\">T<\/Type> : <Type usr=\"s:Se\">Decodable<\/Type>, <Type usr=\"s:s7DecoderP11FWFrameworkE8fwDecode_2asqd__qd_0__qd__mtKSeRd__s9CodingKeyRd_0_r0_lF1KL_qd_0_mfp\">K<\/Type> : <Type usr=\"s:s9CodingKeyP\">CodingKey<\/Type><\/Declaration>",
            "key.bodylength" : 120,
            "key.bodyoffset" : 2461,
            "key.column" : 10,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWEncode.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>fwDecode<\/decl.name>&lt;<decl.generic_type_param usr=\"s:s7DecoderP11FWFrameworkE8fwDecode_2asqd__qd_0__qd__mtKSeRd__s9CodingKeyRd_0_r0_lF1TL_qd__mfp\"><decl.generic_type_param.name>T<\/decl.generic_type_param.name><\/decl.generic_type_param>, <decl.generic_type_param usr=\"s:s7DecoderP11FWFrameworkE8fwDecode_2asqd__qd_0__qd__mtKSeRd__s9CodingKeyRd_0_r0_lF1KL_qd_0_mfp\"><decl.generic_type_param.name>K<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>key<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:s7DecoderP11FWFrameworkE8fwDecode_2asqd__qd_0__qd__mtKSeRd__s9CodingKeyRd_0_r0_lF1KL_qd_0_mfp\">K<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>as<\/decl.var.parameter.argument_label> <decl.var.parameter.name>type<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:s7DecoderP11FWFrameworkE8fwDecode_2asqd__qd_0__qd__mtKSeRd__s9CodingKeyRd_0_r0_lF1TL_qd__mfp\">T<\/ref.generic_type_param>.Type<\/decl.var.parameter.type> = T.self<\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:s7DecoderP11FWFrameworkE8fwDecode_2asqd__qd_0__qd__mtKSeRd__s9CodingKeyRd_0_r0_lF1TL_qd__mfp\">T<\/ref.generic_type_param><\/decl.function.returntype> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement><ref.generic_type_param usr=\"s:s7DecoderP11FWFrameworkE8fwDecode_2asqd__qd_0__qd__mtKSeRd__s9CodingKeyRd_0_r0_lF1TL_qd__mfp\">T<\/ref.generic_type_param> : <ref.protocol usr=\"s:Se\">Decodable<\/ref.protocol><\/decl.generic_type_requirement>, <decl.generic_type_requirement><ref.generic_type_param usr=\"s:s7DecoderP11FWFrameworkE8fwDecode_2asqd__qd_0__qd__mtKSeRd__s9CodingKeyRd_0_r0_lF1KL_qd_0_mfp\">K<\/ref.generic_type_param> : <ref.protocol usr=\"s:s9CodingKeyP\">CodingKey<\/ref.protocol><\/decl.generic_type_requirement><\/decl.function.method.instance>",
            "key.groupname" : "Misc",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 212,
            "key.line" : 84,
            "key.name" : "fwDecode(_:as:)",
            "key.namelength" : 72,
            "key.nameoffset" : 2375,
            "key.offset" : 2370,
            "key.parsed_declaration" : "func fwDecode<T: Decodable, K: CodingKey>(_ key: K, as type: T.Type = T.self) throws -> T",
            "key.parsed_scope.end" : 87,
            "key.parsed_scope.start" : 84,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s7DecoderP11FWFrameworkE8fwDecode_2asqd__SS_qd__mtKSeRd__lF\">fwDecode&lt;T&gt;(_: String, as: T.Type = T.self) throws -&gt; T where T : Decodable<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s7DecoderP11FWFrameworkE8fwDecode_5using10Foundation4DateVSS_qd__tKAC05FWAnyG9FormatterRd__lF\">fwDecode&lt;F&gt;(_: String, using: F) throws -&gt; Date where F : FWAnyDateFormatter<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s7DecoderP11FWFrameworkE8fwDecode_5using10Foundation4DateVqd___qd_0_tKs9CodingKeyRd__AC05FWAnyG9FormatterRd_0_r0_lF\">fwDecode&lt;K, F&gt;(_: K, using: F) throws -&gt; Date where K : CodingKey, F : FWAnyDateFormatter<\/RelatedName>"
              }
            ],
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>T : <Type usr=\"s:Se\">Decodable<\/Type><\/Declaration>",
                "key.column" : 19,
                "key.decl_lang" : "source.lang.swift",
                "key.elements" : [
                  {
                    "key.kind" : "source.lang.swift.structure.elem.typeref",
                    "key.length" : 9,
                    "key.offset" : 2387
                  }
                ],
                "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWEncode.swift",
                "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>T<\/decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:Se\">Decodable<\/ref.protocol><\/decl.generic_type_param.constraint><\/decl.generic_type_param>",
                "key.groupname" : "Misc",
                "key.inheritedtypes" : [
                  {
                    "key.name" : "Decodable"
                  }
                ],
                "key.kind" : "source.lang.swift.decl.generic_type_param",
                "key.length" : 12,
                "key.line" : 84,
                "key.name" : "T",
                "key.namelength" : 1,
                "key.nameoffset" : 2384,
                "key.offset" : 2384,
                "key.parsed_declaration" : "func fwDecode<T: Decodable",
                "key.parsed_scope.end" : 84,
                "key.parsed_scope.start" : 84,
                "key.typename" : "T.Type",
                "key.typeusr" : "$sqd__mD",
                "key.usr" : "s:s7DecoderP11FWFrameworkE8fwDecode_2asqd__qd_0__qd__mtKSeRd__s9CodingKeyRd_0_r0_lF1TL_qd__mfp"
              },
              {
                "key.annotated_decl" : "<Declaration>K : <Type usr=\"s:s9CodingKeyP\">CodingKey<\/Type><\/Declaration>",
                "key.column" : 33,
                "key.decl_lang" : "source.lang.swift",
                "key.elements" : [
                  {
                    "key.kind" : "source.lang.swift.structure.elem.typeref",
                    "key.length" : 9,
                    "key.offset" : 2401
                  }
                ],
                "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWEncode.swift",
                "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>K<\/decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:s9CodingKeyP\">CodingKey<\/ref.protocol><\/decl.generic_type_param.constraint><\/decl.generic_type_param>",
                "key.groupname" : "Misc",
                "key.inheritedtypes" : [
                  {
                    "key.name" : "CodingKey"
                  }
                ],
                "key.kind" : "source.lang.swift.decl.generic_type_param",
                "key.length" : 12,
                "key.line" : 84,
                "key.name" : "K",
                "key.namelength" : 1,
                "key.nameoffset" : 2398,
                "key.offset" : 2398,
                "key.parsed_declaration" : "func fwDecode<T: Decodable, K: CodingKey",
                "key.parsed_scope.end" : 84,
                "key.parsed_scope.start" : 84,
                "key.typename" : "K.Type",
                "key.typeusr" : "$sqd_0_mD",
                "key.usr" : "s:s7DecoderP11FWFrameworkE8fwDecode_2asqd__qd_0__qd__mtKSeRd__s9CodingKeyRd_0_r0_lF1KL_qd_0_mfp"
              },
              {
                "key.annotated_decl" : "<Declaration>let container: <Type usr=\"s:s22KeyedDecodingContainerV\">KeyedDecodingContainer<\/Type>&lt;<Type usr=\"s:s7DecoderP11FWFrameworkE8fwDecode_2asqd__qd_0__qd__mtKSeRd__s9CodingKeyRd_0_r0_lF1KL_qd_0_mfp\">K<\/Type>&gt;<\/Declaration>",
                "key.column" : 13,
                "key.decl_lang" : "source.lang.swift",
                "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWEncode.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>container<\/decl.name>: <decl.var.type><ref.struct usr=\"s:s22KeyedDecodingContainerV\">KeyedDecodingContainer<\/ref.struct>&lt;<ref.generic_type_param usr=\"s:s7DecoderP11FWFrameworkE8fwDecode_2asqd__qd_0__qd__mtKSeRd__s9CodingKeyRd_0_r0_lF1KL_qd_0_mfp\">K<\/ref.generic_type_param>&gt;<\/decl.var.type><\/decl.var.local>",
                "key.groupname" : "Misc",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 51,
                "key.line" : 85,
                "key.name" : "container",
                "key.namelength" : 9,
                "key.nameoffset" : 2474,
                "key.offset" : 2470,
                "key.parsed_declaration" : "let container = try self.container(keyedBy: K.self)",
                "key.parsed_scope.end" : 85,
                "key.parsed_scope.start" : 85,
                "key.typename" : "KeyedDecodingContainer<K>",
                "key.typeusr" : "$ss22KeyedDecodingContainerVyqd_0_GD",
                "key.usr" : "s:s7DecoderP11FWFrameworkE8fwDecode_2asqd__qd_0__qd__mtKSeRd__s9CodingKeyRd_0_r0_lF9containerL_s22KeyedDecodingContainerVyqd_0_Gvp"
              }
            ],
            "key.typename" : "<Self, T, K where Self : Decoder, T : Decodable, K : CodingKey> (Self) -> (K, T.Type) throws -> T",
            "key.typeusr" : "$s_2asqd__qd_0__qd__mtKcSeRd__s9CodingKeyRd_0_r0_luD",
            "key.usr" : "s:s7DecoderP11FWFrameworkE8fwDecode_2asqd__qd_0__qd__mtKSeRd__s9CodingKeyRd_0_r0_lF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>func fwDecodeIf&lt;T&gt;(_ key: <Type usr=\"s:SS\">String<\/Type>, as type: <Type usr=\"s:s7DecoderP11FWFrameworkE10fwDecodeIf_2asqd__SgSS_qd__mtKSeRd__lF1TL_qd__mfp\">T<\/Type>.Type = T.self) throws -&gt; <Type usr=\"s:s7DecoderP11FWFrameworkE10fwDecodeIf_2asqd__SgSS_qd__mtKSeRd__lF1TL_qd__mfp\">T<\/Type>? where <Type usr=\"s:s7DecoderP11FWFrameworkE10fwDecodeIf_2asqd__SgSS_qd__mtKSeRd__lF1TL_qd__mfp\">T<\/Type> : <Type usr=\"s:Se\">Decodable<\/Type><\/Declaration>",
            "key.bodylength" : 66,
            "key.bodyoffset" : 2673,
            "key.column" : 10,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWEncode.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>fwDecodeIf<\/decl.name>&lt;<decl.generic_type_param usr=\"s:s7DecoderP11FWFrameworkE10fwDecodeIf_2asqd__SgSS_qd__mtKSeRd__lF1TL_qd__mfp\"><decl.generic_type_param.name>T<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>key<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>as<\/decl.var.parameter.argument_label> <decl.var.parameter.name>type<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:s7DecoderP11FWFrameworkE10fwDecodeIf_2asqd__SgSS_qd__mtKSeRd__lF1TL_qd__mfp\">T<\/ref.generic_type_param>.Type<\/decl.var.parameter.type> = T.self<\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:s7DecoderP11FWFrameworkE10fwDecodeIf_2asqd__SgSS_qd__mtKSeRd__lF1TL_qd__mfp\">T<\/ref.generic_type_param>?<\/decl.function.returntype> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement><ref.generic_type_param usr=\"s:s7DecoderP11FWFrameworkE10fwDecodeIf_2asqd__SgSS_qd__mtKSeRd__lF1TL_qd__mfp\">T<\/ref.generic_type_param> : <ref.protocol usr=\"s:Se\">Decodable<\/ref.protocol><\/decl.generic_type_requirement><\/decl.function.method.instance>",
            "key.groupname" : "Misc",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 152,
            "key.line" : 89,
            "key.name" : "fwDecodeIf(_:as:)",
            "key.namelength" : 65,
            "key.nameoffset" : 2593,
            "key.offset" : 2588,
            "key.parsed_declaration" : "func fwDecodeIf<T: Decodable>(_ key: String, as type: T.Type = T.self) throws -> T?",
            "key.parsed_scope.end" : 91,
            "key.parsed_scope.start" : 89,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s7DecoderP11FWFrameworkE10fwDecodeIf_2asqd__Sgqd_0__qd__mtKSeRd__s9CodingKeyRd_0_r0_lF\">fwDecodeIf&lt;T, K&gt;(_: K, as: T.Type = T.self) throws -&gt; T? where T : Decodable, K : CodingKey<\/RelatedName>"
              }
            ],
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>T : <Type usr=\"s:Se\">Decodable<\/Type><\/Declaration>",
                "key.column" : 21,
                "key.decl_lang" : "source.lang.swift",
                "key.elements" : [
                  {
                    "key.kind" : "source.lang.swift.structure.elem.typeref",
                    "key.length" : 9,
                    "key.offset" : 2607
                  }
                ],
                "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWEncode.swift",
                "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>T<\/decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:Se\">Decodable<\/ref.protocol><\/decl.generic_type_param.constraint><\/decl.generic_type_param>",
                "key.groupname" : "Misc",
                "key.inheritedtypes" : [
                  {
                    "key.name" : "Decodable"
                  }
                ],
                "key.kind" : "source.lang.swift.decl.generic_type_param",
                "key.length" : 12,
                "key.line" : 89,
                "key.name" : "T",
                "key.namelength" : 1,
                "key.nameoffset" : 2604,
                "key.offset" : 2604,
                "key.parsed_declaration" : "func fwDecodeIf<T: Decodable",
                "key.parsed_scope.end" : 89,
                "key.parsed_scope.start" : 89,
                "key.typename" : "T.Type",
                "key.typeusr" : "$sqd__mD",
                "key.usr" : "s:s7DecoderP11FWFrameworkE10fwDecodeIf_2asqd__SgSS_qd__mtKSeRd__lF1TL_qd__mfp"
              }
            ],
            "key.typename" : "<Self, T where Self : Decoder, T : Decodable> (Self) -> (String, T.Type) throws -> T?",
            "key.typeusr" : "$s_2asqd__SgSS_qd__mtKcSeRd__luD",
            "key.usr" : "s:s7DecoderP11FWFrameworkE10fwDecodeIf_2asqd__SgSS_qd__mtKSeRd__lF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>func fwDecodeIf&lt;T, K&gt;(_ key: <Type usr=\"s:s7DecoderP11FWFrameworkE10fwDecodeIf_2asqd__Sgqd_0__qd__mtKSeRd__s9CodingKeyRd_0_r0_lF1KL_qd_0_mfp\">K<\/Type>, as type: <Type usr=\"s:s7DecoderP11FWFrameworkE10fwDecodeIf_2asqd__Sgqd_0__qd__mtKSeRd__s9CodingKeyRd_0_r0_lF1TL_qd__mfp\">T<\/Type>.Type = T.self) throws -&gt; <Type usr=\"s:s7DecoderP11FWFrameworkE10fwDecodeIf_2asqd__Sgqd_0__qd__mtKSeRd__s9CodingKeyRd_0_r0_lF1TL_qd__mfp\">T<\/Type>? where <Type usr=\"s:s7DecoderP11FWFrameworkE10fwDecodeIf_2asqd__Sgqd_0__qd__mtKSeRd__s9CodingKeyRd_0_r0_lF1TL_qd__mfp\">T<\/Type> : <Type usr=\"s:Se\">Decodable<\/Type>, <Type usr=\"s:s7DecoderP11FWFrameworkE10fwDecodeIf_2asqd__Sgqd_0__qd__mtKSeRd__s9CodingKeyRd_0_r0_lF1KL_qd_0_mfp\">K<\/Type> : <Type usr=\"s:s9CodingKeyP\">CodingKey<\/Type><\/Declaration>",
            "key.bodylength" : 129,
            "key.bodyoffset" : 2840,
            "key.column" : 10,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWEncode.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>fwDecodeIf<\/decl.name>&lt;<decl.generic_type_param usr=\"s:s7DecoderP11FWFrameworkE10fwDecodeIf_2asqd__Sgqd_0__qd__mtKSeRd__s9CodingKeyRd_0_r0_lF1TL_qd__mfp\"><decl.generic_type_param.name>T<\/decl.generic_type_param.name><\/decl.generic_type_param>, <decl.generic_type_param usr=\"s:s7DecoderP11FWFrameworkE10fwDecodeIf_2asqd__Sgqd_0__qd__mtKSeRd__s9CodingKeyRd_0_r0_lF1KL_qd_0_mfp\"><decl.generic_type_param.name>K<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>key<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:s7DecoderP11FWFrameworkE10fwDecodeIf_2asqd__Sgqd_0__qd__mtKSeRd__s9CodingKeyRd_0_r0_lF1KL_qd_0_mfp\">K<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>as<\/decl.var.parameter.argument_label> <decl.var.parameter.name>type<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:s7DecoderP11FWFrameworkE10fwDecodeIf_2asqd__Sgqd_0__qd__mtKSeRd__s9CodingKeyRd_0_r0_lF1TL_qd__mfp\">T<\/ref.generic_type_param>.Type<\/decl.var.parameter.type> = T.self<\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:s7DecoderP11FWFrameworkE10fwDecodeIf_2asqd__Sgqd_0__qd__mtKSeRd__s9CodingKeyRd_0_r0_lF1TL_qd__mfp\">T<\/ref.generic_type_param>?<\/decl.function.returntype> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement><ref.generic_type_param usr=\"s:s7DecoderP11FWFrameworkE10fwDecodeIf_2asqd__Sgqd_0__qd__mtKSeRd__s9CodingKeyRd_0_r0_lF1TL_qd__mfp\">T<\/ref.generic_type_param> : <ref.protocol usr=\"s:Se\">Decodable<\/ref.protocol><\/decl.generic_type_requirement>, <decl.generic_type_requirement><ref.generic_type_param usr=\"s:s7DecoderP11FWFrameworkE10fwDecodeIf_2asqd__Sgqd_0__qd__mtKSeRd__s9CodingKeyRd_0_r0_lF1KL_qd_0_mfp\">K<\/ref.generic_type_param> : <ref.protocol usr=\"s:s9CodingKeyP\">CodingKey<\/ref.protocol><\/decl.generic_type_requirement><\/decl.function.method.instance>",
            "key.groupname" : "Misc",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 224,
            "key.line" : 93,
            "key.name" : "fwDecodeIf(_:as:)",
            "key.namelength" : 74,
            "key.nameoffset" : 2751,
            "key.offset" : 2746,
            "key.parsed_declaration" : "func fwDecodeIf<T: Decodable, K: CodingKey>(_ key: K, as type: T.Type = T.self) throws -> T?",
            "key.parsed_scope.end" : 96,
            "key.parsed_scope.start" : 93,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s7DecoderP11FWFrameworkE10fwDecodeIf_2asqd__SgSS_qd__mtKSeRd__lF\">fwDecodeIf&lt;T&gt;(_: String, as: T.Type = T.self) throws -&gt; T? where T : Decodable<\/RelatedName>"
              }
            ],
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>T : <Type usr=\"s:Se\">Decodable<\/Type><\/Declaration>",
                "key.column" : 21,
                "key.decl_lang" : "source.lang.swift",
                "key.elements" : [
                  {
                    "key.kind" : "source.lang.swift.structure.elem.typeref",
                    "key.length" : 9,
                    "key.offset" : 2765
                  }
                ],
                "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWEncode.swift",
                "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>T<\/decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:Se\">Decodable<\/ref.protocol><\/decl.generic_type_param.constraint><\/decl.generic_type_param>",
                "key.groupname" : "Misc",
                "key.inheritedtypes" : [
                  {
                    "key.name" : "Decodable"
                  }
                ],
                "key.kind" : "source.lang.swift.decl.generic_type_param",
                "key.length" : 12,
                "key.line" : 93,
                "key.name" : "T",
                "key.namelength" : 1,
                "key.nameoffset" : 2762,
                "key.offset" : 2762,
                "key.parsed_declaration" : "func fwDecodeIf<T: Decodable",
                "key.parsed_scope.end" : 93,
                "key.parsed_scope.start" : 93,
                "key.typename" : "T.Type",
                "key.typeusr" : "$sqd__mD",
                "key.usr" : "s:s7DecoderP11FWFrameworkE10fwDecodeIf_2asqd__Sgqd_0__qd__mtKSeRd__s9CodingKeyRd_0_r0_lF1TL_qd__mfp"
              },
              {
                "key.annotated_decl" : "<Declaration>K : <Type usr=\"s:s9CodingKeyP\">CodingKey<\/Type><\/Declaration>",
                "key.column" : 35,
                "key.decl_lang" : "source.lang.swift",
                "key.elements" : [
                  {
                    "key.kind" : "source.lang.swift.structure.elem.typeref",
                    "key.length" : 9,
                    "key.offset" : 2779
                  }
                ],
                "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWEncode.swift",
                "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>K<\/decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:s9CodingKeyP\">CodingKey<\/ref.protocol><\/decl.generic_type_param.constraint><\/decl.generic_type_param>",
                "key.groupname" : "Misc",
                "key.inheritedtypes" : [
                  {
                    "key.name" : "CodingKey"
                  }
                ],
                "key.kind" : "source.lang.swift.decl.generic_type_param",
                "key.length" : 12,
                "key.line" : 93,
                "key.name" : "K",
                "key.namelength" : 1,
                "key.nameoffset" : 2776,
                "key.offset" : 2776,
                "key.parsed_declaration" : "func fwDecodeIf<T: Decodable, K: CodingKey",
                "key.parsed_scope.end" : 93,
                "key.parsed_scope.start" : 93,
                "key.typename" : "K.Type",
                "key.typeusr" : "$sqd_0_mD",
                "key.usr" : "s:s7DecoderP11FWFrameworkE10fwDecodeIf_2asqd__Sgqd_0__qd__mtKSeRd__s9CodingKeyRd_0_r0_lF1KL_qd_0_mfp"
              },
              {
                "key.annotated_decl" : "<Declaration>let container: <Type usr=\"s:s22KeyedDecodingContainerV\">KeyedDecodingContainer<\/Type>&lt;<Type usr=\"s:s7DecoderP11FWFrameworkE10fwDecodeIf_2asqd__Sgqd_0__qd__mtKSeRd__s9CodingKeyRd_0_r0_lF1KL_qd_0_mfp\">K<\/Type>&gt;<\/Declaration>",
                "key.column" : 13,
                "key.decl_lang" : "source.lang.swift",
                "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWEncode.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>container<\/decl.name>: <decl.var.type><ref.struct usr=\"s:s22KeyedDecodingContainerV\">KeyedDecodingContainer<\/ref.struct>&lt;<ref.generic_type_param usr=\"s:s7DecoderP11FWFrameworkE10fwDecodeIf_2asqd__Sgqd_0__qd__mtKSeRd__s9CodingKeyRd_0_r0_lF1KL_qd_0_mfp\">K<\/ref.generic_type_param>&gt;<\/decl.var.type><\/decl.var.local>",
                "key.groupname" : "Misc",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 51,
                "key.line" : 94,
                "key.name" : "container",
                "key.namelength" : 9,
                "key.nameoffset" : 2853,
                "key.offset" : 2849,
                "key.parsed_declaration" : "let container = try self.container(keyedBy: K.self)",
                "key.parsed_scope.end" : 94,
                "key.parsed_scope.start" : 94,
                "key.typename" : "KeyedDecodingContainer<K>",
                "key.typeusr" : "$ss22KeyedDecodingContainerVyqd_0_GD",
                "key.usr" : "s:s7DecoderP11FWFrameworkE10fwDecodeIf_2asqd__Sgqd_0__qd__mtKSeRd__s9CodingKeyRd_0_r0_lF9containerL_s22KeyedDecodingContainerVyqd_0_Gvp"
              }
            ],
            "key.typename" : "<Self, T, K where Self : Decoder, T : Decodable, K : CodingKey> (Self) -> (K, T.Type) throws -> T?",
            "key.typeusr" : "$s_2asqd__Sgqd_0__qd__mtKcSeRd__s9CodingKeyRd_0_r0_luD",
            "key.usr" : "s:s7DecoderP11FWFrameworkE10fwDecodeIf_2asqd__Sgqd_0__qd__mtKSeRd__s9CodingKeyRd_0_r0_lF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>func fwDecode&lt;F&gt;(_ key: <Type usr=\"s:SS\">String<\/Type>, using formatter: <Type usr=\"s:s7DecoderP11FWFrameworkE8fwDecode_5using10Foundation4DateVSS_qd__tKAC05FWAnyG9FormatterRd__lF1FL_qd__mfp\">F<\/Type>) throws -&gt; <Type usr=\"s:10Foundation4DateV\">Date<\/Type> where <Type usr=\"s:s7DecoderP11FWFrameworkE8fwDecode_5using10Foundation4DateVSS_qd__tKAC05FWAnyG9FormatterRd__lF1FL_qd__mfp\">F<\/Type> : <Type usr=\"s:11FWFramework18FWAnyDateFormatterP\">FWAnyDateFormatter<\/Type><\/Declaration>",
            "key.bodylength" : 72,
            "key.bodyoffset" : 3064,
            "key.column" : 10,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWEncode.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>fwDecode<\/decl.name>&lt;<decl.generic_type_param usr=\"s:s7DecoderP11FWFrameworkE8fwDecode_5using10Foundation4DateVSS_qd__tKAC05FWAnyG9FormatterRd__lF1FL_qd__mfp\"><decl.generic_type_param.name>F<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>key<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>using<\/decl.var.parameter.argument_label> <decl.var.parameter.name>formatter<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:s7DecoderP11FWFrameworkE8fwDecode_5using10Foundation4DateVSS_qd__tKAC05FWAnyG9FormatterRd__lF1FL_qd__mfp\">F<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><ref.struct usr=\"s:10Foundation4DateV\">Date<\/ref.struct><\/decl.function.returntype> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement><ref.generic_type_param usr=\"s:s7DecoderP11FWFrameworkE8fwDecode_5using10Foundation4DateVSS_qd__tKAC05FWAnyG9FormatterRd__lF1FL_qd__mfp\">F<\/ref.generic_type_param> : <ref.protocol usr=\"s:11FWFramework18FWAnyDateFormatterP\">FWAnyDateFormatter<\/ref.protocol><\/decl.generic_type_requirement><\/decl.function.method.instance>",
            "key.groupname" : "Misc",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 161,
            "key.line" : 98,
            "key.name" : "fwDecode(_:using:)",
            "key.namelength" : 66,
            "key.nameoffset" : 2981,
            "key.offset" : 2976,
            "key.parsed_declaration" : "func fwDecode<F: FWAnyDateFormatter>(_ key: String, using formatter: F) throws -> Date",
            "key.parsed_scope.end" : 100,
            "key.parsed_scope.start" : 98,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s7DecoderP11FWFrameworkE8fwDecode_2asqd__SS_qd__mtKSeRd__lF\">fwDecode&lt;T&gt;(_: String, as: T.Type = T.self) throws -&gt; T where T : Decodable<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s7DecoderP11FWFrameworkE8fwDecode_2asqd__qd_0__qd__mtKSeRd__s9CodingKeyRd_0_r0_lF\">fwDecode&lt;T, K&gt;(_: K, as: T.Type = T.self) throws -&gt; T where T : Decodable, K : CodingKey<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s7DecoderP11FWFrameworkE8fwDecode_5using10Foundation4DateVqd___qd_0_tKs9CodingKeyRd__AC05FWAnyG9FormatterRd_0_r0_lF\">fwDecode&lt;K, F&gt;(_: K, using: F) throws -&gt; Date where K : CodingKey, F : FWAnyDateFormatter<\/RelatedName>"
              }
            ],
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>F : <Type usr=\"s:11FWFramework18FWAnyDateFormatterP\">FWAnyDateFormatter<\/Type><\/Declaration>",
                "key.column" : 19,
                "key.decl_lang" : "source.lang.swift",
                "key.elements" : [
                  {
                    "key.kind" : "source.lang.swift.structure.elem.typeref",
                    "key.length" : 18,
                    "key.offset" : 2993
                  }
                ],
                "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWEncode.swift",
                "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>F<\/decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:11FWFramework18FWAnyDateFormatterP\">FWAnyDateFormatter<\/ref.protocol><\/decl.generic_type_param.constraint><\/decl.generic_type_param>",
                "key.groupname" : "Misc",
                "key.inheritedtypes" : [
                  {
                    "key.name" : "FWAnyDateFormatter"
                  }
                ],
                "key.kind" : "source.lang.swift.decl.generic_type_param",
                "key.length" : 21,
                "key.line" : 98,
                "key.name" : "F",
                "key.namelength" : 1,
                "key.nameoffset" : 2990,
                "key.offset" : 2990,
                "key.parsed_declaration" : "func fwDecode<F: FWAnyDateFormatter",
                "key.parsed_scope.end" : 98,
                "key.parsed_scope.start" : 98,
                "key.typename" : "F.Type",
                "key.typeusr" : "$sqd__mD",
                "key.usr" : "s:s7DecoderP11FWFrameworkE8fwDecode_5using10Foundation4DateVSS_qd__tKAC05FWAnyG9FormatterRd__lF1FL_qd__mfp"
              }
            ],
            "key.typename" : "<Self, F where Self : Decoder, F : FWAnyDateFormatter> (Self) -> (String, F) throws -> Date",
            "key.typeusr" : "$s_5using10Foundation4DateVSS_qd__tKc11FWFramework05FWAnyC9FormatterRd__luD",
            "key.usr" : "s:s7DecoderP11FWFrameworkE8fwDecode_5using10Foundation4DateVSS_qd__tKAC05FWAnyG9FormatterRd__lF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>func fwDecode&lt;K, F&gt;(_ key: <Type usr=\"s:s7DecoderP11FWFrameworkE8fwDecode_5using10Foundation4DateVqd___qd_0_tKs9CodingKeyRd__AC05FWAnyG9FormatterRd_0_r0_lF1KL_qd__mfp\">K<\/Type>, using formatter: <Type usr=\"s:s7DecoderP11FWFrameworkE8fwDecode_5using10Foundation4DateVqd___qd_0_tKs9CodingKeyRd__AC05FWAnyG9FormatterRd_0_r0_lF1FL_qd_0_mfp\">F<\/Type>) throws -&gt; <Type usr=\"s:10Foundation4DateV\">Date<\/Type> where <Type usr=\"s:s7DecoderP11FWFrameworkE8fwDecode_5using10Foundation4DateVqd___qd_0_tKs9CodingKeyRd__AC05FWAnyG9FormatterRd_0_r0_lF1KL_qd__mfp\">K<\/Type> : <Type usr=\"s:s9CodingKeyP\">CodingKey<\/Type>, <Type usr=\"s:s7DecoderP11FWFrameworkE8fwDecode_5using10Foundation4DateVqd___qd_0_tKs9CodingKeyRd__AC05FWAnyG9FormatterRd_0_r0_lF1FL_qd_0_mfp\">F<\/Type> : <Type usr=\"s:11FWFramework18FWAnyDateFormatterP\">FWAnyDateFormatter<\/Type><\/Declaration>",
            "key.bodylength" : 423,
            "key.bodyoffset" : 3240,
            "key.column" : 10,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWEncode.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>fwDecode<\/decl.name>&lt;<decl.generic_type_param usr=\"s:s7DecoderP11FWFrameworkE8fwDecode_5using10Foundation4DateVqd___qd_0_tKs9CodingKeyRd__AC05FWAnyG9FormatterRd_0_r0_lF1KL_qd__mfp\"><decl.generic_type_param.name>K<\/decl.generic_type_param.name><\/decl.generic_type_param>, <decl.generic_type_param usr=\"s:s7DecoderP11FWFrameworkE8fwDecode_5using10Foundation4DateVqd___qd_0_tKs9CodingKeyRd__AC05FWAnyG9FormatterRd_0_r0_lF1FL_qd_0_mfp\"><decl.generic_type_param.name>F<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>key<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:s7DecoderP11FWFrameworkE8fwDecode_5using10Foundation4DateVqd___qd_0_tKs9CodingKeyRd__AC05FWAnyG9FormatterRd_0_r0_lF1KL_qd__mfp\">K<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>using<\/decl.var.parameter.argument_label> <decl.var.parameter.name>formatter<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:s7DecoderP11FWFrameworkE8fwDecode_5using10Foundation4DateVqd___qd_0_tKs9CodingKeyRd__AC05FWAnyG9FormatterRd_0_r0_lF1FL_qd_0_mfp\">F<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><ref.struct usr=\"s:10Foundation4DateV\">Date<\/ref.struct><\/decl.function.returntype> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement><ref.generic_type_param usr=\"s:s7DecoderP11FWFrameworkE8fwDecode_5using10Foundation4DateVqd___qd_0_tKs9CodingKeyRd__AC05FWAnyG9FormatterRd_0_r0_lF1KL_qd__mfp\">K<\/ref.generic_type_param> : <ref.protocol usr=\"s:s9CodingKeyP\">CodingKey<\/ref.protocol><\/decl.generic_type_requirement>, <decl.generic_type_requirement><ref.generic_type_param usr=\"s:s7DecoderP11FWFrameworkE8fwDecode_5using10Foundation4DateVqd___qd_0_tKs9CodingKeyRd__AC05FWAnyG9FormatterRd_0_r0_lF1FL_qd_0_mfp\">F<\/ref.generic_type_param> : <ref.protocol usr=\"s:11FWFramework18FWAnyDateFormatterP\">FWAnyDateFormatter<\/ref.protocol><\/decl.generic_type_requirement><\/decl.function.method.instance>",
            "key.groupname" : "Misc",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 521,
            "key.line" : 102,
            "key.name" : "fwDecode(_:using:)",
            "key.namelength" : 75,
            "key.nameoffset" : 3148,
            "key.offset" : 3143,
            "key.parsed_declaration" : "func fwDecode<K: CodingKey, F: FWAnyDateFormatter>(_ key: K, using formatter: F) throws -> Date",
            "key.parsed_scope.end" : 115,
            "key.parsed_scope.start" : 102,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s7DecoderP11FWFrameworkE8fwDecode_2asqd__SS_qd__mtKSeRd__lF\">fwDecode&lt;T&gt;(_: String, as: T.Type = T.self) throws -&gt; T where T : Decodable<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s7DecoderP11FWFrameworkE8fwDecode_2asqd__qd_0__qd__mtKSeRd__s9CodingKeyRd_0_r0_lF\">fwDecode&lt;T, K&gt;(_: K, as: T.Type = T.self) throws -&gt; T where T : Decodable, K : CodingKey<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s7DecoderP11FWFrameworkE8fwDecode_5using10Foundation4DateVSS_qd__tKAC05FWAnyG9FormatterRd__lF\">fwDecode&lt;F&gt;(_: String, using: F) throws -&gt; Date where F : FWAnyDateFormatter<\/RelatedName>"
              }
            ],
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>K : <Type usr=\"s:s9CodingKeyP\">CodingKey<\/Type><\/Declaration>",
                "key.column" : 19,
                "key.decl_lang" : "source.lang.swift",
                "key.elements" : [
                  {
                    "key.kind" : "source.lang.swift.structure.elem.typeref",
                    "key.length" : 9,
                    "key.offset" : 3160
                  }
                ],
                "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWEncode.swift",
                "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>K<\/decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:s9CodingKeyP\">CodingKey<\/ref.protocol><\/decl.generic_type_param.constraint><\/decl.generic_type_param>",
                "key.groupname" : "Misc",
                "key.inheritedtypes" : [
                  {
                    "key.name" : "CodingKey"
                  }
                ],
                "key.kind" : "source.lang.swift.decl.generic_type_param",
                "key.length" : 12,
                "key.line" : 102,
                "key.name" : "K",
                "key.namelength" : 1,
                "key.nameoffset" : 3157,
                "key.offset" : 3157,
                "key.parsed_declaration" : "func fwDecode<K: CodingKey",
                "key.parsed_scope.end" : 102,
                "key.parsed_scope.start" : 102,
                "key.typename" : "K.Type",
                "key.typeusr" : "$sqd__mD",
                "key.usr" : "s:s7DecoderP11FWFrameworkE8fwDecode_5using10Foundation4DateVqd___qd_0_tKs9CodingKeyRd__AC05FWAnyG9FormatterRd_0_r0_lF1KL_qd__mfp"
              },
              {
                "key.annotated_decl" : "<Declaration>F : <Type usr=\"s:11FWFramework18FWAnyDateFormatterP\">FWAnyDateFormatter<\/Type><\/Declaration>",
                "key.column" : 33,
                "key.decl_lang" : "source.lang.swift",
                "key.elements" : [
                  {
                    "key.kind" : "source.lang.swift.structure.elem.typeref",
                    "key.length" : 18,
                    "key.offset" : 3174
                  }
                ],
                "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWEncode.swift",
                "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>F<\/decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:11FWFramework18FWAnyDateFormatterP\">FWAnyDateFormatter<\/ref.protocol><\/decl.generic_type_param.constraint><\/decl.generic_type_param>",
                "key.groupname" : "Misc",
                "key.inheritedtypes" : [
                  {
                    "key.name" : "FWAnyDateFormatter"
                  }
                ],
                "key.kind" : "source.lang.swift.decl.generic_type_param",
                "key.length" : 21,
                "key.line" : 102,
                "key.name" : "F",
                "key.namelength" : 1,
                "key.nameoffset" : 3171,
                "key.offset" : 3171,
                "key.parsed_declaration" : "func fwDecode<K: CodingKey, F: FWAnyDateFormatter",
                "key.parsed_scope.end" : 102,
                "key.parsed_scope.start" : 102,
                "key.typename" : "F.Type",
                "key.typeusr" : "$sqd_0_mD",
                "key.usr" : "s:s7DecoderP11FWFrameworkE8fwDecode_5using10Foundation4DateVqd___qd_0_tKs9CodingKeyRd__AC05FWAnyG9FormatterRd_0_r0_lF1FL_qd_0_mfp"
              },
              {
                "key.annotated_decl" : "<Declaration>let container: <Type usr=\"s:s22KeyedDecodingContainerV\">KeyedDecodingContainer<\/Type>&lt;<Type usr=\"s:s7DecoderP11FWFrameworkE8fwDecode_5using10Foundation4DateVqd___qd_0_tKs9CodingKeyRd__AC05FWAnyG9FormatterRd_0_r0_lF1KL_qd__mfp\">K<\/Type>&gt;<\/Declaration>",
                "key.column" : 13,
                "key.decl_lang" : "source.lang.swift",
                "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWEncode.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>container<\/decl.name>: <decl.var.type><ref.struct usr=\"s:s22KeyedDecodingContainerV\">KeyedDecodingContainer<\/ref.struct>&lt;<ref.generic_type_param usr=\"s:s7DecoderP11FWFrameworkE8fwDecode_5using10Foundation4DateVqd___qd_0_tKs9CodingKeyRd__AC05FWAnyG9FormatterRd_0_r0_lF1KL_qd__mfp\">K<\/ref.generic_type_param>&gt;<\/decl.var.type><\/decl.var.local>",
                "key.groupname" : "Misc",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 51,
                "key.line" : 103,
                "key.name" : "container",
                "key.namelength" : 9,
                "key.nameoffset" : 3253,
                "key.offset" : 3249,
                "key.parsed_declaration" : "let container = try self.container(keyedBy: K.self)",
                "key.parsed_scope.end" : 103,
                "key.parsed_scope.start" : 103,
                "key.typename" : "KeyedDecodingContainer<K>",
                "key.typeusr" : "$ss22KeyedDecodingContainerVyqd__GD",
                "key.usr" : "s:s7DecoderP11FWFrameworkE8fwDecode_5using10Foundation4DateVqd___qd_0_tKs9CodingKeyRd__AC05FWAnyG9FormatterRd_0_r0_lF9containerL_s22KeyedDecodingContainerVyqd__Gvp"
              },
              {
                "key.annotated_decl" : "<Declaration>let rawString: <Type usr=\"s:SS\">String<\/Type><\/Declaration>",
                "key.column" : 13,
                "key.decl_lang" : "source.lang.swift",
                "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWEncode.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>rawString<\/decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.type><\/decl.var.local>",
                "key.groupname" : "Misc",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 62,
                "key.line" : 104,
                "key.name" : "rawString",
                "key.namelength" : 9,
                "key.nameoffset" : 3313,
                "key.offset" : 3309,
                "key.parsed_declaration" : "let rawString = try container.decode(String.self, forKey: key)",
                "key.parsed_scope.end" : 104,
                "key.parsed_scope.start" : 104,
                "key.typename" : "String",
                "key.typeusr" : "$sSSD",
                "key.usr" : "s:s7DecoderP11FWFrameworkE8fwDecode_5using10Foundation4DateVqd___qd_0_tKs9CodingKeyRd__AC05FWAnyG9FormatterRd_0_r0_lF9rawStringL_SSvp"
              }
            ],
            "key.typename" : "<Self, K, F where Self : Decoder, K : CodingKey, F : FWAnyDateFormatter> (Self) -> (K, F) throws -> Date",
            "key.typeusr" : "$s_5using10Foundation4DateVqd___qd_0_tKcs9CodingKeyRd__11FWFramework05FWAnyC9FormatterRd_0_r0_luD",
            "key.usr" : "s:s7DecoderP11FWFrameworkE8fwDecode_5using10Foundation4DateVqd___qd_0_tKs9CodingKeyRd__AC05FWAnyG9FormatterRd_0_r0_lF"
          },
          {
            "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
            "key.length" : 14,
            "key.name" : "MARK: - FWJSON",
            "key.namelength" : 0,
            "key.nameoffset" : 0,
            "key.offset" : 3677
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>func fwJsonSingle() throws -&gt; <Type usr=\"s:11FWFramework6FWJSONV\">FWJSON<\/Type><\/Declaration>",
            "key.bodylength" : 56,
            "key.bodyoffset" : 3739,
            "key.column" : 10,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWEncode.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>fwJsonSingle<\/decl.name>() <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><ref.struct usr=\"s:11FWFramework6FWJSONV\">FWJSON<\/ref.struct><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.groupname" : "Misc",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 95,
            "key.line" : 119,
            "key.name" : "fwJsonSingle()",
            "key.namelength" : 14,
            "key.nameoffset" : 3706,
            "key.offset" : 3701,
            "key.parsed_declaration" : "func fwJsonSingle() throws -> FWJSON",
            "key.parsed_scope.end" : 121,
            "key.parsed_scope.start" : 119,
            "key.substructure" : [

            ],
            "key.typename" : "<Self where Self : Decoder> (Self) -> () throws -> FWJSON",
            "key.typeusr" : "$s11FWFramework6FWJSONVyKcD",
            "key.usr" : "s:s7DecoderP11FWFrameworkE12fwJsonSingleAC6FWJSONVyKF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>func fwJson(_ key: <Type usr=\"s:SS\">String<\/Type>) throws -&gt; <Type usr=\"s:11FWFramework6FWJSONV\">FWJSON<\/Type><\/Declaration>",
            "key.bodylength" : 72,
            "key.bodyoffset" : 3851,
            "key.column" : 10,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWEncode.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>fwJson<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>key<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><ref.struct usr=\"s:11FWFramework6FWJSONV\">FWJSON<\/ref.struct><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.groupname" : "Misc",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 118,
            "key.line" : 123,
            "key.name" : "fwJson(_:)",
            "key.namelength" : 21,
            "key.nameoffset" : 3811,
            "key.offset" : 3806,
            "key.parsed_declaration" : "func fwJson(_ key: String) throws -> FWJSON",
            "key.parsed_scope.end" : 125,
            "key.parsed_scope.start" : 123,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s7DecoderP11FWFrameworkE6fwJsonyAC6FWJSONVqd__Ks9CodingKeyRd__lF\">fwJson&lt;K&gt;(_: K) throws -&gt; FWJSON where K : CodingKey<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "<Self where Self : Decoder> (Self) -> (String) throws -> FWJSON",
            "key.typeusr" : "$sy11FWFramework6FWJSONVSSKcD",
            "key.usr" : "s:s7DecoderP11FWFrameworkE6fwJsonyAC6FWJSONVSSKF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>func fwJson&lt;K&gt;(_ key: <Type usr=\"s:s7DecoderP11FWFrameworkE6fwJsonyAC6FWJSONVqd__Ks9CodingKeyRd__lF1KL_qd__mfp\">K<\/Type>) throws -&gt; <Type usr=\"s:11FWFramework6FWJSONV\">FWJSON<\/Type> where <Type usr=\"s:s7DecoderP11FWFrameworkE6fwJsonyAC6FWJSONVqd__Ks9CodingKeyRd__lF1KL_qd__mfp\">K<\/Type> : <Type usr=\"s:s9CodingKeyP\">CodingKey<\/Type><\/Declaration>",
            "key.bodylength" : 72,
            "key.bodyoffset" : 3988,
            "key.column" : 10,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWEncode.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>fwJson<\/decl.name>&lt;<decl.generic_type_param usr=\"s:s7DecoderP11FWFrameworkE6fwJsonyAC6FWJSONVqd__Ks9CodingKeyRd__lF1KL_qd__mfp\"><decl.generic_type_param.name>K<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>key<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:s7DecoderP11FWFrameworkE6fwJsonyAC6FWJSONVqd__Ks9CodingKeyRd__lF1KL_qd__mfp\">K<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><ref.struct usr=\"s:11FWFramework6FWJSONV\">FWJSON<\/ref.struct><\/decl.function.returntype> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement><ref.generic_type_param usr=\"s:s7DecoderP11FWFrameworkE6fwJsonyAC6FWJSONVqd__Ks9CodingKeyRd__lF1KL_qd__mfp\">K<\/ref.generic_type_param> : <ref.protocol usr=\"s:s9CodingKeyP\">CodingKey<\/ref.protocol><\/decl.generic_type_requirement><\/decl.function.method.instance>",
            "key.groupname" : "Misc",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 127,
            "key.line" : 127,
            "key.name" : "fwJson(_:)",
            "key.namelength" : 30,
            "key.nameoffset" : 3939,
            "key.offset" : 3934,
            "key.parsed_declaration" : "func fwJson<K: CodingKey>(_ key: K) throws -> FWJSON",
            "key.parsed_scope.end" : 129,
            "key.parsed_scope.start" : 127,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s7DecoderP11FWFrameworkE6fwJsonyAC6FWJSONVSSKF\">fwJson(_: String) throws -&gt; FWJSON<\/RelatedName>"
              }
            ],
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>K : <Type usr=\"s:s9CodingKeyP\">CodingKey<\/Type><\/Declaration>",
                "key.column" : 17,
                "key.decl_lang" : "source.lang.swift",
                "key.elements" : [
                  {
                    "key.kind" : "source.lang.swift.structure.elem.typeref",
                    "key.length" : 9,
                    "key.offset" : 3949
                  }
                ],
                "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWEncode.swift",
                "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>K<\/decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:s9CodingKeyP\">CodingKey<\/ref.protocol><\/decl.generic_type_param.constraint><\/decl.generic_type_param>",
                "key.groupname" : "Misc",
                "key.inheritedtypes" : [
                  {
                    "key.name" : "CodingKey"
                  }
                ],
                "key.kind" : "source.lang.swift.decl.generic_type_param",
                "key.length" : 12,
                "key.line" : 127,
                "key.name" : "K",
                "key.namelength" : 1,
                "key.nameoffset" : 3946,
                "key.offset" : 3946,
                "key.parsed_declaration" : "func fwJson<K: CodingKey",
                "key.parsed_scope.end" : 127,
                "key.parsed_scope.start" : 127,
                "key.typename" : "K.Type",
                "key.typeusr" : "$sqd__mD",
                "key.usr" : "s:s7DecoderP11FWFrameworkE6fwJsonyAC6FWJSONVqd__Ks9CodingKeyRd__lF1KL_qd__mfp"
              }
            ],
            "key.typename" : "<Self, K where Self : Decoder, K : CodingKey> (Self) -> (K) throws -> FWJSON",
            "key.typeusr" : "$sy11FWFramework6FWJSONVqd__Kcs9CodingKeyRd__luD",
            "key.usr" : "s:s7DecoderP11FWFrameworkE6fwJsonyAC6FWJSONVqd__Ks9CodingKeyRd__lF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>func fwJsonIf(_ key: <Type usr=\"s:SS\">String<\/Type>) throws -&gt; <Type usr=\"s:11FWFramework6FWJSONV\">FWJSON<\/Type>?<\/Declaration>",
            "key.bodylength" : 57,
            "key.bodyoffset" : 4115,
            "key.column" : 10,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWEncode.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>fwJsonIf<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>key<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><ref.struct usr=\"s:11FWFramework6FWJSONV\">FWJSON<\/ref.struct>?<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.groupname" : "Misc",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 106,
            "key.line" : 131,
            "key.name" : "fwJsonIf(_:)",
            "key.namelength" : 23,
            "key.nameoffset" : 4072,
            "key.offset" : 4067,
            "key.parsed_declaration" : "func fwJsonIf(_ key: String) throws -> FWJSON?",
            "key.parsed_scope.end" : 133,
            "key.parsed_scope.start" : 131,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s7DecoderP11FWFrameworkE8fwJsonIfyAC6FWJSONVSgqd__Ks9CodingKeyRd__lF\">fwJsonIf&lt;K&gt;(_: K) throws -&gt; FWJSON? where K : CodingKey<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "<Self where Self : Decoder> (Self) -> (String) throws -> FWJSON?",
            "key.typeusr" : "$sy11FWFramework6FWJSONVSgSSKcD",
            "key.usr" : "s:s7DecoderP11FWFrameworkE8fwJsonIfyAC6FWJSONVSgSSKF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>func fwJsonIf&lt;K&gt;(_ key: <Type usr=\"s:s7DecoderP11FWFrameworkE8fwJsonIfyAC6FWJSONVSgqd__Ks9CodingKeyRd__lF1KL_qd__mfp\">K<\/Type>) throws -&gt; <Type usr=\"s:11FWFramework6FWJSONV\">FWJSON<\/Type>? where <Type usr=\"s:s7DecoderP11FWFrameworkE8fwJsonIfyAC6FWJSONVSgqd__Ks9CodingKeyRd__lF1KL_qd__mfp\">K<\/Type> : <Type usr=\"s:s9CodingKeyP\">CodingKey<\/Type><\/Declaration>",
            "key.bodylength" : 57,
            "key.bodyoffset" : 4236,
            "key.column" : 10,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWEncode.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>fwJsonIf<\/decl.name>&lt;<decl.generic_type_param usr=\"s:s7DecoderP11FWFrameworkE8fwJsonIfyAC6FWJSONVSgqd__Ks9CodingKeyRd__lF1KL_qd__mfp\"><decl.generic_type_param.name>K<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>key<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:s7DecoderP11FWFrameworkE8fwJsonIfyAC6FWJSONVSgqd__Ks9CodingKeyRd__lF1KL_qd__mfp\">K<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><ref.struct usr=\"s:11FWFramework6FWJSONV\">FWJSON<\/ref.struct>?<\/decl.function.returntype> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement><ref.generic_type_param usr=\"s:s7DecoderP11FWFrameworkE8fwJsonIfyAC6FWJSONVSgqd__Ks9CodingKeyRd__lF1KL_qd__mfp\">K<\/ref.generic_type_param> : <ref.protocol usr=\"s:s9CodingKeyP\">CodingKey<\/ref.protocol><\/decl.generic_type_requirement><\/decl.function.method.instance>",
            "key.groupname" : "Misc",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 115,
            "key.line" : 135,
            "key.name" : "fwJsonIf(_:)",
            "key.namelength" : 32,
            "key.nameoffset" : 4184,
            "key.offset" : 4179,
            "key.parsed_declaration" : "func fwJsonIf<K: CodingKey>(_ key: K) throws -> FWJSON?",
            "key.parsed_scope.end" : 137,
            "key.parsed_scope.start" : 135,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s7DecoderP11FWFrameworkE8fwJsonIfyAC6FWJSONVSgSSKF\">fwJsonIf(_: String) throws -&gt; FWJSON?<\/RelatedName>"
              }
            ],
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>K : <Type usr=\"s:s9CodingKeyP\">CodingKey<\/Type><\/Declaration>",
                "key.column" : 19,
                "key.decl_lang" : "source.lang.swift",
                "key.elements" : [
                  {
                    "key.kind" : "source.lang.swift.structure.elem.typeref",
                    "key.length" : 9,
                    "key.offset" : 4196
                  }
                ],
                "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWEncode.swift",
                "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>K<\/decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:s9CodingKeyP\">CodingKey<\/ref.protocol><\/decl.generic_type_param.constraint><\/decl.generic_type_param>",
                "key.groupname" : "Misc",
                "key.inheritedtypes" : [
                  {
                    "key.name" : "CodingKey"
                  }
                ],
                "key.kind" : "source.lang.swift.decl.generic_type_param",
                "key.length" : 12,
                "key.line" : 135,
                "key.name" : "K",
                "key.namelength" : 1,
                "key.nameoffset" : 4193,
                "key.offset" : 4193,
                "key.parsed_declaration" : "func fwJsonIf<K: CodingKey",
                "key.parsed_scope.end" : 135,
                "key.parsed_scope.start" : 135,
                "key.typename" : "K.Type",
                "key.typeusr" : "$sqd__mD",
                "key.usr" : "s:s7DecoderP11FWFrameworkE8fwJsonIfyAC6FWJSONVSgqd__Ks9CodingKeyRd__lF1KL_qd__mfp"
              }
            ],
            "key.typename" : "<Self, K where Self : Decoder, K : CodingKey> (Self) -> (K) throws -> FWJSON?",
            "key.typeusr" : "$sy11FWFramework6FWJSONVSgqd__Kcs9CodingKeyRd__luD",
            "key.usr" : "s:s7DecoderP11FWFrameworkE8fwJsonIfyAC6FWJSONVSgqd__Ks9CodingKeyRd__lF"
          },
          {
            "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
            "key.length" : 13,
            "key.name" : "MARK: - Value",
            "key.namelength" : 0,
            "key.nameoffset" : 0,
            "key.offset" : 4307
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>func fwValueSingle&lt;T&gt;(as type: <Type usr=\"s:s7DecoderP11FWFrameworkE13fwValueSingle2asqd__qd__m_tKSeRd__lF1TL_qd__mfp\">T<\/Type>.Type = T.self) throws -&gt; <Type usr=\"s:s7DecoderP11FWFrameworkE13fwValueSingle2asqd__qd__m_tKSeRd__lF1TL_qd__mfp\">T<\/Type> where <Type usr=\"s:s7DecoderP11FWFrameworkE13fwValueSingle2asqd__qd__m_tKSeRd__lF1TL_qd__mfp\">T<\/Type> : <Type usr=\"s:Se\">Decodable<\/Type><\/Declaration>",
            "key.bodylength" : 170,
            "key.bodyoffset" : 4402,
            "key.column" : 10,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWEncode.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>fwValueSingle<\/decl.name>&lt;<decl.generic_type_param usr=\"s:s7DecoderP11FWFrameworkE13fwValueSingle2asqd__qd__m_tKSeRd__lF1TL_qd__mfp\"><decl.generic_type_param.name>T<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>as<\/decl.var.parameter.argument_label> <decl.var.parameter.name>type<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:s7DecoderP11FWFrameworkE13fwValueSingle2asqd__qd__m_tKSeRd__lF1TL_qd__mfp\">T<\/ref.generic_type_param>.Type<\/decl.var.parameter.type> = T.self<\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:s7DecoderP11FWFrameworkE13fwValueSingle2asqd__qd__m_tKSeRd__lF1TL_qd__mfp\">T<\/ref.generic_type_param><\/decl.function.returntype> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement><ref.generic_type_param usr=\"s:s7DecoderP11FWFrameworkE13fwValueSingle2asqd__qd__m_tKSeRd__lF1TL_qd__mfp\">T<\/ref.generic_type_param> : <ref.protocol usr=\"s:Se\">Decodable<\/ref.protocol><\/decl.generic_type_requirement><\/decl.function.method.instance>",
            "key.groupname" : "Misc",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 243,
            "key.line" : 141,
            "key.name" : "fwValueSingle(as:)",
            "key.namelength" : 53,
            "key.nameoffset" : 4335,
            "key.offset" : 4330,
            "key.parsed_declaration" : "func fwValueSingle<T: Decodable>(as type: T.Type = T.self) throws -> T",
            "key.parsed_scope.end" : 146,
            "key.parsed_scope.start" : 141,
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>T : <Type usr=\"s:Se\">Decodable<\/Type><\/Declaration>",
                "key.column" : 24,
                "key.decl_lang" : "source.lang.swift",
                "key.elements" : [
                  {
                    "key.kind" : "source.lang.swift.structure.elem.typeref",
                    "key.length" : 9,
                    "key.offset" : 4352
                  }
                ],
                "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWEncode.swift",
                "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>T<\/decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:Se\">Decodable<\/ref.protocol><\/decl.generic_type_param.constraint><\/decl.generic_type_param>",
                "key.groupname" : "Misc",
                "key.inheritedtypes" : [
                  {
                    "key.name" : "Decodable"
                  }
                ],
                "key.kind" : "source.lang.swift.decl.generic_type_param",
                "key.length" : 12,
                "key.line" : 141,
                "key.name" : "T",
                "key.namelength" : 1,
                "key.nameoffset" : 4349,
                "key.offset" : 4349,
                "key.parsed_declaration" : "func fwValueSingle<T: Decodable",
                "key.parsed_scope.end" : 141,
                "key.parsed_scope.start" : 141,
                "key.typename" : "T.Type",
                "key.typeusr" : "$sqd__mD",
                "key.usr" : "s:s7DecoderP11FWFrameworkE13fwValueSingle2asqd__qd__m_tKSeRd__lF1TL_qd__mfp"
              }
            ],
            "key.typename" : "<Self, T where Self : Decoder, T : Decodable> (Self) -> (T.Type) throws -> T",
            "key.typeusr" : "$s2asqd__qd__m_tKcSeRd__luD",
            "key.usr" : "s:s7DecoderP11FWFrameworkE13fwValueSingle2asqd__qd__m_tKSeRd__lF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>func fwValue&lt;T&gt;(_ key: <Type usr=\"s:SS\">String<\/Type>, as type: <Type usr=\"s:s7DecoderP11FWFrameworkE7fwValue_2asqd__SS_qd__mtKSeRd__lF1TL_qd__mfp\">T<\/Type>.Type = T.self) throws -&gt; <Type usr=\"s:s7DecoderP11FWFrameworkE7fwValue_2asqd__SS_qd__mtKSeRd__lF1TL_qd__mfp\">T<\/Type> where <Type usr=\"s:s7DecoderP11FWFrameworkE7fwValue_2asqd__SS_qd__mtKSeRd__lF1TL_qd__mfp\">T<\/Type> : <Type usr=\"s:Se\">Decodable<\/Type><\/Declaration>",
            "key.bodylength" : 63,
            "key.bodyoffset" : 4664,
            "key.column" : 10,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWEncode.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>fwValue<\/decl.name>&lt;<decl.generic_type_param usr=\"s:s7DecoderP11FWFrameworkE7fwValue_2asqd__SS_qd__mtKSeRd__lF1TL_qd__mfp\"><decl.generic_type_param.name>T<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>key<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>as<\/decl.var.parameter.argument_label> <decl.var.parameter.name>type<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:s7DecoderP11FWFrameworkE7fwValue_2asqd__SS_qd__mtKSeRd__lF1TL_qd__mfp\">T<\/ref.generic_type_param>.Type<\/decl.var.parameter.type> = T.self<\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:s7DecoderP11FWFrameworkE7fwValue_2asqd__SS_qd__mtKSeRd__lF1TL_qd__mfp\">T<\/ref.generic_type_param><\/decl.function.returntype> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement><ref.generic_type_param usr=\"s:s7DecoderP11FWFrameworkE7fwValue_2asqd__SS_qd__mtKSeRd__lF1TL_qd__mfp\">T<\/ref.generic_type_param> : <ref.protocol usr=\"s:Se\">Decodable<\/ref.protocol><\/decl.generic_type_requirement><\/decl.function.method.instance>",
            "key.groupname" : "Misc",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 145,
            "key.line" : 148,
            "key.name" : "fwValue(_:as:)",
            "key.namelength" : 62,
            "key.nameoffset" : 4588,
            "key.offset" : 4583,
            "key.parsed_declaration" : "func fwValue<T: Decodable>(_ key: String, as type: T.Type = T.self) throws -> T",
            "key.parsed_scope.end" : 150,
            "key.parsed_scope.start" : 148,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s7DecoderP11FWFrameworkE7fwValue_2asqd__qd_0__qd__mtKSeRd__s9CodingKeyRd_0_r0_lF\">fwValue&lt;T, K&gt;(_: K, as: T.Type = T.self) throws -&gt; T where T : Decodable, K : CodingKey<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s7DecoderP11FWFrameworkE7fwValue33_9B109B611C9F687D293778156928CEA3LL4with2asqd__SgAC6FWJSONV_qd__mtlF\">fwValue(with:as:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>T : <Type usr=\"s:Se\">Decodable<\/Type><\/Declaration>",
                "key.column" : 18,
                "key.decl_lang" : "source.lang.swift",
                "key.elements" : [
                  {
                    "key.kind" : "source.lang.swift.structure.elem.typeref",
                    "key.length" : 9,
                    "key.offset" : 4599
                  }
                ],
                "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWEncode.swift",
                "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>T<\/decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:Se\">Decodable<\/ref.protocol><\/decl.generic_type_param.constraint><\/decl.generic_type_param>",
                "key.groupname" : "Misc",
                "key.inheritedtypes" : [
                  {
                    "key.name" : "Decodable"
                  }
                ],
                "key.kind" : "source.lang.swift.decl.generic_type_param",
                "key.length" : 12,
                "key.line" : 148,
                "key.name" : "T",
                "key.namelength" : 1,
                "key.nameoffset" : 4596,
                "key.offset" : 4596,
                "key.parsed_declaration" : "func fwValue<T: Decodable",
                "key.parsed_scope.end" : 148,
                "key.parsed_scope.start" : 148,
                "key.typename" : "T.Type",
                "key.typeusr" : "$sqd__mD",
                "key.usr" : "s:s7DecoderP11FWFrameworkE7fwValue_2asqd__SS_qd__mtKSeRd__lF1TL_qd__mfp"
              }
            ],
            "key.typename" : "<Self, T where Self : Decoder, T : Decodable> (Self) -> (String, T.Type) throws -> T",
            "key.typeusr" : "$s_2asqd__SS_qd__mtKcSeRd__luD",
            "key.usr" : "s:s7DecoderP11FWFrameworkE7fwValue_2asqd__SS_qd__mtKSeRd__lF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>func fwValue&lt;T, K&gt;(_ key: <Type usr=\"s:s7DecoderP11FWFrameworkE7fwValue_2asqd__qd_0__qd__mtKSeRd__s9CodingKeyRd_0_r0_lF1KL_qd_0_mfp\">K<\/Type>, as type: <Type usr=\"s:s7DecoderP11FWFrameworkE7fwValue_2asqd__qd_0__qd__mtKSeRd__s9CodingKeyRd_0_r0_lF1TL_qd__mfp\">T<\/Type>.Type = T.self) throws -&gt; <Type usr=\"s:s7DecoderP11FWFrameworkE7fwValue_2asqd__qd_0__qd__mtKSeRd__s9CodingKeyRd_0_r0_lF1TL_qd__mfp\">T<\/Type> where <Type usr=\"s:s7DecoderP11FWFrameworkE7fwValue_2asqd__qd_0__qd__mtKSeRd__s9CodingKeyRd_0_r0_lF1TL_qd__mfp\">T<\/Type> : <Type usr=\"s:Se\">Decodable<\/Type>, <Type usr=\"s:s7DecoderP11FWFrameworkE7fwValue_2asqd__qd_0__qd__mtKSeRd__s9CodingKeyRd_0_r0_lF1KL_qd_0_mfp\">K<\/Type> : <Type usr=\"s:s9CodingKeyP\">CodingKey<\/Type><\/Declaration>",
            "key.bodylength" : 185,
            "key.bodyoffset" : 4824,
            "key.column" : 10,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWEncode.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>fwValue<\/decl.name>&lt;<decl.generic_type_param usr=\"s:s7DecoderP11FWFrameworkE7fwValue_2asqd__qd_0__qd__mtKSeRd__s9CodingKeyRd_0_r0_lF1TL_qd__mfp\"><decl.generic_type_param.name>T<\/decl.generic_type_param.name><\/decl.generic_type_param>, <decl.generic_type_param usr=\"s:s7DecoderP11FWFrameworkE7fwValue_2asqd__qd_0__qd__mtKSeRd__s9CodingKeyRd_0_r0_lF1KL_qd_0_mfp\"><decl.generic_type_param.name>K<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>key<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:s7DecoderP11FWFrameworkE7fwValue_2asqd__qd_0__qd__mtKSeRd__s9CodingKeyRd_0_r0_lF1KL_qd_0_mfp\">K<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>as<\/decl.var.parameter.argument_label> <decl.var.parameter.name>type<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:s7DecoderP11FWFrameworkE7fwValue_2asqd__qd_0__qd__mtKSeRd__s9CodingKeyRd_0_r0_lF1TL_qd__mfp\">T<\/ref.generic_type_param>.Type<\/decl.var.parameter.type> = T.self<\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:s7DecoderP11FWFrameworkE7fwValue_2asqd__qd_0__qd__mtKSeRd__s9CodingKeyRd_0_r0_lF1TL_qd__mfp\">T<\/ref.generic_type_param><\/decl.function.returntype> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement><ref.generic_type_param usr=\"s:s7DecoderP11FWFrameworkE7fwValue_2asqd__qd_0__qd__mtKSeRd__s9CodingKeyRd_0_r0_lF1TL_qd__mfp\">T<\/ref.generic_type_param> : <ref.protocol usr=\"s:Se\">Decodable<\/ref.protocol><\/decl.generic_type_requirement>, <decl.generic_type_requirement><ref.generic_type_param usr=\"s:s7DecoderP11FWFrameworkE7fwValue_2asqd__qd_0__qd__mtKSeRd__s9CodingKeyRd_0_r0_lF1KL_qd_0_mfp\">K<\/ref.generic_type_param> : <ref.protocol usr=\"s:s9CodingKeyP\">CodingKey<\/ref.protocol><\/decl.generic_type_requirement><\/decl.function.method.instance>",
            "key.groupname" : "Misc",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 276,
            "key.line" : 152,
            "key.name" : "fwValue(_:as:)",
            "key.namelength" : 71,
            "key.nameoffset" : 4739,
            "key.offset" : 4734,
            "key.parsed_declaration" : "func fwValue<T: Decodable, K: CodingKey>(_ key: K, as type: T.Type = T.self) throws -> T",
            "key.parsed_scope.end" : 157,
            "key.parsed_scope.start" : 152,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s7DecoderP11FWFrameworkE7fwValue_2asqd__SS_qd__mtKSeRd__lF\">fwValue&lt;T&gt;(_: String, as: T.Type = T.self) throws -&gt; T where T : Decodable<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s7DecoderP11FWFrameworkE7fwValue33_9B109B611C9F687D293778156928CEA3LL4with2asqd__SgAC6FWJSONV_qd__mtlF\">fwValue(with:as:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>T : <Type usr=\"s:Se\">Decodable<\/Type><\/Declaration>",
                "key.column" : 18,
                "key.decl_lang" : "source.lang.swift",
                "key.elements" : [
                  {
                    "key.kind" : "source.lang.swift.structure.elem.typeref",
                    "key.length" : 9,
                    "key.offset" : 4750
                  }
                ],
                "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWEncode.swift",
                "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>T<\/decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:Se\">Decodable<\/ref.protocol><\/decl.generic_type_param.constraint><\/decl.generic_type_param>",
                "key.groupname" : "Misc",
                "key.inheritedtypes" : [
                  {
                    "key.name" : "Decodable"
                  }
                ],
                "key.kind" : "source.lang.swift.decl.generic_type_param",
                "key.length" : 12,
                "key.line" : 152,
                "key.name" : "T",
                "key.namelength" : 1,
                "key.nameoffset" : 4747,
                "key.offset" : 4747,
                "key.parsed_declaration" : "func fwValue<T: Decodable",
                "key.parsed_scope.end" : 152,
                "key.parsed_scope.start" : 152,
                "key.typename" : "T.Type",
                "key.typeusr" : "$sqd__mD",
                "key.usr" : "s:s7DecoderP11FWFrameworkE7fwValue_2asqd__qd_0__qd__mtKSeRd__s9CodingKeyRd_0_r0_lF1TL_qd__mfp"
              },
              {
                "key.annotated_decl" : "<Declaration>K : <Type usr=\"s:s9CodingKeyP\">CodingKey<\/Type><\/Declaration>",
                "key.column" : 32,
                "key.decl_lang" : "source.lang.swift",
                "key.elements" : [
                  {
                    "key.kind" : "source.lang.swift.structure.elem.typeref",
                    "key.length" : 9,
                    "key.offset" : 4764
                  }
                ],
                "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWEncode.swift",
                "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>K<\/decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:s9CodingKeyP\">CodingKey<\/ref.protocol><\/decl.generic_type_param.constraint><\/decl.generic_type_param>",
                "key.groupname" : "Misc",
                "key.inheritedtypes" : [
                  {
                    "key.name" : "CodingKey"
                  }
                ],
                "key.kind" : "source.lang.swift.decl.generic_type_param",
                "key.length" : 12,
                "key.line" : 152,
                "key.name" : "K",
                "key.namelength" : 1,
                "key.nameoffset" : 4761,
                "key.offset" : 4761,
                "key.parsed_declaration" : "func fwValue<T: Decodable, K: CodingKey",
                "key.parsed_scope.end" : 152,
                "key.parsed_scope.start" : 152,
                "key.typename" : "K.Type",
                "key.typeusr" : "$sqd_0_mD",
                "key.usr" : "s:s7DecoderP11FWFrameworkE7fwValue_2asqd__qd_0__qd__mtKSeRd__s9CodingKeyRd_0_r0_lF1KL_qd_0_mfp"
              }
            ],
            "key.typename" : "<Self, T, K where Self : Decoder, T : Decodable, K : CodingKey> (Self) -> (K, T.Type) throws -> T",
            "key.typeusr" : "$s_2asqd__qd_0__qd__mtKcSeRd__s9CodingKeyRd_0_r0_luD",
            "key.usr" : "s:s7DecoderP11FWFrameworkE7fwValue_2asqd__qd_0__qd__mtKSeRd__s9CodingKeyRd_0_r0_lF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>func fwValueIf&lt;T&gt;(_ key: <Type usr=\"s:SS\">String<\/Type>, as type: <Type usr=\"s:s7DecoderP11FWFrameworkE9fwValueIf_2asqd__SgSS_qd__mtKSeRd__lF1TL_qd__mfp\">T<\/Type>.Type = T.self) throws -&gt; <Type usr=\"s:s7DecoderP11FWFrameworkE9fwValueIf_2asqd__SgSS_qd__mtKSeRd__lF1TL_qd__mfp\">T<\/Type>? where <Type usr=\"s:s7DecoderP11FWFrameworkE9fwValueIf_2asqd__SgSS_qd__mtKSeRd__lF1TL_qd__mfp\">T<\/Type> : <Type usr=\"s:Se\">Decodable<\/Type><\/Declaration>",
            "key.bodylength" : 65,
            "key.bodyoffset" : 5100,
            "key.column" : 10,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWEncode.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>fwValueIf<\/decl.name>&lt;<decl.generic_type_param usr=\"s:s7DecoderP11FWFrameworkE9fwValueIf_2asqd__SgSS_qd__mtKSeRd__lF1TL_qd__mfp\"><decl.generic_type_param.name>T<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>key<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>as<\/decl.var.parameter.argument_label> <decl.var.parameter.name>type<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:s7DecoderP11FWFrameworkE9fwValueIf_2asqd__SgSS_qd__mtKSeRd__lF1TL_qd__mfp\">T<\/ref.generic_type_param>.Type<\/decl.var.parameter.type> = T.self<\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:s7DecoderP11FWFrameworkE9fwValueIf_2asqd__SgSS_qd__mtKSeRd__lF1TL_qd__mfp\">T<\/ref.generic_type_param>?<\/decl.function.returntype> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement><ref.generic_type_param usr=\"s:s7DecoderP11FWFrameworkE9fwValueIf_2asqd__SgSS_qd__mtKSeRd__lF1TL_qd__mfp\">T<\/ref.generic_type_param> : <ref.protocol usr=\"s:Se\">Decodable<\/ref.protocol><\/decl.generic_type_requirement><\/decl.function.method.instance>",
            "key.groupname" : "Misc",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 150,
            "key.line" : 159,
            "key.name" : "fwValueIf(_:as:)",
            "key.namelength" : 64,
            "key.nameoffset" : 5021,
            "key.offset" : 5016,
            "key.parsed_declaration" : "func fwValueIf<T: Decodable>(_ key: String, as type: T.Type = T.self) throws -> T?",
            "key.parsed_scope.end" : 161,
            "key.parsed_scope.start" : 159,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s7DecoderP11FWFrameworkE9fwValueIf_2asqd__Sgqd_0__qd__mtKSeRd__s9CodingKeyRd_0_r0_lF\">fwValueIf&lt;T, K&gt;(_: K, as: T.Type = T.self) throws -&gt; T? where T : Decodable, K : CodingKey<\/RelatedName>"
              }
            ],
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>T : <Type usr=\"s:Se\">Decodable<\/Type><\/Declaration>",
                "key.column" : 20,
                "key.decl_lang" : "source.lang.swift",
                "key.elements" : [
                  {
                    "key.kind" : "source.lang.swift.structure.elem.typeref",
                    "key.length" : 9,
                    "key.offset" : 5034
                  }
                ],
                "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWEncode.swift",
                "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>T<\/decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:Se\">Decodable<\/ref.protocol><\/decl.generic_type_param.constraint><\/decl.generic_type_param>",
                "key.groupname" : "Misc",
                "key.inheritedtypes" : [
                  {
                    "key.name" : "Decodable"
                  }
                ],
                "key.kind" : "source.lang.swift.decl.generic_type_param",
                "key.length" : 12,
                "key.line" : 159,
                "key.name" : "T",
                "key.namelength" : 1,
                "key.nameoffset" : 5031,
                "key.offset" : 5031,
                "key.parsed_declaration" : "func fwValueIf<T: Decodable",
                "key.parsed_scope.end" : 159,
                "key.parsed_scope.start" : 159,
                "key.typename" : "T.Type",
                "key.typeusr" : "$sqd__mD",
                "key.usr" : "s:s7DecoderP11FWFrameworkE9fwValueIf_2asqd__SgSS_qd__mtKSeRd__lF1TL_qd__mfp"
              }
            ],
            "key.typename" : "<Self, T where Self : Decoder, T : Decodable> (Self) -> (String, T.Type) throws -> T?",
            "key.typeusr" : "$s_2asqd__SgSS_qd__mtKcSeRd__luD",
            "key.usr" : "s:s7DecoderP11FWFrameworkE9fwValueIf_2asqd__SgSS_qd__mtKSeRd__lF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>func fwValueIf&lt;T, K&gt;(_ key: <Type usr=\"s:s7DecoderP11FWFrameworkE9fwValueIf_2asqd__Sgqd_0__qd__mtKSeRd__s9CodingKeyRd_0_r0_lF1KL_qd_0_mfp\">K<\/Type>, as type: <Type usr=\"s:s7DecoderP11FWFrameworkE9fwValueIf_2asqd__Sgqd_0__qd__mtKSeRd__s9CodingKeyRd_0_r0_lF1TL_qd__mfp\">T<\/Type>.Type = T.self) throws -&gt; <Type usr=\"s:s7DecoderP11FWFrameworkE9fwValueIf_2asqd__Sgqd_0__qd__mtKSeRd__s9CodingKeyRd_0_r0_lF1TL_qd__mfp\">T<\/Type>? where <Type usr=\"s:s7DecoderP11FWFrameworkE9fwValueIf_2asqd__Sgqd_0__qd__mtKSeRd__s9CodingKeyRd_0_r0_lF1TL_qd__mfp\">T<\/Type> : <Type usr=\"s:Se\">Decodable<\/Type>, <Type usr=\"s:s7DecoderP11FWFrameworkE9fwValueIf_2asqd__Sgqd_0__qd__mtKSeRd__s9CodingKeyRd_0_r0_lF1KL_qd_0_mfp\">K<\/Type> : <Type usr=\"s:s9CodingKeyP\">CodingKey<\/Type><\/Declaration>",
            "key.bodylength" : 189,
            "key.bodyoffset" : 5265,
            "key.column" : 10,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWEncode.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>fwValueIf<\/decl.name>&lt;<decl.generic_type_param usr=\"s:s7DecoderP11FWFrameworkE9fwValueIf_2asqd__Sgqd_0__qd__mtKSeRd__s9CodingKeyRd_0_r0_lF1TL_qd__mfp\"><decl.generic_type_param.name>T<\/decl.generic_type_param.name><\/decl.generic_type_param>, <decl.generic_type_param usr=\"s:s7DecoderP11FWFrameworkE9fwValueIf_2asqd__Sgqd_0__qd__mtKSeRd__s9CodingKeyRd_0_r0_lF1KL_qd_0_mfp\"><decl.generic_type_param.name>K<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>key<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:s7DecoderP11FWFrameworkE9fwValueIf_2asqd__Sgqd_0__qd__mtKSeRd__s9CodingKeyRd_0_r0_lF1KL_qd_0_mfp\">K<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>as<\/decl.var.parameter.argument_label> <decl.var.parameter.name>type<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:s7DecoderP11FWFrameworkE9fwValueIf_2asqd__Sgqd_0__qd__mtKSeRd__s9CodingKeyRd_0_r0_lF1TL_qd__mfp\">T<\/ref.generic_type_param>.Type<\/decl.var.parameter.type> = T.self<\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:s7DecoderP11FWFrameworkE9fwValueIf_2asqd__Sgqd_0__qd__mtKSeRd__s9CodingKeyRd_0_r0_lF1TL_qd__mfp\">T<\/ref.generic_type_param>?<\/decl.function.returntype> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement><ref.generic_type_param usr=\"s:s7DecoderP11FWFrameworkE9fwValueIf_2asqd__Sgqd_0__qd__mtKSeRd__s9CodingKeyRd_0_r0_lF1TL_qd__mfp\">T<\/ref.generic_type_param> : <ref.protocol usr=\"s:Se\">Decodable<\/ref.protocol><\/decl.generic_type_requirement>, <decl.generic_type_requirement><ref.generic_type_param usr=\"s:s7DecoderP11FWFrameworkE9fwValueIf_2asqd__Sgqd_0__qd__mtKSeRd__s9CodingKeyRd_0_r0_lF1KL_qd_0_mfp\">K<\/ref.generic_type_param> : <ref.protocol usr=\"s:s9CodingKeyP\">CodingKey<\/ref.protocol><\/decl.generic_type_requirement><\/decl.function.method.instance>",
            "key.groupname" : "Misc",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 283,
            "key.line" : 163,
            "key.name" : "fwValueIf(_:as:)",
            "key.namelength" : 73,
            "key.nameoffset" : 5177,
            "key.offset" : 5172,
            "key.parsed_declaration" : "func fwValueIf<T: Decodable, K: CodingKey>(_ key: K, as type: T.Type = T.self) throws -> T?",
            "key.parsed_scope.end" : 168,
            "key.parsed_scope.start" : 163,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s7DecoderP11FWFrameworkE9fwValueIf_2asqd__SgSS_qd__mtKSeRd__lF\">fwValueIf&lt;T&gt;(_: String, as: T.Type = T.self) throws -&gt; T? where T : Decodable<\/RelatedName>"
              }
            ],
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>T : <Type usr=\"s:Se\">Decodable<\/Type><\/Declaration>",
                "key.column" : 20,
                "key.decl_lang" : "source.lang.swift",
                "key.elements" : [
                  {
                    "key.kind" : "source.lang.swift.structure.elem.typeref",
                    "key.length" : 9,
                    "key.offset" : 5190
                  }
                ],
                "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWEncode.swift",
                "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>T<\/decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:Se\">Decodable<\/ref.protocol><\/decl.generic_type_param.constraint><\/decl.generic_type_param>",
                "key.groupname" : "Misc",
                "key.inheritedtypes" : [
                  {
                    "key.name" : "Decodable"
                  }
                ],
                "key.kind" : "source.lang.swift.decl.generic_type_param",
                "key.length" : 12,
                "key.line" : 163,
                "key.name" : "T",
                "key.namelength" : 1,
                "key.nameoffset" : 5187,
                "key.offset" : 5187,
                "key.parsed_declaration" : "func fwValueIf<T: Decodable",
                "key.parsed_scope.end" : 163,
                "key.parsed_scope.start" : 163,
                "key.typename" : "T.Type",
                "key.typeusr" : "$sqd__mD",
                "key.usr" : "s:s7DecoderP11FWFrameworkE9fwValueIf_2asqd__Sgqd_0__qd__mtKSeRd__s9CodingKeyRd_0_r0_lF1TL_qd__mfp"
              },
              {
                "key.annotated_decl" : "<Declaration>K : <Type usr=\"s:s9CodingKeyP\">CodingKey<\/Type><\/Declaration>",
                "key.column" : 34,
                "key.decl_lang" : "source.lang.swift",
                "key.elements" : [
                  {
                    "key.kind" : "source.lang.swift.structure.elem.typeref",
                    "key.length" : 9,
                    "key.offset" : 5204
                  }
                ],
                "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWEncode.swift",
                "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>K<\/decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:s9CodingKeyP\">CodingKey<\/ref.protocol><\/decl.generic_type_param.constraint><\/decl.generic_type_param>",
                "key.groupname" : "Misc",
                "key.inheritedtypes" : [
                  {
                    "key.name" : "CodingKey"
                  }
                ],
                "key.kind" : "source.lang.swift.decl.generic_type_param",
                "key.length" : 12,
                "key.line" : 163,
                "key.name" : "K",
                "key.namelength" : 1,
                "key.nameoffset" : 5201,
                "key.offset" : 5201,
                "key.parsed_declaration" : "func fwValueIf<T: Decodable, K: CodingKey",
                "key.parsed_scope.end" : 163,
                "key.parsed_scope.start" : 163,
                "key.typename" : "K.Type",
                "key.typeusr" : "$sqd_0_mD",
                "key.usr" : "s:s7DecoderP11FWFrameworkE9fwValueIf_2asqd__Sgqd_0__qd__mtKSeRd__s9CodingKeyRd_0_r0_lF1KL_qd_0_mfp"
              }
            ],
            "key.typename" : "<Self, T, K where Self : Decoder, T : Decodable, K : CodingKey> (Self) -> (K, T.Type) throws -> T?",
            "key.typeusr" : "$s_2asqd__Sgqd_0__qd__mtKcSeRd__s9CodingKeyRd_0_r0_luD",
            "key.usr" : "s:s7DecoderP11FWFrameworkE9fwValueIf_2asqd__Sgqd_0__qd__mtKSeRd__s9CodingKeyRd_0_r0_lF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>private func fwValue&lt;T&gt;(with json: <Type usr=\"s:11FWFramework6FWJSONV\">FWJSON<\/Type>, as type: <Type usr=\"s:s7DecoderP11FWFrameworkE7fwValue33_9B109B611C9F687D293778156928CEA3LL4with2asqd__SgAC6FWJSONV_qd__mtlF1TL_qd__mfp\">T<\/Type>.Type) -&gt; <Type usr=\"s:s7DecoderP11FWFrameworkE7fwValue33_9B109B611C9F687D293778156928CEA3LL4with2asqd__SgAC6FWJSONV_qd__mtlF1TL_qd__mfp\">T<\/Type>?<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.private",
                "key.length" : 7,
                "key.offset" : 5465
              }
            ],
            "key.bodylength" : 1043,
            "key.bodyoffset" : 5532,
            "key.column" : 18,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWEncode.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>fwValue<\/decl.name>&lt;<decl.generic_type_param usr=\"s:s7DecoderP11FWFrameworkE7fwValue33_9B109B611C9F687D293778156928CEA3LL4with2asqd__SgAC6FWJSONV_qd__mtlF1TL_qd__mfp\"><decl.generic_type_param.name>T<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>with<\/decl.var.parameter.argument_label> <decl.var.parameter.name>json<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:11FWFramework6FWJSONV\">FWJSON<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>as<\/decl.var.parameter.argument_label> <decl.var.parameter.name>type<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:s7DecoderP11FWFrameworkE7fwValue33_9B109B611C9F687D293778156928CEA3LL4with2asqd__SgAC6FWJSONV_qd__mtlF1TL_qd__mfp\">T<\/ref.generic_type_param>.Type<\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:s7DecoderP11FWFrameworkE7fwValue33_9B109B611C9F687D293778156928CEA3LL4with2asqd__SgAC6FWJSONV_qd__mtlF1TL_qd__mfp\">T<\/ref.generic_type_param>?<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.groupname" : "Misc",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 1103,
            "key.line" : 170,
            "key.name" : "fwValue(with:as:)",
            "key.namelength" : 46,
            "key.nameoffset" : 5478,
            "key.offset" : 5473,
            "key.parsed_declaration" : "private func fwValue<T>(with json: FWJSON, as type: T.Type) -> T?",
            "key.parsed_scope.end" : 203,
            "key.parsed_scope.start" : 170,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s7DecoderP11FWFrameworkE7fwValue_2asqd__SS_qd__mtKSeRd__lF\">fwValue&lt;T&gt;(_: String, as: T.Type = T.self) throws -&gt; T where T : Decodable<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s7DecoderP11FWFrameworkE7fwValue_2asqd__qd_0__qd__mtKSeRd__s9CodingKeyRd_0_r0_lF\">fwValue&lt;T, K&gt;(_: K, as: T.Type = T.self) throws -&gt; T where T : Decodable, K : CodingKey<\/RelatedName>"
              }
            ],
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>T<\/Declaration>",
                "key.column" : 26,
                "key.decl_lang" : "source.lang.swift",
                "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWEncode.swift",
                "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>T<\/decl.generic_type_param.name><\/decl.generic_type_param>",
                "key.groupname" : "Misc",
                "key.kind" : "source.lang.swift.decl.generic_type_param",
                "key.length" : 1,
                "key.line" : 170,
                "key.name" : "T",
                "key.namelength" : 1,
                "key.nameoffset" : 5486,
                "key.offset" : 5486,
                "key.parsed_declaration" : "private func fwValue<T",
                "key.parsed_scope.end" : 170,
                "key.parsed_scope.start" : 170,
                "key.typename" : "T.Type",
                "key.typeusr" : "$sqd__mD",
                "key.usr" : "s:s7DecoderP11FWFrameworkE7fwValue33_9B109B611C9F687D293778156928CEA3LL4with2asqd__SgAC6FWJSONV_qd__mtlF1TL_qd__mfp"
              }
            ],
            "key.typename" : "<Self, T where Self : Decoder> (Self) -> (FWJSON, T.Type) -> T?",
            "key.typeusr" : "$s4with2asqd__Sg11FWFramework6FWJSONV_qd__mtcluD",
            "key.usr" : "s:s7DecoderP11FWFrameworkE7fwValue33_9B109B611C9F687D293778156928CEA3LL4with2asqd__SgAC6FWJSONV_qd__mtlF"
          }
        ],
        "key.typename" : "Decoder.Protocol",
        "key.typeusr" : "$ss7Decoder_pmD",
        "key.usr" : "s:s7DecoderP"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public protocol FWAnyDateFormatter<\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 6580
          }
        ],
        "key.bodylength" : 88,
        "key.bodyoffset" : 6616,
        "key.column" : 17,
        "key.decl_lang" : "source.lang.swift",
        "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWEncode.swift",
        "key.fully_annotated_decl" : "<decl.protocol><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>protocol<\/syntaxtype.keyword> <decl.name>FWAnyDateFormatter<\/decl.name><\/decl.protocol>",
        "key.kind" : "source.lang.swift.decl.protocol",
        "key.length" : 118,
        "key.line" : 206,
        "key.name" : "FWAnyDateFormatter",
        "key.namelength" : 18,
        "key.nameoffset" : 6596,
        "key.offset" : 6587,
        "key.parsed_declaration" : "public protocol FWAnyDateFormatter",
        "key.parsed_scope.end" : 209,
        "key.parsed_scope.start" : 206,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>func date(from string: <Type usr=\"s:SS\">String<\/Type>) -&gt; <Type usr=\"s:10Foundation4DateV\">Date<\/Type>?<\/Declaration>",
            "key.column" : 10,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWEncode.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>date<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>from<\/decl.var.parameter.argument_label> <decl.var.parameter.name>string<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:10Foundation4DateV\">Date<\/ref.struct>?<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 39,
            "key.line" : 207,
            "key.name" : "date(from:)",
            "key.namelength" : 25,
            "key.nameoffset" : 6626,
            "key.offset" : 6621,
            "key.parsed_declaration" : "func date(from string: String) -> Date?",
            "key.parsed_scope.end" : 207,
            "key.parsed_scope.start" : 207,
            "key.substructure" : [

            ],
            "key.typename" : "<Self where Self : FWAnyDateFormatter> (Self) -> (String) -> Date?",
            "key.typeusr" : "$s4from10Foundation4DateVSgSS_tcD",
            "key.usr" : "s:11FWFramework18FWAnyDateFormatterP4date4from10Foundation0C0VSgSS_tF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>func string(from date: <Type usr=\"s:10Foundation4DateV\">Date<\/Type>) -&gt; <Type usr=\"s:SS\">String<\/Type><\/Declaration>",
            "key.column" : 10,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWEncode.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>string<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>from<\/decl.var.parameter.argument_label> <decl.var.parameter.name>date<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:10Foundation4DateV\">Date<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 38,
            "key.line" : 208,
            "key.name" : "string(from:)",
            "key.namelength" : 23,
            "key.nameoffset" : 6670,
            "key.offset" : 6665,
            "key.parsed_declaration" : "func string(from date: Date) -> String",
            "key.parsed_scope.end" : 208,
            "key.parsed_scope.start" : 208,
            "key.substructure" : [

            ],
            "key.typename" : "<Self where Self : FWAnyDateFormatter> (Self) -> (Date) -> String",
            "key.typeusr" : "$s4fromSS10Foundation4DateV_tcD",
            "key.usr" : "s:11FWFramework18FWAnyDateFormatterP6string4fromSS10Foundation0C0V_tF"
          }
        ],
        "key.typename" : "FWAnyDateFormatter.Protocol",
        "key.typeusr" : "$s11FWFramework18FWAnyDateFormatter_pmD",
        "key.usr" : "s:11FWFramework18FWAnyDateFormatterP"
      },
      {
        "key.annotated_decl" : "<Declaration>class DateFormatter : <Type usr=\"c:objc(cs)NSFormatter\">Formatter<\/Type><\/Declaration>",
        "key.bodylength" : 0,
        "key.bodyoffset" : 6752,
        "key.column" : 12,
        "key.decl_lang" : "source.lang.objc",
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 18,
            "key.offset" : 6732
          }
        ],
        "key.filepath" : "\/Applications\/Xcode.app\/Contents\/Developer\/Platforms\/MacOSX.platform\/Developer\/SDKs\/MacOSX12.0.sdk\/System\/Library\/Frameworks\/Foundation.framework\/Headers\/NSDateFormatter.h",
        "key.fully_annotated_decl" : "<decl.class><syntaxtype.keyword>class<\/syntaxtype.keyword> <decl.name>DateFormatter<\/decl.name> : <ref.class usr=\"c:objc(cs)NSFormatter\">Formatter<\/ref.class><\/decl.class>",
        "key.inheritedtypes" : [
          {
            "key.name" : "FWAnyDateFormatter"
          }
        ],
        "key.is_system" : true,
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 46,
        "key.line" : 25,
        "key.modulename" : "Foundation.NSDateFormatter",
        "key.name" : "DateFormatter",
        "key.namelength" : 13,
        "key.nameoffset" : 6717,
        "key.offset" : 6707,
        "key.parsed_declaration" : "extension DateFormatter: FWAnyDateFormatter",
        "key.parsed_scope.end" : 211,
        "key.parsed_scope.start" : 211,
        "key.typename" : "DateFormatter.Type",
        "key.typeusr" : "$sSo15NSDateFormatterCmD",
        "key.usr" : "c:objc(cs)NSDateFormatter"
      },
      {
        "key.annotated_decl" : "<Declaration>class ISO8601DateFormatter : <Type usr=\"c:objc(cs)NSFormatter\">Formatter<\/Type>, <Type usr=\"c:objc(pl)NSSecureCoding\">NSSecureCoding<\/Type><\/Declaration>",
        "key.bodylength" : 0,
        "key.bodyoffset" : 6807,
        "key.column" : 12,
        "key.decl_lang" : "source.lang.objc",
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 18,
            "key.offset" : 6787
          }
        ],
        "key.filepath" : "\/Applications\/Xcode.app\/Contents\/Developer\/Platforms\/MacOSX.platform\/Developer\/SDKs\/MacOSX12.0.sdk\/System\/Library\/Frameworks\/Foundation.framework\/Headers\/NSISO8601DateFormatter.h",
        "key.fully_annotated_decl" : "<decl.class><syntaxtype.keyword>class<\/syntaxtype.keyword> <decl.name>ISO8601DateFormatter<\/decl.name> : <ref.class usr=\"c:objc(cs)NSFormatter\">Formatter<\/ref.class>, <ref.protocol usr=\"c:objc(pl)NSSecureCoding\">NSSecureCoding<\/ref.protocol><\/decl.class>",
        "key.inheritedtypes" : [
          {
            "key.name" : "FWAnyDateFormatter"
          }
        ],
        "key.is_system" : true,
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 53,
        "key.line" : 46,
        "key.modulename" : "Foundation.NSISO8601DateFormatter",
        "key.name" : "ISO8601DateFormatter",
        "key.namelength" : 20,
        "key.nameoffset" : 6765,
        "key.offset" : 6755,
        "key.parsed_declaration" : "extension ISO8601DateFormatter: FWAnyDateFormatter",
        "key.parsed_scope.end" : 213,
        "key.parsed_scope.start" : 213,
        "key.typename" : "ISO8601DateFormatter.Type",
        "key.typeusr" : "$sSo22NSISO8601DateFormatterCmD",
        "key.usr" : "c:objc(cs)NSISO8601DateFormatter"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.private",
        "key.annotated_decl" : "<Declaration>private struct FWAnyCodingKey : <Type usr=\"s:s9CodingKeyP\">CodingKey<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.private",
            "key.length" : 7,
            "key.offset" : 6810
          }
        ],
        "key.bodylength" : 307,
        "key.bodyoffset" : 6852,
        "key.column" : 16,
        "key.decl_lang" : "source.lang.swift",
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 9,
            "key.offset" : 6841
          }
        ],
        "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWEncode.swift",
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>FWAnyCodingKey<\/decl.name> : <ref.protocol usr=\"s:s9CodingKeyP\">CodingKey<\/ref.protocol><\/decl.struct>",
        "key.inheritedtypes" : [
          {
            "key.name" : "CodingKey"
          }
        ],
        "key.kind" : "source.lang.swift.decl.struct",
        "key.length" : 342,
        "key.line" : 215,
        "key.name" : "FWAnyCodingKey",
        "key.namelength" : 14,
        "key.nameoffset" : 6825,
        "key.offset" : 6818,
        "key.parsed_declaration" : "private struct FWAnyCodingKey: CodingKey",
        "key.parsed_scope.end" : 231,
        "key.parsed_scope.start" : 215,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>var stringValue: <Type usr=\"s:SS\">String<\/Type><\/Declaration>",
            "key.column" : 9,
            "key.decl_lang" : "source.lang.swift",
            "key.doc.declaration" : "var stringValue: String { get }",
            "key.doc.discussion" : [
              {
                "Note" : ""
              }
            ],
            "key.doc.full_as_xml" : "<Other><Name>stringValue<\/Name><USR>s:s9CodingKeyP11stringValueSSvp<\/USR><Declaration>var stringValue: String { get }<\/Declaration><CommentParts><Abstract><Para>The string to use in a named collection (e.g. a string-keyed dictionary).<\/Para><\/Abstract><Discussion><Note><Para>This documentation comment was inherited from <codeVoice>CodingKey<\/codeVoice>.<\/Para><\/Note><\/Discussion><\/CommentParts><\/Other>",
            "key.doc.name" : "stringValue",
            "key.doc.type" : "Other",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWEncode.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>stringValue<\/decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 23,
            "key.line" : 216,
            "key.name" : "stringValue",
            "key.namelength" : 11,
            "key.nameoffset" : 6861,
            "key.offset" : 6857,
            "key.overrides" : [
              {
                "key.usr" : "s:s9CodingKeyP11stringValueSSvp"
              }
            ],
            "key.parsed_declaration" : "var stringValue: String",
            "key.parsed_scope.end" : 216,
            "key.parsed_scope.start" : 216,
            "key.setter_accessibility" : "source.lang.swift.accessibility.internal",
            "key.typename" : "String",
            "key.typeusr" : "$sSSD",
            "key.usr" : "s:s9CodingKeyP11stringValueSSvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>var intValue: <Type usr=\"s:Si\">Int<\/Type>?<\/Declaration>",
            "key.column" : 9,
            "key.decl_lang" : "source.lang.swift",
            "key.doc.declaration" : "var intValue: Int? { get }",
            "key.doc.discussion" : [
              {
                "Note" : ""
              }
            ],
            "key.doc.full_as_xml" : "<Other><Name>intValue<\/Name><USR>s:s9CodingKeyP8intValueSiSgvp<\/USR><Declaration>var intValue: Int? { get }<\/Declaration><CommentParts><Abstract><Para>The value to use in an integer-indexed collection (e.g. an int-keyed dictionary).<\/Para><\/Abstract><Discussion><Note><Para>This documentation comment was inherited from <codeVoice>CodingKey<\/codeVoice>.<\/Para><\/Note><\/Discussion><\/CommentParts><\/Other>",
            "key.doc.name" : "intValue",
            "key.doc.type" : "Other",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWEncode.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>intValue<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int<\/ref.struct>?<\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 18,
            "key.line" : 217,
            "key.name" : "intValue",
            "key.namelength" : 8,
            "key.nameoffset" : 6889,
            "key.offset" : 6885,
            "key.overrides" : [
              {
                "key.usr" : "s:s9CodingKeyP8intValueSiSgvp"
              }
            ],
            "key.parsed_declaration" : "var intValue: Int?",
            "key.parsed_scope.end" : 217,
            "key.parsed_scope.start" : 217,
            "key.setter_accessibility" : "source.lang.swift.accessibility.internal",
            "key.typename" : "Int?",
            "key.typeusr" : "$sSiSgD",
            "key.usr" : "s:s9CodingKeyP8intValueSiSgvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>init(_ string: <Type usr=\"s:SS\">String<\/Type>)<\/Declaration>",
            "key.bodylength" : 34,
            "key.bodyoffset" : 6933,
            "key.column" : 5,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWEncode.swift",
            "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>init<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>string<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.constructor>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 59,
            "key.line" : 219,
            "key.name" : "init(_:)",
            "key.namelength" : 22,
            "key.nameoffset" : 6909,
            "key.offset" : 6909,
            "key.parsed_declaration" : "init(_ string: String)",
            "key.parsed_scope.end" : 221,
            "key.parsed_scope.start" : 219,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework14FWAnyCodingKey33_9B109B611C9F687D293778156928CEA3LLV11stringValueADSgSS_tcfc\">init(stringValue:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework14FWAnyCodingKey33_9B109B611C9F687D293778156928CEA3LLV8intValueADSgSi_tcfc\">init(intValue:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "(FWAnyCodingKey.Type) -> (String) -> FWAnyCodingKey",
            "key.typeusr" : "$sy11FWFramework14FWAnyCodingKey33_9B109B611C9F687D293778156928CEA3LLVSScD",
            "key.usr" : "s:11FWFramework14FWAnyCodingKey33_9B109B611C9F687D293778156928CEA3LLVyADSScfc"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>init?(stringValue: <Type usr=\"s:SS\">String<\/Type>)<\/Declaration>",
            "key.bodylength" : 44,
            "key.bodyoffset" : 7002,
            "key.column" : 5,
            "key.decl_lang" : "source.lang.swift",
            "key.doc.declaration" : "init?(stringValue: String)",
            "key.doc.discussion" : [
              {
                "Para" : "If the string passed as `stringValue` does not correspond to any instance of this type, the result is `nil`."
              },
              {
                "Note" : ""
              }
            ],
            "key.doc.full_as_xml" : "<Function><Name>init(stringValue:)<\/Name><USR>s:s9CodingKeyP11stringValuexSgSS_tcfc<\/USR><Declaration>init?(stringValue: String)<\/Declaration><CommentParts><Abstract><Para>Creates a new instance from the given string.<\/Para><\/Abstract><Parameters><Parameter><Name>stringValue<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The string value of the desired key.<\/Para><\/Discussion><\/Parameter><\/Parameters><Discussion><Para>If the string passed as <codeVoice>stringValue<\/codeVoice> does not correspond to any instance of this type, the result is <codeVoice>nil<\/codeVoice>.<\/Para><Note><Para>This documentation comment was inherited from <codeVoice>CodingKey<\/codeVoice>.<\/Para><\/Note><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.name" : "init(stringValue:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "The string value of the desired key."
                  }
                ],
                "name" : "stringValue"
              }
            ],
            "key.doc.type" : "Function",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWEncode.swift",
            "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>init<\/syntaxtype.keyword>?(<decl.var.parameter><decl.var.parameter.argument_label>stringValue<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.constructor>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 73,
            "key.line" : 223,
            "key.name" : "init(stringValue:)",
            "key.namelength" : 26,
            "key.nameoffset" : 6974,
            "key.offset" : 6974,
            "key.overrides" : [
              {
                "key.usr" : "s:s9CodingKeyP11stringValuexSgSS_tcfc"
              }
            ],
            "key.parsed_declaration" : "init?(stringValue: String)",
            "key.parsed_scope.end" : 225,
            "key.parsed_scope.start" : 223,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework14FWAnyCodingKey33_9B109B611C9F687D293778156928CEA3LLVyADSScfc\">init(_:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework14FWAnyCodingKey33_9B109B611C9F687D293778156928CEA3LLV8intValueADSgSi_tcfc\">init(intValue:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "(FWAnyCodingKey.Type) -> (String) -> FWAnyCodingKey?",
            "key.typeusr" : "$s11stringValue11FWFramework14FWAnyCodingKey33_9B109B611C9F687D293778156928CEA3LLVSgSS_tcD",
            "key.usr" : "s:s9CodingKeyP11stringValuexSgSS_tcfc"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>init?(intValue: <Type usr=\"s:Si\">Int<\/Type>)<\/Declaration>",
            "key.bodylength" : 82,
            "key.bodyoffset" : 7075,
            "key.column" : 5,
            "key.decl_lang" : "source.lang.swift",
            "key.doc.declaration" : "init?(intValue: Int)",
            "key.doc.discussion" : [
              {
                "Para" : "If the value passed as `intValue` does not correspond to any instance of this type, the result is `nil`."
              },
              {
                "Note" : ""
              }
            ],
            "key.doc.full_as_xml" : "<Function><Name>init(intValue:)<\/Name><USR>s:s9CodingKeyP8intValuexSgSi_tcfc<\/USR><Declaration>init?(intValue: Int)<\/Declaration><CommentParts><Abstract><Para>Creates a new instance from the specified integer.<\/Para><\/Abstract><Parameters><Parameter><Name>intValue<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The integer value of the desired key.<\/Para><\/Discussion><\/Parameter><\/Parameters><Discussion><Para>If the value passed as <codeVoice>intValue<\/codeVoice> does not correspond to any instance of this type, the result is <codeVoice>nil<\/codeVoice>.<\/Para><Note><Para>This documentation comment was inherited from <codeVoice>CodingKey<\/codeVoice>.<\/Para><\/Note><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.name" : "init(intValue:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "The integer value of the desired key."
                  }
                ],
                "name" : "intValue"
              }
            ],
            "key.doc.type" : "Function",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWEncode.swift",
            "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>init<\/syntaxtype.keyword>?(<decl.var.parameter><decl.var.parameter.argument_label>intValue<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.constructor>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 105,
            "key.line" : 227,
            "key.name" : "init(intValue:)",
            "key.namelength" : 20,
            "key.nameoffset" : 7053,
            "key.offset" : 7053,
            "key.overrides" : [
              {
                "key.usr" : "s:s9CodingKeyP8intValuexSgSi_tcfc"
              }
            ],
            "key.parsed_declaration" : "init?(intValue: Int)",
            "key.parsed_scope.end" : 230,
            "key.parsed_scope.start" : 227,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework14FWAnyCodingKey33_9B109B611C9F687D293778156928CEA3LLVyADSScfc\">init(_:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework14FWAnyCodingKey33_9B109B611C9F687D293778156928CEA3LLV11stringValueADSgSS_tcfc\">init(stringValue:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "(FWAnyCodingKey.Type) -> (Int) -> FWAnyCodingKey?",
            "key.typeusr" : "$s8intValue11FWFramework14FWAnyCodingKey33_9B109B611C9F687D293778156928CEA3LLVSgSi_tcD",
            "key.usr" : "s:s9CodingKeyP8intValuexSgSi_tcfc"
          }
        ],
        "key.typename" : "FWAnyCodingKey.Type",
        "key.typeusr" : "$s11FWFramework14FWAnyCodingKey33_9B109B611C9F687D293778156928CEA3LLVmD",
        "key.usr" : "s:11FWFramework14FWAnyCodingKey33_9B109B611C9F687D293778156928CEA3LLV"
      },
      {
        "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
        "key.length" : 25,
        "key.name" : "MARK: - FWSafeUnwrappable",
        "key.namelength" : 0,
        "key.nameoffset" : 0,
        "key.offset" : 7165
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public func FWSafeValue&lt;T&gt;(_ value: <Type usr=\"s:11FWFramework11FWSafeValueyxxSgAA0B11UnwrappableRzlF1TL_xmfp\">T<\/Type>?) -&gt; <Type usr=\"s:11FWFramework11FWSafeValueyxxSgAA0B11UnwrappableRzlF1TL_xmfp\">T<\/Type> where <Type usr=\"s:11FWFramework11FWSafeValueyxxSgAA0B11UnwrappableRzlF1TL_xmfp\">T<\/Type> : <Type usr=\"s:11FWFramework17FWSafeUnwrappableP\">FWSafeUnwrappable<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 7192
          }
        ],
        "key.bodylength" : 30,
        "key.bodyoffset" : 7257,
        "key.column" : 13,
        "key.decl_lang" : "source.lang.swift",
        "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWEncode.swift",
        "key.fully_annotated_decl" : "<decl.function.free><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>FWSafeValue<\/decl.name>&lt;<decl.generic_type_param usr=\"s:11FWFramework11FWSafeValueyxxSgAA0B11UnwrappableRzlF1TL_xmfp\"><decl.generic_type_param.name>T<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>value<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:11FWFramework11FWSafeValueyxxSgAA0B11UnwrappableRzlF1TL_xmfp\">T<\/ref.generic_type_param>?<\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:11FWFramework11FWSafeValueyxxSgAA0B11UnwrappableRzlF1TL_xmfp\">T<\/ref.generic_type_param><\/decl.function.returntype> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement><ref.generic_type_param usr=\"s:11FWFramework11FWSafeValueyxxSgAA0B11UnwrappableRzlF1TL_xmfp\">T<\/ref.generic_type_param> : <ref.protocol usr=\"s:11FWFramework17FWSafeUnwrappableP\">FWSafeUnwrappable<\/ref.protocol><\/decl.generic_type_requirement><\/decl.function.free>",
        "key.kind" : "source.lang.swift.decl.function.free",
        "key.length" : 89,
        "key.line" : 235,
        "key.name" : "FWSafeValue(_:)",
        "key.namelength" : 46,
        "key.nameoffset" : 7204,
        "key.offset" : 7199,
        "key.parsed_declaration" : "public func FWSafeValue<T: FWSafeUnwrappable>(_ value: T?) -> T",
        "key.parsed_scope.end" : 237,
        "key.parsed_scope.start" : 235,
        "key.substructure" : [
          {
            "key.annotated_decl" : "<Declaration>T : <Type usr=\"s:11FWFramework17FWSafeUnwrappableP\">FWSafeUnwrappable<\/Type><\/Declaration>",
            "key.column" : 25,
            "key.decl_lang" : "source.lang.swift",
            "key.elements" : [
              {
                "key.kind" : "source.lang.swift.structure.elem.typeref",
                "key.length" : 17,
                "key.offset" : 7219
              }
            ],
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWEncode.swift",
            "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>T<\/decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:11FWFramework17FWSafeUnwrappableP\">FWSafeUnwrappable<\/ref.protocol><\/decl.generic_type_param.constraint><\/decl.generic_type_param>",
            "key.inheritedtypes" : [
              {
                "key.name" : "FWSafeUnwrappable"
              }
            ],
            "key.kind" : "source.lang.swift.decl.generic_type_param",
            "key.length" : 20,
            "key.line" : 235,
            "key.name" : "T",
            "key.namelength" : 1,
            "key.nameoffset" : 7216,
            "key.offset" : 7216,
            "key.parsed_declaration" : "public func FWSafeValue<T: FWSafeUnwrappable",
            "key.parsed_scope.end" : 235,
            "key.parsed_scope.start" : 235,
            "key.typename" : "T.Type",
            "key.typeusr" : "$sxmD",
            "key.usr" : "s:11FWFramework11FWSafeValueyxxSgAA0B11UnwrappableRzlF1TL_xmfp"
          }
        ],
        "key.typename" : "<T where T : FWSafeUnwrappable> (T?) -> T",
        "key.typeusr" : "$syxxSgc11FWFramework17FWSafeUnwrappableRzluD",
        "key.usr" : "s:11FWFramework11FWSafeValueyxxSgAA0B11UnwrappableRzlF"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public func FWIsEmpty&lt;T&gt;(_ value: <Type usr=\"s:11FWFramework9FWIsEmptyySbxSgAA17FWSafeUnwrappableRzlF1TL_xmfp\">T<\/Type>?) -&gt; <Type usr=\"s:Sb\">Bool<\/Type> where <Type usr=\"s:11FWFramework9FWIsEmptyySbxSgAA17FWSafeUnwrappableRzlF1TL_xmfp\">T<\/Type> : <Type usr=\"s:11FWFramework17FWSafeUnwrappableP\">FWSafeUnwrappable<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 7290
          }
        ],
        "key.bodylength" : 28,
        "key.bodyoffset" : 7356,
        "key.column" : 13,
        "key.decl_lang" : "source.lang.swift",
        "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWEncode.swift",
        "key.fully_annotated_decl" : "<decl.function.free><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>FWIsEmpty<\/decl.name>&lt;<decl.generic_type_param usr=\"s:11FWFramework9FWIsEmptyySbxSgAA17FWSafeUnwrappableRzlF1TL_xmfp\"><decl.generic_type_param.name>T<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>value<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:11FWFramework9FWIsEmptyySbxSgAA17FWSafeUnwrappableRzlF1TL_xmfp\">T<\/ref.generic_type_param>?<\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.function.returntype> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement><ref.generic_type_param usr=\"s:11FWFramework9FWIsEmptyySbxSgAA17FWSafeUnwrappableRzlF1TL_xmfp\">T<\/ref.generic_type_param> : <ref.protocol usr=\"s:11FWFramework17FWSafeUnwrappableP\">FWSafeUnwrappable<\/ref.protocol><\/decl.generic_type_requirement><\/decl.function.free>",
        "key.kind" : "source.lang.swift.decl.function.free",
        "key.length" : 88,
        "key.line" : 239,
        "key.name" : "FWIsEmpty(_:)",
        "key.namelength" : 44,
        "key.nameoffset" : 7302,
        "key.offset" : 7297,
        "key.parsed_declaration" : "public func FWIsEmpty<T: FWSafeUnwrappable>(_ value: T?) -> Bool",
        "key.parsed_scope.end" : 241,
        "key.parsed_scope.start" : 239,
        "key.substructure" : [
          {
            "key.annotated_decl" : "<Declaration>T : <Type usr=\"s:11FWFramework17FWSafeUnwrappableP\">FWSafeUnwrappable<\/Type><\/Declaration>",
            "key.column" : 23,
            "key.decl_lang" : "source.lang.swift",
            "key.elements" : [
              {
                "key.kind" : "source.lang.swift.structure.elem.typeref",
                "key.length" : 17,
                "key.offset" : 7315
              }
            ],
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWEncode.swift",
            "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>T<\/decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:11FWFramework17FWSafeUnwrappableP\">FWSafeUnwrappable<\/ref.protocol><\/decl.generic_type_param.constraint><\/decl.generic_type_param>",
            "key.inheritedtypes" : [
              {
                "key.name" : "FWSafeUnwrappable"
              }
            ],
            "key.kind" : "source.lang.swift.decl.generic_type_param",
            "key.length" : 20,
            "key.line" : 239,
            "key.name" : "T",
            "key.namelength" : 1,
            "key.nameoffset" : 7312,
            "key.offset" : 7312,
            "key.parsed_declaration" : "public func FWIsEmpty<T: FWSafeUnwrappable",
            "key.parsed_scope.end" : 239,
            "key.parsed_scope.start" : 239,
            "key.typename" : "T.Type",
            "key.typeusr" : "$sxmD",
            "key.usr" : "s:11FWFramework9FWIsEmptyySbxSgAA17FWSafeUnwrappableRzlF1TL_xmfp"
          }
        ],
        "key.typename" : "<T where T : FWSafeUnwrappable> (T?) -> Bool",
        "key.typeusr" : "$sySbxSgc11FWFramework17FWSafeUnwrappableRzluD",
        "key.usr" : "s:11FWFramework9FWIsEmptyySbxSgAA17FWSafeUnwrappableRzlF"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public func FWIsNil(_ value: Any?) -&gt; <Type usr=\"s:Sb\">Bool<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 7387
          }
        ],
        "key.bodylength" : 26,
        "key.bodyoffset" : 7431,
        "key.column" : 13,
        "key.decl_lang" : "source.lang.swift",
        "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWEncode.swift",
        "key.fully_annotated_decl" : "<decl.function.free><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>FWIsNil<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>value<\/decl.var.parameter.name>: <decl.var.parameter.type><syntaxtype.keyword>Any<\/syntaxtype.keyword>?<\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.function.returntype><\/decl.function.free>",
        "key.kind" : "source.lang.swift.decl.function.free",
        "key.length" : 64,
        "key.line" : 243,
        "key.name" : "FWIsNil(_:)",
        "key.namelength" : 22,
        "key.nameoffset" : 7399,
        "key.offset" : 7394,
        "key.parsed_declaration" : "public func FWIsNil(_ value: Any?) -> Bool",
        "key.parsed_scope.end" : 245,
        "key.parsed_scope.start" : 243,
        "key.substructure" : [

        ],
        "key.typename" : "(Any?) -> Bool",
        "key.typeusr" : "$sySbypSgcD",
        "key.usr" : "s:11FWFramework7FWIsNilySbypSgF"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public protocol FWSafeUnwrappable<\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 7460
          }
        ],
        "key.bodylength" : 364,
        "key.bodyoffset" : 7495,
        "key.column" : 17,
        "key.decl_lang" : "source.lang.swift",
        "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWEncode.swift",
        "key.fully_annotated_decl" : "<decl.protocol><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>protocol<\/syntaxtype.keyword> <decl.name>FWSafeUnwrappable<\/decl.name><\/decl.protocol>",
        "key.kind" : "source.lang.swift.decl.protocol",
        "key.length" : 393,
        "key.line" : 247,
        "key.name" : "FWSafeUnwrappable",
        "key.namelength" : 17,
        "key.nameoffset" : 7476,
        "key.offset" : 7467,
        "key.parsed_declaration" : "public protocol FWSafeUnwrappable",
        "key.parsed_scope.end" : 259,
        "key.parsed_scope.start" : 247,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>static var fwSafeValue: <Type usr=\"s:11FWFramework17FWSafeUnwrappableP4Selfxmfp\">Self<\/Type> { get }<\/Declaration>",
            "key.bodylength" : 5,
            "key.bodyoffset" : 7530,
            "key.column" : 16,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWEncode.swift",
            "key.fully_annotated_decl" : "<decl.var.static><syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>fwSafeValue<\/decl.name>: <decl.var.type><ref.generic_type_param usr=\"s:11FWFramework17FWSafeUnwrappableP4Selfxmfp\">Self<\/ref.generic_type_param><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.static>",
            "key.kind" : "source.lang.swift.decl.var.static",
            "key.length" : 36,
            "key.line" : 248,
            "key.name" : "fwSafeValue",
            "key.namelength" : 11,
            "key.nameoffset" : 7511,
            "key.offset" : 7500,
            "key.parsed_declaration" : "static var fwSafeValue: Self",
            "key.parsed_scope.end" : 248,
            "key.parsed_scope.start" : 248,
            "key.typename" : "Self",
            "key.typeusr" : "$sxD",
            "key.usr" : "s:11FWFramework17FWSafeUnwrappableP11fwSafeValuexvpZ"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>var fwIsEmpty: <Type usr=\"s:Sb\">Bool<\/Type> { get }<\/Declaration>",
            "key.bodylength" : 5,
            "key.bodyoffset" : 7562,
            "key.column" : 9,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWEncode.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>fwIsEmpty<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 27,
            "key.line" : 249,
            "key.name" : "fwIsEmpty",
            "key.namelength" : 9,
            "key.nameoffset" : 7545,
            "key.offset" : 7541,
            "key.parsed_declaration" : "var fwIsEmpty: Bool",
            "key.parsed_scope.end" : 249,
            "key.parsed_scope.start" : 249,
            "key.typename" : "Bool",
            "key.typeusr" : "$sSbD",
            "key.usr" : "s:11FWFramework17FWSafeUnwrappableP9fwIsEmptySbvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>var fwAsInt: <Type usr=\"s:Si\">Int<\/Type> { get }<\/Declaration>",
            "key.bodylength" : 5,
            "key.bodyoffset" : 7596,
            "key.column" : 9,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWEncode.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>fwAsInt<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 24,
            "key.line" : 251,
            "key.name" : "fwAsInt",
            "key.namelength" : 7,
            "key.nameoffset" : 7582,
            "key.offset" : 7578,
            "key.parsed_declaration" : "var fwAsInt: Int",
            "key.parsed_scope.end" : 251,
            "key.parsed_scope.start" : 251,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework17FWSafeUnwrappablePAAE7fwAsIntSivp\">fwAsInt<\/RelatedName>"
              }
            ],
            "key.typename" : "Int",
            "key.typeusr" : "$sSiD",
            "key.usr" : "s:11FWFramework17FWSafeUnwrappableP7fwAsIntSivp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>var fwAsBool: <Type usr=\"s:Sb\">Bool<\/Type> { get }<\/Declaration>",
            "key.bodylength" : 5,
            "key.bodyoffset" : 7627,
            "key.column" : 9,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWEncode.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>fwAsBool<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 26,
            "key.line" : 252,
            "key.name" : "fwAsBool",
            "key.namelength" : 8,
            "key.nameoffset" : 7611,
            "key.offset" : 7607,
            "key.parsed_declaration" : "var fwAsBool: Bool",
            "key.parsed_scope.end" : 252,
            "key.parsed_scope.start" : 252,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework17FWSafeUnwrappablePAAE8fwAsBoolSbvp\">fwAsBool<\/RelatedName>"
              }
            ],
            "key.typename" : "Bool",
            "key.typeusr" : "$sSbD",
            "key.usr" : "s:11FWFramework17FWSafeUnwrappableP8fwAsBoolSbvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>var fwAsFloat: <Type usr=\"s:Sf\">Float<\/Type> { get }<\/Declaration>",
            "key.bodylength" : 5,
            "key.bodyoffset" : 7660,
            "key.column" : 9,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWEncode.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>fwAsFloat<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Sf\">Float<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 28,
            "key.line" : 253,
            "key.name" : "fwAsFloat",
            "key.namelength" : 9,
            "key.nameoffset" : 7642,
            "key.offset" : 7638,
            "key.parsed_declaration" : "var fwAsFloat: Float",
            "key.parsed_scope.end" : 253,
            "key.parsed_scope.start" : 253,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework17FWSafeUnwrappablePAAE9fwAsFloatSfvp\">fwAsFloat<\/RelatedName>"
              }
            ],
            "key.typename" : "Float",
            "key.typeusr" : "$sSfD",
            "key.usr" : "s:11FWFramework17FWSafeUnwrappableP9fwAsFloatSfvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>var fwAsDouble: <Type usr=\"s:Sd\">Double<\/Type> { get }<\/Declaration>",
            "key.bodylength" : 5,
            "key.bodyoffset" : 7695,
            "key.column" : 9,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWEncode.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>fwAsDouble<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Sd\">Double<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 30,
            "key.line" : 254,
            "key.name" : "fwAsDouble",
            "key.namelength" : 10,
            "key.nameoffset" : 7675,
            "key.offset" : 7671,
            "key.parsed_declaration" : "var fwAsDouble: Double",
            "key.parsed_scope.end" : 254,
            "key.parsed_scope.start" : 254,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework17FWSafeUnwrappablePAAE10fwAsDoubleSdvp\">fwAsDouble<\/RelatedName>"
              }
            ],
            "key.typename" : "Double",
            "key.typeusr" : "$sSdD",
            "key.usr" : "s:11FWFramework17FWSafeUnwrappableP10fwAsDoubleSdvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>var fwAsString: <Type usr=\"s:SS\">String<\/Type> { get }<\/Declaration>",
            "key.bodylength" : 5,
            "key.bodyoffset" : 7730,
            "key.column" : 9,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWEncode.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>fwAsString<\/decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 30,
            "key.line" : 255,
            "key.name" : "fwAsString",
            "key.namelength" : 10,
            "key.nameoffset" : 7710,
            "key.offset" : 7706,
            "key.parsed_declaration" : "var fwAsString: String",
            "key.parsed_scope.end" : 255,
            "key.parsed_scope.start" : 255,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework17FWSafeUnwrappablePAAE10fwAsStringSSvp\">fwAsString<\/RelatedName>"
              }
            ],
            "key.typename" : "String",
            "key.typeusr" : "$sSSD",
            "key.usr" : "s:11FWFramework17FWSafeUnwrappableP10fwAsStringSSvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>var fwAsNumber: <Type usr=\"c:objc(cs)NSNumber\">NSNumber<\/Type> { get }<\/Declaration>",
            "key.bodylength" : 5,
            "key.bodyoffset" : 7767,
            "key.column" : 9,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWEncode.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>fwAsNumber<\/decl.name>: <decl.var.type><ref.class usr=\"c:objc(cs)NSNumber\">NSNumber<\/ref.class><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 32,
            "key.line" : 256,
            "key.name" : "fwAsNumber",
            "key.namelength" : 10,
            "key.nameoffset" : 7745,
            "key.offset" : 7741,
            "key.parsed_declaration" : "var fwAsNumber: NSNumber",
            "key.parsed_scope.end" : 256,
            "key.parsed_scope.start" : 256,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework17FWSafeUnwrappablePAAE10fwAsNumberSo8NSNumberCvp\">fwAsNumber<\/RelatedName>"
              }
            ],
            "key.typename" : "NSNumber",
            "key.typeusr" : "$sSo8NSNumberCD",
            "key.usr" : "s:11FWFramework17FWSafeUnwrappableP10fwAsNumberSo8NSNumberCvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>var fwAsArray: [Any] { get }<\/Declaration>",
            "key.bodylength" : 5,
            "key.bodyoffset" : 7800,
            "key.column" : 9,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWEncode.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>fwAsArray<\/decl.name>: <decl.var.type>[<syntaxtype.keyword>Any<\/syntaxtype.keyword>]<\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 28,
            "key.line" : 257,
            "key.name" : "fwAsArray",
            "key.namelength" : 9,
            "key.nameoffset" : 7782,
            "key.offset" : 7778,
            "key.parsed_declaration" : "var fwAsArray: [Any]",
            "key.parsed_scope.end" : 257,
            "key.parsed_scope.start" : 257,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework17FWSafeUnwrappablePAAE9fwAsArraySayypGvp\">fwAsArray<\/RelatedName>"
              }
            ],
            "key.typename" : "[Any]",
            "key.typeusr" : "$sSayypGD",
            "key.usr" : "s:11FWFramework17FWSafeUnwrappableP9fwAsArraySayypGvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>var fwAsDicationary: [<Type usr=\"s:s11AnyHashableV\">AnyHashable<\/Type> : Any] { get }<\/Declaration>",
            "key.bodylength" : 5,
            "key.bodyoffset" : 7852,
            "key.column" : 9,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWEncode.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>fwAsDicationary<\/decl.name>: <decl.var.type>[<ref.struct usr=\"s:s11AnyHashableV\">AnyHashable<\/ref.struct> : <syntaxtype.keyword>Any<\/syntaxtype.keyword>]<\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 47,
            "key.line" : 258,
            "key.name" : "fwAsDicationary",
            "key.namelength" : 15,
            "key.nameoffset" : 7815,
            "key.offset" : 7811,
            "key.parsed_declaration" : "var fwAsDicationary: [AnyHashable: Any]",
            "key.parsed_scope.end" : 258,
            "key.parsed_scope.start" : 258,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework17FWSafeUnwrappablePAAE15fwAsDicationarySDys11AnyHashableVypGvp\">fwAsDicationary<\/RelatedName>"
              }
            ],
            "key.typename" : "[AnyHashable : Any]",
            "key.typeusr" : "$sSDys11AnyHashableVypGD",
            "key.usr" : "s:11FWFramework17FWSafeUnwrappableP15fwAsDicationarySDys11AnyHashableVypGvp"
          }
        ],
        "key.typename" : "FWSafeUnwrappable.Protocol",
        "key.typeusr" : "$s11FWFramework17FWSafeUnwrappable_pmD",
        "key.usr" : "s:11FWFramework17FWSafeUnwrappableP"
      },
      {
        "key.annotated_decl" : "<Declaration>public protocol FWSafeUnwrappable<\/Declaration>",
        "key.bodylength" : 569,
        "key.bodyoffset" : 7891,
        "key.column" : 17,
        "key.decl_lang" : "source.lang.swift",
        "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWEncode.swift",
        "key.fully_annotated_decl" : "<decl.protocol><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>protocol<\/syntaxtype.keyword> <decl.name>FWSafeUnwrappable<\/decl.name><\/decl.protocol>",
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 599,
        "key.line" : 247,
        "key.name" : "FWSafeUnwrappable",
        "key.namelength" : 17,
        "key.nameoffset" : 7872,
        "key.offset" : 7862,
        "key.parsed_declaration" : "extension FWSafeUnwrappable",
        "key.parsed_scope.end" : 270,
        "key.parsed_scope.start" : 261,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var fwAsInt: <Type usr=\"s:Si\">Int<\/Type> { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 7896
              }
            ],
            "key.bodylength" : 28,
            "key.bodyoffset" : 7921,
            "key.column" : 16,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWEncode.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>fwAsInt<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 47,
            "key.line" : 262,
            "key.name" : "fwAsInt",
            "key.namelength" : 7,
            "key.nameoffset" : 7907,
            "key.offset" : 7903,
            "key.parsed_declaration" : "public var fwAsInt: Int",
            "key.parsed_scope.end" : 262,
            "key.parsed_scope.start" : 262,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework17FWSafeUnwrappableP7fwAsIntSivp\">fwAsInt<\/RelatedName>"
              }
            ],
            "key.typename" : "Int",
            "key.typeusr" : "$sSiD",
            "key.usr" : "s:11FWFramework17FWSafeUnwrappablePAAE7fwAsIntSivp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var fwAsBool: <Type usr=\"s:Sb\">Bool<\/Type> { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 7955
              }
            ],
            "key.bodylength" : 29,
            "key.bodyoffset" : 7982,
            "key.column" : 16,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWEncode.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>fwAsBool<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 50,
            "key.line" : 263,
            "key.name" : "fwAsBool",
            "key.namelength" : 8,
            "key.nameoffset" : 7966,
            "key.offset" : 7962,
            "key.parsed_declaration" : "public var fwAsBool: Bool",
            "key.parsed_scope.end" : 263,
            "key.parsed_scope.start" : 263,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework17FWSafeUnwrappableP8fwAsBoolSbvp\">fwAsBool<\/RelatedName>"
              }
            ],
            "key.typename" : "Bool",
            "key.typeusr" : "$sSbD",
            "key.usr" : "s:11FWFramework17FWSafeUnwrappablePAAE8fwAsBoolSbvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var fwAsFloat: <Type usr=\"s:Sf\">Float<\/Type> { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 8017
              }
            ],
            "key.bodylength" : 30,
            "key.bodyoffset" : 8046,
            "key.column" : 16,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWEncode.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>fwAsFloat<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Sf\">Float<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 53,
            "key.line" : 264,
            "key.name" : "fwAsFloat",
            "key.namelength" : 9,
            "key.nameoffset" : 8028,
            "key.offset" : 8024,
            "key.parsed_declaration" : "public var fwAsFloat: Float",
            "key.parsed_scope.end" : 264,
            "key.parsed_scope.start" : 264,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework17FWSafeUnwrappableP9fwAsFloatSfvp\">fwAsFloat<\/RelatedName>"
              }
            ],
            "key.typename" : "Float",
            "key.typeusr" : "$sSfD",
            "key.usr" : "s:11FWFramework17FWSafeUnwrappablePAAE9fwAsFloatSfvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var fwAsDouble: <Type usr=\"s:Sd\">Double<\/Type> { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 8082
              }
            ],
            "key.bodylength" : 31,
            "key.bodyoffset" : 8113,
            "key.column" : 16,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWEncode.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>fwAsDouble<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Sd\">Double<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 56,
            "key.line" : 265,
            "key.name" : "fwAsDouble",
            "key.namelength" : 10,
            "key.nameoffset" : 8093,
            "key.offset" : 8089,
            "key.parsed_declaration" : "public var fwAsDouble: Double",
            "key.parsed_scope.end" : 265,
            "key.parsed_scope.start" : 265,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework17FWSafeUnwrappableP10fwAsDoubleSdvp\">fwAsDouble<\/RelatedName>"
              }
            ],
            "key.typename" : "Double",
            "key.typeusr" : "$sSdD",
            "key.usr" : "s:11FWFramework17FWSafeUnwrappablePAAE10fwAsDoubleSdvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var fwAsString: <Type usr=\"s:SS\">String<\/Type> { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 8150
              }
            ],
            "key.bodylength" : 27,
            "key.bodyoffset" : 8181,
            "key.column" : 16,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWEncode.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>fwAsString<\/decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 52,
            "key.line" : 266,
            "key.name" : "fwAsString",
            "key.namelength" : 10,
            "key.nameoffset" : 8161,
            "key.offset" : 8157,
            "key.parsed_declaration" : "public var fwAsString: String",
            "key.parsed_scope.end" : 266,
            "key.parsed_scope.start" : 266,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework17FWSafeUnwrappableP10fwAsStringSSvp\">fwAsString<\/RelatedName>"
              }
            ],
            "key.typename" : "String",
            "key.typeusr" : "$sSSD",
            "key.usr" : "s:11FWFramework17FWSafeUnwrappablePAAE10fwAsStringSSvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var fwAsNumber: <Type usr=\"c:objc(cs)NSNumber\">NSNumber<\/Type> { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 8214
              }
            ],
            "key.bodylength" : 27,
            "key.bodyoffset" : 8247,
            "key.column" : 16,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWEncode.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>fwAsNumber<\/decl.name>: <decl.var.type><ref.class usr=\"c:objc(cs)NSNumber\">NSNumber<\/ref.class><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 54,
            "key.line" : 267,
            "key.name" : "fwAsNumber",
            "key.namelength" : 10,
            "key.nameoffset" : 8225,
            "key.offset" : 8221,
            "key.parsed_declaration" : "public var fwAsNumber: NSNumber",
            "key.parsed_scope.end" : 267,
            "key.parsed_scope.start" : 267,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework17FWSafeUnwrappableP10fwAsNumberSo8NSNumberCvp\">fwAsNumber<\/RelatedName>"
              }
            ],
            "key.typename" : "NSNumber",
            "key.typeusr" : "$sSo8NSNumberCD",
            "key.usr" : "s:11FWFramework17FWSafeUnwrappablePAAE10fwAsNumberSo8NSNumberCvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var fwAsArray: [Any] { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 8280
              }
            ],
            "key.bodylength" : 41,
            "key.bodyoffset" : 8309,
            "key.column" : 16,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWEncode.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>fwAsArray<\/decl.name>: <decl.var.type>[<syntaxtype.keyword>Any<\/syntaxtype.keyword>]<\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 64,
            "key.line" : 268,
            "key.name" : "fwAsArray",
            "key.namelength" : 9,
            "key.nameoffset" : 8291,
            "key.offset" : 8287,
            "key.parsed_declaration" : "public var fwAsArray: [Any]",
            "key.parsed_scope.end" : 268,
            "key.parsed_scope.start" : 268,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework17FWSafeUnwrappableP9fwAsArraySayypGvp\">fwAsArray<\/RelatedName>"
              }
            ],
            "key.typename" : "[Any]",
            "key.typeusr" : "$sSayypGD",
            "key.usr" : "s:11FWFramework17FWSafeUnwrappablePAAE9fwAsArraySayypGvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var fwAsDicationary: [<Type usr=\"s:s11AnyHashableV\">AnyHashable<\/Type> : Any] { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 8356
              }
            ],
            "key.bodylength" : 54,
            "key.bodyoffset" : 8404,
            "key.column" : 16,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWEncode.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>fwAsDicationary<\/decl.name>: <decl.var.type>[<ref.struct usr=\"s:s11AnyHashableV\">AnyHashable<\/ref.struct> : <syntaxtype.keyword>Any<\/syntaxtype.keyword>]<\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 96,
            "key.line" : 269,
            "key.name" : "fwAsDicationary",
            "key.namelength" : 15,
            "key.nameoffset" : 8367,
            "key.offset" : 8363,
            "key.parsed_declaration" : "public var fwAsDicationary: [AnyHashable: Any]",
            "key.parsed_scope.end" : 269,
            "key.parsed_scope.start" : 269,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework17FWSafeUnwrappableP15fwAsDicationarySDys11AnyHashableVypGvp\">fwAsDicationary<\/RelatedName>"
              }
            ],
            "key.typename" : "[AnyHashable : Any]",
            "key.typeusr" : "$sSDys11AnyHashableVypGD",
            "key.usr" : "s:11FWFramework17FWSafeUnwrappablePAAE15fwAsDicationarySDys11AnyHashableVypGvp"
          }
        ],
        "key.typename" : "FWSafeUnwrappable.Protocol",
        "key.typeusr" : "$s11FWFramework17FWSafeUnwrappable_pmD",
        "key.usr" : "s:11FWFramework17FWSafeUnwrappableP"
      },
      {
        "key.annotated_decl" : "<Declaration>@frozen enum Optional&lt;Wrapped&gt; : <Type usr=\"s:s23ExpressibleByNilLiteralP\">ExpressibleByNilLiteral<\/Type><\/Declaration>",
        "key.bodylength" : 210,
        "key.bodyoffset" : 8516,
        "key.decl_lang" : "source.lang.swift",
        "key.doc.declaration" : "@frozen enum Optional<Wrapped> : ExpressibleByNilLiteral",
        "key.doc.discussion" : [
          {
            "Para" : "You use the `Optional` type whenever you use optional values, even if you never type the word `Optional`. Swift’s type system usually shows the wrapped type’s name with a trailing question mark (`?`) instead of showing the full type name. For example, if a variable has the type `Int?`, that’s just another way of writing `Optional<Int>`. The shortened form is preferred for ease of reading and writing code."
          },
          {
            "Para" : "The types of `shortForm` and `longForm` in the following code sample are the same:"
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "The `Optional` type is an enumeration with two cases. `Optional.none` is equivalent to the `nil` literal. `Optional.some(Wrapped)` stores a wrapped value. For example:"
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "You must unwrap the value of an `Optional` instance before you can use it in many contexts. Because Swift provides several ways to safely unwrap optional values, you can choose the one that helps you write clear, concise code."
          },
          {
            "Para" : "The following examples use this dictionary of image names and file paths:"
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "Getting a dictionary’s value using a key returns an optional value, so `imagePaths[\"star\"]` has type `Optional<String>` or, written in the preferred manner, `String?`."
          },
          {
            "Para" : "To conditionally bind the wrapped value of an `Optional` instance to a new variable, use one of the optional binding control structures, including `if let`, `guard let`, and `switch`."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "To safely access the properties and methods of a wrapped instance, use the postfix optional chaining operator (postfix `?`). The following example uses optional chaining to access the `hasSuffix(_:)` method on a `String?` instance."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "Use the nil-coalescing operator (`??`) to supply a default value in case the `Optional` instance is `nil`. Here a default path is supplied for an image that is missing from `imagePaths`."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "The `??` operator also works with another `Optional` instance on the right-hand side. As a result, you can chain multiple `??` operators together."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "When you’re certain that an instance of `Optional` contains a value, you can unconditionally unwrap the value by using the forced unwrap operator (postfix `!`). For example, the result of the failable `Int` initializer is unconditionally unwrapped in the example below."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "You can also perform unconditional optional chaining by using the postfix `!` operator."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "Unconditionally unwrapping a `nil` instance with `!` triggers a runtime error."
          }
        ],
        "key.doc.full_as_xml" : "<Other><Name>Optional<\/Name><USR>s:Sq<\/USR><Declaration>@frozen enum Optional&lt;Wrapped&gt; : ExpressibleByNilLiteral<\/Declaration><CommentParts><Abstract><Para>A type that represents either a wrapped value or <codeVoice>nil<\/codeVoice>, the absence of a value.<\/Para><\/Abstract><Discussion><Para>You use the <codeVoice>Optional<\/codeVoice> type whenever you use optional values, even if you never type the word <codeVoice>Optional<\/codeVoice>. Swift’s type system usually shows the wrapped type’s name with a trailing question mark (<codeVoice>?<\/codeVoice>) instead of showing the full type name. For example, if a variable has the type <codeVoice>Int?<\/codeVoice>, that’s just another way of writing <codeVoice>Optional&lt;Int&gt;<\/codeVoice>. The shortened form is preferred for ease of reading and writing code.<\/Para><Para>The types of <codeVoice>shortForm<\/codeVoice> and <codeVoice>longForm<\/codeVoice> in the following code sample are the same:<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let shortForm: Int? = Int(\"42\")]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let longForm: Optional<Int> = Int(\"42\")]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>The <codeVoice>Optional<\/codeVoice> type is an enumeration with two cases. <codeVoice>Optional.none<\/codeVoice> is equivalent to the <codeVoice>nil<\/codeVoice> literal. <codeVoice>Optional.some(Wrapped)<\/codeVoice> stores a wrapped value. For example:<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let number: Int? = Optional.some(42)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let noNumber: Int? = Optional.none]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(noNumber == nil)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"true\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>You must unwrap the value of an <codeVoice>Optional<\/codeVoice> instance before you can use it in many contexts. Because Swift provides several ways to safely unwrap optional values, you can choose the one that helps you write clear, concise code.<\/Para><Para>The following examples use this dictionary of image names and file paths:<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let imagePaths = [\"star\": \"\/glyphs\/star.png\",]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[                  \"portrait\": \"\/images\/content\/portrait.jpg\",]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[                  \"spacer\": \"\/images\/shared\/spacer.gif\"]]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>Getting a dictionary’s value using a key returns an optional value, so <codeVoice>imagePaths[&quot;star&quot;]<\/codeVoice> has type <codeVoice>Optional&lt;String&gt;<\/codeVoice> or, written in the preferred manner, <codeVoice>String?<\/codeVoice>.<\/Para><rawHTML><![CDATA[<h2>]]><\/rawHTML>Optional Binding<rawHTML><![CDATA[<\/h2>]]><\/rawHTML><Para>To conditionally bind the wrapped value of an <codeVoice>Optional<\/codeVoice> instance to a new variable, use one of the optional binding control structures, including <codeVoice>if let<\/codeVoice>, <codeVoice>guard let<\/codeVoice>, and <codeVoice>switch<\/codeVoice>.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[if let starPath = imagePaths[\"star\"] {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    print(\"The star image is at '\\(starPath)'\")]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[} else {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    print(\"Couldn't find the star image\")]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"The star image is at '\/glyphs\/star.png'\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><rawHTML><![CDATA[<h2>]]><\/rawHTML>Optional Chaining<rawHTML><![CDATA[<\/h2>]]><\/rawHTML><Para>To safely access the properties and methods of a wrapped instance, use the postfix optional chaining operator (postfix <codeVoice>?<\/codeVoice>). The following example uses optional chaining to access the <codeVoice>hasSuffix(_:)<\/codeVoice> method on a <codeVoice>String?<\/codeVoice> instance.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[if imagePaths[\"star\"]?.hasSuffix(\".png\") == true {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    print(\"The star image is in PNG format\")]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"The star image is in PNG format\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><rawHTML><![CDATA[<h2>]]><\/rawHTML>Using the Nil-Coalescing Operator<rawHTML><![CDATA[<\/h2>]]><\/rawHTML><Para>Use the nil-coalescing operator (<codeVoice>??<\/codeVoice>) to supply a default value in case the <codeVoice>Optional<\/codeVoice> instance is <codeVoice>nil<\/codeVoice>. Here a default path is supplied for an image that is missing from <codeVoice>imagePaths<\/codeVoice>.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let defaultImagePath = \"\/images\/default.png\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let heartPath = imagePaths[\"heart\"] ?? defaultImagePath]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(heartPath)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"\/images\/default.png\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>The <codeVoice>??<\/codeVoice> operator also works with another <codeVoice>Optional<\/codeVoice> instance on the right-hand side. As a result, you can chain multiple <codeVoice>??<\/codeVoice> operators together.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let shapePath = imagePaths[\"cir\"] ?? imagePaths[\"squ\"] ?? defaultImagePath]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(shapePath)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"\/images\/default.png\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><rawHTML><![CDATA[<h2>]]><\/rawHTML>Unconditional Unwrapping<rawHTML><![CDATA[<\/h2>]]><\/rawHTML><Para>When you’re certain that an instance of <codeVoice>Optional<\/codeVoice> contains a value, you can unconditionally unwrap the value by using the forced unwrap operator (postfix <codeVoice>!<\/codeVoice>). For example, the result of the failable <codeVoice>Int<\/codeVoice> initializer is unconditionally unwrapped in the example below.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let number = Int(\"42\")!]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(number)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"42\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>You can also perform unconditional optional chaining by using the postfix <codeVoice>!<\/codeVoice> operator.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let isPNG = imagePaths[\"star\"]!.hasSuffix(\".png\")]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(isPNG)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"true\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>Unconditionally unwrapping a <codeVoice>nil<\/codeVoice> instance with <codeVoice>!<\/codeVoice> triggers a runtime error.<\/Para><\/Discussion><\/CommentParts><\/Other>",
        "key.doc.name" : "Optional",
        "key.doc.type" : "Other",
        "key.fully_annotated_decl" : "<decl.enum><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@frozen<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>enum<\/syntaxtype.keyword> <decl.name>Optional<\/decl.name>&lt;<decl.generic_type_param usr=\"s:Sq7Wrappedxmfp\"><decl.generic_type_param.name>Wrapped<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt; : <ref.protocol usr=\"s:s23ExpressibleByNilLiteralP\">ExpressibleByNilLiteral<\/ref.protocol><\/decl.enum>",
        "key.groupname" : "Optional",
        "key.is_system" : true,
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 264,
        "key.modulename" : "Swift",
        "key.name" : "Optional",
        "key.namelength" : 8,
        "key.nameoffset" : 8473,
        "key.offset" : 8463,
        "key.parsed_declaration" : "extension Optional where Wrapped: FWSafeUnwrappable",
        "key.parsed_scope.end" : 275,
        "key.parsed_scope.start" : 272,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var fwSafeValue: <Type usr=\"s:Sq11FWFrameworkAA17FWSafeUnwrappableRzlE7Wrappedxmfp\">Wrapped<\/Type> { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 8521
              }
            ],
            "key.bodylength" : 67,
            "key.bodyoffset" : 8554,
            "key.column" : 16,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWEncode.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>fwSafeValue<\/decl.name>: <decl.var.type><ref.generic_type_param usr=\"s:Sq11FWFrameworkAA17FWSafeUnwrappableRzlE7Wrappedxmfp\">Wrapped<\/ref.generic_type_param><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.groupname" : "Optional",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 94,
            "key.line" : 273,
            "key.name" : "fwSafeValue",
            "key.namelength" : 11,
            "key.nameoffset" : 8532,
            "key.offset" : 8528,
            "key.parsed_declaration" : "public var fwSafeValue: Wrapped",
            "key.parsed_scope.end" : 273,
            "key.parsed_scope.start" : 273,
            "key.typename" : "Wrapped",
            "key.typeusr" : "$sxD",
            "key.usr" : "s:Sq11FWFrameworkAA17FWSafeUnwrappableRzlE11fwSafeValuexvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var fwIsEmpty: <Type usr=\"s:Sb\">Bool<\/Type> { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 8627
              }
            ],
            "key.bodylength" : 69,
            "key.bodyoffset" : 8655,
            "key.column" : 16,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWEncode.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>fwIsEmpty<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.groupname" : "Optional",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 91,
            "key.line" : 274,
            "key.name" : "fwIsEmpty",
            "key.namelength" : 9,
            "key.nameoffset" : 8638,
            "key.offset" : 8634,
            "key.parsed_declaration" : "public var fwIsEmpty: Bool",
            "key.parsed_scope.end" : 274,
            "key.parsed_scope.start" : 274,
            "key.typename" : "Bool",
            "key.typeusr" : "$sSbD",
            "key.usr" : "s:Sq11FWFrameworkAA17FWSafeUnwrappableRzlE9fwIsEmptySbvp"
          }
        ],
        "key.typename" : "Optional<Wrapped>.Type",
        "key.typeusr" : "$sxSgmD",
        "key.usr" : "s:Sq"
      },
      {
        "key.annotated_decl" : "<Declaration>@frozen enum Optional&lt;Wrapped&gt; : <Type usr=\"s:s23ExpressibleByNilLiteralP\">ExpressibleByNilLiteral<\/Type><\/Declaration>",
        "key.bodylength" : 626,
        "key.bodyoffset" : 8748,
        "key.decl_lang" : "source.lang.swift",
        "key.doc.declaration" : "@frozen enum Optional<Wrapped> : ExpressibleByNilLiteral",
        "key.doc.discussion" : [
          {
            "Para" : "You use the `Optional` type whenever you use optional values, even if you never type the word `Optional`. Swift’s type system usually shows the wrapped type’s name with a trailing question mark (`?`) instead of showing the full type name. For example, if a variable has the type `Int?`, that’s just another way of writing `Optional<Int>`. The shortened form is preferred for ease of reading and writing code."
          },
          {
            "Para" : "The types of `shortForm` and `longForm` in the following code sample are the same:"
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "The `Optional` type is an enumeration with two cases. `Optional.none` is equivalent to the `nil` literal. `Optional.some(Wrapped)` stores a wrapped value. For example:"
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "You must unwrap the value of an `Optional` instance before you can use it in many contexts. Because Swift provides several ways to safely unwrap optional values, you can choose the one that helps you write clear, concise code."
          },
          {
            "Para" : "The following examples use this dictionary of image names and file paths:"
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "Getting a dictionary’s value using a key returns an optional value, so `imagePaths[\"star\"]` has type `Optional<String>` or, written in the preferred manner, `String?`."
          },
          {
            "Para" : "To conditionally bind the wrapped value of an `Optional` instance to a new variable, use one of the optional binding control structures, including `if let`, `guard let`, and `switch`."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "To safely access the properties and methods of a wrapped instance, use the postfix optional chaining operator (postfix `?`). The following example uses optional chaining to access the `hasSuffix(_:)` method on a `String?` instance."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "Use the nil-coalescing operator (`??`) to supply a default value in case the `Optional` instance is `nil`. Here a default path is supplied for an image that is missing from `imagePaths`."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "The `??` operator also works with another `Optional` instance on the right-hand side. As a result, you can chain multiple `??` operators together."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "When you’re certain that an instance of `Optional` contains a value, you can unconditionally unwrap the value by using the forced unwrap operator (postfix `!`). For example, the result of the failable `Int` initializer is unconditionally unwrapped in the example below."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "You can also perform unconditional optional chaining by using the postfix `!` operator."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "Unconditionally unwrapping a `nil` instance with `!` triggers a runtime error."
          }
        ],
        "key.doc.full_as_xml" : "<Other><Name>Optional<\/Name><USR>s:Sq<\/USR><Declaration>@frozen enum Optional&lt;Wrapped&gt; : ExpressibleByNilLiteral<\/Declaration><CommentParts><Abstract><Para>A type that represents either a wrapped value or <codeVoice>nil<\/codeVoice>, the absence of a value.<\/Para><\/Abstract><Discussion><Para>You use the <codeVoice>Optional<\/codeVoice> type whenever you use optional values, even if you never type the word <codeVoice>Optional<\/codeVoice>. Swift’s type system usually shows the wrapped type’s name with a trailing question mark (<codeVoice>?<\/codeVoice>) instead of showing the full type name. For example, if a variable has the type <codeVoice>Int?<\/codeVoice>, that’s just another way of writing <codeVoice>Optional&lt;Int&gt;<\/codeVoice>. The shortened form is preferred for ease of reading and writing code.<\/Para><Para>The types of <codeVoice>shortForm<\/codeVoice> and <codeVoice>longForm<\/codeVoice> in the following code sample are the same:<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let shortForm: Int? = Int(\"42\")]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let longForm: Optional<Int> = Int(\"42\")]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>The <codeVoice>Optional<\/codeVoice> type is an enumeration with two cases. <codeVoice>Optional.none<\/codeVoice> is equivalent to the <codeVoice>nil<\/codeVoice> literal. <codeVoice>Optional.some(Wrapped)<\/codeVoice> stores a wrapped value. For example:<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let number: Int? = Optional.some(42)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let noNumber: Int? = Optional.none]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(noNumber == nil)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"true\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>You must unwrap the value of an <codeVoice>Optional<\/codeVoice> instance before you can use it in many contexts. Because Swift provides several ways to safely unwrap optional values, you can choose the one that helps you write clear, concise code.<\/Para><Para>The following examples use this dictionary of image names and file paths:<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let imagePaths = [\"star\": \"\/glyphs\/star.png\",]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[                  \"portrait\": \"\/images\/content\/portrait.jpg\",]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[                  \"spacer\": \"\/images\/shared\/spacer.gif\"]]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>Getting a dictionary’s value using a key returns an optional value, so <codeVoice>imagePaths[&quot;star&quot;]<\/codeVoice> has type <codeVoice>Optional&lt;String&gt;<\/codeVoice> or, written in the preferred manner, <codeVoice>String?<\/codeVoice>.<\/Para><rawHTML><![CDATA[<h2>]]><\/rawHTML>Optional Binding<rawHTML><![CDATA[<\/h2>]]><\/rawHTML><Para>To conditionally bind the wrapped value of an <codeVoice>Optional<\/codeVoice> instance to a new variable, use one of the optional binding control structures, including <codeVoice>if let<\/codeVoice>, <codeVoice>guard let<\/codeVoice>, and <codeVoice>switch<\/codeVoice>.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[if let starPath = imagePaths[\"star\"] {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    print(\"The star image is at '\\(starPath)'\")]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[} else {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    print(\"Couldn't find the star image\")]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"The star image is at '\/glyphs\/star.png'\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><rawHTML><![CDATA[<h2>]]><\/rawHTML>Optional Chaining<rawHTML><![CDATA[<\/h2>]]><\/rawHTML><Para>To safely access the properties and methods of a wrapped instance, use the postfix optional chaining operator (postfix <codeVoice>?<\/codeVoice>). The following example uses optional chaining to access the <codeVoice>hasSuffix(_:)<\/codeVoice> method on a <codeVoice>String?<\/codeVoice> instance.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[if imagePaths[\"star\"]?.hasSuffix(\".png\") == true {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    print(\"The star image is in PNG format\")]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"The star image is in PNG format\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><rawHTML><![CDATA[<h2>]]><\/rawHTML>Using the Nil-Coalescing Operator<rawHTML><![CDATA[<\/h2>]]><\/rawHTML><Para>Use the nil-coalescing operator (<codeVoice>??<\/codeVoice>) to supply a default value in case the <codeVoice>Optional<\/codeVoice> instance is <codeVoice>nil<\/codeVoice>. Here a default path is supplied for an image that is missing from <codeVoice>imagePaths<\/codeVoice>.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let defaultImagePath = \"\/images\/default.png\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let heartPath = imagePaths[\"heart\"] ?? defaultImagePath]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(heartPath)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"\/images\/default.png\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>The <codeVoice>??<\/codeVoice> operator also works with another <codeVoice>Optional<\/codeVoice> instance on the right-hand side. As a result, you can chain multiple <codeVoice>??<\/codeVoice> operators together.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let shapePath = imagePaths[\"cir\"] ?? imagePaths[\"squ\"] ?? defaultImagePath]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(shapePath)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"\/images\/default.png\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><rawHTML><![CDATA[<h2>]]><\/rawHTML>Unconditional Unwrapping<rawHTML><![CDATA[<\/h2>]]><\/rawHTML><Para>When you’re certain that an instance of <codeVoice>Optional<\/codeVoice> contains a value, you can unconditionally unwrap the value by using the forced unwrap operator (postfix <codeVoice>!<\/codeVoice>). For example, the result of the failable <codeVoice>Int<\/codeVoice> initializer is unconditionally unwrapped in the example below.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let number = Int(\"42\")!]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(number)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"42\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>You can also perform unconditional optional chaining by using the postfix <codeVoice>!<\/codeVoice> operator.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let isPNG = imagePaths[\"star\"]!.hasSuffix(\".png\")]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(isPNG)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"true\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>Unconditionally unwrapping a <codeVoice>nil<\/codeVoice> instance with <codeVoice>!<\/codeVoice> triggers a runtime error.<\/Para><\/Discussion><\/CommentParts><\/Other>",
        "key.doc.name" : "Optional",
        "key.doc.type" : "Other",
        "key.fully_annotated_decl" : "<decl.enum><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@frozen<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>enum<\/syntaxtype.keyword> <decl.name>Optional<\/decl.name>&lt;<decl.generic_type_param usr=\"s:Sq7Wrappedxmfp\"><decl.generic_type_param.name>Wrapped<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt; : <ref.protocol usr=\"s:s23ExpressibleByNilLiteralP\">ExpressibleByNilLiteral<\/ref.protocol><\/decl.enum>",
        "key.groupname" : "Optional",
        "key.is_system" : true,
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 647,
        "key.modulename" : "Swift",
        "key.name" : "Optional",
        "key.namelength" : 8,
        "key.nameoffset" : 8738,
        "key.offset" : 8728,
        "key.parsed_declaration" : "extension Optional",
        "key.parsed_scope.end" : 287,
        "key.parsed_scope.start" : 276,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var fwIsNil: <Type usr=\"s:Sb\">Bool<\/Type> { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 8753
              }
            ],
            "key.bodylength" : 20,
            "key.bodyoffset" : 8779,
            "key.column" : 16,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWEncode.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>fwIsNil<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.groupname" : "Optional",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 40,
            "key.line" : 277,
            "key.name" : "fwIsNil",
            "key.namelength" : 7,
            "key.nameoffset" : 8764,
            "key.offset" : 8760,
            "key.parsed_declaration" : "public var fwIsNil: Bool",
            "key.parsed_scope.end" : 277,
            "key.parsed_scope.start" : 277,
            "key.typename" : "Bool",
            "key.typeusr" : "$sSbD",
            "key.usr" : "s:Sq11FWFrameworkE7fwIsNilSbvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var fwAsInt: <Type usr=\"s:Si\">Int<\/Type> { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 8810
              }
            ],
            "key.bodylength" : 28,
            "key.bodyoffset" : 8835,
            "key.column" : 16,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWEncode.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>fwAsInt<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.groupname" : "Optional",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 47,
            "key.line" : 279,
            "key.name" : "fwAsInt",
            "key.namelength" : 7,
            "key.nameoffset" : 8821,
            "key.offset" : 8817,
            "key.parsed_declaration" : "public var fwAsInt: Int",
            "key.parsed_scope.end" : 279,
            "key.parsed_scope.start" : 279,
            "key.typename" : "Int",
            "key.typeusr" : "$sSiD",
            "key.usr" : "s:Sq11FWFrameworkE7fwAsIntSivp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var fwAsBool: <Type usr=\"s:Sb\">Bool<\/Type> { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 8869
              }
            ],
            "key.bodylength" : 29,
            "key.bodyoffset" : 8896,
            "key.column" : 16,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWEncode.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>fwAsBool<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.groupname" : "Optional",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 50,
            "key.line" : 280,
            "key.name" : "fwAsBool",
            "key.namelength" : 8,
            "key.nameoffset" : 8880,
            "key.offset" : 8876,
            "key.parsed_declaration" : "public var fwAsBool: Bool",
            "key.parsed_scope.end" : 280,
            "key.parsed_scope.start" : 280,
            "key.typename" : "Bool",
            "key.typeusr" : "$sSbD",
            "key.usr" : "s:Sq11FWFrameworkE8fwAsBoolSbvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var fwAsFloat: <Type usr=\"s:Sf\">Float<\/Type> { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 8931
              }
            ],
            "key.bodylength" : 30,
            "key.bodyoffset" : 8960,
            "key.column" : 16,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWEncode.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>fwAsFloat<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Sf\">Float<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.groupname" : "Optional",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 53,
            "key.line" : 281,
            "key.name" : "fwAsFloat",
            "key.namelength" : 9,
            "key.nameoffset" : 8942,
            "key.offset" : 8938,
            "key.parsed_declaration" : "public var fwAsFloat: Float",
            "key.parsed_scope.end" : 281,
            "key.parsed_scope.start" : 281,
            "key.typename" : "Float",
            "key.typeusr" : "$sSfD",
            "key.usr" : "s:Sq11FWFrameworkE9fwAsFloatSfvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var fwAsDouble: <Type usr=\"s:Sd\">Double<\/Type> { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 8996
              }
            ],
            "key.bodylength" : 31,
            "key.bodyoffset" : 9027,
            "key.column" : 16,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWEncode.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>fwAsDouble<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Sd\">Double<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.groupname" : "Optional",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 56,
            "key.line" : 282,
            "key.name" : "fwAsDouble",
            "key.namelength" : 10,
            "key.nameoffset" : 9007,
            "key.offset" : 9003,
            "key.parsed_declaration" : "public var fwAsDouble: Double",
            "key.parsed_scope.end" : 282,
            "key.parsed_scope.start" : 282,
            "key.typename" : "Double",
            "key.typeusr" : "$sSdD",
            "key.usr" : "s:Sq11FWFrameworkE10fwAsDoubleSdvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var fwAsString: <Type usr=\"s:SS\">String<\/Type> { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 9064
              }
            ],
            "key.bodylength" : 27,
            "key.bodyoffset" : 9095,
            "key.column" : 16,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWEncode.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>fwAsString<\/decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.groupname" : "Optional",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 52,
            "key.line" : 283,
            "key.name" : "fwAsString",
            "key.namelength" : 10,
            "key.nameoffset" : 9075,
            "key.offset" : 9071,
            "key.parsed_declaration" : "public var fwAsString: String",
            "key.parsed_scope.end" : 283,
            "key.parsed_scope.start" : 283,
            "key.typename" : "String",
            "key.typeusr" : "$sSSD",
            "key.usr" : "s:Sq11FWFrameworkE10fwAsStringSSvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var fwAsNumber: <Type usr=\"c:objc(cs)NSNumber\">NSNumber<\/Type> { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 9128
              }
            ],
            "key.bodylength" : 27,
            "key.bodyoffset" : 9161,
            "key.column" : 16,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWEncode.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>fwAsNumber<\/decl.name>: <decl.var.type><ref.class usr=\"c:objc(cs)NSNumber\">NSNumber<\/ref.class><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.groupname" : "Optional",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 54,
            "key.line" : 284,
            "key.name" : "fwAsNumber",
            "key.namelength" : 10,
            "key.nameoffset" : 9139,
            "key.offset" : 9135,
            "key.parsed_declaration" : "public var fwAsNumber: NSNumber",
            "key.parsed_scope.end" : 284,
            "key.parsed_scope.start" : 284,
            "key.typename" : "NSNumber",
            "key.typeusr" : "$sSo8NSNumberCD",
            "key.usr" : "s:Sq11FWFrameworkE10fwAsNumberSo8NSNumberCvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var fwAsArray: [Any] { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 9194
              }
            ],
            "key.bodylength" : 41,
            "key.bodyoffset" : 9223,
            "key.column" : 16,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWEncode.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>fwAsArray<\/decl.name>: <decl.var.type>[<syntaxtype.keyword>Any<\/syntaxtype.keyword>]<\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.groupname" : "Optional",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 64,
            "key.line" : 285,
            "key.name" : "fwAsArray",
            "key.namelength" : 9,
            "key.nameoffset" : 9205,
            "key.offset" : 9201,
            "key.parsed_declaration" : "public var fwAsArray: [Any]",
            "key.parsed_scope.end" : 285,
            "key.parsed_scope.start" : 285,
            "key.typename" : "[Any]",
            "key.typeusr" : "$sSayypGD",
            "key.usr" : "s:Sq11FWFrameworkE9fwAsArraySayypGvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var fwAsDicationary: [<Type usr=\"s:s11AnyHashableV\">AnyHashable<\/Type> : Any] { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 9270
              }
            ],
            "key.bodylength" : 54,
            "key.bodyoffset" : 9318,
            "key.column" : 16,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWEncode.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>fwAsDicationary<\/decl.name>: <decl.var.type>[<ref.struct usr=\"s:s11AnyHashableV\">AnyHashable<\/ref.struct> : <syntaxtype.keyword>Any<\/syntaxtype.keyword>]<\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.groupname" : "Optional",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 96,
            "key.line" : 286,
            "key.name" : "fwAsDicationary",
            "key.namelength" : 15,
            "key.nameoffset" : 9281,
            "key.offset" : 9277,
            "key.parsed_declaration" : "public var fwAsDicationary: [AnyHashable: Any]",
            "key.parsed_scope.end" : 286,
            "key.parsed_scope.start" : 286,
            "key.typename" : "[AnyHashable : Any]",
            "key.typeusr" : "$sSDys11AnyHashableVypGD",
            "key.usr" : "s:Sq11FWFrameworkE15fwAsDicationarySDys11AnyHashableVypGvp"
          }
        ],
        "key.typename" : "Optional<Wrapped>.Type",
        "key.typeusr" : "$sxSgmD",
        "key.usr" : "s:Sq"
      },
      {
        "key.annotated_decl" : "<Declaration>@frozen struct Int : <Type usr=\"s:s17FixedWidthIntegerP\">FixedWidthInteger<\/Type>, <Type usr=\"s:SZ\">SignedInteger<\/Type>, <Type usr=\"s:s35_ExpressibleByBuiltinIntegerLiteralP\">_ExpressibleByBuiltinIntegerLiteral<\/Type><\/Declaration>",
        "key.bodylength" : 111,
        "key.bodyoffset" : 9410,
        "key.decl_lang" : "source.lang.swift",
        "key.doc.declaration" : "@frozen struct Int : FixedWidthInteger, SignedInteger, _ExpressibleByBuiltinIntegerLiteral",
        "key.doc.discussion" : [
          {
            "Para" : "On 32-bit platforms, `Int` is the same size as `Int32`, and on 64-bit platforms, `Int` is the same size as `Int64`."
          }
        ],
        "key.doc.full_as_xml" : "<Class><Name>Int<\/Name><USR>s:Si<\/USR><Declaration>@frozen struct Int : FixedWidthInteger, SignedInteger, _ExpressibleByBuiltinIntegerLiteral<\/Declaration><CommentParts><Abstract><Para>A signed integer value type.<\/Para><\/Abstract><Discussion><Para>On 32-bit platforms, <codeVoice>Int<\/codeVoice> is the same size as <codeVoice>Int32<\/codeVoice>, and on 64-bit platforms, <codeVoice>Int<\/codeVoice> is the same size as <codeVoice>Int64<\/codeVoice>.<\/Para><\/Discussion><\/CommentParts><\/Class>",
        "key.doc.name" : "Int",
        "key.doc.type" : "Class",
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 17,
            "key.offset" : 9391
          }
        ],
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@frozen<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>Int<\/decl.name> : <ref.protocol usr=\"s:s17FixedWidthIntegerP\">FixedWidthInteger<\/ref.protocol>, <ref.protocol usr=\"s:SZ\">SignedInteger<\/ref.protocol>, <ref.protocol usr=\"s:s35_ExpressibleByBuiltinIntegerLiteralP\">_ExpressibleByBuiltinIntegerLiteral<\/ref.protocol><\/decl.struct>",
        "key.groupname" : "Math\/Integers",
        "key.inheritedtypes" : [
          {
            "key.name" : "FWSafeUnwrappable"
          }
        ],
        "key.is_system" : true,
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 146,
        "key.modulename" : "Swift",
        "key.name" : "Int",
        "key.namelength" : 3,
        "key.nameoffset" : 9386,
        "key.offset" : 9376,
        "key.parsed_declaration" : "extension Int: FWSafeUnwrappable",
        "key.parsed_scope.end" : 291,
        "key.parsed_scope.start" : 288,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public static var fwSafeValue: <Type usr=\"s:Si\">Int<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 9415
              }
            ],
            "key.column" : 23,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWEncode.swift",
            "key.fully_annotated_decl" : "<decl.var.static><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>fwSafeValue<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.type><\/decl.var.static>",
            "key.groupname" : "Math\/Integers",
            "key.kind" : "source.lang.swift.decl.var.static",
            "key.length" : 35,
            "key.line" : 289,
            "key.name" : "fwSafeValue",
            "key.namelength" : 11,
            "key.nameoffset" : 9433,
            "key.offset" : 9422,
            "key.overrides" : [
              {
                "key.usr" : "s:11FWFramework17FWSafeUnwrappableP11fwSafeValuexvpZ"
              }
            ],
            "key.parsed_declaration" : "public static var fwSafeValue: Int = .zero",
            "key.parsed_scope.end" : 289,
            "key.parsed_scope.start" : 289,
            "key.setter_accessibility" : "source.lang.swift.accessibility.public",
            "key.typename" : "Int",
            "key.typeusr" : "$sSiD",
            "key.usr" : "s:Si11FWFrameworkE11fwSafeValueSivpZ"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var fwIsEmpty: <Type usr=\"s:Sb\">Bool<\/Type> { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 9462
              }
            ],
            "key.bodylength" : 29,
            "key.bodyoffset" : 9490,
            "key.column" : 16,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWEncode.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>fwIsEmpty<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.groupname" : "Math\/Integers",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 51,
            "key.line" : 290,
            "key.name" : "fwIsEmpty",
            "key.namelength" : 9,
            "key.nameoffset" : 9473,
            "key.offset" : 9469,
            "key.overrides" : [
              {
                "key.usr" : "s:11FWFramework17FWSafeUnwrappableP9fwIsEmptySbvp"
              }
            ],
            "key.parsed_declaration" : "public var fwIsEmpty: Bool",
            "key.parsed_scope.end" : 290,
            "key.parsed_scope.start" : 290,
            "key.typename" : "Bool",
            "key.typeusr" : "$sSbD",
            "key.usr" : "s:Si11FWFrameworkE9fwIsEmptySbvp"
          }
        ],
        "key.typename" : "Int.Type",
        "key.typeusr" : "$sSimD",
        "key.usr" : "s:Si"
      },
      {
        "key.annotated_decl" : "<Declaration>@frozen struct Int8 : <Type usr=\"s:s17FixedWidthIntegerP\">FixedWidthInteger<\/Type>, <Type usr=\"s:SZ\">SignedInteger<\/Type>, <Type usr=\"s:s35_ExpressibleByBuiltinIntegerLiteralP\">_ExpressibleByBuiltinIntegerLiteral<\/Type><\/Declaration>",
        "key.bodylength" : 112,
        "key.bodyoffset" : 9558,
        "key.decl_lang" : "source.lang.swift",
        "key.doc.declaration" : "@frozen struct Int8 : FixedWidthInteger, SignedInteger, _ExpressibleByBuiltinIntegerLiteral",
        "key.doc.full_as_xml" : "<Class><Name>Int8<\/Name><USR>s:s4Int8V<\/USR><Declaration>@frozen struct Int8 : FixedWidthInteger, SignedInteger, _ExpressibleByBuiltinIntegerLiteral<\/Declaration><CommentParts><Abstract><Para>An 8-bit signed integer value type.<\/Para><\/Abstract><\/CommentParts><\/Class>",
        "key.doc.name" : "Int8",
        "key.doc.type" : "Class",
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 17,
            "key.offset" : 9539
          }
        ],
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@frozen<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>Int8<\/decl.name> : <ref.protocol usr=\"s:s17FixedWidthIntegerP\">FixedWidthInteger<\/ref.protocol>, <ref.protocol usr=\"s:SZ\">SignedInteger<\/ref.protocol>, <ref.protocol usr=\"s:s35_ExpressibleByBuiltinIntegerLiteralP\">_ExpressibleByBuiltinIntegerLiteral<\/ref.protocol><\/decl.struct>",
        "key.groupname" : "Math\/Integers",
        "key.inheritedtypes" : [
          {
            "key.name" : "FWSafeUnwrappable"
          }
        ],
        "key.is_system" : true,
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 148,
        "key.modulename" : "Swift",
        "key.name" : "Int8",
        "key.namelength" : 4,
        "key.nameoffset" : 9533,
        "key.offset" : 9523,
        "key.parsed_declaration" : "extension Int8: FWSafeUnwrappable",
        "key.parsed_scope.end" : 295,
        "key.parsed_scope.start" : 292,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public static var fwSafeValue: <Type usr=\"s:s4Int8V\">Int8<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 9563
              }
            ],
            "key.column" : 23,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWEncode.swift",
            "key.fully_annotated_decl" : "<decl.var.static><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>fwSafeValue<\/decl.name>: <decl.var.type><ref.struct usr=\"s:s4Int8V\">Int8<\/ref.struct><\/decl.var.type><\/decl.var.static>",
            "key.groupname" : "Math\/Integers",
            "key.kind" : "source.lang.swift.decl.var.static",
            "key.length" : 36,
            "key.line" : 293,
            "key.name" : "fwSafeValue",
            "key.namelength" : 11,
            "key.nameoffset" : 9581,
            "key.offset" : 9570,
            "key.overrides" : [
              {
                "key.usr" : "s:11FWFramework17FWSafeUnwrappableP11fwSafeValuexvpZ"
              }
            ],
            "key.parsed_declaration" : "public static var fwSafeValue: Int8 = .zero",
            "key.parsed_scope.end" : 293,
            "key.parsed_scope.start" : 293,
            "key.setter_accessibility" : "source.lang.swift.accessibility.public",
            "key.typename" : "Int8",
            "key.typeusr" : "$ss4Int8VD",
            "key.usr" : "s:s4Int8V11FWFrameworkE11fwSafeValueABvpZ"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var fwIsEmpty: <Type usr=\"s:Sb\">Bool<\/Type> { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 9611
              }
            ],
            "key.bodylength" : 29,
            "key.bodyoffset" : 9639,
            "key.column" : 16,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWEncode.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>fwIsEmpty<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.groupname" : "Math\/Integers",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 51,
            "key.line" : 294,
            "key.name" : "fwIsEmpty",
            "key.namelength" : 9,
            "key.nameoffset" : 9622,
            "key.offset" : 9618,
            "key.overrides" : [
              {
                "key.usr" : "s:11FWFramework17FWSafeUnwrappableP9fwIsEmptySbvp"
              }
            ],
            "key.parsed_declaration" : "public var fwIsEmpty: Bool",
            "key.parsed_scope.end" : 294,
            "key.parsed_scope.start" : 294,
            "key.typename" : "Bool",
            "key.typeusr" : "$sSbD",
            "key.usr" : "s:s4Int8V11FWFrameworkE9fwIsEmptySbvp"
          }
        ],
        "key.typename" : "Int8.Type",
        "key.typeusr" : "$ss4Int8VmD",
        "key.usr" : "s:s4Int8V"
      },
      {
        "key.annotated_decl" : "<Declaration>@frozen struct Int16 : <Type usr=\"s:s17FixedWidthIntegerP\">FixedWidthInteger<\/Type>, <Type usr=\"s:SZ\">SignedInteger<\/Type>, <Type usr=\"s:s35_ExpressibleByBuiltinIntegerLiteralP\">_ExpressibleByBuiltinIntegerLiteral<\/Type><\/Declaration>",
        "key.bodylength" : 113,
        "key.bodyoffset" : 9708,
        "key.decl_lang" : "source.lang.swift",
        "key.doc.declaration" : "@frozen struct Int16 : FixedWidthInteger, SignedInteger, _ExpressibleByBuiltinIntegerLiteral",
        "key.doc.full_as_xml" : "<Class><Name>Int16<\/Name><USR>s:s5Int16V<\/USR><Declaration>@frozen struct Int16 : FixedWidthInteger, SignedInteger, _ExpressibleByBuiltinIntegerLiteral<\/Declaration><CommentParts><Abstract><Para>A 16-bit signed integer value type.<\/Para><\/Abstract><\/CommentParts><\/Class>",
        "key.doc.name" : "Int16",
        "key.doc.type" : "Class",
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 17,
            "key.offset" : 9689
          }
        ],
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@frozen<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>Int16<\/decl.name> : <ref.protocol usr=\"s:s17FixedWidthIntegerP\">FixedWidthInteger<\/ref.protocol>, <ref.protocol usr=\"s:SZ\">SignedInteger<\/ref.protocol>, <ref.protocol usr=\"s:s35_ExpressibleByBuiltinIntegerLiteralP\">_ExpressibleByBuiltinIntegerLiteral<\/ref.protocol><\/decl.struct>",
        "key.groupname" : "Math\/Integers",
        "key.inheritedtypes" : [
          {
            "key.name" : "FWSafeUnwrappable"
          }
        ],
        "key.is_system" : true,
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 150,
        "key.modulename" : "Swift",
        "key.name" : "Int16",
        "key.namelength" : 5,
        "key.nameoffset" : 9682,
        "key.offset" : 9672,
        "key.parsed_declaration" : "extension Int16: FWSafeUnwrappable",
        "key.parsed_scope.end" : 299,
        "key.parsed_scope.start" : 296,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public static var fwSafeValue: <Type usr=\"s:s5Int16V\">Int16<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 9713
              }
            ],
            "key.column" : 23,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWEncode.swift",
            "key.fully_annotated_decl" : "<decl.var.static><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>fwSafeValue<\/decl.name>: <decl.var.type><ref.struct usr=\"s:s5Int16V\">Int16<\/ref.struct><\/decl.var.type><\/decl.var.static>",
            "key.groupname" : "Math\/Integers",
            "key.kind" : "source.lang.swift.decl.var.static",
            "key.length" : 37,
            "key.line" : 297,
            "key.name" : "fwSafeValue",
            "key.namelength" : 11,
            "key.nameoffset" : 9731,
            "key.offset" : 9720,
            "key.overrides" : [
              {
                "key.usr" : "s:11FWFramework17FWSafeUnwrappableP11fwSafeValuexvpZ"
              }
            ],
            "key.parsed_declaration" : "public static var fwSafeValue: Int16 = .zero",
            "key.parsed_scope.end" : 297,
            "key.parsed_scope.start" : 297,
            "key.setter_accessibility" : "source.lang.swift.accessibility.public",
            "key.typename" : "Int16",
            "key.typeusr" : "$ss5Int16VD",
            "key.usr" : "s:s5Int16V11FWFrameworkE11fwSafeValueABvpZ"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var fwIsEmpty: <Type usr=\"s:Sb\">Bool<\/Type> { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 9762
              }
            ],
            "key.bodylength" : 29,
            "key.bodyoffset" : 9790,
            "key.column" : 16,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWEncode.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>fwIsEmpty<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.groupname" : "Math\/Integers",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 51,
            "key.line" : 298,
            "key.name" : "fwIsEmpty",
            "key.namelength" : 9,
            "key.nameoffset" : 9773,
            "key.offset" : 9769,
            "key.overrides" : [
              {
                "key.usr" : "s:11FWFramework17FWSafeUnwrappableP9fwIsEmptySbvp"
              }
            ],
            "key.parsed_declaration" : "public var fwIsEmpty: Bool",
            "key.parsed_scope.end" : 298,
            "key.parsed_scope.start" : 298,
            "key.typename" : "Bool",
            "key.typeusr" : "$sSbD",
            "key.usr" : "s:s5Int16V11FWFrameworkE9fwIsEmptySbvp"
          }
        ],
        "key.typename" : "Int16.Type",
        "key.typeusr" : "$ss5Int16VmD",
        "key.usr" : "s:s5Int16V"
      },
      {
        "key.annotated_decl" : "<Declaration>@frozen struct Int32 : <Type usr=\"s:s17FixedWidthIntegerP\">FixedWidthInteger<\/Type>, <Type usr=\"s:SZ\">SignedInteger<\/Type>, <Type usr=\"s:s35_ExpressibleByBuiltinIntegerLiteralP\">_ExpressibleByBuiltinIntegerLiteral<\/Type><\/Declaration>",
        "key.bodylength" : 113,
        "key.bodyoffset" : 9859,
        "key.decl_lang" : "source.lang.swift",
        "key.doc.declaration" : "@frozen struct Int32 : FixedWidthInteger, SignedInteger, _ExpressibleByBuiltinIntegerLiteral",
        "key.doc.full_as_xml" : "<Class><Name>Int32<\/Name><USR>s:s5Int32V<\/USR><Declaration>@frozen struct Int32 : FixedWidthInteger, SignedInteger, _ExpressibleByBuiltinIntegerLiteral<\/Declaration><CommentParts><Abstract><Para>A 32-bit signed integer value type.<\/Para><\/Abstract><\/CommentParts><\/Class>",
        "key.doc.name" : "Int32",
        "key.doc.type" : "Class",
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 17,
            "key.offset" : 9840
          }
        ],
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@frozen<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>Int32<\/decl.name> : <ref.protocol usr=\"s:s17FixedWidthIntegerP\">FixedWidthInteger<\/ref.protocol>, <ref.protocol usr=\"s:SZ\">SignedInteger<\/ref.protocol>, <ref.protocol usr=\"s:s35_ExpressibleByBuiltinIntegerLiteralP\">_ExpressibleByBuiltinIntegerLiteral<\/ref.protocol><\/decl.struct>",
        "key.groupname" : "Math\/Integers",
        "key.inheritedtypes" : [
          {
            "key.name" : "FWSafeUnwrappable"
          }
        ],
        "key.is_system" : true,
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 150,
        "key.modulename" : "Swift",
        "key.name" : "Int32",
        "key.namelength" : 5,
        "key.nameoffset" : 9833,
        "key.offset" : 9823,
        "key.parsed_declaration" : "extension Int32: FWSafeUnwrappable",
        "key.parsed_scope.end" : 303,
        "key.parsed_scope.start" : 300,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public static var fwSafeValue: <Type usr=\"s:s5Int32V\">Int32<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 9864
              }
            ],
            "key.column" : 23,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWEncode.swift",
            "key.fully_annotated_decl" : "<decl.var.static><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>fwSafeValue<\/decl.name>: <decl.var.type><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.var.type><\/decl.var.static>",
            "key.groupname" : "Math\/Integers",
            "key.kind" : "source.lang.swift.decl.var.static",
            "key.length" : 37,
            "key.line" : 301,
            "key.name" : "fwSafeValue",
            "key.namelength" : 11,
            "key.nameoffset" : 9882,
            "key.offset" : 9871,
            "key.overrides" : [
              {
                "key.usr" : "s:11FWFramework17FWSafeUnwrappableP11fwSafeValuexvpZ"
              }
            ],
            "key.parsed_declaration" : "public static var fwSafeValue: Int32 = .zero",
            "key.parsed_scope.end" : 301,
            "key.parsed_scope.start" : 301,
            "key.setter_accessibility" : "source.lang.swift.accessibility.public",
            "key.typename" : "Int32",
            "key.typeusr" : "$ss5Int32VD",
            "key.usr" : "s:s5Int32V11FWFrameworkE11fwSafeValueABvpZ"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var fwIsEmpty: <Type usr=\"s:Sb\">Bool<\/Type> { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 9913
              }
            ],
            "key.bodylength" : 29,
            "key.bodyoffset" : 9941,
            "key.column" : 16,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWEncode.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>fwIsEmpty<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.groupname" : "Math\/Integers",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 51,
            "key.line" : 302,
            "key.name" : "fwIsEmpty",
            "key.namelength" : 9,
            "key.nameoffset" : 9924,
            "key.offset" : 9920,
            "key.overrides" : [
              {
                "key.usr" : "s:11FWFramework17FWSafeUnwrappableP9fwIsEmptySbvp"
              }
            ],
            "key.parsed_declaration" : "public var fwIsEmpty: Bool",
            "key.parsed_scope.end" : 302,
            "key.parsed_scope.start" : 302,
            "key.typename" : "Bool",
            "key.typeusr" : "$sSbD",
            "key.usr" : "s:s5Int32V11FWFrameworkE9fwIsEmptySbvp"
          }
        ],
        "key.typename" : "Int32.Type",
        "key.typeusr" : "$ss5Int32VmD",
        "key.usr" : "s:s5Int32V"
      },
      {
        "key.annotated_decl" : "<Declaration>@frozen struct Int64 : <Type usr=\"s:s17FixedWidthIntegerP\">FixedWidthInteger<\/Type>, <Type usr=\"s:SZ\">SignedInteger<\/Type>, <Type usr=\"s:s35_ExpressibleByBuiltinIntegerLiteralP\">_ExpressibleByBuiltinIntegerLiteral<\/Type><\/Declaration>",
        "key.bodylength" : 113,
        "key.bodyoffset" : 10010,
        "key.decl_lang" : "source.lang.swift",
        "key.doc.declaration" : "@frozen struct Int64 : FixedWidthInteger, SignedInteger, _ExpressibleByBuiltinIntegerLiteral",
        "key.doc.full_as_xml" : "<Class><Name>Int64<\/Name><USR>s:s5Int64V<\/USR><Declaration>@frozen struct Int64 : FixedWidthInteger, SignedInteger, _ExpressibleByBuiltinIntegerLiteral<\/Declaration><CommentParts><Abstract><Para>A 64-bit signed integer value type.<\/Para><\/Abstract><\/CommentParts><\/Class>",
        "key.doc.name" : "Int64",
        "key.doc.type" : "Class",
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 17,
            "key.offset" : 9991
          }
        ],
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@frozen<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>Int64<\/decl.name> : <ref.protocol usr=\"s:s17FixedWidthIntegerP\">FixedWidthInteger<\/ref.protocol>, <ref.protocol usr=\"s:SZ\">SignedInteger<\/ref.protocol>, <ref.protocol usr=\"s:s35_ExpressibleByBuiltinIntegerLiteralP\">_ExpressibleByBuiltinIntegerLiteral<\/ref.protocol><\/decl.struct>",
        "key.groupname" : "Math\/Integers",
        "key.inheritedtypes" : [
          {
            "key.name" : "FWSafeUnwrappable"
          }
        ],
        "key.is_system" : true,
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 150,
        "key.modulename" : "Swift",
        "key.name" : "Int64",
        "key.namelength" : 5,
        "key.nameoffset" : 9984,
        "key.offset" : 9974,
        "key.parsed_declaration" : "extension Int64: FWSafeUnwrappable",
        "key.parsed_scope.end" : 307,
        "key.parsed_scope.start" : 304,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public static var fwSafeValue: <Type usr=\"s:s5Int64V\">Int64<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 10015
              }
            ],
            "key.column" : 23,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWEncode.swift",
            "key.fully_annotated_decl" : "<decl.var.static><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>fwSafeValue<\/decl.name>: <decl.var.type><ref.struct usr=\"s:s5Int64V\">Int64<\/ref.struct><\/decl.var.type><\/decl.var.static>",
            "key.groupname" : "Math\/Integers",
            "key.kind" : "source.lang.swift.decl.var.static",
            "key.length" : 37,
            "key.line" : 305,
            "key.name" : "fwSafeValue",
            "key.namelength" : 11,
            "key.nameoffset" : 10033,
            "key.offset" : 10022,
            "key.overrides" : [
              {
                "key.usr" : "s:11FWFramework17FWSafeUnwrappableP11fwSafeValuexvpZ"
              }
            ],
            "key.parsed_declaration" : "public static var fwSafeValue: Int64 = .zero",
            "key.parsed_scope.end" : 305,
            "key.parsed_scope.start" : 305,
            "key.setter_accessibility" : "source.lang.swift.accessibility.public",
            "key.typename" : "Int64",
            "key.typeusr" : "$ss5Int64VD",
            "key.usr" : "s:s5Int64V11FWFrameworkE11fwSafeValueABvpZ"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var fwIsEmpty: <Type usr=\"s:Sb\">Bool<\/Type> { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 10064
              }
            ],
            "key.bodylength" : 29,
            "key.bodyoffset" : 10092,
            "key.column" : 16,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWEncode.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>fwIsEmpty<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.groupname" : "Math\/Integers",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 51,
            "key.line" : 306,
            "key.name" : "fwIsEmpty",
            "key.namelength" : 9,
            "key.nameoffset" : 10075,
            "key.offset" : 10071,
            "key.overrides" : [
              {
                "key.usr" : "s:11FWFramework17FWSafeUnwrappableP9fwIsEmptySbvp"
              }
            ],
            "key.parsed_declaration" : "public var fwIsEmpty: Bool",
            "key.parsed_scope.end" : 306,
            "key.parsed_scope.start" : 306,
            "key.typename" : "Bool",
            "key.typeusr" : "$sSbD",
            "key.usr" : "s:s5Int64V11FWFrameworkE9fwIsEmptySbvp"
          }
        ],
        "key.typename" : "Int64.Type",
        "key.typeusr" : "$ss5Int64VmD",
        "key.usr" : "s:s5Int64V"
      },
      {
        "key.annotated_decl" : "<Declaration>@frozen struct UInt : <Type usr=\"s:s17FixedWidthIntegerP\">FixedWidthInteger<\/Type>, <Type usr=\"s:SU\">UnsignedInteger<\/Type>, <Type usr=\"s:s35_ExpressibleByBuiltinIntegerLiteralP\">_ExpressibleByBuiltinIntegerLiteral<\/Type><\/Declaration>",
        "key.bodylength" : 112,
        "key.bodyoffset" : 10160,
        "key.decl_lang" : "source.lang.swift",
        "key.doc.declaration" : "@frozen struct UInt : FixedWidthInteger, UnsignedInteger, _ExpressibleByBuiltinIntegerLiteral",
        "key.doc.discussion" : [
          {
            "Para" : "On 32-bit platforms, `UInt` is the same size as `UInt32`, and on 64-bit platforms, `UInt` is the same size as `UInt64`."
          }
        ],
        "key.doc.full_as_xml" : "<Class><Name>UInt<\/Name><USR>s:Su<\/USR><Declaration>@frozen struct UInt : FixedWidthInteger, UnsignedInteger, _ExpressibleByBuiltinIntegerLiteral<\/Declaration><CommentParts><Abstract><Para>An unsigned integer value type.<\/Para><\/Abstract><Discussion><Para>On 32-bit platforms, <codeVoice>UInt<\/codeVoice> is the same size as <codeVoice>UInt32<\/codeVoice>, and on 64-bit platforms, <codeVoice>UInt<\/codeVoice> is the same size as <codeVoice>UInt64<\/codeVoice>.<\/Para><\/Discussion><\/CommentParts><\/Class>",
        "key.doc.name" : "UInt",
        "key.doc.type" : "Class",
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 17,
            "key.offset" : 10141
          }
        ],
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@frozen<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>UInt<\/decl.name> : <ref.protocol usr=\"s:s17FixedWidthIntegerP\">FixedWidthInteger<\/ref.protocol>, <ref.protocol usr=\"s:SU\">UnsignedInteger<\/ref.protocol>, <ref.protocol usr=\"s:s35_ExpressibleByBuiltinIntegerLiteralP\">_ExpressibleByBuiltinIntegerLiteral<\/ref.protocol><\/decl.struct>",
        "key.groupname" : "Math\/Integers",
        "key.inheritedtypes" : [
          {
            "key.name" : "FWSafeUnwrappable"
          }
        ],
        "key.is_system" : true,
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 148,
        "key.modulename" : "Swift",
        "key.name" : "UInt",
        "key.namelength" : 4,
        "key.nameoffset" : 10135,
        "key.offset" : 10125,
        "key.parsed_declaration" : "extension UInt: FWSafeUnwrappable",
        "key.parsed_scope.end" : 311,
        "key.parsed_scope.start" : 308,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public static var fwSafeValue: <Type usr=\"s:Su\">UInt<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 10165
              }
            ],
            "key.column" : 23,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWEncode.swift",
            "key.fully_annotated_decl" : "<decl.var.static><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>fwSafeValue<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Su\">UInt<\/ref.struct><\/decl.var.type><\/decl.var.static>",
            "key.groupname" : "Math\/Integers",
            "key.kind" : "source.lang.swift.decl.var.static",
            "key.length" : 36,
            "key.line" : 309,
            "key.name" : "fwSafeValue",
            "key.namelength" : 11,
            "key.nameoffset" : 10183,
            "key.offset" : 10172,
            "key.overrides" : [
              {
                "key.usr" : "s:11FWFramework17FWSafeUnwrappableP11fwSafeValuexvpZ"
              }
            ],
            "key.parsed_declaration" : "public static var fwSafeValue: UInt = .zero",
            "key.parsed_scope.end" : 309,
            "key.parsed_scope.start" : 309,
            "key.setter_accessibility" : "source.lang.swift.accessibility.public",
            "key.typename" : "UInt",
            "key.typeusr" : "$sSuD",
            "key.usr" : "s:Su11FWFrameworkE11fwSafeValueSuvpZ"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var fwIsEmpty: <Type usr=\"s:Sb\">Bool<\/Type> { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 10213
              }
            ],
            "key.bodylength" : 29,
            "key.bodyoffset" : 10241,
            "key.column" : 16,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWEncode.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>fwIsEmpty<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.groupname" : "Math\/Integers",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 51,
            "key.line" : 310,
            "key.name" : "fwIsEmpty",
            "key.namelength" : 9,
            "key.nameoffset" : 10224,
            "key.offset" : 10220,
            "key.overrides" : [
              {
                "key.usr" : "s:11FWFramework17FWSafeUnwrappableP9fwIsEmptySbvp"
              }
            ],
            "key.parsed_declaration" : "public var fwIsEmpty: Bool",
            "key.parsed_scope.end" : 310,
            "key.parsed_scope.start" : 310,
            "key.typename" : "Bool",
            "key.typeusr" : "$sSbD",
            "key.usr" : "s:Su11FWFrameworkE9fwIsEmptySbvp"
          }
        ],
        "key.typename" : "UInt.Type",
        "key.typeusr" : "$sSumD",
        "key.usr" : "s:Su"
      },
      {
        "key.annotated_decl" : "<Declaration>@frozen struct UInt8 : <Type usr=\"s:s17FixedWidthIntegerP\">FixedWidthInteger<\/Type>, <Type usr=\"s:SU\">UnsignedInteger<\/Type>, <Type usr=\"s:s35_ExpressibleByBuiltinIntegerLiteralP\">_ExpressibleByBuiltinIntegerLiteral<\/Type><\/Declaration>",
        "key.bodylength" : 113,
        "key.bodyoffset" : 10310,
        "key.decl_lang" : "source.lang.swift",
        "key.doc.declaration" : "@frozen struct UInt8 : FixedWidthInteger, UnsignedInteger, _ExpressibleByBuiltinIntegerLiteral",
        "key.doc.full_as_xml" : "<Class><Name>UInt8<\/Name><USR>s:s5UInt8V<\/USR><Declaration>@frozen struct UInt8 : FixedWidthInteger, UnsignedInteger, _ExpressibleByBuiltinIntegerLiteral<\/Declaration><CommentParts><Abstract><Para>An 8-bit unsigned integer value type.<\/Para><\/Abstract><\/CommentParts><\/Class>",
        "key.doc.name" : "UInt8",
        "key.doc.type" : "Class",
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 17,
            "key.offset" : 10291
          }
        ],
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@frozen<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>UInt8<\/decl.name> : <ref.protocol usr=\"s:s17FixedWidthIntegerP\">FixedWidthInteger<\/ref.protocol>, <ref.protocol usr=\"s:SU\">UnsignedInteger<\/ref.protocol>, <ref.protocol usr=\"s:s35_ExpressibleByBuiltinIntegerLiteralP\">_ExpressibleByBuiltinIntegerLiteral<\/ref.protocol><\/decl.struct>",
        "key.groupname" : "Math\/Integers",
        "key.inheritedtypes" : [
          {
            "key.name" : "FWSafeUnwrappable"
          }
        ],
        "key.is_system" : true,
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 150,
        "key.modulename" : "Swift",
        "key.name" : "UInt8",
        "key.namelength" : 5,
        "key.nameoffset" : 10284,
        "key.offset" : 10274,
        "key.parsed_declaration" : "extension UInt8: FWSafeUnwrappable",
        "key.parsed_scope.end" : 315,
        "key.parsed_scope.start" : 312,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public static var fwSafeValue: <Type usr=\"s:s5UInt8V\">UInt8<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 10315
              }
            ],
            "key.column" : 23,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWEncode.swift",
            "key.fully_annotated_decl" : "<decl.var.static><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>fwSafeValue<\/decl.name>: <decl.var.type><ref.struct usr=\"s:s5UInt8V\">UInt8<\/ref.struct><\/decl.var.type><\/decl.var.static>",
            "key.groupname" : "Math\/Integers",
            "key.kind" : "source.lang.swift.decl.var.static",
            "key.length" : 37,
            "key.line" : 313,
            "key.name" : "fwSafeValue",
            "key.namelength" : 11,
            "key.nameoffset" : 10333,
            "key.offset" : 10322,
            "key.overrides" : [
              {
                "key.usr" : "s:11FWFramework17FWSafeUnwrappableP11fwSafeValuexvpZ"
              }
            ],
            "key.parsed_declaration" : "public static var fwSafeValue: UInt8 = .zero",
            "key.parsed_scope.end" : 313,
            "key.parsed_scope.start" : 313,
            "key.setter_accessibility" : "source.lang.swift.accessibility.public",
            "key.typename" : "UInt8",
            "key.typeusr" : "$ss5UInt8VD",
            "key.usr" : "s:s5UInt8V11FWFrameworkE11fwSafeValueABvpZ"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var fwIsEmpty: <Type usr=\"s:Sb\">Bool<\/Type> { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 10364
              }
            ],
            "key.bodylength" : 29,
            "key.bodyoffset" : 10392,
            "key.column" : 16,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWEncode.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>fwIsEmpty<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.groupname" : "Math\/Integers",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 51,
            "key.line" : 314,
            "key.name" : "fwIsEmpty",
            "key.namelength" : 9,
            "key.nameoffset" : 10375,
            "key.offset" : 10371,
            "key.overrides" : [
              {
                "key.usr" : "s:11FWFramework17FWSafeUnwrappableP9fwIsEmptySbvp"
              }
            ],
            "key.parsed_declaration" : "public var fwIsEmpty: Bool",
            "key.parsed_scope.end" : 314,
            "key.parsed_scope.start" : 314,
            "key.typename" : "Bool",
            "key.typeusr" : "$sSbD",
            "key.usr" : "s:s5UInt8V11FWFrameworkE9fwIsEmptySbvp"
          }
        ],
        "key.typename" : "UInt8.Type",
        "key.typeusr" : "$ss5UInt8VmD",
        "key.usr" : "s:s5UInt8V"
      },
      {
        "key.annotated_decl" : "<Declaration>@frozen struct UInt16 : <Type usr=\"s:s17FixedWidthIntegerP\">FixedWidthInteger<\/Type>, <Type usr=\"s:SU\">UnsignedInteger<\/Type>, <Type usr=\"s:s35_ExpressibleByBuiltinIntegerLiteralP\">_ExpressibleByBuiltinIntegerLiteral<\/Type><\/Declaration>",
        "key.bodylength" : 114,
        "key.bodyoffset" : 10462,
        "key.decl_lang" : "source.lang.swift",
        "key.doc.declaration" : "@frozen struct UInt16 : FixedWidthInteger, UnsignedInteger, _ExpressibleByBuiltinIntegerLiteral",
        "key.doc.full_as_xml" : "<Class><Name>UInt16<\/Name><USR>s:s6UInt16V<\/USR><Declaration>@frozen struct UInt16 : FixedWidthInteger, UnsignedInteger, _ExpressibleByBuiltinIntegerLiteral<\/Declaration><CommentParts><Abstract><Para>A 16-bit unsigned integer value type.<\/Para><\/Abstract><\/CommentParts><\/Class>",
        "key.doc.name" : "UInt16",
        "key.doc.type" : "Class",
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 17,
            "key.offset" : 10443
          }
        ],
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@frozen<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>UInt16<\/decl.name> : <ref.protocol usr=\"s:s17FixedWidthIntegerP\">FixedWidthInteger<\/ref.protocol>, <ref.protocol usr=\"s:SU\">UnsignedInteger<\/ref.protocol>, <ref.protocol usr=\"s:s35_ExpressibleByBuiltinIntegerLiteralP\">_ExpressibleByBuiltinIntegerLiteral<\/ref.protocol><\/decl.struct>",
        "key.groupname" : "Math\/Integers",
        "key.inheritedtypes" : [
          {
            "key.name" : "FWSafeUnwrappable"
          }
        ],
        "key.is_system" : true,
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 152,
        "key.modulename" : "Swift",
        "key.name" : "UInt16",
        "key.namelength" : 6,
        "key.nameoffset" : 10435,
        "key.offset" : 10425,
        "key.parsed_declaration" : "extension UInt16: FWSafeUnwrappable",
        "key.parsed_scope.end" : 319,
        "key.parsed_scope.start" : 316,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public static var fwSafeValue: <Type usr=\"s:s6UInt16V\">UInt16<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 10467
              }
            ],
            "key.column" : 23,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWEncode.swift",
            "key.fully_annotated_decl" : "<decl.var.static><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>fwSafeValue<\/decl.name>: <decl.var.type><ref.struct usr=\"s:s6UInt16V\">UInt16<\/ref.struct><\/decl.var.type><\/decl.var.static>",
            "key.groupname" : "Math\/Integers",
            "key.kind" : "source.lang.swift.decl.var.static",
            "key.length" : 38,
            "key.line" : 317,
            "key.name" : "fwSafeValue",
            "key.namelength" : 11,
            "key.nameoffset" : 10485,
            "key.offset" : 10474,
            "key.overrides" : [
              {
                "key.usr" : "s:11FWFramework17FWSafeUnwrappableP11fwSafeValuexvpZ"
              }
            ],
            "key.parsed_declaration" : "public static var fwSafeValue: UInt16 = .zero",
            "key.parsed_scope.end" : 317,
            "key.parsed_scope.start" : 317,
            "key.setter_accessibility" : "source.lang.swift.accessibility.public",
            "key.typename" : "UInt16",
            "key.typeusr" : "$ss6UInt16VD",
            "key.usr" : "s:s6UInt16V11FWFrameworkE11fwSafeValueABvpZ"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var fwIsEmpty: <Type usr=\"s:Sb\">Bool<\/Type> { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 10517
              }
            ],
            "key.bodylength" : 29,
            "key.bodyoffset" : 10545,
            "key.column" : 16,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWEncode.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>fwIsEmpty<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.groupname" : "Math\/Integers",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 51,
            "key.line" : 318,
            "key.name" : "fwIsEmpty",
            "key.namelength" : 9,
            "key.nameoffset" : 10528,
            "key.offset" : 10524,
            "key.overrides" : [
              {
                "key.usr" : "s:11FWFramework17FWSafeUnwrappableP9fwIsEmptySbvp"
              }
            ],
            "key.parsed_declaration" : "public var fwIsEmpty: Bool",
            "key.parsed_scope.end" : 318,
            "key.parsed_scope.start" : 318,
            "key.typename" : "Bool",
            "key.typeusr" : "$sSbD",
            "key.usr" : "s:s6UInt16V11FWFrameworkE9fwIsEmptySbvp"
          }
        ],
        "key.typename" : "UInt16.Type",
        "key.typeusr" : "$ss6UInt16VmD",
        "key.usr" : "s:s6UInt16V"
      },
      {
        "key.annotated_decl" : "<Declaration>@frozen struct UInt32 : <Type usr=\"s:s17FixedWidthIntegerP\">FixedWidthInteger<\/Type>, <Type usr=\"s:SU\">UnsignedInteger<\/Type>, <Type usr=\"s:s35_ExpressibleByBuiltinIntegerLiteralP\">_ExpressibleByBuiltinIntegerLiteral<\/Type><\/Declaration>",
        "key.bodylength" : 114,
        "key.bodyoffset" : 10615,
        "key.decl_lang" : "source.lang.swift",
        "key.doc.declaration" : "@frozen struct UInt32 : FixedWidthInteger, UnsignedInteger, _ExpressibleByBuiltinIntegerLiteral",
        "key.doc.full_as_xml" : "<Class><Name>UInt32<\/Name><USR>s:s6UInt32V<\/USR><Declaration>@frozen struct UInt32 : FixedWidthInteger, UnsignedInteger, _ExpressibleByBuiltinIntegerLiteral<\/Declaration><CommentParts><Abstract><Para>A 32-bit unsigned integer value type.<\/Para><\/Abstract><\/CommentParts><\/Class>",
        "key.doc.name" : "UInt32",
        "key.doc.type" : "Class",
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 17,
            "key.offset" : 10596
          }
        ],
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@frozen<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>UInt32<\/decl.name> : <ref.protocol usr=\"s:s17FixedWidthIntegerP\">FixedWidthInteger<\/ref.protocol>, <ref.protocol usr=\"s:SU\">UnsignedInteger<\/ref.protocol>, <ref.protocol usr=\"s:s35_ExpressibleByBuiltinIntegerLiteralP\">_ExpressibleByBuiltinIntegerLiteral<\/ref.protocol><\/decl.struct>",
        "key.groupname" : "Math\/Integers",
        "key.inheritedtypes" : [
          {
            "key.name" : "FWSafeUnwrappable"
          }
        ],
        "key.is_system" : true,
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 152,
        "key.modulename" : "Swift",
        "key.name" : "UInt32",
        "key.namelength" : 6,
        "key.nameoffset" : 10588,
        "key.offset" : 10578,
        "key.parsed_declaration" : "extension UInt32: FWSafeUnwrappable",
        "key.parsed_scope.end" : 323,
        "key.parsed_scope.start" : 320,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public static var fwSafeValue: <Type usr=\"s:s6UInt32V\">UInt32<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 10620
              }
            ],
            "key.column" : 23,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWEncode.swift",
            "key.fully_annotated_decl" : "<decl.var.static><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>fwSafeValue<\/decl.name>: <decl.var.type><ref.struct usr=\"s:s6UInt32V\">UInt32<\/ref.struct><\/decl.var.type><\/decl.var.static>",
            "key.groupname" : "Math\/Integers",
            "key.kind" : "source.lang.swift.decl.var.static",
            "key.length" : 38,
            "key.line" : 321,
            "key.name" : "fwSafeValue",
            "key.namelength" : 11,
            "key.nameoffset" : 10638,
            "key.offset" : 10627,
            "key.overrides" : [
              {
                "key.usr" : "s:11FWFramework17FWSafeUnwrappableP11fwSafeValuexvpZ"
              }
            ],
            "key.parsed_declaration" : "public static var fwSafeValue: UInt32 = .zero",
            "key.parsed_scope.end" : 321,
            "key.parsed_scope.start" : 321,
            "key.setter_accessibility" : "source.lang.swift.accessibility.public",
            "key.typename" : "UInt32",
            "key.typeusr" : "$ss6UInt32VD",
            "key.usr" : "s:s6UInt32V11FWFrameworkE11fwSafeValueABvpZ"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var fwIsEmpty: <Type usr=\"s:Sb\">Bool<\/Type> { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 10670
              }
            ],
            "key.bodylength" : 29,
            "key.bodyoffset" : 10698,
            "key.column" : 16,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWEncode.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>fwIsEmpty<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.groupname" : "Math\/Integers",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 51,
            "key.line" : 322,
            "key.name" : "fwIsEmpty",
            "key.namelength" : 9,
            "key.nameoffset" : 10681,
            "key.offset" : 10677,
            "key.overrides" : [
              {
                "key.usr" : "s:11FWFramework17FWSafeUnwrappableP9fwIsEmptySbvp"
              }
            ],
            "key.parsed_declaration" : "public var fwIsEmpty: Bool",
            "key.parsed_scope.end" : 322,
            "key.parsed_scope.start" : 322,
            "key.typename" : "Bool",
            "key.typeusr" : "$sSbD",
            "key.usr" : "s:s6UInt32V11FWFrameworkE9fwIsEmptySbvp"
          }
        ],
        "key.typename" : "UInt32.Type",
        "key.typeusr" : "$ss6UInt32VmD",
        "key.usr" : "s:s6UInt32V"
      },
      {
        "key.annotated_decl" : "<Declaration>@frozen struct UInt64 : <Type usr=\"s:s17FixedWidthIntegerP\">FixedWidthInteger<\/Type>, <Type usr=\"s:SU\">UnsignedInteger<\/Type>, <Type usr=\"s:s35_ExpressibleByBuiltinIntegerLiteralP\">_ExpressibleByBuiltinIntegerLiteral<\/Type><\/Declaration>",
        "key.bodylength" : 114,
        "key.bodyoffset" : 10768,
        "key.decl_lang" : "source.lang.swift",
        "key.doc.declaration" : "@frozen struct UInt64 : FixedWidthInteger, UnsignedInteger, _ExpressibleByBuiltinIntegerLiteral",
        "key.doc.full_as_xml" : "<Class><Name>UInt64<\/Name><USR>s:s6UInt64V<\/USR><Declaration>@frozen struct UInt64 : FixedWidthInteger, UnsignedInteger, _ExpressibleByBuiltinIntegerLiteral<\/Declaration><CommentParts><Abstract><Para>A 64-bit unsigned integer value type.<\/Para><\/Abstract><\/CommentParts><\/Class>",
        "key.doc.name" : "UInt64",
        "key.doc.type" : "Class",
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 17,
            "key.offset" : 10749
          }
        ],
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@frozen<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>UInt64<\/decl.name> : <ref.protocol usr=\"s:s17FixedWidthIntegerP\">FixedWidthInteger<\/ref.protocol>, <ref.protocol usr=\"s:SU\">UnsignedInteger<\/ref.protocol>, <ref.protocol usr=\"s:s35_ExpressibleByBuiltinIntegerLiteralP\">_ExpressibleByBuiltinIntegerLiteral<\/ref.protocol><\/decl.struct>",
        "key.groupname" : "Math\/Integers",
        "key.inheritedtypes" : [
          {
            "key.name" : "FWSafeUnwrappable"
          }
        ],
        "key.is_system" : true,
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 152,
        "key.modulename" : "Swift",
        "key.name" : "UInt64",
        "key.namelength" : 6,
        "key.nameoffset" : 10741,
        "key.offset" : 10731,
        "key.parsed_declaration" : "extension UInt64: FWSafeUnwrappable",
        "key.parsed_scope.end" : 327,
        "key.parsed_scope.start" : 324,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public static var fwSafeValue: <Type usr=\"s:s6UInt64V\">UInt64<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 10773
              }
            ],
            "key.column" : 23,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWEncode.swift",
            "key.fully_annotated_decl" : "<decl.var.static><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>fwSafeValue<\/decl.name>: <decl.var.type><ref.struct usr=\"s:s6UInt64V\">UInt64<\/ref.struct><\/decl.var.type><\/decl.var.static>",
            "key.groupname" : "Math\/Integers",
            "key.kind" : "source.lang.swift.decl.var.static",
            "key.length" : 38,
            "key.line" : 325,
            "key.name" : "fwSafeValue",
            "key.namelength" : 11,
            "key.nameoffset" : 10791,
            "key.offset" : 10780,
            "key.overrides" : [
              {
                "key.usr" : "s:11FWFramework17FWSafeUnwrappableP11fwSafeValuexvpZ"
              }
            ],
            "key.parsed_declaration" : "public static var fwSafeValue: UInt64 = .zero",
            "key.parsed_scope.end" : 325,
            "key.parsed_scope.start" : 325,
            "key.setter_accessibility" : "source.lang.swift.accessibility.public",
            "key.typename" : "UInt64",
            "key.typeusr" : "$ss6UInt64VD",
            "key.usr" : "s:s6UInt64V11FWFrameworkE11fwSafeValueABvpZ"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var fwIsEmpty: <Type usr=\"s:Sb\">Bool<\/Type> { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 10823
              }
            ],
            "key.bodylength" : 29,
            "key.bodyoffset" : 10851,
            "key.column" : 16,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWEncode.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>fwIsEmpty<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.groupname" : "Math\/Integers",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 51,
            "key.line" : 326,
            "key.name" : "fwIsEmpty",
            "key.namelength" : 9,
            "key.nameoffset" : 10834,
            "key.offset" : 10830,
            "key.overrides" : [
              {
                "key.usr" : "s:11FWFramework17FWSafeUnwrappableP9fwIsEmptySbvp"
              }
            ],
            "key.parsed_declaration" : "public var fwIsEmpty: Bool",
            "key.parsed_scope.end" : 326,
            "key.parsed_scope.start" : 326,
            "key.typename" : "Bool",
            "key.typeusr" : "$sSbD",
            "key.usr" : "s:s6UInt64V11FWFrameworkE9fwIsEmptySbvp"
          }
        ],
        "key.typename" : "UInt64.Type",
        "key.typeusr" : "$ss6UInt64VmD",
        "key.usr" : "s:s6UInt64V"
      },
      {
        "key.annotated_decl" : "<Declaration>@frozen struct Float<\/Declaration>",
        "key.bodylength" : 113,
        "key.bodyoffset" : 10920,
        "key.decl_lang" : "source.lang.swift",
        "key.doc.declaration" : "@frozen struct Float",
        "key.doc.full_as_xml" : "<Class><Name>Float<\/Name><USR>s:Sf<\/USR><Declaration>@frozen struct Float<\/Declaration><CommentParts><Abstract><Para>A single-precision, floating-point value type.<\/Para><\/Abstract><\/CommentParts><\/Class>",
        "key.doc.name" : "Float",
        "key.doc.type" : "Class",
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 17,
            "key.offset" : 10901
          }
        ],
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@frozen<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>Float<\/decl.name><\/decl.struct>",
        "key.groupname" : "Math\/Floating",
        "key.inheritedtypes" : [
          {
            "key.name" : "FWSafeUnwrappable"
          }
        ],
        "key.is_system" : true,
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 150,
        "key.modulename" : "Swift",
        "key.name" : "Float",
        "key.namelength" : 5,
        "key.nameoffset" : 10894,
        "key.offset" : 10884,
        "key.parsed_declaration" : "extension Float: FWSafeUnwrappable",
        "key.parsed_scope.end" : 331,
        "key.parsed_scope.start" : 328,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public static var fwSafeValue: <Type usr=\"s:Sf\">Float<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 10925
              }
            ],
            "key.column" : 23,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWEncode.swift",
            "key.fully_annotated_decl" : "<decl.var.static><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>fwSafeValue<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Sf\">Float<\/ref.struct><\/decl.var.type><\/decl.var.static>",
            "key.groupname" : "Math\/Floating",
            "key.kind" : "source.lang.swift.decl.var.static",
            "key.length" : 37,
            "key.line" : 329,
            "key.name" : "fwSafeValue",
            "key.namelength" : 11,
            "key.nameoffset" : 10943,
            "key.offset" : 10932,
            "key.overrides" : [
              {
                "key.usr" : "s:11FWFramework17FWSafeUnwrappableP11fwSafeValuexvpZ"
              }
            ],
            "key.parsed_declaration" : "public static var fwSafeValue: Float = .zero",
            "key.parsed_scope.end" : 329,
            "key.parsed_scope.start" : 329,
            "key.setter_accessibility" : "source.lang.swift.accessibility.public",
            "key.typename" : "Float",
            "key.typeusr" : "$sSfD",
            "key.usr" : "s:Sf11FWFrameworkE11fwSafeValueSfvpZ"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var fwIsEmpty: <Type usr=\"s:Sb\">Bool<\/Type> { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 10974
              }
            ],
            "key.bodylength" : 29,
            "key.bodyoffset" : 11002,
            "key.column" : 16,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWEncode.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>fwIsEmpty<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.groupname" : "Math\/Floating",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 51,
            "key.line" : 330,
            "key.name" : "fwIsEmpty",
            "key.namelength" : 9,
            "key.nameoffset" : 10985,
            "key.offset" : 10981,
            "key.overrides" : [
              {
                "key.usr" : "s:11FWFramework17FWSafeUnwrappableP9fwIsEmptySbvp"
              }
            ],
            "key.parsed_declaration" : "public var fwIsEmpty: Bool",
            "key.parsed_scope.end" : 330,
            "key.parsed_scope.start" : 330,
            "key.typename" : "Bool",
            "key.typeusr" : "$sSbD",
            "key.usr" : "s:Sf11FWFrameworkE9fwIsEmptySbvp"
          }
        ],
        "key.typename" : "Float.Type",
        "key.typeusr" : "$sSfmD",
        "key.usr" : "s:Sf"
      },
      {
        "key.annotated_decl" : "<Declaration>@frozen struct Double<\/Declaration>",
        "key.bodylength" : 114,
        "key.bodyoffset" : 11072,
        "key.decl_lang" : "source.lang.swift",
        "key.doc.declaration" : "@frozen struct Double",
        "key.doc.full_as_xml" : "<Class><Name>Double<\/Name><USR>s:Sd<\/USR><Declaration>@frozen struct Double<\/Declaration><CommentParts><Abstract><Para>A double-precision, floating-point value type.<\/Para><\/Abstract><\/CommentParts><\/Class>",
        "key.doc.name" : "Double",
        "key.doc.type" : "Class",
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 17,
            "key.offset" : 11053
          }
        ],
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@frozen<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>Double<\/decl.name><\/decl.struct>",
        "key.groupname" : "Math\/Floating",
        "key.inheritedtypes" : [
          {
            "key.name" : "FWSafeUnwrappable"
          }
        ],
        "key.is_system" : true,
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 152,
        "key.modulename" : "Swift",
        "key.name" : "Double",
        "key.namelength" : 6,
        "key.nameoffset" : 11045,
        "key.offset" : 11035,
        "key.parsed_declaration" : "extension Double: FWSafeUnwrappable",
        "key.parsed_scope.end" : 335,
        "key.parsed_scope.start" : 332,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public static var fwSafeValue: <Type usr=\"s:Sd\">Double<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 11077
              }
            ],
            "key.column" : 23,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWEncode.swift",
            "key.fully_annotated_decl" : "<decl.var.static><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>fwSafeValue<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Sd\">Double<\/ref.struct><\/decl.var.type><\/decl.var.static>",
            "key.groupname" : "Math\/Floating",
            "key.kind" : "source.lang.swift.decl.var.static",
            "key.length" : 38,
            "key.line" : 333,
            "key.name" : "fwSafeValue",
            "key.namelength" : 11,
            "key.nameoffset" : 11095,
            "key.offset" : 11084,
            "key.overrides" : [
              {
                "key.usr" : "s:11FWFramework17FWSafeUnwrappableP11fwSafeValuexvpZ"
              }
            ],
            "key.parsed_declaration" : "public static var fwSafeValue: Double = .zero",
            "key.parsed_scope.end" : 333,
            "key.parsed_scope.start" : 333,
            "key.setter_accessibility" : "source.lang.swift.accessibility.public",
            "key.typename" : "Double",
            "key.typeusr" : "$sSdD",
            "key.usr" : "s:Sd11FWFrameworkE11fwSafeValueSdvpZ"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var fwIsEmpty: <Type usr=\"s:Sb\">Bool<\/Type> { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 11127
              }
            ],
            "key.bodylength" : 29,
            "key.bodyoffset" : 11155,
            "key.column" : 16,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWEncode.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>fwIsEmpty<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.groupname" : "Math\/Floating",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 51,
            "key.line" : 334,
            "key.name" : "fwIsEmpty",
            "key.namelength" : 9,
            "key.nameoffset" : 11138,
            "key.offset" : 11134,
            "key.overrides" : [
              {
                "key.usr" : "s:11FWFramework17FWSafeUnwrappableP9fwIsEmptySbvp"
              }
            ],
            "key.parsed_declaration" : "public var fwIsEmpty: Bool",
            "key.parsed_scope.end" : 334,
            "key.parsed_scope.start" : 334,
            "key.typename" : "Bool",
            "key.typeusr" : "$sSbD",
            "key.usr" : "s:Sd11FWFrameworkE9fwIsEmptySbvp"
          }
        ],
        "key.typename" : "Double.Type",
        "key.typeusr" : "$sSdmD",
        "key.usr" : "s:Sd"
      },
      {
        "key.annotated_decl" : "<Declaration>@frozen struct Bool : <Type usr=\"s:s8SendableP\">Sendable<\/Type><\/Declaration>",
        "key.bodylength" : 112,
        "key.bodyoffset" : 11223,
        "key.decl_lang" : "source.lang.swift",
        "key.doc.declaration" : "@frozen struct Bool : Sendable",
        "key.doc.discussion" : [
          {
            "Para" : "`Bool` represents Boolean values in Swift. Create instances of `Bool` by using one of the Boolean literals `true` or `false`, or by assigning the result of a Boolean method or operation to a variable or constant."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "Swift uses only simple Boolean values in conditional contexts to help avoid accidental programming errors and to help maintain the clarity of each control statement. Unlike in other programming languages, in Swift, integers and strings cannot be used where a Boolean value is required."
          },
          {
            "Para" : "For example, the following code sample does not compile, because it attempts to use the integer `i` in a logical context:"
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "The correct approach in Swift is to compare the `i` value with zero in the `while` statement."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "The C `bool` and `Boolean` types and the Objective-C `BOOL` type are all bridged into Swift as `Bool`. The single `Bool` type in Swift guarantees that functions, methods, and properties imported from C and Objective-C have a consistent type interface."
          }
        ],
        "key.doc.full_as_xml" : "<Class><Name>Bool<\/Name><USR>s:Sb<\/USR><Declaration>@frozen struct Bool : Sendable<\/Declaration><CommentParts><Abstract><Para>A value type whose instances are either <codeVoice>true<\/codeVoice> or <codeVoice>false<\/codeVoice>.<\/Para><\/Abstract><Discussion><Para><codeVoice>Bool<\/codeVoice> represents Boolean values in Swift. Create instances of <codeVoice>Bool<\/codeVoice> by using one of the Boolean literals <codeVoice>true<\/codeVoice> or <codeVoice>false<\/codeVoice>, or by assigning the result of a Boolean method or operation to a variable or constant.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[var godotHasArrived = false]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let numbers = 1...5]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let containsTen = numbers.contains(10)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(containsTen)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"false\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let (a, b) = (100, 101)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let aFirst = a < b]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(aFirst)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"true\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>Swift uses only simple Boolean values in conditional contexts to help avoid accidental programming errors and to help maintain the clarity of each control statement. Unlike in other programming languages, in Swift, integers and strings cannot be used where a Boolean value is required.<\/Para><Para>For example, the following code sample does not compile, because it attempts to use the integer <codeVoice>i<\/codeVoice> in a logical context:<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[var i = 5]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[while i {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    print(i)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    i -= 1]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ error: Cannot convert value of type 'Int' to expected condition type 'Bool']]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>The correct approach in Swift is to compare the <codeVoice>i<\/codeVoice> value with zero in the <codeVoice>while<\/codeVoice> statement.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[while i != 0 {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    print(i)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    i -= 1]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><rawHTML><![CDATA[<h1>]]><\/rawHTML>Using Imported Boolean values<rawHTML><![CDATA[<\/h1>]]><\/rawHTML><Para>The C <codeVoice>bool<\/codeVoice> and <codeVoice>Boolean<\/codeVoice> types and the Objective-C <codeVoice>BOOL<\/codeVoice> type are all bridged into Swift as <codeVoice>Bool<\/codeVoice>. The single <codeVoice>Bool<\/codeVoice> type in Swift guarantees that functions, methods, and properties imported from C and Objective-C have a consistent type interface.<\/Para><\/Discussion><\/CommentParts><\/Class>",
        "key.doc.name" : "Bool",
        "key.doc.type" : "Class",
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 17,
            "key.offset" : 11204
          }
        ],
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@frozen<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>Bool<\/decl.name> : <ref.protocol usr=\"s:s8SendableP\">Sendable<\/ref.protocol><\/decl.struct>",
        "key.groupname" : "Bool",
        "key.inheritedtypes" : [
          {
            "key.name" : "FWSafeUnwrappable"
          }
        ],
        "key.is_system" : true,
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 148,
        "key.modulename" : "Swift",
        "key.name" : "Bool",
        "key.namelength" : 4,
        "key.nameoffset" : 11198,
        "key.offset" : 11188,
        "key.parsed_declaration" : "extension Bool: FWSafeUnwrappable",
        "key.parsed_scope.end" : 339,
        "key.parsed_scope.start" : 336,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public static var fwSafeValue: <Type usr=\"s:Sb\">Bool<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 11228
              }
            ],
            "key.column" : 23,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWEncode.swift",
            "key.fully_annotated_decl" : "<decl.var.static><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>fwSafeValue<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.var.type><\/decl.var.static>",
            "key.groupname" : "Bool",
            "key.kind" : "source.lang.swift.decl.var.static",
            "key.length" : 36,
            "key.line" : 337,
            "key.name" : "fwSafeValue",
            "key.namelength" : 11,
            "key.nameoffset" : 11246,
            "key.offset" : 11235,
            "key.overrides" : [
              {
                "key.usr" : "s:11FWFramework17FWSafeUnwrappableP11fwSafeValuexvpZ"
              }
            ],
            "key.parsed_declaration" : "public static var fwSafeValue: Bool = false",
            "key.parsed_scope.end" : 337,
            "key.parsed_scope.start" : 337,
            "key.setter_accessibility" : "source.lang.swift.accessibility.public",
            "key.typename" : "Bool",
            "key.typeusr" : "$sSbD",
            "key.usr" : "s:Sb11FWFrameworkE11fwSafeValueSbvpZ"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var fwIsEmpty: <Type usr=\"s:Sb\">Bool<\/Type> { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 11276
              }
            ],
            "key.bodylength" : 29,
            "key.bodyoffset" : 11304,
            "key.column" : 16,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWEncode.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>fwIsEmpty<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.groupname" : "Bool",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 51,
            "key.line" : 338,
            "key.name" : "fwIsEmpty",
            "key.namelength" : 9,
            "key.nameoffset" : 11287,
            "key.offset" : 11283,
            "key.overrides" : [
              {
                "key.usr" : "s:11FWFramework17FWSafeUnwrappableP9fwIsEmptySbvp"
              }
            ],
            "key.parsed_declaration" : "public var fwIsEmpty: Bool",
            "key.parsed_scope.end" : 338,
            "key.parsed_scope.start" : 338,
            "key.typename" : "Bool",
            "key.typeusr" : "$sSbD",
            "key.usr" : "s:Sb11FWFrameworkE9fwIsEmptySbvp"
          }
        ],
        "key.typename" : "Bool.Type",
        "key.typeusr" : "$sSbmD",
        "key.usr" : "s:Sb"
      },
      {
        "key.annotated_decl" : "<Declaration>@frozen struct String<\/Declaration>",
        "key.bodylength" : 103,
        "key.bodyoffset" : 11374,
        "key.decl_lang" : "source.lang.swift",
        "key.doc.declaration" : "@frozen struct String",
        "key.doc.discussion" : [
          {
            "Para" : "A string is a series of characters, such as `\"Swift\"`, that forms a collection. Strings in Swift are Unicode correct and locale insensitive, and are designed to be efficient. The `String` type bridges with the Objective-C class `NSString` and offers interoperability with C functions that works with strings."
          },
          {
            "Para" : "You can create new strings using string literals or string interpolations. A  is a series of characters enclosed in quotes."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : " are string literals that evaluate any included expressions and convert the results to string form. String interpolations give you an easy way to build a string from multiple pieces. Wrap each expression in a string interpolation in parentheses, prefixed by a backslash."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "Combine strings using the concatenation operator (`+`)."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "Multiline string literals are enclosed in three double quotation marks (`\"\"\"`), with each delimiter on its own line. Indentation is stripped from each line of a multiline string literal to match the indentation of the closing delimiter."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "Strings always have value semantics. Modifying a copy of a string leaves the original unaffected."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "Comparing strings for equality using the equal-to operator (`==`) or a relational operator (like `<` or `>=`) is always performed using Unicode canonical representation. As a result, different representations of a string compare as being equal."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "The Unicode scalar value `\"\\u{301}\"` modifies the preceding character to include an accent, so `\"e\\u{301}\"` has the same canonical representation as the single Unicode scalar value `\"é\"`."
          },
          {
            "Para" : "Basic string operations are not sensitive to locale settings, ensuring that string comparisons and other operations always have a single, stable result, allowing strings to be used as keys in `Dictionary` instances and for other purposes."
          },
          {
            "Para" : "A string is a collection of , which approximate human-readable characters. Many individual characters, such as “é”, “김”, and “🇮🇳”, can be made up of multiple Unicode scalar values. These scalar values are combined by Unicode’s boundary algorithms into extended grapheme clusters, represented by the Swift `Character` type. Each element of a string is represented by a `Character` instance."
          },
          {
            "Para" : "For example, to retrieve the first word of a longer string, you can search for a space and then create a substring from a prefix of the string up to that point:"
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "The `firstName` constant is an instance of the `Substring` type—a type that represents substrings of a string while sharing the original string’s storage. Substrings present the same interface as strings."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "If you need to access the contents of a string as encoded in different Unicode encodings, use one of the string’s `unicodeScalars`, `utf16`, or `utf8` properties. Each property provides access to a view of the string as a series of code units, each encoded in a different Unicode encoding."
          },
          {
            "Para" : "To demonstrate the different views available for every string, the following examples use this `String` instance:"
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "The `cafe` string is a collection of the nine characters that are visible when the string is displayed."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "A string’s `unicodeScalars` property is a collection of Unicode scalar values, the 21-bit codes that are the basic unit of Unicode. Each scalar value is represented by a `Unicode.Scalar` instance and is equivalent to a UTF-32 code unit."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "The `unicodeScalars` view’s elements comprise each Unicode scalar value in the `cafe` string. In particular, because `cafe` was declared using the decomposed form of the `\"é\"` character, `unicodeScalars` contains the scalar values for both the letter `\"e\"` (101) and the accent character `\"´\"` (769)."
          },
          {
            "Para" : "A string’s `utf16` property is a collection of UTF-16 code units, the 16-bit encoding form of the string’s Unicode scalar values. Each code unit is stored as a `UInt16` instance."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "The elements of the `utf16` view are the code units for the string when encoded in UTF-16. These elements match those accessed through indexed `NSString` APIs."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "A string’s `utf8` property is a collection of UTF-8 code units, the 8-bit encoding form of the string’s Unicode scalar values. Each code unit is stored as a `UInt8` instance."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "The elements of the `utf8` view are the code units for the string when encoded in UTF-8. This representation matches the one used when `String` instances are passed to C APIs."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "When you need to know the length of a string, you must first consider what you’ll use the length for. Are you measuring the number of characters that will be displayed on the screen, or are you measuring the amount of storage needed for the string in a particular encoding? A single string can have greatly differing lengths when measured by its different views."
          },
          {
            "Para" : "For example, an ASCII character like the capital letter  is represented by a single element in each of its four views. The Unicode scalar value of  is `65`, which is small enough to fit in a single code unit in both UTF-16 and UTF-8."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "On the other hand, an emoji flag character is constructed from a pair of Unicode scalar values, like `\"\\u{1F1F5}\"` and `\"\\u{1F1F7}\"`. Each of these scalar values, in turn, is too large to fit into a single UTF-16 or UTF-8 code unit. As a result, each view of the string `\"🇵🇷\"` reports a different length."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "To check whether a string is empty, use its `isEmpty` property instead of comparing the length of one of the views to `0`. Unlike with `isEmpty`, calculating a view’s `count` property requires iterating through the elements of the string."
          },
          {
            "Para" : "To find individual elements of a string, use the appropriate view for your task. For example, to retrieve the first word of a longer string, you can search the string for a space and then create a new string from a prefix of the string up to that point."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "Strings and their views share indices, so you can access the UTF-8 view of the `name` string using the same `firstSpace` index."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "Note that an index into one view may not have an exact corresponding position in another view. For example, the `flag` string declared above comprises a single character, but is composed of eight code units when encoded as UTF-8. The following code creates constants for the first and second positions in the `flag.utf8` view. Accessing the `utf8` view with these indices yields the first and second code UTF-8 units."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "When used to access the elements of the `flag` string itself, however, the `secondCodeUnit` index does not correspond to the position of a specific character. Instead of only accessing the specific UTF-8 code unit, that index is treated as the position of the character at the index’s encoded offset. In the case of `secondCodeUnit`, that character is still the flag itself."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "If you need to validate that an index from one string’s view corresponds with an exact position in another view, use the index’s `samePosition(in:)` method or the `init(_:within:)` initializer."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "Although strings in Swift have value semantics, strings use a copy-on-write strategy to store their data in a buffer. This buffer can then be shared by different copies of a string. A string’s data is only copied lazily, upon mutation, when more than one string instance is using the same buffer. Therefore, the first in any sequence of mutating operations may cost O() time and space."
          },
          {
            "Para" : "When a string’s contiguous storage fills up, a new buffer must be allocated and data must be moved to the new storage. String buffers use an exponential growth strategy that makes appending to a string a constant time operation when averaged over many append operations."
          },
          {
            "Para" : "Any `String` instance can be bridged to `NSString` using the type-cast operator (`as`), and any `String` instance that originates in Objective-C may use an `NSString` instance as its storage. Because any arbitrary subclass of `NSString` can become a `String` instance, there are no guarantees about representation or efficiency when a `String` instance is backed by `NSString` storage. Because `NSString` is immutable, it is just as though the storage was shared by a copy. The first in any sequence of mutating operations causes elements to be copied into unique, contiguous storage which may cost O() time and space, where  is the length of the string’s encoded representation (or more, if the underlying `NSString` has unusual performance characteristics)."
          },
          {
            "Para" : "For more information about the Unicode terms used in this discussion, see the . In particular, this discussion mentions , , and ."
          }
        ],
        "key.doc.full_as_xml" : "<Class><Name>String<\/Name><USR>s:SS<\/USR><Declaration>@frozen struct String<\/Declaration><CommentParts><Abstract><Para>A Unicode string value that is a collection of characters.<\/Para><\/Abstract><Discussion><Para>A string is a series of characters, such as <codeVoice>&quot;Swift&quot;<\/codeVoice>, that forms a collection. Strings in Swift are Unicode correct and locale insensitive, and are designed to be efficient. The <codeVoice>String<\/codeVoice> type bridges with the Objective-C class <codeVoice>NSString<\/codeVoice> and offers interoperability with C functions that works with strings.<\/Para><Para>You can create new strings using string literals or string interpolations. A <emphasis>string literal<\/emphasis> is a series of characters enclosed in quotes.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let greeting = \"Welcome!\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para><emphasis>String interpolations<\/emphasis> are string literals that evaluate any included expressions and convert the results to string form. String interpolations give you an easy way to build a string from multiple pieces. Wrap each expression in a string interpolation in parentheses, prefixed by a backslash.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let name = \"Rosa\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let personalizedGreeting = \"Welcome, \\(name)!\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ personalizedGreeting == \"Welcome, Rosa!\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let price = 2]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let number = 3]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let cookiePrice = \"\\(number) cookies: $\\(price * number).\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ cookiePrice == \"3 cookies: $6.\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>Combine strings using the concatenation operator (<codeVoice>+<\/codeVoice>).<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let longerGreeting = greeting + \" We're glad you're here!\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ longerGreeting == \"Welcome! We're glad you're here!\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>Multiline string literals are enclosed in three double quotation marks (<codeVoice>&quot;&quot;&quot;<\/codeVoice>), with each delimiter on its own line. Indentation is stripped from each line of a multiline string literal to match the indentation of the closing delimiter.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let banner = \"\"\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[          __,]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[         (           o  \/) _\/_]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[          `.  , , , ,  \/\/  \/]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        (___)(_(_\/_(_ \/\/_ (__]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[                     \/)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[                    (\/]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        \"\"\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><rawHTML><![CDATA[<h1>]]><\/rawHTML>Modifying and Comparing Strings<rawHTML><![CDATA[<\/h1>]]><\/rawHTML><Para>Strings always have value semantics. Modifying a copy of a string leaves the original unaffected.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[var otherGreeting = greeting]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[otherGreeting += \" Have a nice time!\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ otherGreeting == \"Welcome! Have a nice time!\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(greeting)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"Welcome!\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>Comparing strings for equality using the equal-to operator (<codeVoice>==<\/codeVoice>) or a relational operator (like <codeVoice>&lt;<\/codeVoice> or <codeVoice>&gt;=<\/codeVoice>) is always performed using Unicode canonical representation. As a result, different representations of a string compare as being equal.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let cafe1 = \"Cafe\\u{301}\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let cafe2 = \"Café\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(cafe1 == cafe2)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"true\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>The Unicode scalar value <codeVoice>&quot;\\u{301}&quot;<\/codeVoice> modifies the preceding character to include an accent, so <codeVoice>&quot;e\\u{301}&quot;<\/codeVoice> has the same canonical representation as the single Unicode scalar value <codeVoice>&quot;é&quot;<\/codeVoice>.<\/Para><Para>Basic string operations are not sensitive to locale settings, ensuring that string comparisons and other operations always have a single, stable result, allowing strings to be used as keys in <codeVoice>Dictionary<\/codeVoice> instances and for other purposes.<\/Para><rawHTML><![CDATA[<h1>]]><\/rawHTML>Accessing String Elements<rawHTML><![CDATA[<\/h1>]]><\/rawHTML><Para>A string is a collection of <emphasis>extended grapheme clusters<\/emphasis>, which approximate human-readable characters. Many individual characters, such as “é”, “김”, and “🇮🇳”, can be made up of multiple Unicode scalar values. These scalar values are combined by Unicode’s boundary algorithms into extended grapheme clusters, represented by the Swift <codeVoice>Character<\/codeVoice> type. Each element of a string is represented by a <codeVoice>Character<\/codeVoice> instance.<\/Para><Para>For example, to retrieve the first word of a longer string, you can search for a space and then create a substring from a prefix of the string up to that point:<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let name = \"Marie Curie\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let firstSpace = name.firstIndex(of: \" \") ?? name.endIndex]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let firstName = name[..<firstSpace]]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ firstName == \"Marie\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>The <codeVoice>firstName<\/codeVoice> constant is an instance of the <codeVoice>Substring<\/codeVoice> type—a type that represents substrings of a string while sharing the original string’s storage. Substrings present the same interface as strings.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[print(\"\\(name)'s first name has \\(firstName.count) letters.\")]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"Marie Curie's first name has 5 letters.\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><rawHTML><![CDATA[<h1>]]><\/rawHTML>Accessing a String’s Unicode Representation<rawHTML><![CDATA[<\/h1>]]><\/rawHTML><Para>If you need to access the contents of a string as encoded in different Unicode encodings, use one of the string’s <codeVoice>unicodeScalars<\/codeVoice>, <codeVoice>utf16<\/codeVoice>, or <codeVoice>utf8<\/codeVoice> properties. Each property provides access to a view of the string as a series of code units, each encoded in a different Unicode encoding.<\/Para><Para>To demonstrate the different views available for every string, the following examples use this <codeVoice>String<\/codeVoice> instance:<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let cafe = \"Cafe\\u{301} du 🌍\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(cafe)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"Café du 🌍\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>The <codeVoice>cafe<\/codeVoice> string is a collection of the nine characters that are visible when the string is displayed.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[print(cafe.count)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"9\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(Array(cafe))]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"[\"C\", \"a\", \"f\", \"é\", \" \", \"d\", \"u\", \" \", \"🌍\"]\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><rawHTML><![CDATA[<h2>]]><\/rawHTML>Unicode Scalar View<rawHTML><![CDATA[<\/h2>]]><\/rawHTML><Para>A string’s <codeVoice>unicodeScalars<\/codeVoice> property is a collection of Unicode scalar values, the 21-bit codes that are the basic unit of Unicode. Each scalar value is represented by a <codeVoice>Unicode.Scalar<\/codeVoice> instance and is equivalent to a UTF-32 code unit.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[print(cafe.unicodeScalars.count)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"10\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(Array(cafe.unicodeScalars))]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"[\"C\", \"a\", \"f\", \"e\", \"\\u{0301}\", \" \", \"d\", \"u\", \" \", \"\\u{0001F30D}\"]\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(cafe.unicodeScalars.map { $0.value })]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"[67, 97, 102, 101, 769, 32, 100, 117, 32, 127757]\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>The <codeVoice>unicodeScalars<\/codeVoice> view’s elements comprise each Unicode scalar value in the <codeVoice>cafe<\/codeVoice> string. In particular, because <codeVoice>cafe<\/codeVoice> was declared using the decomposed form of the <codeVoice>&quot;é&quot;<\/codeVoice> character, <codeVoice>unicodeScalars<\/codeVoice> contains the scalar values for both the letter <codeVoice>&quot;e&quot;<\/codeVoice> (101) and the accent character <codeVoice>&quot;´&quot;<\/codeVoice> (769).<\/Para><rawHTML><![CDATA[<h2>]]><\/rawHTML>UTF-16 View<rawHTML><![CDATA[<\/h2>]]><\/rawHTML><Para>A string’s <codeVoice>utf16<\/codeVoice> property is a collection of UTF-16 code units, the 16-bit encoding form of the string’s Unicode scalar values. Each code unit is stored as a <codeVoice>UInt16<\/codeVoice> instance.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[print(cafe.utf16.count)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"11\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(Array(cafe.utf16))]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"[67, 97, 102, 101, 769, 32, 100, 117, 32, 55356, 57101]\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>The elements of the <codeVoice>utf16<\/codeVoice> view are the code units for the string when encoded in UTF-16. These elements match those accessed through indexed <codeVoice>NSString<\/codeVoice> APIs.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let nscafe = cafe as NSString]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(nscafe.length)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"11\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(nscafe.character(at: 3))]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"101\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><rawHTML><![CDATA[<h2>]]><\/rawHTML>UTF-8 View<rawHTML><![CDATA[<\/h2>]]><\/rawHTML><Para>A string’s <codeVoice>utf8<\/codeVoice> property is a collection of UTF-8 code units, the 8-bit encoding form of the string’s Unicode scalar values. Each code unit is stored as a <codeVoice>UInt8<\/codeVoice> instance.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[print(cafe.utf8.count)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"14\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(Array(cafe.utf8))]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"[67, 97, 102, 101, 204, 129, 32, 100, 117, 32, 240, 159, 140, 141]\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>The elements of the <codeVoice>utf8<\/codeVoice> view are the code units for the string when encoded in UTF-8. This representation matches the one used when <codeVoice>String<\/codeVoice> instances are passed to C APIs.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let cLength = strlen(cafe)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(cLength)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"14\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><rawHTML><![CDATA[<h1>]]><\/rawHTML>Measuring the Length of a String<rawHTML><![CDATA[<\/h1>]]><\/rawHTML><Para>When you need to know the length of a string, you must first consider what you’ll use the length for. Are you measuring the number of characters that will be displayed on the screen, or are you measuring the amount of storage needed for the string in a particular encoding? A single string can have greatly differing lengths when measured by its different views.<\/Para><Para>For example, an ASCII character like the capital letter <emphasis>A<\/emphasis> is represented by a single element in each of its four views. The Unicode scalar value of <emphasis>A<\/emphasis> is <codeVoice>65<\/codeVoice>, which is small enough to fit in a single code unit in both UTF-16 and UTF-8.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let capitalA = \"A\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(capitalA.count)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"1\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(capitalA.unicodeScalars.count)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"1\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(capitalA.utf16.count)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"1\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(capitalA.utf8.count)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"1\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>On the other hand, an emoji flag character is constructed from a pair of Unicode scalar values, like <codeVoice>&quot;\\u{1F1F5}&quot;<\/codeVoice> and <codeVoice>&quot;\\u{1F1F7}&quot;<\/codeVoice>. Each of these scalar values, in turn, is too large to fit into a single UTF-16 or UTF-8 code unit. As a result, each view of the string <codeVoice>&quot;🇵🇷&quot;<\/codeVoice> reports a different length.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let flag = \"🇵🇷\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(flag.count)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"1\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(flag.unicodeScalars.count)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"2\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(flag.utf16.count)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"4\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(flag.utf8.count)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"8\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>To check whether a string is empty, use its <codeVoice>isEmpty<\/codeVoice> property instead of comparing the length of one of the views to <codeVoice>0<\/codeVoice>. Unlike with <codeVoice>isEmpty<\/codeVoice>, calculating a view’s <codeVoice>count<\/codeVoice> property requires iterating through the elements of the string.<\/Para><rawHTML><![CDATA[<h1>]]><\/rawHTML>Accessing String View Elements<rawHTML><![CDATA[<\/h1>]]><\/rawHTML><Para>To find individual elements of a string, use the appropriate view for your task. For example, to retrieve the first word of a longer string, you can search the string for a space and then create a new string from a prefix of the string up to that point.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let name = \"Marie Curie\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let firstSpace = name.firstIndex(of: \" \") ?? name.endIndex]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let firstName = name[..<firstSpace]]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(firstName)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"Marie\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>Strings and their views share indices, so you can access the UTF-8 view of the <codeVoice>name<\/codeVoice> string using the same <codeVoice>firstSpace<\/codeVoice> index.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[print(Array(name.utf8[..<firstSpace]))]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"[77, 97, 114, 105, 101]\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>Note that an index into one view may not have an exact corresponding position in another view. For example, the <codeVoice>flag<\/codeVoice> string declared above comprises a single character, but is composed of eight code units when encoded as UTF-8. The following code creates constants for the first and second positions in the <codeVoice>flag.utf8<\/codeVoice> view. Accessing the <codeVoice>utf8<\/codeVoice> view with these indices yields the first and second code UTF-8 units.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let firstCodeUnit = flag.startIndex]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let secondCodeUnit = flag.utf8.index(after: firstCodeUnit)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ flag.utf8[firstCodeUnit] == 240]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ flag.utf8[secondCodeUnit] == 159]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>When used to access the elements of the <codeVoice>flag<\/codeVoice> string itself, however, the <codeVoice>secondCodeUnit<\/codeVoice> index does not correspond to the position of a specific character. Instead of only accessing the specific UTF-8 code unit, that index is treated as the position of the character at the index’s encoded offset. In the case of <codeVoice>secondCodeUnit<\/codeVoice>, that character is still the flag itself.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[\/\/ flag[firstCodeUnit] == \"🇵🇷\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ flag[secondCodeUnit] == \"🇵🇷\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>If you need to validate that an index from one string’s view corresponds with an exact position in another view, use the index’s <codeVoice>samePosition(in:)<\/codeVoice> method or the <codeVoice>init(_:within:)<\/codeVoice> initializer.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[if let exactIndex = secondCodeUnit.samePosition(in: flag) {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    print(flag[exactIndex])]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[} else {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    print(\"No exact match for this position.\")]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"No exact match for this position.\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><rawHTML><![CDATA[<h1>]]><\/rawHTML>Performance Optimizations<rawHTML><![CDATA[<\/h1>]]><\/rawHTML><Para>Although strings in Swift have value semantics, strings use a copy-on-write strategy to store their data in a buffer. This buffer can then be shared by different copies of a string. A string’s data is only copied lazily, upon mutation, when more than one string instance is using the same buffer. Therefore, the first in any sequence of mutating operations may cost O(<emphasis>n<\/emphasis>) time and space.<\/Para><Para>When a string’s contiguous storage fills up, a new buffer must be allocated and data must be moved to the new storage. String buffers use an exponential growth strategy that makes appending to a string a constant time operation when averaged over many append operations.<\/Para><rawHTML><![CDATA[<h1>]]><\/rawHTML>Bridging Between String and NSString<rawHTML><![CDATA[<\/h1>]]><\/rawHTML><Para>Any <codeVoice>String<\/codeVoice> instance can be bridged to <codeVoice>NSString<\/codeVoice> using the type-cast operator (<codeVoice>as<\/codeVoice>), and any <codeVoice>String<\/codeVoice> instance that originates in Objective-C may use an <codeVoice>NSString<\/codeVoice> instance as its storage. Because any arbitrary subclass of <codeVoice>NSString<\/codeVoice> can become a <codeVoice>String<\/codeVoice> instance, there are no guarantees about representation or efficiency when a <codeVoice>String<\/codeVoice> instance is backed by <codeVoice>NSString<\/codeVoice> storage. Because <codeVoice>NSString<\/codeVoice> is immutable, it is just as though the storage was shared by a copy. The first in any sequence of mutating operations causes elements to be copied into unique, contiguous storage which may cost O(<emphasis>n<\/emphasis>) time and space, where <emphasis>n<\/emphasis> is the length of the string’s encoded representation (or more, if the underlying <codeVoice>NSString<\/codeVoice> has unusual performance characteristics).<\/Para><Para>For more information about the Unicode terms used in this discussion, see the <Link href=\"http:\/\/www.unicode.org\/glossary\/\">Unicode.org glossary<\/Link>. In particular, this discussion mentions <Link href=\"http:\/\/www.unicode.org\/glossary\/#extended_grapheme_cluster\">extended grapheme clusters<\/Link>, <Link href=\"http:\/\/www.unicode.org\/glossary\/#unicode_scalar_value\">Unicode scalar values<\/Link>, and <Link href=\"http:\/\/www.unicode.org\/glossary\/#canonical_equivalent\">canonical equivalence<\/Link>.<\/Para><\/Discussion><\/CommentParts><\/Class>",
        "key.doc.name" : "String",
        "key.doc.type" : "Class",
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 17,
            "key.offset" : 11355
          }
        ],
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@frozen<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>String<\/decl.name><\/decl.struct>",
        "key.groupname" : "String",
        "key.inheritedtypes" : [
          {
            "key.name" : "FWSafeUnwrappable"
          }
        ],
        "key.is_system" : true,
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 141,
        "key.modulename" : "Swift",
        "key.name" : "String",
        "key.namelength" : 6,
        "key.nameoffset" : 11347,
        "key.offset" : 11337,
        "key.parsed_declaration" : "extension String: FWSafeUnwrappable",
        "key.parsed_scope.end" : 343,
        "key.parsed_scope.start" : 340,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public static var fwSafeValue: <Type usr=\"s:SS\">String<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 11379
              }
            ],
            "key.column" : 23,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWEncode.swift",
            "key.fully_annotated_decl" : "<decl.var.static><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>fwSafeValue<\/decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.type><\/decl.var.static>",
            "key.groupname" : "String",
            "key.kind" : "source.lang.swift.decl.var.static",
            "key.length" : 35,
            "key.line" : 341,
            "key.name" : "fwSafeValue",
            "key.namelength" : 11,
            "key.nameoffset" : 11397,
            "key.offset" : 11386,
            "key.overrides" : [
              {
                "key.usr" : "s:11FWFramework17FWSafeUnwrappableP11fwSafeValuexvpZ"
              }
            ],
            "key.parsed_declaration" : "public static var fwSafeValue: String = \"\"",
            "key.parsed_scope.end" : 341,
            "key.parsed_scope.start" : 341,
            "key.setter_accessibility" : "source.lang.swift.accessibility.public",
            "key.typename" : "String",
            "key.typeusr" : "$sSSD",
            "key.usr" : "s:SS11FWFrameworkE11fwSafeValueSSvpZ"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var fwIsEmpty: <Type usr=\"s:Sb\">Bool<\/Type> { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 11426
              }
            ],
            "key.bodylength" : 21,
            "key.bodyoffset" : 11454,
            "key.column" : 16,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWEncode.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>fwIsEmpty<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.groupname" : "String",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 43,
            "key.line" : 342,
            "key.name" : "fwIsEmpty",
            "key.namelength" : 9,
            "key.nameoffset" : 11437,
            "key.offset" : 11433,
            "key.overrides" : [
              {
                "key.usr" : "s:11FWFramework17FWSafeUnwrappableP9fwIsEmptySbvp"
              }
            ],
            "key.parsed_declaration" : "public var fwIsEmpty: Bool",
            "key.parsed_scope.end" : 342,
            "key.parsed_scope.start" : 342,
            "key.typename" : "Bool",
            "key.typeusr" : "$sSbD",
            "key.usr" : "s:SS11FWFrameworkE9fwIsEmptySbvp"
          }
        ],
        "key.typename" : "String.Type",
        "key.typeusr" : "$sSSmD",
        "key.usr" : "s:SS"
      },
      {
        "key.annotated_decl" : "<Declaration>@frozen struct Array&lt;Element&gt; : <Type usr=\"s:s24_DestructorSafeContainerP\">_DestructorSafeContainer<\/Type><\/Declaration>",
        "key.bodylength" : 120,
        "key.bodyoffset" : 11515,
        "key.decl_lang" : "source.lang.swift",
        "key.doc.declaration" : "@frozen struct Array<Element> : _DestructorSafeContainer",
        "key.doc.discussion" : [
          {
            "Para" : "Arrays are one of the most commonly used data types in an app. You use arrays to organize your app’s data. Specifically, you use the `Array` type to hold elements of a single type, the array’s `Element` type. An array can store any kind of elements—from integers to strings to classes."
          },
          {
            "Para" : "Swift makes it easy to create arrays in your code using an array literal: simply surround a comma-separated list of values with square brackets. Without any other information, Swift creates an array that includes the specified values, automatically inferring the array’s `Element` type. For example:"
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "You can create an empty array by specifying the `Element` type of your array in the declaration. For example:"
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "If you need an array that is preinitialized with a fixed number of default values, use the `Array(repeating:count:)` initializer."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "When you need to perform an operation on all of an array’s elements, use a `for`-`in` loop to iterate through the array’s contents."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "Use the `isEmpty` property to check quickly whether an array has any elements, or use the `count` property to find the number of elements in the array."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "Use the `first` and `last` properties for safe access to the value of the array’s first and last elements. If the array is empty, these properties are `nil`."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "You can access individual array elements through a subscript. The first element of a nonempty array is always at index zero. You can subscript an array with any integer from zero up to, but not including, the count of the array. Using a negative number or an index equal to or greater than `count` triggers a runtime error. For example:"
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "Suppose you need to store a list of the names of students that are signed up for a class you’re teaching. During the registration period, you need to add and remove names as students add and drop the class."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "To add single elements to the end of an array, use the `append(_:)` method. Add multiple elements at the same time by passing another array or a sequence of any kind to the `append(contentsOf:)` method."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "You can add new elements in the middle of an array by using the `insert(_:at:)` method for single elements and by using `insert(contentsOf:at:)` to insert multiple elements from another collection or array literal. The elements at that index and later indices are shifted back to make room."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "To remove elements from an array, use the `remove(at:)`, `removeSubrange(_:)`, and `removeLast()` methods."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "You can replace an existing element with a new value by assigning the new value to the subscript."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "Every array reserves a specific amount of memory to hold its contents. When you add elements to an array and that array begins to exceed its reserved capacity, the array allocates a larger region of memory and copies its elements into the new storage. The new storage is a multiple of the old storage’s size. This exponential growth strategy means that appending an element happens in constant time, averaging the performance of many append operations. Append operations that trigger reallocation have a performance cost, but they occur less and less often as the array grows larger."
          },
          {
            "Para" : "If you know approximately how many elements you will need to store, use the `reserveCapacity(_:)` method before appending to the array to avoid intermediate reallocations. Use the `capacity` and `count` properties to determine how many more elements the array can store without allocating larger storage."
          },
          {
            "Para" : "For arrays of most `Element` types, this storage is a contiguous block of memory. For arrays with an `Element` type that is a class or `@objc` protocol type, this storage can be a contiguous block of memory or an instance of `NSArray`. Because any arbitrary subclass of `NSArray` can become an `Array`, there are no guarantees about representation or efficiency in this case."
          },
          {
            "Para" : "Each array has an independent value that includes the values of all of its elements. For simple types such as integers and other structures, this means that when you change a value in one array, the value of that element does not change in any copies of the array. For example:"
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "If the elements in an array are instances of a class, the semantics are the same, though they might appear different at first. In this case, the values stored in the array are references to objects that live outside the array. If you change a reference to an object in one array, only that array has a reference to the new object. However, if two arrays contain references to the same object, you can observe changes to that object’s properties from both arrays. For example:"
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "Arrays, like all variable-size collections in the standard library, use copy-on-write optimization. Multiple copies of an array share the same storage until you modify one of the copies. When that happens, the array being modified replaces its storage with a uniquely owned copy of itself, which is then modified in place. Optimizations are sometimes applied that can reduce the amount of copying."
          },
          {
            "Para" : "This means that if an array is sharing storage with other copies, the first mutating operation on that array incurs the cost of copying the array. An array that is the sole owner of its storage can perform mutating operations in place."
          },
          {
            "Para" : "In the example below, a `numbers` array is created along with two copies that share the same storage. When the original `numbers` array is modified, it makes a unique copy of its storage before making the modification. Further modifications to `numbers` are made in place, while the two copies continue to share the original storage."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "When you need to access APIs that require data in an `NSArray` instance instead of `Array`, use the type-cast operator (`as`) to bridge your instance. For bridging to be possible, the `Element` type of your array must be a class, an `@objc` protocol (a protocol imported from Objective-C or marked with the `@objc` attribute), or a type that bridges to a Foundation type."
          },
          {
            "Para" : "The following example shows how you can bridge an `Array` instance to `NSArray` to use the `write(to:atomically:)` method. In this example, the `colors` array can be bridged to `NSArray` because the `colors` array’s `String` elements bridge to `NSString`. The compiler prevents bridging the `moreColors` array, on the other hand, because its `Element` type is `Optional<String>`, which does  bridge to a Foundation type."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "Bridging from `Array` to `NSArray` takes O(1) time and O(1) space if the array’s elements are already instances of a class or an `@objc` protocol; otherwise, it takes O() time and space."
          },
          {
            "Para" : "When the destination array’s element type is a class or an `@objc` protocol, bridging from `NSArray` to `Array` first calls the `copy(with:)` (`- copyWithZone:` in Objective-C) method on the array to get an immutable copy and then performs additional Swift bookkeeping work that takes O(1) time. For instances of `NSArray` that are already immutable, `copy(with:)` usually returns the same array in O(1) time; otherwise, the copying performance is unspecified. If `copy(with:)` returns the same array, the instances of `NSArray` and `Array` share storage using the same copy-on-write optimization that is used when two instances of `Array` share storage."
          },
          {
            "Para" : "When the destination array’s element type is a nonclass type that bridges to a Foundation type, bridging from `NSArray` to `Array` performs a bridging copy of the elements to contiguous storage in O() time. For example, bridging from `NSArray` to `Array<Int>` performs such a copy. No further bridging is required when accessing elements of the `Array` instance."
          },
          {
            "Note" : ""
          }
        ],
        "key.doc.full_as_xml" : "<Class><Name>Array<\/Name><USR>s:Sa<\/USR><Declaration>@frozen struct Array&lt;Element&gt; : _DestructorSafeContainer<\/Declaration><CommentParts><Abstract><Para>An ordered, random-access collection.<\/Para><\/Abstract><Discussion><Para>Arrays are one of the most commonly used data types in an app. You use arrays to organize your app’s data. Specifically, you use the <codeVoice>Array<\/codeVoice> type to hold elements of a single type, the array’s <codeVoice>Element<\/codeVoice> type. An array can store any kind of elements—from integers to strings to classes.<\/Para><Para>Swift makes it easy to create arrays in your code using an array literal: simply surround a comma-separated list of values with square brackets. Without any other information, Swift creates an array that includes the specified values, automatically inferring the array’s <codeVoice>Element<\/codeVoice> type. For example:<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[\/\/ An array of 'Int' elements]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let oddNumbers = [1, 3, 5, 7, 9, 11, 13, 15]]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ An array of 'String' elements]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let streets = [\"Albemarle\", \"Brandywine\", \"Chesapeake\"]]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>You can create an empty array by specifying the <codeVoice>Element<\/codeVoice> type of your array in the declaration. For example:<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[\/\/ Shortened forms are preferred]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[var emptyDoubles: [Double] = []]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ The full type name is also allowed]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[var emptyFloats: Array<Float> = Array()]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>If you need an array that is preinitialized with a fixed number of default values, use the <codeVoice>Array(repeating:count:)<\/codeVoice> initializer.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[var digitCounts = Array(repeating: 0, count: 10)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(digitCounts)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><rawHTML><![CDATA[<h1>]]><\/rawHTML>Accessing Array Values<rawHTML><![CDATA[<\/h1>]]><\/rawHTML><Para>When you need to perform an operation on all of an array’s elements, use a <codeVoice>for<\/codeVoice>-<codeVoice>in<\/codeVoice> loop to iterate through the array’s contents.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[for street in streets {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    print(\"I don't live on \\(street).\")]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"I don't live on Albemarle.\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"I don't live on Brandywine.\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"I don't live on Chesapeake.\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>Use the <codeVoice>isEmpty<\/codeVoice> property to check quickly whether an array has any elements, or use the <codeVoice>count<\/codeVoice> property to find the number of elements in the array.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[if oddNumbers.isEmpty {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    print(\"I don't know any odd numbers.\")]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[} else {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    print(\"I know \\(oddNumbers.count) odd numbers.\")]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"I know 8 odd numbers.\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>Use the <codeVoice>first<\/codeVoice> and <codeVoice>last<\/codeVoice> properties for safe access to the value of the array’s first and last elements. If the array is empty, these properties are <codeVoice>nil<\/codeVoice>.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[if let firstElement = oddNumbers.first, let lastElement = oddNumbers.last {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    print(firstElement, lastElement, separator: \", \")]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"1, 15\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(emptyDoubles.first, emptyDoubles.last, separator: \", \")]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"nil, nil\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>You can access individual array elements through a subscript. The first element of a nonempty array is always at index zero. You can subscript an array with any integer from zero up to, but not including, the count of the array. Using a negative number or an index equal to or greater than <codeVoice>count<\/codeVoice> triggers a runtime error. For example:<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[print(oddNumbers[0], oddNumbers[3], separator: \", \")]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"1, 7\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(emptyDoubles[0])]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Triggers runtime error: Index out of range]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><rawHTML><![CDATA[<h1>]]><\/rawHTML>Adding and Removing Elements<rawHTML><![CDATA[<\/h1>]]><\/rawHTML><Para>Suppose you need to store a list of the names of students that are signed up for a class you’re teaching. During the registration period, you need to add and remove names as students add and drop the class.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[var students = [\"Ben\", \"Ivy\", \"Jordell\"]]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>To add single elements to the end of an array, use the <codeVoice>append(_:)<\/codeVoice> method. Add multiple elements at the same time by passing another array or a sequence of any kind to the <codeVoice>append(contentsOf:)<\/codeVoice> method.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[students.append(\"Maxime\")]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[students.append(contentsOf: [\"Shakia\", \"William\"])]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ [\"Ben\", \"Ivy\", \"Jordell\", \"Maxime\", \"Shakia\", \"William\"]]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>You can add new elements in the middle of an array by using the <codeVoice>insert(_:at:)<\/codeVoice> method for single elements and by using <codeVoice>insert(contentsOf:at:)<\/codeVoice> to insert multiple elements from another collection or array literal. The elements at that index and later indices are shifted back to make room.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[students.insert(\"Liam\", at: 3)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ [\"Ben\", \"Ivy\", \"Jordell\", \"Liam\", \"Maxime\", \"Shakia\", \"William\"]]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>To remove elements from an array, use the <codeVoice>remove(at:)<\/codeVoice>, <codeVoice>removeSubrange(_:)<\/codeVoice>, and <codeVoice>removeLast()<\/codeVoice> methods.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[\/\/ Ben's family is moving to another state]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[students.remove(at: 0)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ [\"Ivy\", \"Jordell\", \"Liam\", \"Maxime\", \"Shakia\", \"William\"]]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ William is signing up for a different class]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[students.removeLast()]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ [\"Ivy\", \"Jordell\", \"Liam\", \"Maxime\", \"Shakia\"]]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>You can replace an existing element with a new value by assigning the new value to the subscript.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[if let i = students.firstIndex(of: \"Maxime\") {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    students[i] = \"Max\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ [\"Ivy\", \"Jordell\", \"Liam\", \"Max\", \"Shakia\"]]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><rawHTML><![CDATA[<h2>]]><\/rawHTML>Growing the Size of an Array<rawHTML><![CDATA[<\/h2>]]><\/rawHTML><Para>Every array reserves a specific amount of memory to hold its contents. When you add elements to an array and that array begins to exceed its reserved capacity, the array allocates a larger region of memory and copies its elements into the new storage. The new storage is a multiple of the old storage’s size. This exponential growth strategy means that appending an element happens in constant time, averaging the performance of many append operations. Append operations that trigger reallocation have a performance cost, but they occur less and less often as the array grows larger.<\/Para><Para>If you know approximately how many elements you will need to store, use the <codeVoice>reserveCapacity(_:)<\/codeVoice> method before appending to the array to avoid intermediate reallocations. Use the <codeVoice>capacity<\/codeVoice> and <codeVoice>count<\/codeVoice> properties to determine how many more elements the array can store without allocating larger storage.<\/Para><Para>For arrays of most <codeVoice>Element<\/codeVoice> types, this storage is a contiguous block of memory. For arrays with an <codeVoice>Element<\/codeVoice> type that is a class or <codeVoice>@objc<\/codeVoice> protocol type, this storage can be a contiguous block of memory or an instance of <codeVoice>NSArray<\/codeVoice>. Because any arbitrary subclass of <codeVoice>NSArray<\/codeVoice> can become an <codeVoice>Array<\/codeVoice>, there are no guarantees about representation or efficiency in this case.<\/Para><rawHTML><![CDATA[<h1>]]><\/rawHTML>Modifying Copies of Arrays<rawHTML><![CDATA[<\/h1>]]><\/rawHTML><Para>Each array has an independent value that includes the values of all of its elements. For simple types such as integers and other structures, this means that when you change a value in one array, the value of that element does not change in any copies of the array. For example:<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[var numbers = [1, 2, 3, 4, 5]]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[var numbersCopy = numbers]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[numbers[0] = 100]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(numbers)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"[100, 2, 3, 4, 5]\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(numbersCopy)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"[1, 2, 3, 4, 5]\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>If the elements in an array are instances of a class, the semantics are the same, though they might appear different at first. In this case, the values stored in the array are references to objects that live outside the array. If you change a reference to an object in one array, only that array has a reference to the new object. However, if two arrays contain references to the same object, you can observe changes to that object’s properties from both arrays. For example:<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[\/\/ An integer type with reference semantics]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[class IntegerReference {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    var value = 10]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[var firstIntegers = [IntegerReference(), IntegerReference()]]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[var secondIntegers = firstIntegers]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Modifications to an instance are visible from either array]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[firstIntegers[0].value = 100]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(secondIntegers[0].value)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"100\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Replacements, additions, and removals are still visible]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ only in the modified array]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[firstIntegers[0] = IntegerReference()]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(firstIntegers[0].value)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"10\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(secondIntegers[0].value)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"100\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>Arrays, like all variable-size collections in the standard library, use copy-on-write optimization. Multiple copies of an array share the same storage until you modify one of the copies. When that happens, the array being modified replaces its storage with a uniquely owned copy of itself, which is then modified in place. Optimizations are sometimes applied that can reduce the amount of copying.<\/Para><Para>This means that if an array is sharing storage with other copies, the first mutating operation on that array incurs the cost of copying the array. An array that is the sole owner of its storage can perform mutating operations in place.<\/Para><Para>In the example below, a <codeVoice>numbers<\/codeVoice> array is created along with two copies that share the same storage. When the original <codeVoice>numbers<\/codeVoice> array is modified, it makes a unique copy of its storage before making the modification. Further modifications to <codeVoice>numbers<\/codeVoice> are made in place, while the two copies continue to share the original storage.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[var numbers = [1, 2, 3, 4, 5]]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[var firstCopy = numbers]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[var secondCopy = numbers]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ The storage for 'numbers' is copied here]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[numbers[0] = 100]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[numbers[1] = 200]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[numbers[2] = 300]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ 'numbers' is [100, 200, 300, 4, 5]]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ 'firstCopy' and 'secondCopy' are [1, 2, 3, 4, 5]]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><rawHTML><![CDATA[<h1>]]><\/rawHTML>Bridging Between Array and NSArray<rawHTML><![CDATA[<\/h1>]]><\/rawHTML><Para>When you need to access APIs that require data in an <codeVoice>NSArray<\/codeVoice> instance instead of <codeVoice>Array<\/codeVoice>, use the type-cast operator (<codeVoice>as<\/codeVoice>) to bridge your instance. For bridging to be possible, the <codeVoice>Element<\/codeVoice> type of your array must be a class, an <codeVoice>@objc<\/codeVoice> protocol (a protocol imported from Objective-C or marked with the <codeVoice>@objc<\/codeVoice> attribute), or a type that bridges to a Foundation type.<\/Para><Para>The following example shows how you can bridge an <codeVoice>Array<\/codeVoice> instance to <codeVoice>NSArray<\/codeVoice> to use the <codeVoice>write(to:atomically:)<\/codeVoice> method. In this example, the <codeVoice>colors<\/codeVoice> array can be bridged to <codeVoice>NSArray<\/codeVoice> because the <codeVoice>colors<\/codeVoice> array’s <codeVoice>String<\/codeVoice> elements bridge to <codeVoice>NSString<\/codeVoice>. The compiler prevents bridging the <codeVoice>moreColors<\/codeVoice> array, on the other hand, because its <codeVoice>Element<\/codeVoice> type is <codeVoice>Optional&lt;String&gt;<\/codeVoice>, which does <emphasis>not<\/emphasis> bridge to a Foundation type.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let colors = [\"periwinkle\", \"rose\", \"moss\"]]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let moreColors: [String?] = [\"ochre\", \"pine\"]]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let url = URL(fileURLWithPath: \"names.plist\")]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[(colors as NSArray).write(to: url, atomically: true)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ true]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[(moreColors as NSArray).write(to: url, atomically: true)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ error: cannot convert value of type '[String?]' to type 'NSArray']]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>Bridging from <codeVoice>Array<\/codeVoice> to <codeVoice>NSArray<\/codeVoice> takes O(1) time and O(1) space if the array’s elements are already instances of a class or an <codeVoice>@objc<\/codeVoice> protocol; otherwise, it takes O(<emphasis>n<\/emphasis>) time and space.<\/Para><Para>When the destination array’s element type is a class or an <codeVoice>@objc<\/codeVoice> protocol, bridging from <codeVoice>NSArray<\/codeVoice> to <codeVoice>Array<\/codeVoice> first calls the <codeVoice>copy(with:)<\/codeVoice> (<codeVoice>- copyWithZone:<\/codeVoice> in Objective-C) method on the array to get an immutable copy and then performs additional Swift bookkeeping work that takes O(1) time. For instances of <codeVoice>NSArray<\/codeVoice> that are already immutable, <codeVoice>copy(with:)<\/codeVoice> usually returns the same array in O(1) time; otherwise, the copying performance is unspecified. If <codeVoice>copy(with:)<\/codeVoice> returns the same array, the instances of <codeVoice>NSArray<\/codeVoice> and <codeVoice>Array<\/codeVoice> share storage using the same copy-on-write optimization that is used when two instances of <codeVoice>Array<\/codeVoice> share storage.<\/Para><Para>When the destination array’s element type is a nonclass type that bridges to a Foundation type, bridging from <codeVoice>NSArray<\/codeVoice> to <codeVoice>Array<\/codeVoice> performs a bridging copy of the elements to contiguous storage in O(<emphasis>n<\/emphasis>) time. For example, bridging from <codeVoice>NSArray<\/codeVoice> to <codeVoice>Array&lt;Int&gt;<\/codeVoice> performs such a copy. No further bridging is required when accessing elements of the <codeVoice>Array<\/codeVoice> instance.<\/Para><Note><Para>The <codeVoice>ContiguousArray<\/codeVoice> and <codeVoice>ArraySlice<\/codeVoice> types are not bridged; instances of those types always have a contiguous block of memory as their storage.<\/Para><\/Note><\/Discussion><\/CommentParts><\/Class>",
        "key.doc.name" : "Array",
        "key.doc.type" : "Class",
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 17,
            "key.offset" : 11496
          }
        ],
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@frozen<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>Array<\/decl.name>&lt;<decl.generic_type_param usr=\"s:Sa7Elementxmfp\"><decl.generic_type_param.name>Element<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt; : <ref.protocol usr=\"s:s24_DestructorSafeContainerP\">_DestructorSafeContainer<\/ref.protocol><\/decl.struct>",
        "key.groupname" : "Collection\/Array",
        "key.inheritedtypes" : [
          {
            "key.name" : "FWSafeUnwrappable"
          }
        ],
        "key.is_system" : true,
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 157,
        "key.modulename" : "Swift",
        "key.name" : "Array",
        "key.namelength" : 5,
        "key.nameoffset" : 11489,
        "key.offset" : 11479,
        "key.parsed_declaration" : "extension Array: FWSafeUnwrappable",
        "key.parsed_scope.end" : 347,
        "key.parsed_scope.start" : 344,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public static var fwSafeValue: <Type usr=\"s:Sa\">Array<\/Type>&lt;<Type usr=\"s:Sa11FWFrameworkE7Elementxmfp\">Element<\/Type>&gt; { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 11520
              }
            ],
            "key.bodylength" : 11,
            "key.bodyoffset" : 11567,
            "key.column" : 23,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWEncode.swift",
            "key.fully_annotated_decl" : "<decl.var.static><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>fwSafeValue<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Sa\">Array<\/ref.struct>&lt;<ref.generic_type_param usr=\"s:Sa11FWFrameworkE7Elementxmfp\">Element<\/ref.generic_type_param>&gt;<\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.static>",
            "key.groupname" : "Collection\/Array",
            "key.kind" : "source.lang.swift.decl.var.static",
            "key.length" : 52,
            "key.line" : 345,
            "key.name" : "fwSafeValue",
            "key.namelength" : 11,
            "key.nameoffset" : 11538,
            "key.offset" : 11527,
            "key.overrides" : [
              {
                "key.usr" : "s:11FWFramework17FWSafeUnwrappableP11fwSafeValuexvpZ"
              }
            ],
            "key.parsed_declaration" : "public static var fwSafeValue: Array<Element>",
            "key.parsed_scope.end" : 345,
            "key.parsed_scope.start" : 345,
            "key.typename" : "Array<Element>",
            "key.typeusr" : "$sSayxGD",
            "key.usr" : "s:Sa11FWFrameworkE11fwSafeValueSayxGvpZ"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var fwIsEmpty: <Type usr=\"s:Sb\">Bool<\/Type> { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 11584
              }
            ],
            "key.bodylength" : 21,
            "key.bodyoffset" : 11612,
            "key.column" : 16,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWEncode.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>fwIsEmpty<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.groupname" : "Collection\/Array",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 43,
            "key.line" : 346,
            "key.name" : "fwIsEmpty",
            "key.namelength" : 9,
            "key.nameoffset" : 11595,
            "key.offset" : 11591,
            "key.overrides" : [
              {
                "key.usr" : "s:11FWFramework17FWSafeUnwrappableP9fwIsEmptySbvp"
              }
            ],
            "key.parsed_declaration" : "public var fwIsEmpty: Bool",
            "key.parsed_scope.end" : 346,
            "key.parsed_scope.start" : 346,
            "key.typename" : "Bool",
            "key.typeusr" : "$sSbD",
            "key.usr" : "s:Sa11FWFrameworkE9fwIsEmptySbvp"
          }
        ],
        "key.typename" : "Array<Element>.Type",
        "key.typeusr" : "$sSayxGmD",
        "key.usr" : "s:Sa"
      },
      {
        "key.annotated_decl" : "<Declaration>@frozen struct Set&lt;Element&gt; where <Type usr=\"s:Sh7Elementxmfp\">Element<\/Type> : <Type usr=\"s:SH\">Hashable<\/Type><\/Declaration>",
        "key.bodylength" : 118,
        "key.bodyoffset" : 11671,
        "key.decl_lang" : "source.lang.swift",
        "key.doc.declaration" : "@frozen struct Set<Element> where Element : Hashable",
        "key.doc.discussion" : [
          {
            "Para" : "You use a set instead of an array when you need to test efficiently for membership and you aren’t concerned with the order of the elements in the collection, or when you need to ensure that each element appears only once in a collection."
          },
          {
            "Para" : "You can create a set with any element type that conforms to the `Hashable` protocol. By default, most types in the standard library are hashable, including strings, numeric and Boolean types, enumeration cases without associated values, and even sets themselves."
          },
          {
            "Para" : "Swift makes it as easy to create a new set as to create a new array. Simply assign an array literal to a variable or constant with the `Set` type specified."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "Sets provide a suite of mathematical set operations. For example, you can efficiently test a set for membership of an element or check its intersection with another set:"
          },
          {
            "List-Bullet" : ""
          },
          {
            "Para" : "You can also combine, exclude, or subtract the elements of two sets:"
          },
          {
            "List-Bullet" : ""
          },
          {
            "Para" : "You can modify a set in place by using these methods’ mutating counterparts: `formUnion(_:)`, `formIntersection(_:)`, `formSymmetricDifference(_:)`, and `subtract(_:)`."
          },
          {
            "Para" : "Set operations are not limited to use with other sets. Instead, you can perform set operations with another set, an array, or any other sequence type."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "In addition to the `Set` type’s set operations, you can use any nonmutating sequence or collection methods with a set."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "You can iterate through a set’s unordered elements with a `for`-`in` loop."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "Many sequence and collection operations return an array or a type-erasing collection wrapper instead of a set. To restore efficient set operations, create a new set from the result."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "You can bridge between `Set` and `NSSet` using the `as` operator. For bridging to be possible, the `Element` type of a set must be a class, an `@objc` protocol (a protocol imported from Objective-C or marked with the `@objc` attribute), or a type that bridges to a Foundation type."
          },
          {
            "Para" : "Bridging from `Set` to `NSSet` always takes O(1) time and space. When the set’s `Element` type is neither a class nor an `@objc` protocol, any required bridging of elements occurs at the first access of each element, so the first operation that uses the contents of the set (for example, a membership test) can take O()."
          },
          {
            "Para" : "Bridging from `NSSet` to `Set` first calls the `copy(with:)` method (`- copyWithZone:` in Objective-C) on the set to get an immutable copy and then performs additional Swift bookkeeping work that takes O(1) time. For instances of `NSSet` that are already immutable, `copy(with:)` returns the same set in constant time; otherwise, the copying performance is unspecified. The instances of `NSSet` and `Set` share buffer using the same copy-on-write optimization that is used when two instances of `Set` share buffer."
          }
        ],
        "key.doc.full_as_xml" : "<Class><Name>Set<\/Name><USR>s:Sh<\/USR><Declaration>@frozen struct Set&lt;Element&gt; where Element : Hashable<\/Declaration><CommentParts><Abstract><Para>An unordered collection of unique elements.<\/Para><\/Abstract><Discussion><Para>You use a set instead of an array when you need to test efficiently for membership and you aren’t concerned with the order of the elements in the collection, or when you need to ensure that each element appears only once in a collection.<\/Para><Para>You can create a set with any element type that conforms to the <codeVoice>Hashable<\/codeVoice> protocol. By default, most types in the standard library are hashable, including strings, numeric and Boolean types, enumeration cases without associated values, and even sets themselves.<\/Para><Para>Swift makes it as easy to create a new set as to create a new array. Simply assign an array literal to a variable or constant with the <codeVoice>Set<\/codeVoice> type specified.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let ingredients: Set = [\"cocoa beans\", \"sugar\", \"cocoa butter\", \"salt\"]]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[if ingredients.contains(\"sugar\") {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    print(\"No thanks, too sweet.\")]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"No thanks, too sweet.\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><rawHTML><![CDATA[<h1>]]><\/rawHTML>Set Operations<rawHTML><![CDATA[<\/h1>]]><\/rawHTML><Para>Sets provide a suite of mathematical set operations. For example, you can efficiently test a set for membership of an element or check its intersection with another set:<\/Para><List-Bullet><Item><Para>Use the <codeVoice>contains(_:)<\/codeVoice> method to test whether a set contains a specific element.<\/Para><\/Item><Item><Para>Use the “equal to” operator (<codeVoice>==<\/codeVoice>) to test whether two sets contain the same elements.<\/Para><\/Item><Item><Para>Use the <codeVoice>isSubset(of:)<\/codeVoice> method to test whether a set contains all the elements of another set or sequence.<\/Para><\/Item><Item><Para>Use the <codeVoice>isSuperset(of:)<\/codeVoice> method to test whether all elements of a set are contained in another set or sequence.<\/Para><\/Item><Item><Para>Use the <codeVoice>isStrictSubset(of:)<\/codeVoice> and <codeVoice>isStrictSuperset(of:)<\/codeVoice> methods to test whether a set is a subset or superset of, but not equal to, another set.<\/Para><\/Item><Item><Para>Use the <codeVoice>isDisjoint(with:)<\/codeVoice> method to test whether a set has any elements in common with another set.<\/Para><\/Item><\/List-Bullet><Para>You can also combine, exclude, or subtract the elements of two sets:<\/Para><List-Bullet><Item><Para>Use the <codeVoice>union(_:)<\/codeVoice> method to create a new set with the elements of a set and another set or sequence.<\/Para><\/Item><Item><Para>Use the <codeVoice>intersection(_:)<\/codeVoice> method to create a new set with only the elements common to a set and another set or sequence.<\/Para><\/Item><Item><Para>Use the <codeVoice>symmetricDifference(_:)<\/codeVoice> method to create a new set with the elements that are in either a set or another set or sequence, but not in both.<\/Para><\/Item><Item><Para>Use the <codeVoice>subtracting(_:)<\/codeVoice> method to create a new set with the elements of a set that are not also in another set or sequence.<\/Para><\/Item><\/List-Bullet><Para>You can modify a set in place by using these methods’ mutating counterparts: <codeVoice>formUnion(_:)<\/codeVoice>, <codeVoice>formIntersection(_:)<\/codeVoice>, <codeVoice>formSymmetricDifference(_:)<\/codeVoice>, and <codeVoice>subtract(_:)<\/codeVoice>.<\/Para><Para>Set operations are not limited to use with other sets. Instead, you can perform set operations with another set, an array, or any other sequence type.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[var primes: Set = [2, 3, 5, 7]]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Tests whether primes is a subset of a Range<Int>]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(primes.isSubset(of: 0..<10))]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"true\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Performs an intersection with an Array<Int>]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let favoriteNumbers = [5, 7, 15, 21]]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(primes.intersection(favoriteNumbers))]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"[5, 7]\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><rawHTML><![CDATA[<h1>]]><\/rawHTML>Sequence and Collection Operations<rawHTML><![CDATA[<\/h1>]]><\/rawHTML><Para>In addition to the <codeVoice>Set<\/codeVoice> type’s set operations, you can use any nonmutating sequence or collection methods with a set.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[if primes.isEmpty {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    print(\"No primes!\")]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[} else {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    print(\"We have \\(primes.count) primes.\")]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"We have 4 primes.\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let primesSum = primes.reduce(0, +)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ 'primesSum' == 17]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let primeStrings = primes.sorted().map(String.init)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ 'primeStrings' == [\"2\", \"3\", \"5\", \"7\"]]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>You can iterate through a set’s unordered elements with a <codeVoice>for<\/codeVoice>-<codeVoice>in<\/codeVoice> loop.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[for number in primes {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    print(number)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"5\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"7\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"2\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"3\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>Many sequence and collection operations return an array or a type-erasing collection wrapper instead of a set. To restore efficient set operations, create a new set from the result.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let primesStrings = primes.map(String.init)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ 'primesStrings' is of type Array<String>]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let primesStringsSet = Set(primes.map(String.init))]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ 'primesStringsSet' is of type Set<String>]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><rawHTML><![CDATA[<h1>]]><\/rawHTML>Bridging Between Set and NSSet<rawHTML><![CDATA[<\/h1>]]><\/rawHTML><Para>You can bridge between <codeVoice>Set<\/codeVoice> and <codeVoice>NSSet<\/codeVoice> using the <codeVoice>as<\/codeVoice> operator. For bridging to be possible, the <codeVoice>Element<\/codeVoice> type of a set must be a class, an <codeVoice>@objc<\/codeVoice> protocol (a protocol imported from Objective-C or marked with the <codeVoice>@objc<\/codeVoice> attribute), or a type that bridges to a Foundation type.<\/Para><Para>Bridging from <codeVoice>Set<\/codeVoice> to <codeVoice>NSSet<\/codeVoice> always takes O(1) time and space. When the set’s <codeVoice>Element<\/codeVoice> type is neither a class nor an <codeVoice>@objc<\/codeVoice> protocol, any required bridging of elements occurs at the first access of each element, so the first operation that uses the contents of the set (for example, a membership test) can take O(<emphasis>n<\/emphasis>).<\/Para><Para>Bridging from <codeVoice>NSSet<\/codeVoice> to <codeVoice>Set<\/codeVoice> first calls the <codeVoice>copy(with:)<\/codeVoice> method (<codeVoice>- copyWithZone:<\/codeVoice> in Objective-C) on the set to get an immutable copy and then performs additional Swift bookkeeping work that takes O(1) time. For instances of <codeVoice>NSSet<\/codeVoice> that are already immutable, <codeVoice>copy(with:)<\/codeVoice> returns the same set in constant time; otherwise, the copying performance is unspecified. The instances of <codeVoice>NSSet<\/codeVoice> and <codeVoice>Set<\/codeVoice> share buffer using the same copy-on-write optimization that is used when two instances of <codeVoice>Set<\/codeVoice> share buffer.<\/Para><\/Discussion><\/CommentParts><\/Class>",
        "key.doc.name" : "Set",
        "key.doc.type" : "Class",
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 17,
            "key.offset" : 11652
          }
        ],
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@frozen<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>Set<\/decl.name>&lt;<decl.generic_type_param usr=\"s:Sh7Elementxmfp\"><decl.generic_type_param.name>Element<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt; <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement><ref.generic_type_param usr=\"s:Sh7Elementxmfp\">Element<\/ref.generic_type_param> : <ref.protocol usr=\"s:SH\">Hashable<\/ref.protocol><\/decl.generic_type_requirement><\/decl.struct>",
        "key.groupname" : "Collection\/HashedCollections",
        "key.inheritedtypes" : [
          {
            "key.name" : "FWSafeUnwrappable"
          }
        ],
        "key.is_system" : true,
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 153,
        "key.modulename" : "Swift",
        "key.name" : "Set",
        "key.namelength" : 3,
        "key.nameoffset" : 11647,
        "key.offset" : 11637,
        "key.parsed_declaration" : "extension Set: FWSafeUnwrappable",
        "key.parsed_scope.end" : 351,
        "key.parsed_scope.start" : 348,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public static var fwSafeValue: <Type usr=\"s:Sh\">Set<\/Type>&lt;<Type usr=\"s:Sh11FWFrameworkE7Elementxmfp\">Element<\/Type>&gt; { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 11676
              }
            ],
            "key.bodylength" : 11,
            "key.bodyoffset" : 11721,
            "key.column" : 23,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWEncode.swift",
            "key.fully_annotated_decl" : "<decl.var.static><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>fwSafeValue<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Sh\">Set<\/ref.struct>&lt;<ref.generic_type_param usr=\"s:Sh11FWFrameworkE7Elementxmfp\">Element<\/ref.generic_type_param>&gt;<\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.static>",
            "key.groupname" : "Collection\/HashedCollections",
            "key.kind" : "source.lang.swift.decl.var.static",
            "key.length" : 50,
            "key.line" : 349,
            "key.name" : "fwSafeValue",
            "key.namelength" : 11,
            "key.nameoffset" : 11694,
            "key.offset" : 11683,
            "key.overrides" : [
              {
                "key.usr" : "s:11FWFramework17FWSafeUnwrappableP11fwSafeValuexvpZ"
              }
            ],
            "key.parsed_declaration" : "public static var fwSafeValue: Set<Element>",
            "key.parsed_scope.end" : 349,
            "key.parsed_scope.start" : 349,
            "key.typename" : "Set<Element>",
            "key.typeusr" : "$sShyxGD",
            "key.usr" : "s:Sh11FWFrameworkE11fwSafeValueShyxGvpZ"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var fwIsEmpty: <Type usr=\"s:Sb\">Bool<\/Type> { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 11738
              }
            ],
            "key.bodylength" : 21,
            "key.bodyoffset" : 11766,
            "key.column" : 16,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWEncode.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>fwIsEmpty<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.groupname" : "Collection\/HashedCollections",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 43,
            "key.line" : 350,
            "key.name" : "fwIsEmpty",
            "key.namelength" : 9,
            "key.nameoffset" : 11749,
            "key.offset" : 11745,
            "key.overrides" : [
              {
                "key.usr" : "s:11FWFramework17FWSafeUnwrappableP9fwIsEmptySbvp"
              }
            ],
            "key.parsed_declaration" : "public var fwIsEmpty: Bool",
            "key.parsed_scope.end" : 350,
            "key.parsed_scope.start" : 350,
            "key.typename" : "Bool",
            "key.typeusr" : "$sSbD",
            "key.usr" : "s:Sh11FWFrameworkE9fwIsEmptySbvp"
          }
        ],
        "key.typename" : "Set<Element>.Type",
        "key.typeusr" : "$sShyxGmD",
        "key.usr" : "s:Sh"
      },
      {
        "key.annotated_decl" : "<Declaration>@frozen struct Dictionary&lt;Key, Value&gt; where <Type usr=\"s:SD3Keyxmfp\">Key<\/Type> : <Type usr=\"s:SH\">Hashable<\/Type><\/Declaration>",
        "key.bodylength" : 129,
        "key.bodyoffset" : 11832,
        "key.decl_lang" : "source.lang.swift",
        "key.doc.declaration" : "@frozen struct Dictionary<Key, Value> where Key : Hashable",
        "key.doc.discussion" : [
          {
            "Para" : "A dictionary is a type of hash table, providing fast access to the entries it contains. Each entry in the table is identified using its key, which is a hashable type such as a string or number. You use that key to retrieve the corresponding value, which can be any object. In other languages, similar data types are known as hashes or associated arrays."
          },
          {
            "Para" : "Create a new dictionary by using a dictionary literal. A dictionary literal is a comma-separated list of key-value pairs, in which a colon separates each key from its associated value, surrounded by square brackets. You can assign a dictionary literal to a variable or constant or pass it to a function that expects a dictionary."
          },
          {
            "Para" : "Here’s how you would create a dictionary of HTTP response codes and their related messages:"
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "The `responseMessages` variable is inferred to have type `[Int: String]`. The `Key` type of the dictionary is `Int`, and the `Value` type of the dictionary is `String`."
          },
          {
            "Para" : "To create a dictionary with no key-value pairs, use an empty dictionary literal (`[:]`)."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "Any type that conforms to the `Hashable` protocol can be used as a dictionary’s `Key` type, including all of Swift’s basic types. You can use your own custom types as dictionary keys by making them conform to the `Hashable` protocol."
          },
          {
            "Para" : "The most common way to access values in a dictionary is to use a key as a subscript. Subscripting with a key takes the following form:"
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "Subscripting a dictionary with a key returns an optional value, because a dictionary might not hold a value for the key that you use in the subscript."
          },
          {
            "Para" : "The next example uses key-based subscripting of the `responseMessages` dictionary with two keys that exist in the dictionary and one that does not."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "You can also update, modify, or remove keys and values from a dictionary using the key-based subscript. To add a new key-value pair, assign a value to a key that isn’t yet a part of the dictionary."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "Update an existing value by assigning a new value to a key that already exists in the dictionary. If you assign `nil` to an existing key, the key and its associated value are removed. The following example updates the value for the `404` code to be simply “Not found” and removes the key-value pair for the `500` code entirely."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "In a mutable `Dictionary` instance, you can modify in place a value that you’ve accessed through a keyed subscript. The code sample below declares a dictionary called `interestingNumbers` with string keys and values that are integer arrays, then sorts each array in-place in descending order."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "Every dictionary is an unordered collection of key-value pairs. You can iterate over a dictionary using a `for`-`in` loop, decomposing each key-value pair into the elements of a tuple."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "The order of key-value pairs in a dictionary is stable between mutations but is otherwise unpredictable. If you need an ordered collection of key-value pairs and don’t need the fast key lookup that `Dictionary` provides, see the `KeyValuePairs` type for an alternative."
          },
          {
            "Para" : "You can search a dictionary’s contents for a particular value using the `contains(where:)` or `firstIndex(where:)` methods supplied by default implementation. The following example checks to see if `imagePaths` contains any paths in the `\"\/glyphs\"` directory:"
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "Note that in this example, `imagePaths` is subscripted using a dictionary index. Unlike the key-based subscript, the index-based subscript returns the corresponding key-value pair as a non-optional tuple."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "A dictionary’s indices stay valid across additions to the dictionary as long as the dictionary has enough capacity to store the added values without allocating more buffer. When a dictionary outgrows its buffer, existing indices may be invalidated without any notification."
          },
          {
            "Para" : "When you know how many new values you’re adding to a dictionary, use the `init(minimumCapacity:)` initializer to allocate the correct amount of buffer."
          },
          {
            "Para" : "You can bridge between `Dictionary` and `NSDictionary` using the `as` operator. For bridging to be possible, the `Key` and `Value` types of a dictionary must be classes, `@objc` protocols, or types that bridge to Foundation types."
          },
          {
            "Para" : "Bridging from `Dictionary` to `NSDictionary` always takes O(1) time and space. When the dictionary’s `Key` and `Value` types are neither classes nor `@objc` protocols, any required bridging of elements occurs at the first access of each element. For this reason, the first operation that uses the contents of the dictionary may take O()."
          },
          {
            "Para" : "Bridging from `NSDictionary` to `Dictionary` first calls the `copy(with:)` method (`- copyWithZone:` in Objective-C) on the dictionary to get an immutable copy and then performs additional Swift bookkeeping work that takes O(1) time. For instances of `NSDictionary` that are already immutable, `copy(with:)` usually returns the same dictionary in O(1) time; otherwise, the copying performance is unspecified. The instances of `NSDictionary` and `Dictionary` share buffer using the same copy-on-write optimization that is used when two instances of `Dictionary` share buffer."
          }
        ],
        "key.doc.full_as_xml" : "<Class><Name>Dictionary<\/Name><USR>s:SD<\/USR><Declaration>@frozen struct Dictionary&lt;Key, Value&gt; where Key : Hashable<\/Declaration><CommentParts><Abstract><Para>A collection whose elements are key-value pairs.<\/Para><\/Abstract><Discussion><Para>A dictionary is a type of hash table, providing fast access to the entries it contains. Each entry in the table is identified using its key, which is a hashable type such as a string or number. You use that key to retrieve the corresponding value, which can be any object. In other languages, similar data types are known as hashes or associated arrays.<\/Para><Para>Create a new dictionary by using a dictionary literal. A dictionary literal is a comma-separated list of key-value pairs, in which a colon separates each key from its associated value, surrounded by square brackets. You can assign a dictionary literal to a variable or constant or pass it to a function that expects a dictionary.<\/Para><Para>Here’s how you would create a dictionary of HTTP response codes and their related messages:<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[var responseMessages = [200: \"OK\",]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[                        403: \"Access forbidden\",]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[                        404: \"File not found\",]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[                        500: \"Internal server error\"]]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>The <codeVoice>responseMessages<\/codeVoice> variable is inferred to have type <codeVoice>[Int: String]<\/codeVoice>. The <codeVoice>Key<\/codeVoice> type of the dictionary is <codeVoice>Int<\/codeVoice>, and the <codeVoice>Value<\/codeVoice> type of the dictionary is <codeVoice>String<\/codeVoice>.<\/Para><Para>To create a dictionary with no key-value pairs, use an empty dictionary literal (<codeVoice>[:]<\/codeVoice>).<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[var emptyDict: [String: String] = [:]]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>Any type that conforms to the <codeVoice>Hashable<\/codeVoice> protocol can be used as a dictionary’s <codeVoice>Key<\/codeVoice> type, including all of Swift’s basic types. You can use your own custom types as dictionary keys by making them conform to the <codeVoice>Hashable<\/codeVoice> protocol.<\/Para><rawHTML><![CDATA[<h1>]]><\/rawHTML>Getting and Setting Dictionary Values<rawHTML><![CDATA[<\/h1>]]><\/rawHTML><Para>The most common way to access values in a dictionary is to use a key as a subscript. Subscripting with a key takes the following form:<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[print(responseMessages[200])]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"Optional(\"OK\")\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>Subscripting a dictionary with a key returns an optional value, because a dictionary might not hold a value for the key that you use in the subscript.<\/Para><Para>The next example uses key-based subscripting of the <codeVoice>responseMessages<\/codeVoice> dictionary with two keys that exist in the dictionary and one that does not.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let httpResponseCodes = [200, 403, 301]]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[for code in httpResponseCodes {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    if let message = responseMessages[code] {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        print(\"Response \\(code): \\(message)\")]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    } else {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        print(\"Unknown response \\(code)\")]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    }]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"Response 200: OK\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"Response 403: Access forbidden\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"Unknown response 301\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>You can also update, modify, or remove keys and values from a dictionary using the key-based subscript. To add a new key-value pair, assign a value to a key that isn’t yet a part of the dictionary.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[responseMessages[301] = \"Moved permanently\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(responseMessages[301])]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"Optional(\"Moved permanently\")\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>Update an existing value by assigning a new value to a key that already exists in the dictionary. If you assign <codeVoice>nil<\/codeVoice> to an existing key, the key and its associated value are removed. The following example updates the value for the <codeVoice>404<\/codeVoice> code to be simply “Not found” and removes the key-value pair for the <codeVoice>500<\/codeVoice> code entirely.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[responseMessages[404] = \"Not found\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[responseMessages[500] = nil]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(responseMessages)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"[301: \"Moved permanently\", 200: \"OK\", 403: \"Access forbidden\", 404: \"Not found\"]\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>In a mutable <codeVoice>Dictionary<\/codeVoice> instance, you can modify in place a value that you’ve accessed through a keyed subscript. The code sample below declares a dictionary called <codeVoice>interestingNumbers<\/codeVoice> with string keys and values that are integer arrays, then sorts each array in-place in descending order.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[var interestingNumbers = [\"primes\": [2, 3, 5, 7, 11, 13, 17],]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[                          \"triangular\": [1, 3, 6, 10, 15, 21, 28],]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[                          \"hexagonal\": [1, 6, 15, 28, 45, 66, 91]]]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[for key in interestingNumbers.keys {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    interestingNumbers[key]?.sort(by: >)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(interestingNumbers[\"primes\"]!)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"[17, 13, 11, 7, 5, 3, 2]\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><rawHTML><![CDATA[<h1>]]><\/rawHTML>Iterating Over the Contents of a Dictionary<rawHTML><![CDATA[<\/h1>]]><\/rawHTML><Para>Every dictionary is an unordered collection of key-value pairs. You can iterate over a dictionary using a <codeVoice>for<\/codeVoice>-<codeVoice>in<\/codeVoice> loop, decomposing each key-value pair into the elements of a tuple.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let imagePaths = [\"star\": \"\/glyphs\/star.png\",]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[                  \"portrait\": \"\/images\/content\/portrait.jpg\",]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[                  \"spacer\": \"\/images\/shared\/spacer.gif\"]]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[for (name, path) in imagePaths {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    print(\"The path to '\\(name)' is '\\(path)'.\")]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"The path to 'star' is '\/glyphs\/star.png'.\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"The path to 'portrait' is '\/images\/content\/portrait.jpg'.\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"The path to 'spacer' is '\/images\/shared\/spacer.gif'.\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>The order of key-value pairs in a dictionary is stable between mutations but is otherwise unpredictable. If you need an ordered collection of key-value pairs and don’t need the fast key lookup that <codeVoice>Dictionary<\/codeVoice> provides, see the <codeVoice>KeyValuePairs<\/codeVoice> type for an alternative.<\/Para><Para>You can search a dictionary’s contents for a particular value using the <codeVoice>contains(where:)<\/codeVoice> or <codeVoice>firstIndex(where:)<\/codeVoice> methods supplied by default implementation. The following example checks to see if <codeVoice>imagePaths<\/codeVoice> contains any paths in the <codeVoice>&quot;\/glyphs&quot;<\/codeVoice> directory:<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let glyphIndex = imagePaths.firstIndex(where: { $0.value.hasPrefix(\"\/glyphs\") })]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[if let index = glyphIndex {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    print(\"The '\\(imagePaths[index].key)' image is a glyph.\")]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[} else {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    print(\"No glyphs found!\")]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"The 'star' image is a glyph.\")]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>Note that in this example, <codeVoice>imagePaths<\/codeVoice> is subscripted using a dictionary index. Unlike the key-based subscript, the index-based subscript returns the corresponding key-value pair as a non-optional tuple.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[print(imagePaths[glyphIndex!])]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"(key: \"star\", value: \"\/glyphs\/star.png\")\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>A dictionary’s indices stay valid across additions to the dictionary as long as the dictionary has enough capacity to store the added values without allocating more buffer. When a dictionary outgrows its buffer, existing indices may be invalidated without any notification.<\/Para><Para>When you know how many new values you’re adding to a dictionary, use the <codeVoice>init(minimumCapacity:)<\/codeVoice> initializer to allocate the correct amount of buffer.<\/Para><rawHTML><![CDATA[<h1>]]><\/rawHTML>Bridging Between Dictionary and NSDictionary<rawHTML><![CDATA[<\/h1>]]><\/rawHTML><Para>You can bridge between <codeVoice>Dictionary<\/codeVoice> and <codeVoice>NSDictionary<\/codeVoice> using the <codeVoice>as<\/codeVoice> operator. For bridging to be possible, the <codeVoice>Key<\/codeVoice> and <codeVoice>Value<\/codeVoice> types of a dictionary must be classes, <codeVoice>@objc<\/codeVoice> protocols, or types that bridge to Foundation types.<\/Para><Para>Bridging from <codeVoice>Dictionary<\/codeVoice> to <codeVoice>NSDictionary<\/codeVoice> always takes O(1) time and space. When the dictionary’s <codeVoice>Key<\/codeVoice> and <codeVoice>Value<\/codeVoice> types are neither classes nor <codeVoice>@objc<\/codeVoice> protocols, any required bridging of elements occurs at the first access of each element. For this reason, the first operation that uses the contents of the dictionary may take O(<emphasis>n<\/emphasis>).<\/Para><Para>Bridging from <codeVoice>NSDictionary<\/codeVoice> to <codeVoice>Dictionary<\/codeVoice> first calls the <codeVoice>copy(with:)<\/codeVoice> method (<codeVoice>- copyWithZone:<\/codeVoice> in Objective-C) on the dictionary to get an immutable copy and then performs additional Swift bookkeeping work that takes O(1) time. For instances of <codeVoice>NSDictionary<\/codeVoice> that are already immutable, <codeVoice>copy(with:)<\/codeVoice> usually returns the same dictionary in O(1) time; otherwise, the copying performance is unspecified. The instances of <codeVoice>NSDictionary<\/codeVoice> and <codeVoice>Dictionary<\/codeVoice> share buffer using the same copy-on-write optimization that is used when two instances of <codeVoice>Dictionary<\/codeVoice> share buffer.<\/Para><\/Discussion><\/CommentParts><\/Class>",
        "key.doc.name" : "Dictionary",
        "key.doc.type" : "Class",
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 17,
            "key.offset" : 11813
          }
        ],
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@frozen<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>Dictionary<\/decl.name>&lt;<decl.generic_type_param usr=\"s:SD3Keyxmfp\"><decl.generic_type_param.name>Key<\/decl.generic_type_param.name><\/decl.generic_type_param>, <decl.generic_type_param usr=\"s:SD5Valueq_mfp\"><decl.generic_type_param.name>Value<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt; <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement><ref.generic_type_param usr=\"s:SD3Keyxmfp\">Key<\/ref.generic_type_param> : <ref.protocol usr=\"s:SH\">Hashable<\/ref.protocol><\/decl.generic_type_requirement><\/decl.struct>",
        "key.groupname" : "Collection\/HashedCollections",
        "key.inheritedtypes" : [
          {
            "key.name" : "FWSafeUnwrappable"
          }
        ],
        "key.is_system" : true,
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 171,
        "key.modulename" : "Swift",
        "key.name" : "Dictionary",
        "key.namelength" : 10,
        "key.nameoffset" : 11801,
        "key.offset" : 11791,
        "key.parsed_declaration" : "extension Dictionary: FWSafeUnwrappable",
        "key.parsed_scope.end" : 355,
        "key.parsed_scope.start" : 352,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public static var fwSafeValue: <Type usr=\"s:SD\">Dictionary<\/Type>&lt;<Type usr=\"s:SD11FWFrameworkE3Keyxmfp\">Key<\/Type>, <Type usr=\"s:SD11FWFrameworkE5Valueq_mfp\">Value<\/Type>&gt; { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 11837
              }
            ],
            "key.bodylength" : 12,
            "key.bodyoffset" : 11892,
            "key.column" : 23,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWEncode.swift",
            "key.fully_annotated_decl" : "<decl.var.static><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>fwSafeValue<\/decl.name>: <decl.var.type><ref.struct usr=\"s:SD\">Dictionary<\/ref.struct>&lt;<ref.generic_type_param usr=\"s:SD11FWFrameworkE3Keyxmfp\">Key<\/ref.generic_type_param>, <ref.generic_type_param usr=\"s:SD11FWFrameworkE5Valueq_mfp\">Value<\/ref.generic_type_param>&gt;<\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.static>",
            "key.groupname" : "Collection\/HashedCollections",
            "key.kind" : "source.lang.swift.decl.var.static",
            "key.length" : 61,
            "key.line" : 353,
            "key.name" : "fwSafeValue",
            "key.namelength" : 11,
            "key.nameoffset" : 11855,
            "key.offset" : 11844,
            "key.overrides" : [
              {
                "key.usr" : "s:11FWFramework17FWSafeUnwrappableP11fwSafeValuexvpZ"
              }
            ],
            "key.parsed_declaration" : "public static var fwSafeValue: Dictionary<Key, Value>",
            "key.parsed_scope.end" : 353,
            "key.parsed_scope.start" : 353,
            "key.typename" : "Dictionary<Key, Value>",
            "key.typeusr" : "$sSDyxq_GD",
            "key.usr" : "s:SD11FWFrameworkE11fwSafeValueSDyxq_GvpZ"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var fwIsEmpty: <Type usr=\"s:Sb\">Bool<\/Type> { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 11910
              }
            ],
            "key.bodylength" : 21,
            "key.bodyoffset" : 11938,
            "key.column" : 16,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWEncode.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>fwIsEmpty<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.groupname" : "Collection\/HashedCollections",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 43,
            "key.line" : 354,
            "key.name" : "fwIsEmpty",
            "key.namelength" : 9,
            "key.nameoffset" : 11921,
            "key.offset" : 11917,
            "key.overrides" : [
              {
                "key.usr" : "s:11FWFramework17FWSafeUnwrappableP9fwIsEmptySbvp"
              }
            ],
            "key.parsed_declaration" : "public var fwIsEmpty: Bool",
            "key.parsed_scope.end" : 354,
            "key.parsed_scope.start" : 354,
            "key.typename" : "Bool",
            "key.typeusr" : "$sSbD",
            "key.usr" : "s:SD11FWFrameworkE9fwIsEmptySbvp"
          }
        ],
        "key.typename" : "Dictionary<Key, Value>.Type",
        "key.typeusr" : "$sSDyxq_GmD",
        "key.usr" : "s:SD"
      },
      {
        "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
        "key.length" : 20,
        "key.name" : "MARK: - FWSafeBridge",
        "key.namelength" : 0,
        "key.nameoffset" : 0,
        "key.offset" : 11967
      },
      {
        "key.annotated_decl" : "<Declaration>@frozen struct Array&lt;Element&gt; : <Type usr=\"s:s24_DestructorSafeContainerP\">_DestructorSafeContainer<\/Type><\/Declaration>",
        "key.bodylength" : 62,
        "key.bodyoffset" : 12006,
        "key.decl_lang" : "source.lang.swift",
        "key.doc.declaration" : "@frozen struct Array<Element> : _DestructorSafeContainer",
        "key.doc.discussion" : [
          {
            "Para" : "Arrays are one of the most commonly used data types in an app. You use arrays to organize your app’s data. Specifically, you use the `Array` type to hold elements of a single type, the array’s `Element` type. An array can store any kind of elements—from integers to strings to classes."
          },
          {
            "Para" : "Swift makes it easy to create arrays in your code using an array literal: simply surround a comma-separated list of values with square brackets. Without any other information, Swift creates an array that includes the specified values, automatically inferring the array’s `Element` type. For example:"
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "You can create an empty array by specifying the `Element` type of your array in the declaration. For example:"
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "If you need an array that is preinitialized with a fixed number of default values, use the `Array(repeating:count:)` initializer."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "When you need to perform an operation on all of an array’s elements, use a `for`-`in` loop to iterate through the array’s contents."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "Use the `isEmpty` property to check quickly whether an array has any elements, or use the `count` property to find the number of elements in the array."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "Use the `first` and `last` properties for safe access to the value of the array’s first and last elements. If the array is empty, these properties are `nil`."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "You can access individual array elements through a subscript. The first element of a nonempty array is always at index zero. You can subscript an array with any integer from zero up to, but not including, the count of the array. Using a negative number or an index equal to or greater than `count` triggers a runtime error. For example:"
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "Suppose you need to store a list of the names of students that are signed up for a class you’re teaching. During the registration period, you need to add and remove names as students add and drop the class."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "To add single elements to the end of an array, use the `append(_:)` method. Add multiple elements at the same time by passing another array or a sequence of any kind to the `append(contentsOf:)` method."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "You can add new elements in the middle of an array by using the `insert(_:at:)` method for single elements and by using `insert(contentsOf:at:)` to insert multiple elements from another collection or array literal. The elements at that index and later indices are shifted back to make room."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "To remove elements from an array, use the `remove(at:)`, `removeSubrange(_:)`, and `removeLast()` methods."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "You can replace an existing element with a new value by assigning the new value to the subscript."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "Every array reserves a specific amount of memory to hold its contents. When you add elements to an array and that array begins to exceed its reserved capacity, the array allocates a larger region of memory and copies its elements into the new storage. The new storage is a multiple of the old storage’s size. This exponential growth strategy means that appending an element happens in constant time, averaging the performance of many append operations. Append operations that trigger reallocation have a performance cost, but they occur less and less often as the array grows larger."
          },
          {
            "Para" : "If you know approximately how many elements you will need to store, use the `reserveCapacity(_:)` method before appending to the array to avoid intermediate reallocations. Use the `capacity` and `count` properties to determine how many more elements the array can store without allocating larger storage."
          },
          {
            "Para" : "For arrays of most `Element` types, this storage is a contiguous block of memory. For arrays with an `Element` type that is a class or `@objc` protocol type, this storage can be a contiguous block of memory or an instance of `NSArray`. Because any arbitrary subclass of `NSArray` can become an `Array`, there are no guarantees about representation or efficiency in this case."
          },
          {
            "Para" : "Each array has an independent value that includes the values of all of its elements. For simple types such as integers and other structures, this means that when you change a value in one array, the value of that element does not change in any copies of the array. For example:"
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "If the elements in an array are instances of a class, the semantics are the same, though they might appear different at first. In this case, the values stored in the array are references to objects that live outside the array. If you change a reference to an object in one array, only that array has a reference to the new object. However, if two arrays contain references to the same object, you can observe changes to that object’s properties from both arrays. For example:"
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "Arrays, like all variable-size collections in the standard library, use copy-on-write optimization. Multiple copies of an array share the same storage until you modify one of the copies. When that happens, the array being modified replaces its storage with a uniquely owned copy of itself, which is then modified in place. Optimizations are sometimes applied that can reduce the amount of copying."
          },
          {
            "Para" : "This means that if an array is sharing storage with other copies, the first mutating operation on that array incurs the cost of copying the array. An array that is the sole owner of its storage can perform mutating operations in place."
          },
          {
            "Para" : "In the example below, a `numbers` array is created along with two copies that share the same storage. When the original `numbers` array is modified, it makes a unique copy of its storage before making the modification. Further modifications to `numbers` are made in place, while the two copies continue to share the original storage."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "When you need to access APIs that require data in an `NSArray` instance instead of `Array`, use the type-cast operator (`as`) to bridge your instance. For bridging to be possible, the `Element` type of your array must be a class, an `@objc` protocol (a protocol imported from Objective-C or marked with the `@objc` attribute), or a type that bridges to a Foundation type."
          },
          {
            "Para" : "The following example shows how you can bridge an `Array` instance to `NSArray` to use the `write(to:atomically:)` method. In this example, the `colors` array can be bridged to `NSArray` because the `colors` array’s `String` elements bridge to `NSString`. The compiler prevents bridging the `moreColors` array, on the other hand, because its `Element` type is `Optional<String>`, which does  bridge to a Foundation type."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "Bridging from `Array` to `NSArray` takes O(1) time and O(1) space if the array’s elements are already instances of a class or an `@objc` protocol; otherwise, it takes O() time and space."
          },
          {
            "Para" : "When the destination array’s element type is a class or an `@objc` protocol, bridging from `NSArray` to `Array` first calls the `copy(with:)` (`- copyWithZone:` in Objective-C) method on the array to get an immutable copy and then performs additional Swift bookkeeping work that takes O(1) time. For instances of `NSArray` that are already immutable, `copy(with:)` usually returns the same array in O(1) time; otherwise, the copying performance is unspecified. If `copy(with:)` returns the same array, the instances of `NSArray` and `Array` share storage using the same copy-on-write optimization that is used when two instances of `Array` share storage."
          },
          {
            "Para" : "When the destination array’s element type is a nonclass type that bridges to a Foundation type, bridging from `NSArray` to `Array` performs a bridging copy of the elements to contiguous storage in O() time. For example, bridging from `NSArray` to `Array<Int>` performs such a copy. No further bridging is required when accessing elements of the `Array` instance."
          },
          {
            "Note" : ""
          }
        ],
        "key.doc.full_as_xml" : "<Class><Name>Array<\/Name><USR>s:Sa<\/USR><Declaration>@frozen struct Array&lt;Element&gt; : _DestructorSafeContainer<\/Declaration><CommentParts><Abstract><Para>An ordered, random-access collection.<\/Para><\/Abstract><Discussion><Para>Arrays are one of the most commonly used data types in an app. You use arrays to organize your app’s data. Specifically, you use the <codeVoice>Array<\/codeVoice> type to hold elements of a single type, the array’s <codeVoice>Element<\/codeVoice> type. An array can store any kind of elements—from integers to strings to classes.<\/Para><Para>Swift makes it easy to create arrays in your code using an array literal: simply surround a comma-separated list of values with square brackets. Without any other information, Swift creates an array that includes the specified values, automatically inferring the array’s <codeVoice>Element<\/codeVoice> type. For example:<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[\/\/ An array of 'Int' elements]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let oddNumbers = [1, 3, 5, 7, 9, 11, 13, 15]]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ An array of 'String' elements]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let streets = [\"Albemarle\", \"Brandywine\", \"Chesapeake\"]]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>You can create an empty array by specifying the <codeVoice>Element<\/codeVoice> type of your array in the declaration. For example:<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[\/\/ Shortened forms are preferred]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[var emptyDoubles: [Double] = []]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ The full type name is also allowed]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[var emptyFloats: Array<Float> = Array()]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>If you need an array that is preinitialized with a fixed number of default values, use the <codeVoice>Array(repeating:count:)<\/codeVoice> initializer.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[var digitCounts = Array(repeating: 0, count: 10)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(digitCounts)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><rawHTML><![CDATA[<h1>]]><\/rawHTML>Accessing Array Values<rawHTML><![CDATA[<\/h1>]]><\/rawHTML><Para>When you need to perform an operation on all of an array’s elements, use a <codeVoice>for<\/codeVoice>-<codeVoice>in<\/codeVoice> loop to iterate through the array’s contents.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[for street in streets {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    print(\"I don't live on \\(street).\")]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"I don't live on Albemarle.\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"I don't live on Brandywine.\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"I don't live on Chesapeake.\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>Use the <codeVoice>isEmpty<\/codeVoice> property to check quickly whether an array has any elements, or use the <codeVoice>count<\/codeVoice> property to find the number of elements in the array.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[if oddNumbers.isEmpty {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    print(\"I don't know any odd numbers.\")]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[} else {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    print(\"I know \\(oddNumbers.count) odd numbers.\")]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"I know 8 odd numbers.\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>Use the <codeVoice>first<\/codeVoice> and <codeVoice>last<\/codeVoice> properties for safe access to the value of the array’s first and last elements. If the array is empty, these properties are <codeVoice>nil<\/codeVoice>.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[if let firstElement = oddNumbers.first, let lastElement = oddNumbers.last {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    print(firstElement, lastElement, separator: \", \")]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"1, 15\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(emptyDoubles.first, emptyDoubles.last, separator: \", \")]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"nil, nil\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>You can access individual array elements through a subscript. The first element of a nonempty array is always at index zero. You can subscript an array with any integer from zero up to, but not including, the count of the array. Using a negative number or an index equal to or greater than <codeVoice>count<\/codeVoice> triggers a runtime error. For example:<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[print(oddNumbers[0], oddNumbers[3], separator: \", \")]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"1, 7\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(emptyDoubles[0])]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Triggers runtime error: Index out of range]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><rawHTML><![CDATA[<h1>]]><\/rawHTML>Adding and Removing Elements<rawHTML><![CDATA[<\/h1>]]><\/rawHTML><Para>Suppose you need to store a list of the names of students that are signed up for a class you’re teaching. During the registration period, you need to add and remove names as students add and drop the class.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[var students = [\"Ben\", \"Ivy\", \"Jordell\"]]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>To add single elements to the end of an array, use the <codeVoice>append(_:)<\/codeVoice> method. Add multiple elements at the same time by passing another array or a sequence of any kind to the <codeVoice>append(contentsOf:)<\/codeVoice> method.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[students.append(\"Maxime\")]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[students.append(contentsOf: [\"Shakia\", \"William\"])]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ [\"Ben\", \"Ivy\", \"Jordell\", \"Maxime\", \"Shakia\", \"William\"]]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>You can add new elements in the middle of an array by using the <codeVoice>insert(_:at:)<\/codeVoice> method for single elements and by using <codeVoice>insert(contentsOf:at:)<\/codeVoice> to insert multiple elements from another collection or array literal. The elements at that index and later indices are shifted back to make room.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[students.insert(\"Liam\", at: 3)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ [\"Ben\", \"Ivy\", \"Jordell\", \"Liam\", \"Maxime\", \"Shakia\", \"William\"]]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>To remove elements from an array, use the <codeVoice>remove(at:)<\/codeVoice>, <codeVoice>removeSubrange(_:)<\/codeVoice>, and <codeVoice>removeLast()<\/codeVoice> methods.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[\/\/ Ben's family is moving to another state]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[students.remove(at: 0)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ [\"Ivy\", \"Jordell\", \"Liam\", \"Maxime\", \"Shakia\", \"William\"]]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ William is signing up for a different class]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[students.removeLast()]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ [\"Ivy\", \"Jordell\", \"Liam\", \"Maxime\", \"Shakia\"]]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>You can replace an existing element with a new value by assigning the new value to the subscript.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[if let i = students.firstIndex(of: \"Maxime\") {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    students[i] = \"Max\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ [\"Ivy\", \"Jordell\", \"Liam\", \"Max\", \"Shakia\"]]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><rawHTML><![CDATA[<h2>]]><\/rawHTML>Growing the Size of an Array<rawHTML><![CDATA[<\/h2>]]><\/rawHTML><Para>Every array reserves a specific amount of memory to hold its contents. When you add elements to an array and that array begins to exceed its reserved capacity, the array allocates a larger region of memory and copies its elements into the new storage. The new storage is a multiple of the old storage’s size. This exponential growth strategy means that appending an element happens in constant time, averaging the performance of many append operations. Append operations that trigger reallocation have a performance cost, but they occur less and less often as the array grows larger.<\/Para><Para>If you know approximately how many elements you will need to store, use the <codeVoice>reserveCapacity(_:)<\/codeVoice> method before appending to the array to avoid intermediate reallocations. Use the <codeVoice>capacity<\/codeVoice> and <codeVoice>count<\/codeVoice> properties to determine how many more elements the array can store without allocating larger storage.<\/Para><Para>For arrays of most <codeVoice>Element<\/codeVoice> types, this storage is a contiguous block of memory. For arrays with an <codeVoice>Element<\/codeVoice> type that is a class or <codeVoice>@objc<\/codeVoice> protocol type, this storage can be a contiguous block of memory or an instance of <codeVoice>NSArray<\/codeVoice>. Because any arbitrary subclass of <codeVoice>NSArray<\/codeVoice> can become an <codeVoice>Array<\/codeVoice>, there are no guarantees about representation or efficiency in this case.<\/Para><rawHTML><![CDATA[<h1>]]><\/rawHTML>Modifying Copies of Arrays<rawHTML><![CDATA[<\/h1>]]><\/rawHTML><Para>Each array has an independent value that includes the values of all of its elements. For simple types such as integers and other structures, this means that when you change a value in one array, the value of that element does not change in any copies of the array. For example:<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[var numbers = [1, 2, 3, 4, 5]]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[var numbersCopy = numbers]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[numbers[0] = 100]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(numbers)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"[100, 2, 3, 4, 5]\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(numbersCopy)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"[1, 2, 3, 4, 5]\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>If the elements in an array are instances of a class, the semantics are the same, though they might appear different at first. In this case, the values stored in the array are references to objects that live outside the array. If you change a reference to an object in one array, only that array has a reference to the new object. However, if two arrays contain references to the same object, you can observe changes to that object’s properties from both arrays. For example:<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[\/\/ An integer type with reference semantics]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[class IntegerReference {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    var value = 10]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[var firstIntegers = [IntegerReference(), IntegerReference()]]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[var secondIntegers = firstIntegers]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Modifications to an instance are visible from either array]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[firstIntegers[0].value = 100]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(secondIntegers[0].value)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"100\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Replacements, additions, and removals are still visible]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ only in the modified array]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[firstIntegers[0] = IntegerReference()]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(firstIntegers[0].value)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"10\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(secondIntegers[0].value)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"100\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>Arrays, like all variable-size collections in the standard library, use copy-on-write optimization. Multiple copies of an array share the same storage until you modify one of the copies. When that happens, the array being modified replaces its storage with a uniquely owned copy of itself, which is then modified in place. Optimizations are sometimes applied that can reduce the amount of copying.<\/Para><Para>This means that if an array is sharing storage with other copies, the first mutating operation on that array incurs the cost of copying the array. An array that is the sole owner of its storage can perform mutating operations in place.<\/Para><Para>In the example below, a <codeVoice>numbers<\/codeVoice> array is created along with two copies that share the same storage. When the original <codeVoice>numbers<\/codeVoice> array is modified, it makes a unique copy of its storage before making the modification. Further modifications to <codeVoice>numbers<\/codeVoice> are made in place, while the two copies continue to share the original storage.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[var numbers = [1, 2, 3, 4, 5]]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[var firstCopy = numbers]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[var secondCopy = numbers]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ The storage for 'numbers' is copied here]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[numbers[0] = 100]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[numbers[1] = 200]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[numbers[2] = 300]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ 'numbers' is [100, 200, 300, 4, 5]]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ 'firstCopy' and 'secondCopy' are [1, 2, 3, 4, 5]]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><rawHTML><![CDATA[<h1>]]><\/rawHTML>Bridging Between Array and NSArray<rawHTML><![CDATA[<\/h1>]]><\/rawHTML><Para>When you need to access APIs that require data in an <codeVoice>NSArray<\/codeVoice> instance instead of <codeVoice>Array<\/codeVoice>, use the type-cast operator (<codeVoice>as<\/codeVoice>) to bridge your instance. For bridging to be possible, the <codeVoice>Element<\/codeVoice> type of your array must be a class, an <codeVoice>@objc<\/codeVoice> protocol (a protocol imported from Objective-C or marked with the <codeVoice>@objc<\/codeVoice> attribute), or a type that bridges to a Foundation type.<\/Para><Para>The following example shows how you can bridge an <codeVoice>Array<\/codeVoice> instance to <codeVoice>NSArray<\/codeVoice> to use the <codeVoice>write(to:atomically:)<\/codeVoice> method. In this example, the <codeVoice>colors<\/codeVoice> array can be bridged to <codeVoice>NSArray<\/codeVoice> because the <codeVoice>colors<\/codeVoice> array’s <codeVoice>String<\/codeVoice> elements bridge to <codeVoice>NSString<\/codeVoice>. The compiler prevents bridging the <codeVoice>moreColors<\/codeVoice> array, on the other hand, because its <codeVoice>Element<\/codeVoice> type is <codeVoice>Optional&lt;String&gt;<\/codeVoice>, which does <emphasis>not<\/emphasis> bridge to a Foundation type.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let colors = [\"periwinkle\", \"rose\", \"moss\"]]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let moreColors: [String?] = [\"ochre\", \"pine\"]]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let url = URL(fileURLWithPath: \"names.plist\")]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[(colors as NSArray).write(to: url, atomically: true)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ true]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[(moreColors as NSArray).write(to: url, atomically: true)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ error: cannot convert value of type '[String?]' to type 'NSArray']]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>Bridging from <codeVoice>Array<\/codeVoice> to <codeVoice>NSArray<\/codeVoice> takes O(1) time and O(1) space if the array’s elements are already instances of a class or an <codeVoice>@objc<\/codeVoice> protocol; otherwise, it takes O(<emphasis>n<\/emphasis>) time and space.<\/Para><Para>When the destination array’s element type is a class or an <codeVoice>@objc<\/codeVoice> protocol, bridging from <codeVoice>NSArray<\/codeVoice> to <codeVoice>Array<\/codeVoice> first calls the <codeVoice>copy(with:)<\/codeVoice> (<codeVoice>- copyWithZone:<\/codeVoice> in Objective-C) method on the array to get an immutable copy and then performs additional Swift bookkeeping work that takes O(1) time. For instances of <codeVoice>NSArray<\/codeVoice> that are already immutable, <codeVoice>copy(with:)<\/codeVoice> usually returns the same array in O(1) time; otherwise, the copying performance is unspecified. If <codeVoice>copy(with:)<\/codeVoice> returns the same array, the instances of <codeVoice>NSArray<\/codeVoice> and <codeVoice>Array<\/codeVoice> share storage using the same copy-on-write optimization that is used when two instances of <codeVoice>Array<\/codeVoice> share storage.<\/Para><Para>When the destination array’s element type is a nonclass type that bridges to a Foundation type, bridging from <codeVoice>NSArray<\/codeVoice> to <codeVoice>Array<\/codeVoice> performs a bridging copy of the elements to contiguous storage in O(<emphasis>n<\/emphasis>) time. For example, bridging from <codeVoice>NSArray<\/codeVoice> to <codeVoice>Array&lt;Int&gt;<\/codeVoice> performs such a copy. No further bridging is required when accessing elements of the <codeVoice>Array<\/codeVoice> instance.<\/Para><Note><Para>The <codeVoice>ContiguousArray<\/codeVoice> and <codeVoice>ArraySlice<\/codeVoice> types are not bridged; instances of those types always have a contiguous block of memory as their storage.<\/Para><\/Note><\/Discussion><\/CommentParts><\/Class>",
        "key.doc.name" : "Array",
        "key.doc.type" : "Class",
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@frozen<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>Array<\/decl.name>&lt;<decl.generic_type_param usr=\"s:Sa7Elementxmfp\"><decl.generic_type_param.name>Element<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt; : <ref.protocol usr=\"s:s24_DestructorSafeContainerP\">_DestructorSafeContainer<\/ref.protocol><\/decl.struct>",
        "key.groupname" : "Collection\/Array",
        "key.is_system" : true,
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 80,
        "key.modulename" : "Swift",
        "key.name" : "Array",
        "key.namelength" : 5,
        "key.nameoffset" : 11999,
        "key.offset" : 11989,
        "key.parsed_declaration" : "extension Array",
        "key.parsed_scope.end" : 361,
        "key.parsed_scope.start" : 359,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var fwNSArray: <Type usr=\"c:objc(cs)NSArray\">NSArray<\/Type> { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 12011
              }
            ],
            "key.bodylength" : 24,
            "key.bodyoffset" : 12042,
            "key.column" : 16,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWEncode.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>fwNSArray<\/decl.name>: <decl.var.type><ref.class usr=\"c:objc(cs)NSArray\">NSArray<\/ref.class><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.groupname" : "Collection\/Array",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 49,
            "key.line" : 360,
            "key.name" : "fwNSArray",
            "key.namelength" : 9,
            "key.nameoffset" : 12022,
            "key.offset" : 12018,
            "key.parsed_declaration" : "public var fwNSArray: NSArray",
            "key.parsed_scope.end" : 360,
            "key.parsed_scope.start" : 360,
            "key.typename" : "NSArray",
            "key.typeusr" : "$sSo7NSArrayCD",
            "key.usr" : "s:Sa11FWFrameworkE9fwNSArraySo0C0Cvp"
          }
        ],
        "key.typename" : "Array<Element>.Type",
        "key.typeusr" : "$sSayxGmD",
        "key.usr" : "s:Sa"
      },
      {
        "key.annotated_decl" : "<Declaration>@frozen struct Data : <Type usr=\"s:10Foundation20ReferenceConvertibleP\">ReferenceConvertible<\/Type>, <Type usr=\"s:SQ\">Equatable<\/Type>, <Type usr=\"s:SH\">Hashable<\/Type>, <Type usr=\"s:Sk\">RandomAccessCollection<\/Type>, <Type usr=\"s:SM\">MutableCollection<\/Type>, <Type usr=\"s:Sm\">RangeReplaceableCollection<\/Type>, <Type usr=\"s:10Foundation19MutableDataProtocolP\">MutableDataProtocol<\/Type>, <Type usr=\"s:10Foundation15ContiguousBytesP\">ContiguousBytes<\/Type><\/Declaration>",
        "key.bodylength" : 309,
        "key.bodyoffset" : 12086,
        "key.decl_lang" : "source.lang.swift",
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@frozen<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>Data<\/decl.name> : <ref.protocol usr=\"s:10Foundation20ReferenceConvertibleP\">ReferenceConvertible<\/ref.protocol>, <ref.protocol usr=\"s:SQ\">Equatable<\/ref.protocol>, <ref.protocol usr=\"s:SH\">Hashable<\/ref.protocol>, <ref.protocol usr=\"s:Sk\">RandomAccessCollection<\/ref.protocol>, <ref.protocol usr=\"s:SM\">MutableCollection<\/ref.protocol>, <ref.protocol usr=\"s:Sm\">RangeReplaceableCollection<\/ref.protocol>, <ref.protocol usr=\"s:10Foundation19MutableDataProtocolP\">MutableDataProtocol<\/ref.protocol>, <ref.protocol usr=\"s:10Foundation15ContiguousBytesP\">ContiguousBytes<\/ref.protocol><\/decl.struct>",
        "key.is_system" : true,
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 326,
        "key.modulename" : "Foundation",
        "key.name" : "Data",
        "key.namelength" : 4,
        "key.nameoffset" : 12080,
        "key.offset" : 12070,
        "key.parsed_declaration" : "extension Data",
        "key.parsed_scope.end" : 367,
        "key.parsed_scope.start" : 362,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public static func fwJsonEncode(_ object: Any) -&gt; <Type usr=\"s:10Foundation4DataV\">Data<\/Type>?<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 12091
              }
            ],
            "key.bodylength" : 36,
            "key.bodyoffset" : 12148,
            "key.column" : 24,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWEncode.swift",
            "key.fully_annotated_decl" : "<decl.function.method.static><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>fwJsonEncode<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>object<\/decl.var.parameter.name>: <decl.var.parameter.type><syntaxtype.keyword>Any<\/syntaxtype.keyword><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:10Foundation4DataV\">Data<\/ref.struct>?<\/decl.function.returntype><\/decl.function.method.static>",
            "key.kind" : "source.lang.swift.decl.function.method.static",
            "key.length" : 87,
            "key.line" : 363,
            "key.name" : "fwJsonEncode(_:)",
            "key.namelength" : 27,
            "key.nameoffset" : 12110,
            "key.offset" : 12098,
            "key.parsed_declaration" : "public static func fwJsonEncode(_ object: Any) -> Data?",
            "key.parsed_scope.end" : 363,
            "key.parsed_scope.start" : 363,
            "key.substructure" : [

            ],
            "key.typename" : "(Data.Type) -> (Any) -> Data?",
            "key.typeusr" : "$sy10Foundation4DataVSgypcD",
            "key.usr" : "s:10Foundation4DataV11FWFrameworkE12fwJsonEncodeyACSgypFZ"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var fwJsonDecode: Any? { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 12190
              }
            ],
            "key.bodylength" : 30,
            "key.bodyoffset" : 12221,
            "key.column" : 16,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWEncode.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>fwJsonDecode<\/decl.name>: <decl.var.type><syntaxtype.keyword>Any<\/syntaxtype.keyword>?<\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 55,
            "key.line" : 364,
            "key.name" : "fwJsonDecode",
            "key.namelength" : 12,
            "key.nameoffset" : 12201,
            "key.offset" : 12197,
            "key.parsed_declaration" : "public var fwJsonDecode: Any?",
            "key.parsed_scope.end" : 364,
            "key.parsed_scope.start" : 364,
            "key.typename" : "Any?",
            "key.typeusr" : "$sypSgD",
            "key.usr" : "s:10Foundation4DataV11FWFrameworkE12fwJsonDecodeypSgvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var fwNSData: <Type usr=\"c:objc(cs)NSData\">NSData<\/Type> { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 12257
              }
            ],
            "key.bodylength" : 23,
            "key.bodyoffset" : 12286,
            "key.column" : 16,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWEncode.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>fwNSData<\/decl.name>: <decl.var.type><ref.class usr=\"c:objc(cs)NSData\">NSData<\/ref.class><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 46,
            "key.line" : 365,
            "key.name" : "fwNSData",
            "key.namelength" : 8,
            "key.nameoffset" : 12268,
            "key.offset" : 12264,
            "key.parsed_declaration" : "public var fwNSData: NSData",
            "key.parsed_scope.end" : 365,
            "key.parsed_scope.start" : 365,
            "key.typename" : "NSData",
            "key.typeusr" : "$sSo6NSDataCD",
            "key.usr" : "s:10Foundation4DataV11FWFrameworkE8fwNSDataSo0E0Cvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var fwUTF8String: <Type usr=\"s:SS\">String<\/Type>? { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 12315
              }
            ],
            "key.bodylength" : 44,
            "key.bodyoffset" : 12349,
            "key.column" : 16,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWEncode.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>fwUTF8String<\/decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String<\/ref.struct>?<\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 72,
            "key.line" : 366,
            "key.name" : "fwUTF8String",
            "key.namelength" : 12,
            "key.nameoffset" : 12326,
            "key.offset" : 12322,
            "key.parsed_declaration" : "public var fwUTF8String: String?",
            "key.parsed_scope.end" : 366,
            "key.parsed_scope.start" : 366,
            "key.typename" : "String?",
            "key.typeusr" : "$sSSSgD",
            "key.usr" : "s:10Foundation4DataV11FWFrameworkE12fwUTF8StringSSSgvp"
          }
        ],
        "key.typename" : "Data.Type",
        "key.typeusr" : "$s10Foundation4DataVmD",
        "key.usr" : "s:10Foundation4DataV"
      },
      {
        "key.annotated_decl" : "<Declaration>struct Date : <Type usr=\"s:10Foundation20ReferenceConvertibleP\">ReferenceConvertible<\/Type>, <Type usr=\"s:SL\">Comparable<\/Type>, <Type usr=\"s:SQ\">Equatable<\/Type><\/Declaration>",
        "key.bodylength" : 59,
        "key.bodyoffset" : 12413,
        "key.decl_lang" : "source.lang.swift",
        "key.doc.declaration" : "struct Date : ReferenceConvertible, Comparable, Equatable",
        "key.doc.discussion" : [
          {
            "Para" : "A `Date` is independent of a particular calendar or time zone. To represent a `Date` to a user, you must interpret it in the context of a `Calendar`."
          }
        ],
        "key.doc.full_as_xml" : "<Class><Name>Date<\/Name><USR>s:10Foundation4DateV<\/USR><Declaration>struct Date : ReferenceConvertible, Comparable, Equatable<\/Declaration><CommentParts><Abstract><Para><codeVoice>Date<\/codeVoice> represents a single point in time.<\/Para><\/Abstract><Discussion><Para>A <codeVoice>Date<\/codeVoice> is independent of a particular calendar or time zone. To represent a <codeVoice>Date<\/codeVoice> to a user, you must interpret it in the context of a <codeVoice>Calendar<\/codeVoice>.<\/Para><\/Discussion><\/CommentParts><\/Class>",
        "key.doc.name" : "Date",
        "key.doc.type" : "Class",
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>Date<\/decl.name> : <ref.protocol usr=\"s:10Foundation20ReferenceConvertibleP\">ReferenceConvertible<\/ref.protocol>, <ref.protocol usr=\"s:SL\">Comparable<\/ref.protocol>, <ref.protocol usr=\"s:SQ\">Equatable<\/ref.protocol><\/decl.struct>",
        "key.is_system" : true,
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 76,
        "key.modulename" : "Foundation",
        "key.name" : "Date",
        "key.namelength" : 4,
        "key.nameoffset" : 12407,
        "key.offset" : 12397,
        "key.parsed_declaration" : "extension Date",
        "key.parsed_scope.end" : 370,
        "key.parsed_scope.start" : 368,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var fwNSDate: <Type usr=\"c:objc(cs)NSDate\">NSDate<\/Type> { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 12418
              }
            ],
            "key.bodylength" : 23,
            "key.bodyoffset" : 12447,
            "key.column" : 16,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWEncode.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>fwNSDate<\/decl.name>: <decl.var.type><ref.class usr=\"c:objc(cs)NSDate\">NSDate<\/ref.class><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 46,
            "key.line" : 369,
            "key.name" : "fwNSDate",
            "key.namelength" : 8,
            "key.nameoffset" : 12429,
            "key.offset" : 12425,
            "key.parsed_declaration" : "public var fwNSDate: NSDate",
            "key.parsed_scope.end" : 369,
            "key.parsed_scope.start" : 369,
            "key.typename" : "NSDate",
            "key.typeusr" : "$sSo6NSDateCD",
            "key.usr" : "s:10Foundation4DateV11FWFrameworkE8fwNSDateSo0E0Cvp"
          }
        ],
        "key.typename" : "Date.Type",
        "key.typeusr" : "$s10Foundation4DateVmD",
        "key.usr" : "s:10Foundation4DateV"
      },
      {
        "key.annotated_decl" : "<Declaration>@frozen struct Dictionary&lt;Key, Value&gt; where <Type usr=\"s:SD3Keyxmfp\">Key<\/Type> : <Type usr=\"s:SH\">Hashable<\/Type><\/Declaration>",
        "key.bodylength" : 77,
        "key.bodyoffset" : 12496,
        "key.decl_lang" : "source.lang.swift",
        "key.doc.declaration" : "@frozen struct Dictionary<Key, Value> where Key : Hashable",
        "key.doc.discussion" : [
          {
            "Para" : "A dictionary is a type of hash table, providing fast access to the entries it contains. Each entry in the table is identified using its key, which is a hashable type such as a string or number. You use that key to retrieve the corresponding value, which can be any object. In other languages, similar data types are known as hashes or associated arrays."
          },
          {
            "Para" : "Create a new dictionary by using a dictionary literal. A dictionary literal is a comma-separated list of key-value pairs, in which a colon separates each key from its associated value, surrounded by square brackets. You can assign a dictionary literal to a variable or constant or pass it to a function that expects a dictionary."
          },
          {
            "Para" : "Here’s how you would create a dictionary of HTTP response codes and their related messages:"
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "The `responseMessages` variable is inferred to have type `[Int: String]`. The `Key` type of the dictionary is `Int`, and the `Value` type of the dictionary is `String`."
          },
          {
            "Para" : "To create a dictionary with no key-value pairs, use an empty dictionary literal (`[:]`)."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "Any type that conforms to the `Hashable` protocol can be used as a dictionary’s `Key` type, including all of Swift’s basic types. You can use your own custom types as dictionary keys by making them conform to the `Hashable` protocol."
          },
          {
            "Para" : "The most common way to access values in a dictionary is to use a key as a subscript. Subscripting with a key takes the following form:"
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "Subscripting a dictionary with a key returns an optional value, because a dictionary might not hold a value for the key that you use in the subscript."
          },
          {
            "Para" : "The next example uses key-based subscripting of the `responseMessages` dictionary with two keys that exist in the dictionary and one that does not."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "You can also update, modify, or remove keys and values from a dictionary using the key-based subscript. To add a new key-value pair, assign a value to a key that isn’t yet a part of the dictionary."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "Update an existing value by assigning a new value to a key that already exists in the dictionary. If you assign `nil` to an existing key, the key and its associated value are removed. The following example updates the value for the `404` code to be simply “Not found” and removes the key-value pair for the `500` code entirely."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "In a mutable `Dictionary` instance, you can modify in place a value that you’ve accessed through a keyed subscript. The code sample below declares a dictionary called `interestingNumbers` with string keys and values that are integer arrays, then sorts each array in-place in descending order."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "Every dictionary is an unordered collection of key-value pairs. You can iterate over a dictionary using a `for`-`in` loop, decomposing each key-value pair into the elements of a tuple."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "The order of key-value pairs in a dictionary is stable between mutations but is otherwise unpredictable. If you need an ordered collection of key-value pairs and don’t need the fast key lookup that `Dictionary` provides, see the `KeyValuePairs` type for an alternative."
          },
          {
            "Para" : "You can search a dictionary’s contents for a particular value using the `contains(where:)` or `firstIndex(where:)` methods supplied by default implementation. The following example checks to see if `imagePaths` contains any paths in the `\"\/glyphs\"` directory:"
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "Note that in this example, `imagePaths` is subscripted using a dictionary index. Unlike the key-based subscript, the index-based subscript returns the corresponding key-value pair as a non-optional tuple."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "A dictionary’s indices stay valid across additions to the dictionary as long as the dictionary has enough capacity to store the added values without allocating more buffer. When a dictionary outgrows its buffer, existing indices may be invalidated without any notification."
          },
          {
            "Para" : "When you know how many new values you’re adding to a dictionary, use the `init(minimumCapacity:)` initializer to allocate the correct amount of buffer."
          },
          {
            "Para" : "You can bridge between `Dictionary` and `NSDictionary` using the `as` operator. For bridging to be possible, the `Key` and `Value` types of a dictionary must be classes, `@objc` protocols, or types that bridge to Foundation types."
          },
          {
            "Para" : "Bridging from `Dictionary` to `NSDictionary` always takes O(1) time and space. When the dictionary’s `Key` and `Value` types are neither classes nor `@objc` protocols, any required bridging of elements occurs at the first access of each element. For this reason, the first operation that uses the contents of the dictionary may take O()."
          },
          {
            "Para" : "Bridging from `NSDictionary` to `Dictionary` first calls the `copy(with:)` method (`- copyWithZone:` in Objective-C) on the dictionary to get an immutable copy and then performs additional Swift bookkeeping work that takes O(1) time. For instances of `NSDictionary` that are already immutable, `copy(with:)` usually returns the same dictionary in O(1) time; otherwise, the copying performance is unspecified. The instances of `NSDictionary` and `Dictionary` share buffer using the same copy-on-write optimization that is used when two instances of `Dictionary` share buffer."
          }
        ],
        "key.doc.full_as_xml" : "<Class><Name>Dictionary<\/Name><USR>s:SD<\/USR><Declaration>@frozen struct Dictionary&lt;Key, Value&gt; where Key : Hashable<\/Declaration><CommentParts><Abstract><Para>A collection whose elements are key-value pairs.<\/Para><\/Abstract><Discussion><Para>A dictionary is a type of hash table, providing fast access to the entries it contains. Each entry in the table is identified using its key, which is a hashable type such as a string or number. You use that key to retrieve the corresponding value, which can be any object. In other languages, similar data types are known as hashes or associated arrays.<\/Para><Para>Create a new dictionary by using a dictionary literal. A dictionary literal is a comma-separated list of key-value pairs, in which a colon separates each key from its associated value, surrounded by square brackets. You can assign a dictionary literal to a variable or constant or pass it to a function that expects a dictionary.<\/Para><Para>Here’s how you would create a dictionary of HTTP response codes and their related messages:<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[var responseMessages = [200: \"OK\",]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[                        403: \"Access forbidden\",]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[                        404: \"File not found\",]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[                        500: \"Internal server error\"]]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>The <codeVoice>responseMessages<\/codeVoice> variable is inferred to have type <codeVoice>[Int: String]<\/codeVoice>. The <codeVoice>Key<\/codeVoice> type of the dictionary is <codeVoice>Int<\/codeVoice>, and the <codeVoice>Value<\/codeVoice> type of the dictionary is <codeVoice>String<\/codeVoice>.<\/Para><Para>To create a dictionary with no key-value pairs, use an empty dictionary literal (<codeVoice>[:]<\/codeVoice>).<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[var emptyDict: [String: String] = [:]]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>Any type that conforms to the <codeVoice>Hashable<\/codeVoice> protocol can be used as a dictionary’s <codeVoice>Key<\/codeVoice> type, including all of Swift’s basic types. You can use your own custom types as dictionary keys by making them conform to the <codeVoice>Hashable<\/codeVoice> protocol.<\/Para><rawHTML><![CDATA[<h1>]]><\/rawHTML>Getting and Setting Dictionary Values<rawHTML><![CDATA[<\/h1>]]><\/rawHTML><Para>The most common way to access values in a dictionary is to use a key as a subscript. Subscripting with a key takes the following form:<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[print(responseMessages[200])]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"Optional(\"OK\")\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>Subscripting a dictionary with a key returns an optional value, because a dictionary might not hold a value for the key that you use in the subscript.<\/Para><Para>The next example uses key-based subscripting of the <codeVoice>responseMessages<\/codeVoice> dictionary with two keys that exist in the dictionary and one that does not.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let httpResponseCodes = [200, 403, 301]]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[for code in httpResponseCodes {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    if let message = responseMessages[code] {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        print(\"Response \\(code): \\(message)\")]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    } else {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        print(\"Unknown response \\(code)\")]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    }]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"Response 200: OK\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"Response 403: Access forbidden\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"Unknown response 301\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>You can also update, modify, or remove keys and values from a dictionary using the key-based subscript. To add a new key-value pair, assign a value to a key that isn’t yet a part of the dictionary.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[responseMessages[301] = \"Moved permanently\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(responseMessages[301])]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"Optional(\"Moved permanently\")\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>Update an existing value by assigning a new value to a key that already exists in the dictionary. If you assign <codeVoice>nil<\/codeVoice> to an existing key, the key and its associated value are removed. The following example updates the value for the <codeVoice>404<\/codeVoice> code to be simply “Not found” and removes the key-value pair for the <codeVoice>500<\/codeVoice> code entirely.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[responseMessages[404] = \"Not found\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[responseMessages[500] = nil]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(responseMessages)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"[301: \"Moved permanently\", 200: \"OK\", 403: \"Access forbidden\", 404: \"Not found\"]\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>In a mutable <codeVoice>Dictionary<\/codeVoice> instance, you can modify in place a value that you’ve accessed through a keyed subscript. The code sample below declares a dictionary called <codeVoice>interestingNumbers<\/codeVoice> with string keys and values that are integer arrays, then sorts each array in-place in descending order.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[var interestingNumbers = [\"primes\": [2, 3, 5, 7, 11, 13, 17],]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[                          \"triangular\": [1, 3, 6, 10, 15, 21, 28],]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[                          \"hexagonal\": [1, 6, 15, 28, 45, 66, 91]]]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[for key in interestingNumbers.keys {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    interestingNumbers[key]?.sort(by: >)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(interestingNumbers[\"primes\"]!)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"[17, 13, 11, 7, 5, 3, 2]\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><rawHTML><![CDATA[<h1>]]><\/rawHTML>Iterating Over the Contents of a Dictionary<rawHTML><![CDATA[<\/h1>]]><\/rawHTML><Para>Every dictionary is an unordered collection of key-value pairs. You can iterate over a dictionary using a <codeVoice>for<\/codeVoice>-<codeVoice>in<\/codeVoice> loop, decomposing each key-value pair into the elements of a tuple.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let imagePaths = [\"star\": \"\/glyphs\/star.png\",]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[                  \"portrait\": \"\/images\/content\/portrait.jpg\",]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[                  \"spacer\": \"\/images\/shared\/spacer.gif\"]]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[for (name, path) in imagePaths {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    print(\"The path to '\\(name)' is '\\(path)'.\")]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"The path to 'star' is '\/glyphs\/star.png'.\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"The path to 'portrait' is '\/images\/content\/portrait.jpg'.\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"The path to 'spacer' is '\/images\/shared\/spacer.gif'.\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>The order of key-value pairs in a dictionary is stable between mutations but is otherwise unpredictable. If you need an ordered collection of key-value pairs and don’t need the fast key lookup that <codeVoice>Dictionary<\/codeVoice> provides, see the <codeVoice>KeyValuePairs<\/codeVoice> type for an alternative.<\/Para><Para>You can search a dictionary’s contents for a particular value using the <codeVoice>contains(where:)<\/codeVoice> or <codeVoice>firstIndex(where:)<\/codeVoice> methods supplied by default implementation. The following example checks to see if <codeVoice>imagePaths<\/codeVoice> contains any paths in the <codeVoice>&quot;\/glyphs&quot;<\/codeVoice> directory:<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let glyphIndex = imagePaths.firstIndex(where: { $0.value.hasPrefix(\"\/glyphs\") })]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[if let index = glyphIndex {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    print(\"The '\\(imagePaths[index].key)' image is a glyph.\")]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[} else {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    print(\"No glyphs found!\")]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"The 'star' image is a glyph.\")]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>Note that in this example, <codeVoice>imagePaths<\/codeVoice> is subscripted using a dictionary index. Unlike the key-based subscript, the index-based subscript returns the corresponding key-value pair as a non-optional tuple.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[print(imagePaths[glyphIndex!])]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"(key: \"star\", value: \"\/glyphs\/star.png\")\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>A dictionary’s indices stay valid across additions to the dictionary as long as the dictionary has enough capacity to store the added values without allocating more buffer. When a dictionary outgrows its buffer, existing indices may be invalidated without any notification.<\/Para><Para>When you know how many new values you’re adding to a dictionary, use the <codeVoice>init(minimumCapacity:)<\/codeVoice> initializer to allocate the correct amount of buffer.<\/Para><rawHTML><![CDATA[<h1>]]><\/rawHTML>Bridging Between Dictionary and NSDictionary<rawHTML><![CDATA[<\/h1>]]><\/rawHTML><Para>You can bridge between <codeVoice>Dictionary<\/codeVoice> and <codeVoice>NSDictionary<\/codeVoice> using the <codeVoice>as<\/codeVoice> operator. For bridging to be possible, the <codeVoice>Key<\/codeVoice> and <codeVoice>Value<\/codeVoice> types of a dictionary must be classes, <codeVoice>@objc<\/codeVoice> protocols, or types that bridge to Foundation types.<\/Para><Para>Bridging from <codeVoice>Dictionary<\/codeVoice> to <codeVoice>NSDictionary<\/codeVoice> always takes O(1) time and space. When the dictionary’s <codeVoice>Key<\/codeVoice> and <codeVoice>Value<\/codeVoice> types are neither classes nor <codeVoice>@objc<\/codeVoice> protocols, any required bridging of elements occurs at the first access of each element. For this reason, the first operation that uses the contents of the dictionary may take O(<emphasis>n<\/emphasis>).<\/Para><Para>Bridging from <codeVoice>NSDictionary<\/codeVoice> to <codeVoice>Dictionary<\/codeVoice> first calls the <codeVoice>copy(with:)<\/codeVoice> method (<codeVoice>- copyWithZone:<\/codeVoice> in Objective-C) on the dictionary to get an immutable copy and then performs additional Swift bookkeeping work that takes O(1) time. For instances of <codeVoice>NSDictionary<\/codeVoice> that are already immutable, <codeVoice>copy(with:)<\/codeVoice> usually returns the same dictionary in O(1) time; otherwise, the copying performance is unspecified. The instances of <codeVoice>NSDictionary<\/codeVoice> and <codeVoice>Dictionary<\/codeVoice> share buffer using the same copy-on-write optimization that is used when two instances of <codeVoice>Dictionary<\/codeVoice> share buffer.<\/Para><\/Discussion><\/CommentParts><\/Class>",
        "key.doc.name" : "Dictionary",
        "key.doc.type" : "Class",
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@frozen<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>Dictionary<\/decl.name>&lt;<decl.generic_type_param usr=\"s:SD3Keyxmfp\"><decl.generic_type_param.name>Key<\/decl.generic_type_param.name><\/decl.generic_type_param>, <decl.generic_type_param usr=\"s:SD5Valueq_mfp\"><decl.generic_type_param.name>Value<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt; <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement><ref.generic_type_param usr=\"s:SD3Keyxmfp\">Key<\/ref.generic_type_param> : <ref.protocol usr=\"s:SH\">Hashable<\/ref.protocol><\/decl.generic_type_requirement><\/decl.struct>",
        "key.groupname" : "Collection\/HashedCollections",
        "key.is_system" : true,
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 100,
        "key.modulename" : "Swift",
        "key.name" : "Dictionary",
        "key.namelength" : 10,
        "key.nameoffset" : 12484,
        "key.offset" : 12474,
        "key.parsed_declaration" : "extension Dictionary",
        "key.parsed_scope.end" : 373,
        "key.parsed_scope.start" : 371,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var fwNSDictionary: <Type usr=\"c:objc(cs)NSDictionary\">NSDictionary<\/Type> { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 12501
              }
            ],
            "key.bodylength" : 29,
            "key.bodyoffset" : 12542,
            "key.column" : 16,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWEncode.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>fwNSDictionary<\/decl.name>: <decl.var.type><ref.class usr=\"c:objc(cs)NSDictionary\">NSDictionary<\/ref.class><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.groupname" : "Collection\/HashedCollections",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 64,
            "key.line" : 372,
            "key.name" : "fwNSDictionary",
            "key.namelength" : 14,
            "key.nameoffset" : 12512,
            "key.offset" : 12508,
            "key.parsed_declaration" : "public var fwNSDictionary: NSDictionary",
            "key.parsed_scope.end" : 372,
            "key.parsed_scope.start" : 372,
            "key.typename" : "NSDictionary",
            "key.typeusr" : "$sSo12NSDictionaryCD",
            "key.usr" : "s:SD11FWFrameworkE14fwNSDictionarySo0C0Cvp"
          }
        ],
        "key.typename" : "Dictionary<Key, Value>.Type",
        "key.typeusr" : "$sSDyxq_GmD",
        "key.usr" : "s:SD"
      },
      {
        "key.annotated_decl" : "<Declaration>@frozen struct String<\/Declaration>",
        "key.bodylength" : 592,
        "key.bodyoffset" : 12593,
        "key.decl_lang" : "source.lang.swift",
        "key.doc.declaration" : "@frozen struct String",
        "key.doc.discussion" : [
          {
            "Para" : "A string is a series of characters, such as `\"Swift\"`, that forms a collection. Strings in Swift are Unicode correct and locale insensitive, and are designed to be efficient. The `String` type bridges with the Objective-C class `NSString` and offers interoperability with C functions that works with strings."
          },
          {
            "Para" : "You can create new strings using string literals or string interpolations. A  is a series of characters enclosed in quotes."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : " are string literals that evaluate any included expressions and convert the results to string form. String interpolations give you an easy way to build a string from multiple pieces. Wrap each expression in a string interpolation in parentheses, prefixed by a backslash."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "Combine strings using the concatenation operator (`+`)."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "Multiline string literals are enclosed in three double quotation marks (`\"\"\"`), with each delimiter on its own line. Indentation is stripped from each line of a multiline string literal to match the indentation of the closing delimiter."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "Strings always have value semantics. Modifying a copy of a string leaves the original unaffected."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "Comparing strings for equality using the equal-to operator (`==`) or a relational operator (like `<` or `>=`) is always performed using Unicode canonical representation. As a result, different representations of a string compare as being equal."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "The Unicode scalar value `\"\\u{301}\"` modifies the preceding character to include an accent, so `\"e\\u{301}\"` has the same canonical representation as the single Unicode scalar value `\"é\"`."
          },
          {
            "Para" : "Basic string operations are not sensitive to locale settings, ensuring that string comparisons and other operations always have a single, stable result, allowing strings to be used as keys in `Dictionary` instances and for other purposes."
          },
          {
            "Para" : "A string is a collection of , which approximate human-readable characters. Many individual characters, such as “é”, “김”, and “🇮🇳”, can be made up of multiple Unicode scalar values. These scalar values are combined by Unicode’s boundary algorithms into extended grapheme clusters, represented by the Swift `Character` type. Each element of a string is represented by a `Character` instance."
          },
          {
            "Para" : "For example, to retrieve the first word of a longer string, you can search for a space and then create a substring from a prefix of the string up to that point:"
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "The `firstName` constant is an instance of the `Substring` type—a type that represents substrings of a string while sharing the original string’s storage. Substrings present the same interface as strings."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "If you need to access the contents of a string as encoded in different Unicode encodings, use one of the string’s `unicodeScalars`, `utf16`, or `utf8` properties. Each property provides access to a view of the string as a series of code units, each encoded in a different Unicode encoding."
          },
          {
            "Para" : "To demonstrate the different views available for every string, the following examples use this `String` instance:"
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "The `cafe` string is a collection of the nine characters that are visible when the string is displayed."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "A string’s `unicodeScalars` property is a collection of Unicode scalar values, the 21-bit codes that are the basic unit of Unicode. Each scalar value is represented by a `Unicode.Scalar` instance and is equivalent to a UTF-32 code unit."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "The `unicodeScalars` view’s elements comprise each Unicode scalar value in the `cafe` string. In particular, because `cafe` was declared using the decomposed form of the `\"é\"` character, `unicodeScalars` contains the scalar values for both the letter `\"e\"` (101) and the accent character `\"´\"` (769)."
          },
          {
            "Para" : "A string’s `utf16` property is a collection of UTF-16 code units, the 16-bit encoding form of the string’s Unicode scalar values. Each code unit is stored as a `UInt16` instance."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "The elements of the `utf16` view are the code units for the string when encoded in UTF-16. These elements match those accessed through indexed `NSString` APIs."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "A string’s `utf8` property is a collection of UTF-8 code units, the 8-bit encoding form of the string’s Unicode scalar values. Each code unit is stored as a `UInt8` instance."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "The elements of the `utf8` view are the code units for the string when encoded in UTF-8. This representation matches the one used when `String` instances are passed to C APIs."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "When you need to know the length of a string, you must first consider what you’ll use the length for. Are you measuring the number of characters that will be displayed on the screen, or are you measuring the amount of storage needed for the string in a particular encoding? A single string can have greatly differing lengths when measured by its different views."
          },
          {
            "Para" : "For example, an ASCII character like the capital letter  is represented by a single element in each of its four views. The Unicode scalar value of  is `65`, which is small enough to fit in a single code unit in both UTF-16 and UTF-8."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "On the other hand, an emoji flag character is constructed from a pair of Unicode scalar values, like `\"\\u{1F1F5}\"` and `\"\\u{1F1F7}\"`. Each of these scalar values, in turn, is too large to fit into a single UTF-16 or UTF-8 code unit. As a result, each view of the string `\"🇵🇷\"` reports a different length."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "To check whether a string is empty, use its `isEmpty` property instead of comparing the length of one of the views to `0`. Unlike with `isEmpty`, calculating a view’s `count` property requires iterating through the elements of the string."
          },
          {
            "Para" : "To find individual elements of a string, use the appropriate view for your task. For example, to retrieve the first word of a longer string, you can search the string for a space and then create a new string from a prefix of the string up to that point."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "Strings and their views share indices, so you can access the UTF-8 view of the `name` string using the same `firstSpace` index."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "Note that an index into one view may not have an exact corresponding position in another view. For example, the `flag` string declared above comprises a single character, but is composed of eight code units when encoded as UTF-8. The following code creates constants for the first and second positions in the `flag.utf8` view. Accessing the `utf8` view with these indices yields the first and second code UTF-8 units."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "When used to access the elements of the `flag` string itself, however, the `secondCodeUnit` index does not correspond to the position of a specific character. Instead of only accessing the specific UTF-8 code unit, that index is treated as the position of the character at the index’s encoded offset. In the case of `secondCodeUnit`, that character is still the flag itself."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "If you need to validate that an index from one string’s view corresponds with an exact position in another view, use the index’s `samePosition(in:)` method or the `init(_:within:)` initializer."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "Although strings in Swift have value semantics, strings use a copy-on-write strategy to store their data in a buffer. This buffer can then be shared by different copies of a string. A string’s data is only copied lazily, upon mutation, when more than one string instance is using the same buffer. Therefore, the first in any sequence of mutating operations may cost O() time and space."
          },
          {
            "Para" : "When a string’s contiguous storage fills up, a new buffer must be allocated and data must be moved to the new storage. String buffers use an exponential growth strategy that makes appending to a string a constant time operation when averaged over many append operations."
          },
          {
            "Para" : "Any `String` instance can be bridged to `NSString` using the type-cast operator (`as`), and any `String` instance that originates in Objective-C may use an `NSString` instance as its storage. Because any arbitrary subclass of `NSString` can become a `String` instance, there are no guarantees about representation or efficiency when a `String` instance is backed by `NSString` storage. Because `NSString` is immutable, it is just as though the storage was shared by a copy. The first in any sequence of mutating operations causes elements to be copied into unique, contiguous storage which may cost O() time and space, where  is the length of the string’s encoded representation (or more, if the underlying `NSString` has unusual performance characteristics)."
          },
          {
            "Para" : "For more information about the Unicode terms used in this discussion, see the . In particular, this discussion mentions , , and ."
          }
        ],
        "key.doc.full_as_xml" : "<Class><Name>String<\/Name><USR>s:SS<\/USR><Declaration>@frozen struct String<\/Declaration><CommentParts><Abstract><Para>A Unicode string value that is a collection of characters.<\/Para><\/Abstract><Discussion><Para>A string is a series of characters, such as <codeVoice>&quot;Swift&quot;<\/codeVoice>, that forms a collection. Strings in Swift are Unicode correct and locale insensitive, and are designed to be efficient. The <codeVoice>String<\/codeVoice> type bridges with the Objective-C class <codeVoice>NSString<\/codeVoice> and offers interoperability with C functions that works with strings.<\/Para><Para>You can create new strings using string literals or string interpolations. A <emphasis>string literal<\/emphasis> is a series of characters enclosed in quotes.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let greeting = \"Welcome!\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para><emphasis>String interpolations<\/emphasis> are string literals that evaluate any included expressions and convert the results to string form. String interpolations give you an easy way to build a string from multiple pieces. Wrap each expression in a string interpolation in parentheses, prefixed by a backslash.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let name = \"Rosa\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let personalizedGreeting = \"Welcome, \\(name)!\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ personalizedGreeting == \"Welcome, Rosa!\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let price = 2]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let number = 3]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let cookiePrice = \"\\(number) cookies: $\\(price * number).\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ cookiePrice == \"3 cookies: $6.\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>Combine strings using the concatenation operator (<codeVoice>+<\/codeVoice>).<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let longerGreeting = greeting + \" We're glad you're here!\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ longerGreeting == \"Welcome! We're glad you're here!\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>Multiline string literals are enclosed in three double quotation marks (<codeVoice>&quot;&quot;&quot;<\/codeVoice>), with each delimiter on its own line. Indentation is stripped from each line of a multiline string literal to match the indentation of the closing delimiter.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let banner = \"\"\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[          __,]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[         (           o  \/) _\/_]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[          `.  , , , ,  \/\/  \/]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        (___)(_(_\/_(_ \/\/_ (__]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[                     \/)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[                    (\/]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        \"\"\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><rawHTML><![CDATA[<h1>]]><\/rawHTML>Modifying and Comparing Strings<rawHTML><![CDATA[<\/h1>]]><\/rawHTML><Para>Strings always have value semantics. Modifying a copy of a string leaves the original unaffected.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[var otherGreeting = greeting]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[otherGreeting += \" Have a nice time!\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ otherGreeting == \"Welcome! Have a nice time!\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(greeting)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"Welcome!\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>Comparing strings for equality using the equal-to operator (<codeVoice>==<\/codeVoice>) or a relational operator (like <codeVoice>&lt;<\/codeVoice> or <codeVoice>&gt;=<\/codeVoice>) is always performed using Unicode canonical representation. As a result, different representations of a string compare as being equal.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let cafe1 = \"Cafe\\u{301}\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let cafe2 = \"Café\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(cafe1 == cafe2)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"true\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>The Unicode scalar value <codeVoice>&quot;\\u{301}&quot;<\/codeVoice> modifies the preceding character to include an accent, so <codeVoice>&quot;e\\u{301}&quot;<\/codeVoice> has the same canonical representation as the single Unicode scalar value <codeVoice>&quot;é&quot;<\/codeVoice>.<\/Para><Para>Basic string operations are not sensitive to locale settings, ensuring that string comparisons and other operations always have a single, stable result, allowing strings to be used as keys in <codeVoice>Dictionary<\/codeVoice> instances and for other purposes.<\/Para><rawHTML><![CDATA[<h1>]]><\/rawHTML>Accessing String Elements<rawHTML><![CDATA[<\/h1>]]><\/rawHTML><Para>A string is a collection of <emphasis>extended grapheme clusters<\/emphasis>, which approximate human-readable characters. Many individual characters, such as “é”, “김”, and “🇮🇳”, can be made up of multiple Unicode scalar values. These scalar values are combined by Unicode’s boundary algorithms into extended grapheme clusters, represented by the Swift <codeVoice>Character<\/codeVoice> type. Each element of a string is represented by a <codeVoice>Character<\/codeVoice> instance.<\/Para><Para>For example, to retrieve the first word of a longer string, you can search for a space and then create a substring from a prefix of the string up to that point:<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let name = \"Marie Curie\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let firstSpace = name.firstIndex(of: \" \") ?? name.endIndex]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let firstName = name[..<firstSpace]]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ firstName == \"Marie\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>The <codeVoice>firstName<\/codeVoice> constant is an instance of the <codeVoice>Substring<\/codeVoice> type—a type that represents substrings of a string while sharing the original string’s storage. Substrings present the same interface as strings.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[print(\"\\(name)'s first name has \\(firstName.count) letters.\")]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"Marie Curie's first name has 5 letters.\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><rawHTML><![CDATA[<h1>]]><\/rawHTML>Accessing a String’s Unicode Representation<rawHTML><![CDATA[<\/h1>]]><\/rawHTML><Para>If you need to access the contents of a string as encoded in different Unicode encodings, use one of the string’s <codeVoice>unicodeScalars<\/codeVoice>, <codeVoice>utf16<\/codeVoice>, or <codeVoice>utf8<\/codeVoice> properties. Each property provides access to a view of the string as a series of code units, each encoded in a different Unicode encoding.<\/Para><Para>To demonstrate the different views available for every string, the following examples use this <codeVoice>String<\/codeVoice> instance:<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let cafe = \"Cafe\\u{301} du 🌍\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(cafe)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"Café du 🌍\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>The <codeVoice>cafe<\/codeVoice> string is a collection of the nine characters that are visible when the string is displayed.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[print(cafe.count)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"9\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(Array(cafe))]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"[\"C\", \"a\", \"f\", \"é\", \" \", \"d\", \"u\", \" \", \"🌍\"]\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><rawHTML><![CDATA[<h2>]]><\/rawHTML>Unicode Scalar View<rawHTML><![CDATA[<\/h2>]]><\/rawHTML><Para>A string’s <codeVoice>unicodeScalars<\/codeVoice> property is a collection of Unicode scalar values, the 21-bit codes that are the basic unit of Unicode. Each scalar value is represented by a <codeVoice>Unicode.Scalar<\/codeVoice> instance and is equivalent to a UTF-32 code unit.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[print(cafe.unicodeScalars.count)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"10\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(Array(cafe.unicodeScalars))]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"[\"C\", \"a\", \"f\", \"e\", \"\\u{0301}\", \" \", \"d\", \"u\", \" \", \"\\u{0001F30D}\"]\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(cafe.unicodeScalars.map { $0.value })]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"[67, 97, 102, 101, 769, 32, 100, 117, 32, 127757]\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>The <codeVoice>unicodeScalars<\/codeVoice> view’s elements comprise each Unicode scalar value in the <codeVoice>cafe<\/codeVoice> string. In particular, because <codeVoice>cafe<\/codeVoice> was declared using the decomposed form of the <codeVoice>&quot;é&quot;<\/codeVoice> character, <codeVoice>unicodeScalars<\/codeVoice> contains the scalar values for both the letter <codeVoice>&quot;e&quot;<\/codeVoice> (101) and the accent character <codeVoice>&quot;´&quot;<\/codeVoice> (769).<\/Para><rawHTML><![CDATA[<h2>]]><\/rawHTML>UTF-16 View<rawHTML><![CDATA[<\/h2>]]><\/rawHTML><Para>A string’s <codeVoice>utf16<\/codeVoice> property is a collection of UTF-16 code units, the 16-bit encoding form of the string’s Unicode scalar values. Each code unit is stored as a <codeVoice>UInt16<\/codeVoice> instance.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[print(cafe.utf16.count)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"11\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(Array(cafe.utf16))]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"[67, 97, 102, 101, 769, 32, 100, 117, 32, 55356, 57101]\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>The elements of the <codeVoice>utf16<\/codeVoice> view are the code units for the string when encoded in UTF-16. These elements match those accessed through indexed <codeVoice>NSString<\/codeVoice> APIs.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let nscafe = cafe as NSString]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(nscafe.length)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"11\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(nscafe.character(at: 3))]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"101\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><rawHTML><![CDATA[<h2>]]><\/rawHTML>UTF-8 View<rawHTML><![CDATA[<\/h2>]]><\/rawHTML><Para>A string’s <codeVoice>utf8<\/codeVoice> property is a collection of UTF-8 code units, the 8-bit encoding form of the string’s Unicode scalar values. Each code unit is stored as a <codeVoice>UInt8<\/codeVoice> instance.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[print(cafe.utf8.count)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"14\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(Array(cafe.utf8))]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"[67, 97, 102, 101, 204, 129, 32, 100, 117, 32, 240, 159, 140, 141]\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>The elements of the <codeVoice>utf8<\/codeVoice> view are the code units for the string when encoded in UTF-8. This representation matches the one used when <codeVoice>String<\/codeVoice> instances are passed to C APIs.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let cLength = strlen(cafe)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(cLength)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"14\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><rawHTML><![CDATA[<h1>]]><\/rawHTML>Measuring the Length of a String<rawHTML><![CDATA[<\/h1>]]><\/rawHTML><Para>When you need to know the length of a string, you must first consider what you’ll use the length for. Are you measuring the number of characters that will be displayed on the screen, or are you measuring the amount of storage needed for the string in a particular encoding? A single string can have greatly differing lengths when measured by its different views.<\/Para><Para>For example, an ASCII character like the capital letter <emphasis>A<\/emphasis> is represented by a single element in each of its four views. The Unicode scalar value of <emphasis>A<\/emphasis> is <codeVoice>65<\/codeVoice>, which is small enough to fit in a single code unit in both UTF-16 and UTF-8.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let capitalA = \"A\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(capitalA.count)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"1\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(capitalA.unicodeScalars.count)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"1\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(capitalA.utf16.count)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"1\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(capitalA.utf8.count)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"1\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>On the other hand, an emoji flag character is constructed from a pair of Unicode scalar values, like <codeVoice>&quot;\\u{1F1F5}&quot;<\/codeVoice> and <codeVoice>&quot;\\u{1F1F7}&quot;<\/codeVoice>. Each of these scalar values, in turn, is too large to fit into a single UTF-16 or UTF-8 code unit. As a result, each view of the string <codeVoice>&quot;🇵🇷&quot;<\/codeVoice> reports a different length.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let flag = \"🇵🇷\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(flag.count)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"1\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(flag.unicodeScalars.count)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"2\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(flag.utf16.count)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"4\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(flag.utf8.count)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"8\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>To check whether a string is empty, use its <codeVoice>isEmpty<\/codeVoice> property instead of comparing the length of one of the views to <codeVoice>0<\/codeVoice>. Unlike with <codeVoice>isEmpty<\/codeVoice>, calculating a view’s <codeVoice>count<\/codeVoice> property requires iterating through the elements of the string.<\/Para><rawHTML><![CDATA[<h1>]]><\/rawHTML>Accessing String View Elements<rawHTML><![CDATA[<\/h1>]]><\/rawHTML><Para>To find individual elements of a string, use the appropriate view for your task. For example, to retrieve the first word of a longer string, you can search the string for a space and then create a new string from a prefix of the string up to that point.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let name = \"Marie Curie\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let firstSpace = name.firstIndex(of: \" \") ?? name.endIndex]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let firstName = name[..<firstSpace]]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(firstName)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"Marie\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>Strings and their views share indices, so you can access the UTF-8 view of the <codeVoice>name<\/codeVoice> string using the same <codeVoice>firstSpace<\/codeVoice> index.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[print(Array(name.utf8[..<firstSpace]))]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"[77, 97, 114, 105, 101]\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>Note that an index into one view may not have an exact corresponding position in another view. For example, the <codeVoice>flag<\/codeVoice> string declared above comprises a single character, but is composed of eight code units when encoded as UTF-8. The following code creates constants for the first and second positions in the <codeVoice>flag.utf8<\/codeVoice> view. Accessing the <codeVoice>utf8<\/codeVoice> view with these indices yields the first and second code UTF-8 units.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let firstCodeUnit = flag.startIndex]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let secondCodeUnit = flag.utf8.index(after: firstCodeUnit)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ flag.utf8[firstCodeUnit] == 240]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ flag.utf8[secondCodeUnit] == 159]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>When used to access the elements of the <codeVoice>flag<\/codeVoice> string itself, however, the <codeVoice>secondCodeUnit<\/codeVoice> index does not correspond to the position of a specific character. Instead of only accessing the specific UTF-8 code unit, that index is treated as the position of the character at the index’s encoded offset. In the case of <codeVoice>secondCodeUnit<\/codeVoice>, that character is still the flag itself.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[\/\/ flag[firstCodeUnit] == \"🇵🇷\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ flag[secondCodeUnit] == \"🇵🇷\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>If you need to validate that an index from one string’s view corresponds with an exact position in another view, use the index’s <codeVoice>samePosition(in:)<\/codeVoice> method or the <codeVoice>init(_:within:)<\/codeVoice> initializer.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[if let exactIndex = secondCodeUnit.samePosition(in: flag) {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    print(flag[exactIndex])]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[} else {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    print(\"No exact match for this position.\")]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"No exact match for this position.\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><rawHTML><![CDATA[<h1>]]><\/rawHTML>Performance Optimizations<rawHTML><![CDATA[<\/h1>]]><\/rawHTML><Para>Although strings in Swift have value semantics, strings use a copy-on-write strategy to store their data in a buffer. This buffer can then be shared by different copies of a string. A string’s data is only copied lazily, upon mutation, when more than one string instance is using the same buffer. Therefore, the first in any sequence of mutating operations may cost O(<emphasis>n<\/emphasis>) time and space.<\/Para><Para>When a string’s contiguous storage fills up, a new buffer must be allocated and data must be moved to the new storage. String buffers use an exponential growth strategy that makes appending to a string a constant time operation when averaged over many append operations.<\/Para><rawHTML><![CDATA[<h1>]]><\/rawHTML>Bridging Between String and NSString<rawHTML><![CDATA[<\/h1>]]><\/rawHTML><Para>Any <codeVoice>String<\/codeVoice> instance can be bridged to <codeVoice>NSString<\/codeVoice> using the type-cast operator (<codeVoice>as<\/codeVoice>), and any <codeVoice>String<\/codeVoice> instance that originates in Objective-C may use an <codeVoice>NSString<\/codeVoice> instance as its storage. Because any arbitrary subclass of <codeVoice>NSString<\/codeVoice> can become a <codeVoice>String<\/codeVoice> instance, there are no guarantees about representation or efficiency when a <codeVoice>String<\/codeVoice> instance is backed by <codeVoice>NSString<\/codeVoice> storage. Because <codeVoice>NSString<\/codeVoice> is immutable, it is just as though the storage was shared by a copy. The first in any sequence of mutating operations causes elements to be copied into unique, contiguous storage which may cost O(<emphasis>n<\/emphasis>) time and space, where <emphasis>n<\/emphasis> is the length of the string’s encoded representation (or more, if the underlying <codeVoice>NSString<\/codeVoice> has unusual performance characteristics).<\/Para><Para>For more information about the Unicode terms used in this discussion, see the <Link href=\"http:\/\/www.unicode.org\/glossary\/\">Unicode.org glossary<\/Link>. In particular, this discussion mentions <Link href=\"http:\/\/www.unicode.org\/glossary\/#extended_grapheme_cluster\">extended grapheme clusters<\/Link>, <Link href=\"http:\/\/www.unicode.org\/glossary\/#unicode_scalar_value\">Unicode scalar values<\/Link>, and <Link href=\"http:\/\/www.unicode.org\/glossary\/#canonical_equivalent\">canonical equivalence<\/Link>.<\/Para><\/Discussion><\/CommentParts><\/Class>",
        "key.doc.name" : "String",
        "key.doc.type" : "Class",
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@frozen<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>String<\/decl.name><\/decl.struct>",
        "key.groupname" : "String",
        "key.is_system" : true,
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 611,
        "key.modulename" : "Swift",
        "key.name" : "String",
        "key.namelength" : 6,
        "key.nameoffset" : 12585,
        "key.offset" : 12575,
        "key.parsed_declaration" : "extension String",
        "key.parsed_scope.end" : 383,
        "key.parsed_scope.start" : 374,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public static func fwJsonEncode(_ object: Any) -&gt; <Type usr=\"s:SS\">String<\/Type>?<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 12598
              }
            ],
            "key.bodylength" : 38,
            "key.bodyoffset" : 12657,
            "key.column" : 24,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWEncode.swift",
            "key.fully_annotated_decl" : "<decl.function.method.static><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>fwJsonEncode<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>object<\/decl.var.parameter.name>: <decl.var.parameter.type><syntaxtype.keyword>Any<\/syntaxtype.keyword><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:SS\">String<\/ref.struct>?<\/decl.function.returntype><\/decl.function.method.static>",
            "key.groupname" : "String",
            "key.kind" : "source.lang.swift.decl.function.method.static",
            "key.length" : 91,
            "key.line" : 375,
            "key.name" : "fwJsonEncode(_:)",
            "key.namelength" : 27,
            "key.nameoffset" : 12617,
            "key.offset" : 12605,
            "key.parsed_declaration" : "public static func fwJsonEncode(_ object: Any) -> String?",
            "key.parsed_scope.end" : 375,
            "key.parsed_scope.start" : 375,
            "key.substructure" : [

            ],
            "key.typename" : "(String.Type) -> (Any) -> String?",
            "key.typeusr" : "$sySSSgypcD",
            "key.usr" : "s:SS11FWFrameworkE12fwJsonEncodeySSSgypFZ"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var fwJsonDecode: Any? { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 12701
              }
            ],
            "key.bodylength" : 32,
            "key.bodyoffset" : 12732,
            "key.column" : 16,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWEncode.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>fwJsonDecode<\/decl.name>: <decl.var.type><syntaxtype.keyword>Any<\/syntaxtype.keyword>?<\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.groupname" : "String",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 57,
            "key.line" : 376,
            "key.name" : "fwJsonDecode",
            "key.namelength" : 12,
            "key.nameoffset" : 12712,
            "key.offset" : 12708,
            "key.parsed_declaration" : "public var fwJsonDecode: Any?",
            "key.parsed_scope.end" : 376,
            "key.parsed_scope.start" : 376,
            "key.typename" : "Any?",
            "key.typeusr" : "$sypSgD",
            "key.usr" : "s:SS11FWFrameworkE12fwJsonDecodeypSgvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var fwMd5Encode: <Type usr=\"s:SS\">String<\/Type> { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 12770
              }
            ],
            "key.bodylength" : 33,
            "key.bodyoffset" : 12802,
            "key.column" : 16,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWEncode.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>fwMd5Encode<\/decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.groupname" : "String",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 59,
            "key.line" : 377,
            "key.name" : "fwMd5Encode",
            "key.namelength" : 11,
            "key.nameoffset" : 12781,
            "key.offset" : 12777,
            "key.parsed_declaration" : "public var fwMd5Encode: String",
            "key.parsed_scope.end" : 377,
            "key.parsed_scope.start" : 377,
            "key.typename" : "String",
            "key.typeusr" : "$sSSD",
            "key.usr" : "s:SS11FWFrameworkE11fwMd5EncodeSSvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var fwTrimString: <Type usr=\"s:SS\">String<\/Type> { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 12841
              }
            ],
            "key.bodylength" : 56,
            "key.bodyoffset" : 12874,
            "key.column" : 16,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWEncode.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>fwTrimString<\/decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.groupname" : "String",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 83,
            "key.line" : 378,
            "key.name" : "fwTrimString",
            "key.namelength" : 12,
            "key.nameoffset" : 12852,
            "key.offset" : 12848,
            "key.parsed_declaration" : "public var fwTrimString: String",
            "key.parsed_scope.end" : 378,
            "key.parsed_scope.start" : 378,
            "key.typename" : "String",
            "key.typeusr" : "$sSSD",
            "key.usr" : "s:SS11FWFrameworkE12fwTrimStringSSvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var fwNSString: <Type usr=\"c:objc(cs)NSString\">NSString<\/Type> { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 12936
              }
            ],
            "key.bodylength" : 25,
            "key.bodyoffset" : 12969,
            "key.column" : 16,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWEncode.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>fwNSString<\/decl.name>: <decl.var.type><ref.class usr=\"c:objc(cs)NSString\">NSString<\/ref.class><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.groupname" : "String",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 52,
            "key.line" : 379,
            "key.name" : "fwNSString",
            "key.namelength" : 10,
            "key.nameoffset" : 12947,
            "key.offset" : 12943,
            "key.parsed_declaration" : "public var fwNSString: NSString",
            "key.parsed_scope.end" : 379,
            "key.parsed_scope.start" : 379,
            "key.typename" : "NSString",
            "key.typeusr" : "$sSo8NSStringCD",
            "key.usr" : "s:SS11FWFrameworkE10fwNSStringSo0C0Cvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var fwUTF8Data: <Type usr=\"s:10Foundation4DataV\">Data<\/Type>? { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 13000
              }
            ],
            "key.bodylength" : 32,
            "key.bodyoffset" : 13030,
            "key.column" : 16,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWEncode.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>fwUTF8Data<\/decl.name>: <decl.var.type><ref.struct usr=\"s:10Foundation4DataV\">Data<\/ref.struct>?<\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.groupname" : "String",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 56,
            "key.line" : 380,
            "key.name" : "fwUTF8Data",
            "key.namelength" : 10,
            "key.nameoffset" : 13011,
            "key.offset" : 13007,
            "key.parsed_declaration" : "public var fwUTF8Data: Data?",
            "key.parsed_scope.end" : 380,
            "key.parsed_scope.start" : 380,
            "key.typename" : "Data?",
            "key.typeusr" : "$s10Foundation4DataVSgD",
            "key.usr" : "s:SS11FWFrameworkE10fwUTF8Data10Foundation0D0VSgvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var fwURL: <Type usr=\"s:10Foundation3URLV\">URL<\/Type>? { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 13068
              }
            ],
            "key.bodylength" : 25,
            "key.bodyoffset" : 13092,
            "key.column" : 16,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWEncode.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>fwURL<\/decl.name>: <decl.var.type><ref.struct usr=\"s:10Foundation3URLV\">URL<\/ref.struct>?<\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.groupname" : "String",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 43,
            "key.line" : 381,
            "key.name" : "fwURL",
            "key.namelength" : 5,
            "key.nameoffset" : 13079,
            "key.offset" : 13075,
            "key.parsed_declaration" : "public var fwURL: URL?",
            "key.parsed_scope.end" : 381,
            "key.parsed_scope.start" : 381,
            "key.typename" : "URL?",
            "key.typeusr" : "$s10Foundation3URLVSgD",
            "key.usr" : "s:SS11FWFrameworkE5fwURL10Foundation0C0VSgvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var fwNumber: <Type usr=\"c:objc(cs)NSNumber\">NSNumber<\/Type>? { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 13123
              }
            ],
            "key.bodylength" : 28,
            "key.bodyoffset" : 13155,
            "key.column" : 16,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWEncode.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>fwNumber<\/decl.name>: <decl.var.type><ref.class usr=\"c:objc(cs)NSNumber\">NSNumber<\/ref.class>?<\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.groupname" : "String",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 54,
            "key.line" : 382,
            "key.name" : "fwNumber",
            "key.namelength" : 8,
            "key.nameoffset" : 13134,
            "key.offset" : 13130,
            "key.parsed_declaration" : "public var fwNumber: NSNumber?",
            "key.parsed_scope.end" : 382,
            "key.parsed_scope.start" : 382,
            "key.typename" : "NSNumber?",
            "key.typeusr" : "$sSo8NSNumberCSgD",
            "key.usr" : "s:SS11FWFrameworkE8fwNumberSo8NSNumberCSgvp"
          }
        ],
        "key.typename" : "String.Type",
        "key.typeusr" : "$sSSmD",
        "key.usr" : "s:SS"
      },
      {
        "key.annotated_decl" : "<Declaration>struct URL : <Type usr=\"s:10Foundation20ReferenceConvertibleP\">ReferenceConvertible<\/Type>, <Type usr=\"s:SQ\">Equatable<\/Type><\/Declaration>",
        "key.bodylength" : 56,
        "key.bodyoffset" : 13202,
        "key.decl_lang" : "source.lang.swift",
        "key.doc.declaration" : "struct URL : ReferenceConvertible, Equatable",
        "key.doc.discussion" : [
          {
            "Para" : "You can construct URLs and access their parts. For URLs that represent local files, you can also manipulate properties of those files directly, such as changing the file’s last modification date. Finally, you can pass URLs to other APIs to retrieve the contents of those URLs. For example, you can use the URLSession classes to access the contents of remote resources, as described in URL Session Programming Guide."
          },
          {
            "Para" : "URLs are the preferred way to refer to local files. Most objects that read data from or write data to a file have methods that accept a URL instead of a pathname as the file reference. For example, you can get the contents of a local file URL as `String` by calling `func init(contentsOf:encoding) throws`, or as a `Data` by calling `func init(contentsOf:options) throws`."
          }
        ],
        "key.doc.full_as_xml" : "<Class><Name>URL<\/Name><USR>s:10Foundation3URLV<\/USR><Declaration>struct URL : ReferenceConvertible, Equatable<\/Declaration><CommentParts><Abstract><Para>A URL is a type that can potentially contain the location of a resource on a remote server, the path of a local file on disk, or even an arbitrary piece of encoded data.<\/Para><\/Abstract><Discussion><Para>You can construct URLs and access their parts. For URLs that represent local files, you can also manipulate properties of those files directly, such as changing the file’s last modification date. Finally, you can pass URLs to other APIs to retrieve the contents of those URLs. For example, you can use the URLSession classes to access the contents of remote resources, as described in URL Session Programming Guide.<\/Para><Para>URLs are the preferred way to refer to local files. Most objects that read data from or write data to a file have methods that accept a URL instead of a pathname as the file reference. For example, you can get the contents of a local file URL as <codeVoice>String<\/codeVoice> by calling <codeVoice>func init(contentsOf:encoding) throws<\/codeVoice>, or as a <codeVoice>Data<\/codeVoice> by calling <codeVoice>func init(contentsOf:options) throws<\/codeVoice>.<\/Para><\/Discussion><\/CommentParts><\/Class>",
        "key.doc.name" : "URL",
        "key.doc.type" : "Class",
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>URL<\/decl.name> : <ref.protocol usr=\"s:10Foundation20ReferenceConvertibleP\">ReferenceConvertible<\/ref.protocol>, <ref.protocol usr=\"s:SQ\">Equatable<\/ref.protocol><\/decl.struct>",
        "key.is_system" : true,
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 72,
        "key.modulename" : "Foundation",
        "key.name" : "URL",
        "key.namelength" : 3,
        "key.nameoffset" : 13197,
        "key.offset" : 13187,
        "key.parsed_declaration" : "extension URL",
        "key.parsed_scope.end" : 386,
        "key.parsed_scope.start" : 384,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var fwNSURL: <Type usr=\"c:objc(cs)NSURL\">NSURL<\/Type> { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 13207
              }
            ],
            "key.bodylength" : 22,
            "key.bodyoffset" : 13234,
            "key.column" : 16,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWEncode.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>fwNSURL<\/decl.name>: <decl.var.type><ref.class usr=\"c:objc(cs)NSURL\">NSURL<\/ref.class><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 43,
            "key.line" : 385,
            "key.name" : "fwNSURL",
            "key.namelength" : 7,
            "key.nameoffset" : 13218,
            "key.offset" : 13214,
            "key.parsed_declaration" : "public var fwNSURL: NSURL",
            "key.parsed_scope.end" : 385,
            "key.parsed_scope.start" : 385,
            "key.typename" : "NSURL",
            "key.typeusr" : "$sSo5NSURLCD",
            "key.usr" : "s:10Foundation3URLV11FWFrameworkE7fwNSURLSo0E0Cvp"
          }
        ],
        "key.typename" : "URL.Type",
        "key.typeusr" : "$s10Foundation3URLVmD",
        "key.usr" : "s:10Foundation3URLV"
      }
    ]
  }
}, {
  "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 40382,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
        "key.length" : 18,
        "key.name" : "MARK: - JSON Error",
        "key.namelength" : 0,
        "key.nameoffset" : 0,
        "key.offset" : 157
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public enum FWJSONError : <Type usr=\"s:Si\">Int<\/Type>, Swift.<Type usr=\"s:s5ErrorP\">Error<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 209
          }
        ],
        "key.bodylength" : 170,
        "key.bodyoffset" : 252,
        "key.column" : 13,
        "key.decl_lang" : "source.lang.swift",
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 3,
            "key.offset" : 234
          },
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 11,
            "key.offset" : 239
          }
        ],
        "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift",
        "key.fully_annotated_decl" : "<decl.enum><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>enum<\/syntaxtype.keyword> <decl.name>FWJSONError<\/decl.name> : <ref.struct usr=\"s:Si\">Int<\/ref.struct>, Swift.<ref.protocol usr=\"s:s5ErrorP\">Error<\/ref.protocol><\/decl.enum>",
        "key.inheritedtypes" : [
          {
            "key.name" : "Int"
          },
          {
            "key.name" : "Swift.Error"
          }
        ],
        "key.kind" : "source.lang.swift.decl.enum",
        "key.length" : 207,
        "key.line" : 13,
        "key.name" : "FWJSONError",
        "key.namelength" : 11,
        "key.nameoffset" : 221,
        "key.offset" : 216,
        "key.parsed_declaration" : "public enum FWJSONError: Int, Swift.Error",
        "key.parsed_scope.end" : 20,
        "key.parsed_scope.start" : 13,
        "key.substructure" : [
          {
            "key.kind" : "source.lang.swift.decl.enumcase",
            "key.length" : 26,
            "key.namelength" : 0,
            "key.nameoffset" : 0,
            "key.offset" : 257,
            "key.substructure" : [
              {
                "key.accessibility" : "source.lang.swift.accessibility.public",
                "key.annotated_decl" : "<Declaration>case unsupportedType = 999<\/Declaration>",
                "key.column" : 10,
                "key.decl_lang" : "source.lang.swift",
                "key.elements" : [
                  {
                    "key.kind" : "source.lang.swift.structure.elem.init_expr",
                    "key.length" : 3,
                    "key.offset" : 280
                  }
                ],
                "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift",
                "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>unsupportedType<\/decl.name> = <syntaxtype.number>999<\/syntaxtype.number><\/decl.enumelement>",
                "key.kind" : "source.lang.swift.decl.enumelement",
                "key.length" : 21,
                "key.line" : 14,
                "key.name" : "unsupportedType",
                "key.namelength" : 15,
                "key.nameoffset" : 262,
                "key.offset" : 262,
                "key.parsed_declaration" : "case unsupportedType = 999",
                "key.parsed_scope.end" : 14,
                "key.parsed_scope.start" : 14,
                "key.typename" : "(FWJSONError.Type) -> FWJSONError",
                "key.typeusr" : "$sy11FWFramework11FWJSONErrorOACmcD",
                "key.usr" : "s:11FWFramework11FWJSONErrorO15unsupportedTypeyA2CmF"
              }
            ]
          },
          {
            "key.kind" : "source.lang.swift.decl.enumcase",
            "key.length" : 27,
            "key.namelength" : 0,
            "key.nameoffset" : 0,
            "key.offset" : 288,
            "key.substructure" : [
              {
                "key.accessibility" : "source.lang.swift.accessibility.public",
                "key.annotated_decl" : "<Declaration>case indexOutOfBounds = 900<\/Declaration>",
                "key.column" : 10,
                "key.decl_lang" : "source.lang.swift",
                "key.elements" : [
                  {
                    "key.kind" : "source.lang.swift.structure.elem.init_expr",
                    "key.length" : 3,
                    "key.offset" : 312
                  }
                ],
                "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift",
                "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>indexOutOfBounds<\/decl.name> = <syntaxtype.number>900<\/syntaxtype.number><\/decl.enumelement>",
                "key.kind" : "source.lang.swift.decl.enumelement",
                "key.length" : 22,
                "key.line" : 15,
                "key.name" : "indexOutOfBounds",
                "key.namelength" : 16,
                "key.nameoffset" : 293,
                "key.offset" : 293,
                "key.parsed_declaration" : "case indexOutOfBounds = 900",
                "key.parsed_scope.end" : 15,
                "key.parsed_scope.start" : 15,
                "key.typename" : "(FWJSONError.Type) -> FWJSONError",
                "key.typeusr" : "$sy11FWFramework11FWJSONErrorOACmcD",
                "key.usr" : "s:11FWFramework11FWJSONErrorO16indexOutOfBoundsyA2CmF"
              }
            ]
          },
          {
            "key.kind" : "source.lang.swift.decl.enumcase",
            "key.length" : 25,
            "key.namelength" : 0,
            "key.nameoffset" : 0,
            "key.offset" : 320,
            "key.substructure" : [
              {
                "key.accessibility" : "source.lang.swift.accessibility.public",
                "key.annotated_decl" : "<Declaration>case elementTooDeep = 902<\/Declaration>",
                "key.column" : 10,
                "key.decl_lang" : "source.lang.swift",
                "key.elements" : [
                  {
                    "key.kind" : "source.lang.swift.structure.elem.init_expr",
                    "key.length" : 3,
                    "key.offset" : 342
                  }
                ],
                "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift",
                "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>elementTooDeep<\/decl.name> = <syntaxtype.number>902<\/syntaxtype.number><\/decl.enumelement>",
                "key.kind" : "source.lang.swift.decl.enumelement",
                "key.length" : 20,
                "key.line" : 16,
                "key.name" : "elementTooDeep",
                "key.namelength" : 14,
                "key.nameoffset" : 325,
                "key.offset" : 325,
                "key.parsed_declaration" : "case elementTooDeep = 902",
                "key.parsed_scope.end" : 16,
                "key.parsed_scope.start" : 16,
                "key.typename" : "(FWJSONError.Type) -> FWJSONError",
                "key.typeusr" : "$sy11FWFramework11FWJSONErrorOACmcD",
                "key.usr" : "s:11FWFramework11FWJSONErrorO14elementTooDeepyA2CmF"
              }
            ]
          },
          {
            "key.kind" : "source.lang.swift.decl.enumcase",
            "key.length" : 20,
            "key.namelength" : 0,
            "key.nameoffset" : 0,
            "key.offset" : 350,
            "key.substructure" : [
              {
                "key.accessibility" : "source.lang.swift.accessibility.public",
                "key.annotated_decl" : "<Declaration>case wrongType = 901<\/Declaration>",
                "key.column" : 10,
                "key.decl_lang" : "source.lang.swift",
                "key.elements" : [
                  {
                    "key.kind" : "source.lang.swift.structure.elem.init_expr",
                    "key.length" : 3,
                    "key.offset" : 367
                  }
                ],
                "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift",
                "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>wrongType<\/decl.name> = <syntaxtype.number>901<\/syntaxtype.number><\/decl.enumelement>",
                "key.kind" : "source.lang.swift.decl.enumelement",
                "key.length" : 15,
                "key.line" : 17,
                "key.name" : "wrongType",
                "key.namelength" : 9,
                "key.nameoffset" : 355,
                "key.offset" : 355,
                "key.parsed_declaration" : "case wrongType = 901",
                "key.parsed_scope.end" : 17,
                "key.parsed_scope.start" : 17,
                "key.typename" : "(FWJSONError.Type) -> FWJSONError",
                "key.typeusr" : "$sy11FWFramework11FWJSONErrorOACmcD",
                "key.usr" : "s:11FWFramework11FWJSONErrorO9wrongTypeyA2CmF"
              }
            ]
          },
          {
            "key.kind" : "source.lang.swift.decl.enumcase",
            "key.length" : 19,
            "key.namelength" : 0,
            "key.nameoffset" : 0,
            "key.offset" : 375,
            "key.substructure" : [
              {
                "key.accessibility" : "source.lang.swift.accessibility.public",
                "key.annotated_decl" : "<Declaration>case notExist = 500<\/Declaration>",
                "key.column" : 10,
                "key.decl_lang" : "source.lang.swift",
                "key.elements" : [
                  {
                    "key.kind" : "source.lang.swift.structure.elem.init_expr",
                    "key.length" : 3,
                    "key.offset" : 391
                  }
                ],
                "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift",
                "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>notExist<\/decl.name> = <syntaxtype.number>500<\/syntaxtype.number><\/decl.enumelement>",
                "key.kind" : "source.lang.swift.decl.enumelement",
                "key.length" : 14,
                "key.line" : 18,
                "key.name" : "notExist",
                "key.namelength" : 8,
                "key.nameoffset" : 380,
                "key.offset" : 380,
                "key.parsed_declaration" : "case notExist = 500",
                "key.parsed_scope.end" : 18,
                "key.parsed_scope.start" : 18,
                "key.typename" : "(FWJSONError.Type) -> FWJSONError",
                "key.typeusr" : "$sy11FWFramework11FWJSONErrorOACmcD",
                "key.usr" : "s:11FWFramework11FWJSONErrorO8notExistyA2CmF"
              }
            ]
          },
          {
            "key.kind" : "source.lang.swift.decl.enumcase",
            "key.length" : 22,
            "key.namelength" : 0,
            "key.nameoffset" : 0,
            "key.offset" : 399,
            "key.substructure" : [
              {
                "key.accessibility" : "source.lang.swift.accessibility.public",
                "key.annotated_decl" : "<Declaration>case invalidJSON = 490<\/Declaration>",
                "key.column" : 10,
                "key.decl_lang" : "source.lang.swift",
                "key.elements" : [
                  {
                    "key.kind" : "source.lang.swift.structure.elem.init_expr",
                    "key.length" : 3,
                    "key.offset" : 418
                  }
                ],
                "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift",
                "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>invalidJSON<\/decl.name> = <syntaxtype.number>490<\/syntaxtype.number><\/decl.enumelement>",
                "key.kind" : "source.lang.swift.decl.enumelement",
                "key.length" : 17,
                "key.line" : 19,
                "key.name" : "invalidJSON",
                "key.namelength" : 11,
                "key.nameoffset" : 404,
                "key.offset" : 404,
                "key.parsed_declaration" : "case invalidJSON = 490",
                "key.parsed_scope.end" : 19,
                "key.parsed_scope.start" : 19,
                "key.typename" : "(FWJSONError.Type) -> FWJSONError",
                "key.typeusr" : "$sy11FWFramework11FWJSONErrorOACmcD",
                "key.usr" : "s:11FWFramework11FWJSONErrorO11invalidJSONyA2CmF"
              }
            ]
          }
        ],
        "key.typename" : "FWJSONError.Type",
        "key.typeusr" : "$s11FWFramework11FWJSONErrorOmD",
        "key.usr" : "s:11FWFramework11FWJSONErrorO"
      },
      {
        "key.annotated_decl" : "<Declaration>public enum FWJSONError : <Type usr=\"s:Si\">Int<\/Type>, Swift.<Type usr=\"s:s5ErrorP\">Error<\/Type><\/Declaration>",
        "key.bodylength" : 1073,
        "key.bodyoffset" : 463,
        "key.column" : 13,
        "key.decl_lang" : "source.lang.swift",
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 13,
            "key.offset" : 448
          }
        ],
        "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift",
        "key.fully_annotated_decl" : "<decl.enum><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>enum<\/syntaxtype.keyword> <decl.name>FWJSONError<\/decl.name> : <ref.struct usr=\"s:Si\">Int<\/ref.struct>, Swift.<ref.protocol usr=\"s:s5ErrorP\">Error<\/ref.protocol><\/decl.enum>",
        "key.inheritedtypes" : [
          {
            "key.name" : "CustomNSError"
          }
        ],
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 1112,
        "key.line" : 13,
        "key.name" : "FWJSONError",
        "key.namelength" : 11,
        "key.nameoffset" : 435,
        "key.offset" : 425,
        "key.parsed_declaration" : "extension FWJSONError: CustomNSError",
        "key.parsed_scope.end" : 47,
        "key.parsed_scope.start" : 22,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public static var errorDomain: <Type usr=\"s:SS\">String<\/Type> { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 516
              }
            ],
            "key.bodylength" : 29,
            "key.bodyoffset" : 555,
            "key.column" : 23,
            "key.decl_lang" : "source.lang.swift",
            "key.doc.column" : 23,
            "key.doc.comment" : "return the error domain of FWJSONError",
            "key.doc.declaration" : "public static var errorDomain: String { get }",
            "key.doc.file" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift\" line=\"25\" column=\"23\"><Name>errorDomain<\/Name><USR>s:11FWFramework11FWJSONErrorO11errorDomainSSvpZ<\/USR><Declaration>public static var errorDomain: String { get }<\/Declaration><CommentParts><Abstract><Para>return the error domain of FWJSONError<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 25,
            "key.doc.name" : "errorDomain",
            "key.doc.type" : "Other",
            "key.doclength" : 43,
            "key.docoffset" : 469,
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift",
            "key.fully_annotated_decl" : "<decl.var.static><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>errorDomain<\/decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.static>",
            "key.kind" : "source.lang.swift.decl.var.static",
            "key.length" : 62,
            "key.line" : 25,
            "key.name" : "errorDomain",
            "key.namelength" : 11,
            "key.nameoffset" : 534,
            "key.offset" : 523,
            "key.overrides" : [
              {
                "key.usr" : "s:10Foundation13CustomNSErrorP11errorDomainSSvpZ"
              }
            ],
            "key.parsed_declaration" : "public static var errorDomain: String",
            "key.parsed_scope.end" : 25,
            "key.parsed_scope.start" : 25,
            "key.typename" : "String",
            "key.typeusr" : "$sSSD",
            "key.usr" : "s:11FWFramework11FWJSONErrorO11errorDomainSSvpZ"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var errorCode: <Type usr=\"s:Si\">Int<\/Type> { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 636
              }
            ],
            "key.bodylength" : 22,
            "key.bodyoffset" : 663,
            "key.column" : 16,
            "key.decl_lang" : "source.lang.swift",
            "key.doc.column" : 16,
            "key.doc.comment" : "return the error code of FWJSONError",
            "key.doc.declaration" : "public var errorCode: Int { get }",
            "key.doc.file" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift\" line=\"28\" column=\"16\"><Name>errorCode<\/Name><USR>s:11FWFramework11FWJSONErrorO9errorCodeSivp<\/USR><Declaration>public var errorCode: Int { get }<\/Declaration><CommentParts><Abstract><Para>return the error code of FWJSONError<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 28,
            "key.doc.name" : "errorCode",
            "key.doc.type" : "Other",
            "key.doclength" : 41,
            "key.docoffset" : 591,
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>errorCode<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 43,
            "key.line" : 28,
            "key.name" : "errorCode",
            "key.namelength" : 9,
            "key.nameoffset" : 647,
            "key.offset" : 643,
            "key.overrides" : [
              {
                "key.usr" : "s:10Foundation13CustomNSErrorP9errorCodeSivp"
              }
            ],
            "key.parsed_declaration" : "public var errorCode: Int",
            "key.parsed_scope.end" : 28,
            "key.parsed_scope.start" : 28,
            "key.typename" : "Int",
            "key.typeusr" : "$sSiD",
            "key.usr" : "s:11FWFramework11FWJSONErrorO9errorCodeSivp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var errorUserInfo: [<Type usr=\"s:SS\">String<\/Type> : Any] { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 735
              }
            ],
            "key.bodylength" : 758,
            "key.bodyoffset" : 776,
            "key.column" : 16,
            "key.decl_lang" : "source.lang.swift",
            "key.doc.column" : 16,
            "key.doc.comment" : "return the userInfo of FWJSONError",
            "key.doc.declaration" : "public var errorUserInfo: [String : Any] { get }",
            "key.doc.file" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift\" line=\"31\" column=\"16\"><Name>errorUserInfo<\/Name><USR>s:11FWFramework11FWJSONErrorO13errorUserInfoSDySSypGvp<\/USR><Declaration>public var errorUserInfo: [String : Any] { get }<\/Declaration><CommentParts><Abstract><Para>return the userInfo of FWJSONError<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 31,
            "key.doc.name" : "errorUserInfo",
            "key.doc.type" : "Other",
            "key.doclength" : 39,
            "key.docoffset" : 692,
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>errorUserInfo<\/decl.name>: <decl.var.type>[<ref.struct usr=\"s:SS\">String<\/ref.struct> : <syntaxtype.keyword>Any<\/syntaxtype.keyword>]<\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 793,
            "key.line" : 31,
            "key.name" : "errorUserInfo",
            "key.namelength" : 13,
            "key.nameoffset" : 746,
            "key.offset" : 742,
            "key.overrides" : [
              {
                "key.usr" : "s:10Foundation13CustomNSErrorP13errorUserInfoSDySSypGvp"
              }
            ],
            "key.parsed_declaration" : "public var errorUserInfo: [String: Any]",
            "key.parsed_scope.end" : 46,
            "key.parsed_scope.start" : 31,
            "key.typename" : "[String : Any]",
            "key.typeusr" : "$sSDySSypGD",
            "key.usr" : "s:11FWFramework11FWJSONErrorO13errorUserInfoSDySSypGvp"
          }
        ],
        "key.typename" : "FWJSONError.Type",
        "key.typeusr" : "$s11FWFramework11FWJSONErrorOmD",
        "key.usr" : "s:11FWFramework11FWJSONErrorO"
      },
      {
        "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
        "key.length" : 17,
        "key.name" : "MARK: - JSON Type",
        "key.namelength" : 0,
        "key.nameoffset" : 0,
        "key.offset" : 1542
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public enum FWJSONType : <Type usr=\"s:Si\">Int<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 1618
          }
        ],
        "key.bodylength" : 113,
        "key.bodyoffset" : 1647,
        "key.column" : 13,
        "key.decl_lang" : "source.lang.swift",
        "key.doc.column" : 13,
        "key.doc.comment" : "JSON's type definitions.\n\nSee http:\/\/www.json.org",
        "key.doc.declaration" : "public enum FWJSONType : Int",
        "key.doc.discussion" : [
          {
            "Para" : "See http:\/\/www.json.org"
          }
        ],
        "key.doc.file" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift",
        "key.doc.full_as_xml" : "<Other file=\"\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift\" line=\"56\" column=\"13\"><Name>FWJSONType<\/Name><USR>s:11FWFramework10FWJSONTypeO<\/USR><Declaration>public enum FWJSONType : Int<\/Declaration><CommentParts><Abstract><Para>JSON’s type definitions.<\/Para><\/Abstract><Discussion><Para>See http:\/\/www.json.org<\/Para><\/Discussion><\/CommentParts><\/Other>",
        "key.doc.line" : 56,
        "key.doc.name" : "FWJSONType",
        "key.doc.type" : "Other",
        "key.doclength" : 56,
        "key.docoffset" : 1561,
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 3,
            "key.offset" : 1642
          }
        ],
        "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift",
        "key.fully_annotated_decl" : "<decl.enum><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>enum<\/syntaxtype.keyword> <decl.name>FWJSONType<\/decl.name> : <ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.enum>",
        "key.inheritedtypes" : [
          {
            "key.name" : "Int"
          }
        ],
        "key.kind" : "source.lang.swift.decl.enum",
        "key.length" : 136,
        "key.line" : 56,
        "key.name" : "FWJSONType",
        "key.namelength" : 10,
        "key.nameoffset" : 1630,
        "key.offset" : 1625,
        "key.parsed_declaration" : "public enum FWJSONType: Int",
        "key.parsed_scope.end" : 64,
        "key.parsed_scope.start" : 56,
        "key.substructure" : [
          {
            "key.kind" : "source.lang.swift.decl.enumcase",
            "key.length" : 11,
            "key.namelength" : 0,
            "key.nameoffset" : 0,
            "key.offset" : 1652,
            "key.substructure" : [
              {
                "key.accessibility" : "source.lang.swift.accessibility.public",
                "key.annotated_decl" : "<Declaration>case number<\/Declaration>",
                "key.column" : 10,
                "key.decl_lang" : "source.lang.swift",
                "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift",
                "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>number<\/decl.name><\/decl.enumelement>",
                "key.kind" : "source.lang.swift.decl.enumelement",
                "key.length" : 6,
                "key.line" : 57,
                "key.name" : "number",
                "key.namelength" : 6,
                "key.nameoffset" : 1657,
                "key.offset" : 1657,
                "key.parsed_declaration" : "case number",
                "key.parsed_scope.end" : 57,
                "key.parsed_scope.start" : 57,
                "key.typename" : "(FWJSONType.Type) -> FWJSONType",
                "key.typeusr" : "$sy11FWFramework10FWJSONTypeOACmcD",
                "key.usr" : "s:11FWFramework10FWJSONTypeO6numberyA2CmF"
              }
            ]
          },
          {
            "key.kind" : "source.lang.swift.decl.enumcase",
            "key.length" : 11,
            "key.namelength" : 0,
            "key.nameoffset" : 0,
            "key.offset" : 1668,
            "key.substructure" : [
              {
                "key.accessibility" : "source.lang.swift.accessibility.public",
                "key.annotated_decl" : "<Declaration>case string<\/Declaration>",
                "key.column" : 10,
                "key.decl_lang" : "source.lang.swift",
                "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift",
                "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>string<\/decl.name><\/decl.enumelement>",
                "key.kind" : "source.lang.swift.decl.enumelement",
                "key.length" : 6,
                "key.line" : 58,
                "key.name" : "string",
                "key.namelength" : 6,
                "key.nameoffset" : 1673,
                "key.offset" : 1673,
                "key.parsed_declaration" : "case string",
                "key.parsed_scope.end" : 58,
                "key.parsed_scope.start" : 58,
                "key.typename" : "(FWJSONType.Type) -> FWJSONType",
                "key.typeusr" : "$sy11FWFramework10FWJSONTypeOACmcD",
                "key.usr" : "s:11FWFramework10FWJSONTypeO6stringyA2CmF"
              }
            ]
          },
          {
            "key.kind" : "source.lang.swift.decl.enumcase",
            "key.length" : 9,
            "key.namelength" : 0,
            "key.nameoffset" : 0,
            "key.offset" : 1684,
            "key.substructure" : [
              {
                "key.accessibility" : "source.lang.swift.accessibility.public",
                "key.annotated_decl" : "<Declaration>case bool<\/Declaration>",
                "key.column" : 10,
                "key.decl_lang" : "source.lang.swift",
                "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift",
                "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>bool<\/decl.name><\/decl.enumelement>",
                "key.kind" : "source.lang.swift.decl.enumelement",
                "key.length" : 4,
                "key.line" : 59,
                "key.name" : "bool",
                "key.namelength" : 4,
                "key.nameoffset" : 1689,
                "key.offset" : 1689,
                "key.parsed_declaration" : "case bool",
                "key.parsed_scope.end" : 59,
                "key.parsed_scope.start" : 59,
                "key.typename" : "(FWJSONType.Type) -> FWJSONType",
                "key.typeusr" : "$sy11FWFramework10FWJSONTypeOACmcD",
                "key.usr" : "s:11FWFramework10FWJSONTypeO4boolyA2CmF"
              }
            ]
          },
          {
            "key.kind" : "source.lang.swift.decl.enumcase",
            "key.length" : 10,
            "key.namelength" : 0,
            "key.nameoffset" : 0,
            "key.offset" : 1698,
            "key.substructure" : [
              {
                "key.accessibility" : "source.lang.swift.accessibility.public",
                "key.annotated_decl" : "<Declaration>case array<\/Declaration>",
                "key.column" : 10,
                "key.decl_lang" : "source.lang.swift",
                "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift",
                "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>array<\/decl.name><\/decl.enumelement>",
                "key.kind" : "source.lang.swift.decl.enumelement",
                "key.length" : 5,
                "key.line" : 60,
                "key.name" : "array",
                "key.namelength" : 5,
                "key.nameoffset" : 1703,
                "key.offset" : 1703,
                "key.parsed_declaration" : "case array",
                "key.parsed_scope.end" : 60,
                "key.parsed_scope.start" : 60,
                "key.typename" : "(FWJSONType.Type) -> FWJSONType",
                "key.typeusr" : "$sy11FWFramework10FWJSONTypeOACmcD",
                "key.usr" : "s:11FWFramework10FWJSONTypeO5arrayyA2CmF"
              }
            ]
          },
          {
            "key.kind" : "source.lang.swift.decl.enumcase",
            "key.length" : 15,
            "key.namelength" : 0,
            "key.nameoffset" : 0,
            "key.offset" : 1713,
            "key.substructure" : [
              {
                "key.accessibility" : "source.lang.swift.accessibility.public",
                "key.annotated_decl" : "<Declaration>case dictionary<\/Declaration>",
                "key.column" : 10,
                "key.decl_lang" : "source.lang.swift",
                "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift",
                "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>dictionary<\/decl.name><\/decl.enumelement>",
                "key.kind" : "source.lang.swift.decl.enumelement",
                "key.length" : 10,
                "key.line" : 61,
                "key.name" : "dictionary",
                "key.namelength" : 10,
                "key.nameoffset" : 1718,
                "key.offset" : 1718,
                "key.parsed_declaration" : "case dictionary",
                "key.parsed_scope.end" : 61,
                "key.parsed_scope.start" : 61,
                "key.typename" : "(FWJSONType.Type) -> FWJSONType",
                "key.typeusr" : "$sy11FWFramework10FWJSONTypeOACmcD",
                "key.usr" : "s:11FWFramework10FWJSONTypeO10dictionaryyA2CmF"
              }
            ]
          },
          {
            "key.kind" : "source.lang.swift.decl.enumcase",
            "key.length" : 9,
            "key.namelength" : 0,
            "key.nameoffset" : 0,
            "key.offset" : 1733,
            "key.substructure" : [
              {
                "key.accessibility" : "source.lang.swift.accessibility.public",
                "key.annotated_decl" : "<Declaration>case null<\/Declaration>",
                "key.column" : 10,
                "key.decl_lang" : "source.lang.swift",
                "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift",
                "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>null<\/decl.name><\/decl.enumelement>",
                "key.kind" : "source.lang.swift.decl.enumelement",
                "key.length" : 4,
                "key.line" : 62,
                "key.name" : "null",
                "key.namelength" : 4,
                "key.nameoffset" : 1738,
                "key.offset" : 1738,
                "key.parsed_declaration" : "case null",
                "key.parsed_scope.end" : 62,
                "key.parsed_scope.start" : 62,
                "key.typename" : "(FWJSONType.Type) -> FWJSONType",
                "key.typeusr" : "$sy11FWFramework10FWJSONTypeOACmcD",
                "key.usr" : "s:11FWFramework10FWJSONTypeO4nullyA2CmF"
              }
            ]
          },
          {
            "key.kind" : "source.lang.swift.decl.enumcase",
            "key.length" : 12,
            "key.namelength" : 0,
            "key.nameoffset" : 0,
            "key.offset" : 1747,
            "key.substructure" : [
              {
                "key.accessibility" : "source.lang.swift.accessibility.public",
                "key.annotated_decl" : "<Declaration>case unknown<\/Declaration>",
                "key.column" : 10,
                "key.decl_lang" : "source.lang.swift",
                "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift",
                "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>unknown<\/decl.name><\/decl.enumelement>",
                "key.kind" : "source.lang.swift.decl.enumelement",
                "key.length" : 7,
                "key.line" : 63,
                "key.name" : "unknown",
                "key.namelength" : 7,
                "key.nameoffset" : 1752,
                "key.offset" : 1752,
                "key.parsed_declaration" : "case unknown",
                "key.parsed_scope.end" : 63,
                "key.parsed_scope.start" : 63,
                "key.typename" : "(FWJSONType.Type) -> FWJSONType",
                "key.typeusr" : "$sy11FWFramework10FWJSONTypeOACmcD",
                "key.usr" : "s:11FWFramework10FWJSONTypeO7unknownyA2CmF"
              }
            ]
          }
        ],
        "key.typename" : "FWJSONType.Type",
        "key.typeusr" : "$s11FWFramework10FWJSONTypeOmD",
        "key.usr" : "s:11FWFramework10FWJSONTypeO"
      },
      {
        "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
        "key.length" : 17,
        "key.name" : "MARK: - JSON Base",
        "key.namelength" : 0,
        "key.nameoffset" : 0,
        "key.offset" : 1766
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public struct FWJSON<\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 1866
          }
        ],
        "key.bodylength" : 5715,
        "key.bodyoffset" : 1888,
        "key.column" : 15,
        "key.decl_lang" : "source.lang.swift",
        "key.doc.column" : 15,
        "key.doc.comment" : "FWJSON\n\n- see: [SwiftyJSON](https:\/\/github.com\/SwiftyJSON\/SwiftyJSON)",
        "key.doc.declaration" : "public struct FWJSON",
        "key.doc.discussion" : [
          {
            "List-Bullet" : ""
          }
        ],
        "key.doc.file" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift\" line=\"73\" column=\"15\"><Name>FWJSON<\/Name><USR>s:11FWFramework6FWJSONV<\/USR><Declaration>public struct FWJSON<\/Declaration><CommentParts><Abstract><Para>FWJSON<\/Para><\/Abstract><Discussion><List-Bullet><Item><Para>see: <Link href=\"https:\/\/github.com\/SwiftyJSON\/SwiftyJSON\">SwiftyJSON<\/Link><\/Para><\/Item><\/List-Bullet><\/Discussion><\/CommentParts><\/Class>",
        "key.doc.line" : 73,
        "key.doc.name" : "FWJSON",
        "key.doc.type" : "Class",
        "key.doclength" : 80,
        "key.docoffset" : 1785,
        "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift",
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>FWJSON<\/decl.name><\/decl.struct>",
        "key.kind" : "source.lang.swift.decl.struct",
        "key.length" : 5731,
        "key.line" : 73,
        "key.name" : "FWJSON",
        "key.namelength" : 6,
        "key.nameoffset" : 1880,
        "key.offset" : 1873,
        "key.parsed_declaration" : "public struct FWJSON",
        "key.parsed_scope.end" : 247,
        "key.parsed_scope.start" : 73,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public init(data: <Type usr=\"s:10Foundation4DataV\">Data<\/Type>, options opt: <Type usr=\"c:objc(cs)NSJSONSerialization\">JSONSerialization<\/Type>.<Type usr=\"c:@E@NSJSONReadingOptions\">ReadingOptions<\/Type> = []) throws<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 2181
              }
            ],
            "key.bodylength" : 128,
            "key.bodyoffset" : 2265,
            "key.column" : 12,
            "key.decl_lang" : "source.lang.swift",
            "key.doc.column" : 12,
            "key.doc.comment" : "Creates a JSON using the data.\n    \n- parameter data: The NSData used to convert to json.Top level object in data is an NSArray or NSDictionary\n- parameter opt: The JSON serialization reading options. `[]` by default.\n    \n- returns: The created JSON",
            "key.doc.declaration" : "public init(data: Data, options opt: JSONSerialization.ReadingOptions = []) throws",
            "key.doc.file" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift\" line=\"83\" column=\"12\"><Name>init(data:options:)<\/Name><USR>s:11FWFramework6FWJSONV4data7optionsAC10Foundation4DataV_So20NSJSONReadingOptionsVtKcfc<\/USR><Declaration>public init(data: Data, options opt: JSONSerialization.ReadingOptions = []) throws<\/Declaration><CommentParts><Abstract><Para>Creates a JSON using the data.<\/Para><\/Abstract><Parameters><Parameter><Name>data<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The NSData used to convert to json.Top level object in data is an NSArray or NSDictionary<\/Para><\/Discussion><\/Parameter><Parameter><Name>opt<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The JSON serialization reading options. <codeVoice>[]<\/codeVoice> by default.<\/Para><\/Discussion><\/Parameter><\/Parameters><ResultDiscussion><Para>The created JSON<\/Para><\/ResultDiscussion><\/CommentParts><\/Function>",
            "key.doc.line" : 83,
            "key.doc.name" : "init(data:options:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "The NSData used to convert to json.Top level object in data is an NSArray or NSDictionary"
                  }
                ],
                "name" : "data"
              },
              {
                "discussion" : [
                  {
                    "Para" : "The JSON serialization reading options. `[]` by default."
                  }
                ],
                "name" : "opt"
              }
            ],
            "key.doc.result_discussion" : [
              {
                "Para" : "The created JSON"
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 282,
            "key.docoffset" : 1894,
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift",
            "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>init<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>data<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:10Foundation4DataV\">Data<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>options<\/decl.var.parameter.argument_label> <decl.var.parameter.name>opt<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"c:objc(cs)NSJSONSerialization\">JSONSerialization<\/ref.class>.<ref.struct usr=\"c:@E@NSJSONReadingOptions\">ReadingOptions<\/ref.struct><\/decl.var.parameter.type> = []<\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword><\/decl.function.constructor>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 206,
            "key.line" : 83,
            "key.name" : "init(data:options:)",
            "key.namelength" : 68,
            "key.nameoffset" : 2188,
            "key.offset" : 2188,
            "key.parsed_declaration" : "public init(data: Data, options opt: JSONSerialization.ReadingOptions = []) throws",
            "key.parsed_scope.end" : 86,
            "key.parsed_scope.start" : 83,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONVyACypcfc\">init(_:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONV9parseJSONACSS_tcfc\">init(parseJSON:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONV10jsonObjectACyp_tc33_CE7FCE31305580F7F6A923B7611B8BA6Llfc\">init(jsonObject:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONV13stringLiteralACSS_tcfc\">init(stringLiteral:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONV30extendedGraphemeClusterLiteralACSS_tcfc\">init(extendedGraphemeClusterLiteral:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONV20unicodeScalarLiteralACSS_tcfc\">init(unicodeScalarLiteral:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONV14integerLiteralACSi_tcfc\">init(integerLiteral:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONV14booleanLiteralACSb_tcfc\">init(booleanLiteral:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONV12floatLiteralACSd_tcfc\">init(floatLiteral:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONV17dictionaryLiteralACSS_yptd_tcfc\">init(dictionaryLiteral:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONV12arrayLiteralACypd_tcfc\">init(arrayLiteral:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONV8rawValueACSgyp_tcfc\">init(rawValue:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONV4fromACs7Decoder_p_tKcfc\">init(from:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>let object: Any<\/Declaration>",
                "key.column" : 13,
                "key.decl_lang" : "source.lang.swift",
                "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>object<\/decl.name>: <decl.var.type><syntaxtype.keyword>Any<\/syntaxtype.keyword><\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 76,
                "key.line" : 84,
                "key.name" : "object",
                "key.namelength" : 6,
                "key.nameoffset" : 2278,
                "key.offset" : 2274,
                "key.parsed_declaration" : "let object: Any = try JSONSerialization.jsonObject(with: data, options: opt)",
                "key.parsed_scope.end" : 84,
                "key.parsed_scope.start" : 84,
                "key.typename" : "Any",
                "key.typeusr" : "$sypD",
                "key.usr" : "s:11FWFramework6FWJSONV4data7optionsAC10Foundation4DataV_So20NSJSONReadingOptionsVtKcfc6objectL_ypvp"
              }
            ],
            "key.typename" : "(FWJSON.Type) -> (Data, JSONSerialization.ReadingOptions) throws -> FWJSON",
            "key.typeusr" : "$s4data7options11FWFramework6FWJSONV10Foundation4DataV_So20NSJSONReadingOptionsVtKcD",
            "key.usr" : "s:11FWFramework6FWJSONV4data7optionsAC10Foundation4DataV_So20NSJSONReadingOptionsVtKcfc"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public init(_ object: Any)<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 2618
              }
            ],
            "key.bodylength" : 276,
            "key.bodyoffset" : 2646,
            "key.column" : 12,
            "key.decl_lang" : "source.lang.swift",
            "key.doc.column" : 12,
            "key.doc.comment" : "Creates a JSON object\n- note: this does not parse a `String` into JSON, instead use `init(parseJSON: String)`\n    \n- parameter object: the object\n\n- returns: the created JSON object",
            "key.doc.declaration" : "public init(_ object: Any)",
            "key.doc.discussion" : [
              {
                "Note" : ""
              }
            ],
            "key.doc.file" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift\" line=\"96\" column=\"12\"><Name>init(_:)<\/Name><USR>s:11FWFramework6FWJSONVyACypcfc<\/USR><Declaration>public init(_ object: Any)<\/Declaration><CommentParts><Abstract><Para>Creates a JSON object<\/Para><\/Abstract><Parameters><Parameter><Name>object<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>the object<\/Para><\/Discussion><\/Parameter><\/Parameters><ResultDiscussion><Para>the created JSON object<\/Para><\/ResultDiscussion><Discussion><Note><Para>this does not parse a <codeVoice>String<\/codeVoice> into JSON, instead use <codeVoice>init(parseJSON: String)<\/codeVoice><\/Para><\/Note><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.line" : 96,
            "key.doc.name" : "init(_:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "the object"
                  }
                ],
                "name" : "object"
              }
            ],
            "key.doc.result_discussion" : [
              {
                "Para" : "the created JSON object"
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 213,
            "key.docoffset" : 2400,
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift",
            "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>init<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>object<\/decl.var.parameter.name>: <decl.var.parameter.type><syntaxtype.keyword>Any<\/syntaxtype.keyword><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.constructor>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 298,
            "key.line" : 96,
            "key.name" : "init(_:)",
            "key.namelength" : 19,
            "key.nameoffset" : 2625,
            "key.offset" : 2625,
            "key.parsed_declaration" : "public init(_ object: Any)",
            "key.parsed_scope.end" : 107,
            "key.parsed_scope.start" : 96,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONV4data7optionsAC10Foundation4DataV_So20NSJSONReadingOptionsVtKcfc\">init(data:options:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONV9parseJSONACSS_tcfc\">init(parseJSON:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONV10jsonObjectACyp_tc33_CE7FCE31305580F7F6A923B7611B8BA6Llfc\">init(jsonObject:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONV13stringLiteralACSS_tcfc\">init(stringLiteral:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONV30extendedGraphemeClusterLiteralACSS_tcfc\">init(extendedGraphemeClusterLiteral:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONV20unicodeScalarLiteralACSS_tcfc\">init(unicodeScalarLiteral:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONV14integerLiteralACSi_tcfc\">init(integerLiteral:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONV14booleanLiteralACSb_tcfc\">init(booleanLiteral:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONV12floatLiteralACSd_tcfc\">init(floatLiteral:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONV17dictionaryLiteralACSS_yptd_tcfc\">init(dictionaryLiteral:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONV12arrayLiteralACypd_tcfc\">init(arrayLiteral:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONV8rawValueACSgyp_tcfc\">init(rawValue:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONV4fromACs7Decoder_p_tKcfc\">init(from:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "(FWJSON.Type) -> (Any) -> FWJSON",
            "key.typeusr" : "$sy11FWFramework6FWJSONVypcD",
            "key.usr" : "s:11FWFramework6FWJSONVyACypcfc"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public init(parseJSON jsonString: <Type usr=\"s:SS\">String<\/Type>)<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 3080
              }
            ],
            "key.bodylength" : 146,
            "key.bodyoffset" : 3123,
            "key.column" : 12,
            "key.decl_lang" : "source.lang.swift",
            "key.doc.column" : 12,
            "key.doc.comment" : "Parses the JSON string into a JSON object\n    \n- parameter json: the JSON string\n    \n- returns: the created JSON object",
            "key.doc.declaration" : "public init(parseJSON jsonString: String)",
            "key.doc.file" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift\" line=\"116\" column=\"12\"><Name>init(parseJSON:)<\/Name><USR>s:11FWFramework6FWJSONV9parseJSONACSS_tcfc<\/USR><Declaration>public init(parseJSON jsonString: String)<\/Declaration><CommentParts><Abstract><Para>Parses the JSON string into a JSON object<\/Para><\/Abstract><Parameters><Parameter><Name>json<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>the JSON string<\/Para><\/Discussion><\/Parameter><\/Parameters><ResultDiscussion><Para>the created JSON object<\/Para><\/ResultDiscussion><\/CommentParts><\/Function>",
            "key.doc.line" : 116,
            "key.doc.name" : "init(parseJSON:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "the JSON string"
                  }
                ],
                "name" : "json"
              }
            ],
            "key.doc.result_discussion" : [
              {
                "Para" : "the created JSON object"
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 146,
            "key.docoffset" : 2929,
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift",
            "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>init<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>parseJSON<\/decl.var.parameter.argument_label> <decl.var.parameter.name>jsonString<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.constructor>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 183,
            "key.line" : 116,
            "key.name" : "init(parseJSON:)",
            "key.namelength" : 34,
            "key.nameoffset" : 3087,
            "key.offset" : 3087,
            "key.parsed_declaration" : "public init(parseJSON jsonString: String)",
            "key.parsed_scope.end" : 122,
            "key.parsed_scope.start" : 116,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONV4data7optionsAC10Foundation4DataV_So20NSJSONReadingOptionsVtKcfc\">init(data:options:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONVyACypcfc\">init(_:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONV10jsonObjectACyp_tc33_CE7FCE31305580F7F6A923B7611B8BA6Llfc\">init(jsonObject:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONV13stringLiteralACSS_tcfc\">init(stringLiteral:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONV30extendedGraphemeClusterLiteralACSS_tcfc\">init(extendedGraphemeClusterLiteral:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONV20unicodeScalarLiteralACSS_tcfc\">init(unicodeScalarLiteral:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONV14integerLiteralACSi_tcfc\">init(integerLiteral:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONV14booleanLiteralACSb_tcfc\">init(booleanLiteral:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONV12floatLiteralACSd_tcfc\">init(floatLiteral:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONV17dictionaryLiteralACSS_yptd_tcfc\">init(dictionaryLiteral:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONV12arrayLiteralACypd_tcfc\">init(arrayLiteral:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONV8rawValueACSgyp_tcfc\">init(rawValue:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONV4fromACs7Decoder_p_tKcfc\">init(from:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "(FWJSON.Type) -> (String) -> FWJSON",
            "key.typeusr" : "$s9parseJSON11FWFramework6FWJSONVSS_tcD",
            "key.usr" : "s:11FWFramework6FWJSONV9parseJSONACSS_tcfc"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.fileprivate",
            "key.annotated_decl" : "<Declaration>fileprivate init(jsonObject: Any)<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.fileprivate",
                "key.length" : 11,
                "key.offset" : 3643
              }
            ],
            "key.bodylength" : 33,
            "key.bodyoffset" : 3678,
            "key.column" : 17,
            "key.decl_lang" : "source.lang.swift",
            "key.doc.column" : 17,
            "key.doc.comment" : "Creates a JSON using the object.\n    \n- parameter jsonObject:  The object must have the following properties: All objects are NSString\/String, NSNumber\/Int\/Float\/Double\/Bool, NSArray\/Array, NSDictionary\/Dictionary, or NSNull; All dictionary keys are NSStrings\/String; NSNumbers are not NaN or infinity.\n    \n- returns: The created JSON",
            "key.doc.declaration" : "fileprivate init(jsonObject: Any)",
            "key.doc.file" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift\" line=\"131\" column=\"17\"><Name>init(jsonObject:)<\/Name><USR>s:11FWFramework6FWJSONV10jsonObjectACyp_tc33_CE7FCE31305580F7F6A923B7611B8BA6Llfc<\/USR><Declaration>fileprivate init(jsonObject: Any)<\/Declaration><CommentParts><Abstract><Para>Creates a JSON using the object.<\/Para><\/Abstract><Parameters><Parameter><Name>jsonObject<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The object must have the following properties: All objects are NSString\/String, NSNumber\/Int\/Float\/Double\/Bool, NSArray\/Array, NSDictionary\/Dictionary, or NSNull; All dictionary keys are NSStrings\/String; NSNumbers are not NaN or infinity.<\/Para><\/Discussion><\/Parameter><\/Parameters><ResultDiscussion><Para>The created JSON<\/Para><\/ResultDiscussion><\/CommentParts><\/Function>",
            "key.doc.line" : 131,
            "key.doc.name" : "init(jsonObject:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "The object must have the following properties: All objects are NSString\/String, NSNumber\/Int\/Float\/Double\/Bool, NSArray\/Array, NSDictionary\/Dictionary, or NSNull; All dictionary keys are NSStrings\/String; NSNumbers are not NaN or infinity."
                  }
                ],
                "name" : "jsonObject"
              }
            ],
            "key.doc.result_discussion" : [
              {
                "Para" : "The created JSON"
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 362,
            "key.docoffset" : 3276,
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift",
            "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>fileprivate<\/syntaxtype.keyword> <syntaxtype.keyword>init<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>jsonObject<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><syntaxtype.keyword>Any<\/syntaxtype.keyword><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.constructor>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 57,
            "key.line" : 131,
            "key.name" : "init(jsonObject:)",
            "key.namelength" : 21,
            "key.nameoffset" : 3655,
            "key.offset" : 3655,
            "key.parsed_declaration" : "fileprivate init(jsonObject: Any)",
            "key.parsed_scope.end" : 133,
            "key.parsed_scope.start" : 131,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONV4data7optionsAC10Foundation4DataV_So20NSJSONReadingOptionsVtKcfc\">init(data:options:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONVyACypcfc\">init(_:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONV9parseJSONACSS_tcfc\">init(parseJSON:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONV13stringLiteralACSS_tcfc\">init(stringLiteral:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONV30extendedGraphemeClusterLiteralACSS_tcfc\">init(extendedGraphemeClusterLiteral:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONV20unicodeScalarLiteralACSS_tcfc\">init(unicodeScalarLiteral:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONV14integerLiteralACSi_tcfc\">init(integerLiteral:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONV14booleanLiteralACSb_tcfc\">init(booleanLiteral:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONV12floatLiteralACSd_tcfc\">init(floatLiteral:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONV17dictionaryLiteralACSS_yptd_tcfc\">init(dictionaryLiteral:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONV12arrayLiteralACypd_tcfc\">init(arrayLiteral:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONV8rawValueACSgyp_tcfc\">init(rawValue:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONV4fromACs7Decoder_p_tKcfc\">init(from:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "(FWJSON.Type) -> (Any) -> FWJSON",
            "key.typeusr" : "$s10jsonObject11FWFramework6FWJSONVyp_tcD",
            "key.usr" : "s:11FWFramework6FWJSONV10jsonObjectACyp_tc33_CE7FCE31305580F7F6A923B7611B8BA6Llfc"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public mutating func merge(with other: <Type usr=\"s:11FWFramework6FWJSONV\">FWJSON<\/Type>) throws<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.mutating",
                "key.length" : 8,
                "key.offset" : 4135
              },
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 4128
              }
            ],
            "key.bodylength" : 58,
            "key.bodyoffset" : 4183,
            "key.column" : 26,
            "key.decl_lang" : "source.lang.swift",
            "key.doc.column" : 26,
            "key.doc.comment" : "Merges another JSON into this JSON, whereas primitive values which are not present in this JSON are getting added,\npresent values getting overwritten, array values getting appended and nested JSONs getting merged the same way.\n \n- parameter other: The JSON which gets merged into this JSON\n    \n- throws `ErrorWrongType` if the other JSONs differs in type on the top level.",
            "key.doc.declaration" : "public mutating func merge(with other: FWJSON) throws",
            "key.doc.file" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift\" line=\"143\" column=\"26\"><Name>merge(with:)<\/Name><USR>s:11FWFramework6FWJSONV5merge4withyAC_tKF<\/USR><Declaration>public mutating func merge(with other: FWJSON) throws<\/Declaration><CommentParts><Abstract><Para>Merges another JSON into this JSON, whereas primitive values which are not present in this JSON are getting added, present values getting overwritten, array values getting appended and nested JSONs getting merged the same way.<\/Para><\/Abstract><Parameters><Parameter><Name>other<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The JSON which gets merged into this JSON<\/Para><\/Discussion><\/Parameter><\/Parameters><ThrowsDiscussion><Para><codeVoice>ErrorWrongType<\/codeVoice> if the other JSONs differs in type on the top level.<\/Para><\/ThrowsDiscussion><\/CommentParts><\/Function>",
            "key.doc.line" : 143,
            "key.doc.name" : "merge(with:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "The JSON which gets merged into this JSON"
                  }
                ],
                "name" : "other"
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 405,
            "key.docoffset" : 3718,
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>mutating<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>merge<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>with<\/decl.var.parameter.argument_label> <decl.var.parameter.name>other<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:11FWFramework6FWJSONV\">FWJSON<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 98,
            "key.line" : 143,
            "key.name" : "merge(with:)",
            "key.namelength" : 25,
            "key.nameoffset" : 4149,
            "key.offset" : 4144,
            "key.parsed_declaration" : "public mutating func merge(with other: FWJSON) throws",
            "key.parsed_scope.end" : 145,
            "key.parsed_scope.start" : 143,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONV5merge33_CE7FCE31305580F7F6A923B7611B8BA6LL4with9typecheckyAC_SbtKF\">merge(with:typecheck:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "(inout FWJSON) -> (FWJSON) throws -> ()",
            "key.typeusr" : "$s4withy11FWFramework6FWJSONV_tKcD",
            "key.usr" : "s:11FWFramework6FWJSONV5merge4withyAC_tKF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func merged(with other: <Type usr=\"s:11FWFramework6FWJSONV\">FWJSON<\/Type>) throws -&gt; <Type usr=\"s:11FWFramework6FWJSONV\">FWJSON<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 4721
              }
            ],
            "key.bodylength" : 108,
            "key.bodyoffset" : 4778,
            "key.column" : 17,
            "key.decl_lang" : "source.lang.swift",
            "key.doc.column" : 17,
            "key.doc.comment" : "Merges another JSON into this JSON and returns a new JSON, whereas primitive values which are not present in this JSON are getting added,\npresent values getting overwritten, array values getting appended and nested JSONS getting merged the same way.\n    \n- parameter other: The JSON which gets merged into this JSON\n    \n- throws `ErrorWrongType` if the other JSONs differs in type on the top level.\n    \n- returns: New merged JSON",
            "key.doc.declaration" : "public func merged(with other: FWJSON) throws -> FWJSON",
            "key.doc.file" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift\" line=\"157\" column=\"17\"><Name>merged(with:)<\/Name><USR>s:11FWFramework6FWJSONV6merged4withA2C_tKF<\/USR><Declaration>public func merged(with other: FWJSON) throws -&gt; FWJSON<\/Declaration><CommentParts><Abstract><Para>Merges another JSON into this JSON and returns a new JSON, whereas primitive values which are not present in this JSON are getting added, present values getting overwritten, array values getting appended and nested JSONS getting merged the same way.<\/Para><\/Abstract><Parameters><Parameter><Name>other<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The JSON which gets merged into this JSON<\/Para><\/Discussion><\/Parameter><\/Parameters><ResultDiscussion><Para>New merged JSON<\/Para><\/ResultDiscussion><ThrowsDiscussion><Para><codeVoice>ErrorWrongType<\/codeVoice> if the other JSONs differs in type on the top level.<\/Para><\/ThrowsDiscussion><\/CommentParts><\/Function>",
            "key.doc.line" : 157,
            "key.doc.name" : "merged(with:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "The JSON which gets merged into this JSON"
                  }
                ],
                "name" : "other"
              }
            ],
            "key.doc.result_discussion" : [
              {
                "Para" : "New merged JSON"
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 468,
            "key.docoffset" : 4248,
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>merged<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>with<\/decl.var.parameter.argument_label> <decl.var.parameter.name>other<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:11FWFramework6FWJSONV\">FWJSON<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><ref.struct usr=\"s:11FWFramework6FWJSONV\">FWJSON<\/ref.struct><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 159,
            "key.line" : 157,
            "key.name" : "merged(with:)",
            "key.namelength" : 26,
            "key.nameoffset" : 4733,
            "key.offset" : 4728,
            "key.parsed_declaration" : "public func merged(with other: FWJSON) throws -> FWJSON",
            "key.parsed_scope.end" : 161,
            "key.parsed_scope.start" : 157,
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>var merged: <Type usr=\"s:11FWFramework6FWJSONV\">FWJSON<\/Type><\/Declaration>",
                "key.column" : 13,
                "key.decl_lang" : "source.lang.swift",
                "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>merged<\/decl.name>: <decl.var.type><ref.struct usr=\"s:11FWFramework6FWJSONV\">FWJSON<\/ref.struct><\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 17,
                "key.line" : 158,
                "key.name" : "merged",
                "key.namelength" : 6,
                "key.nameoffset" : 4791,
                "key.offset" : 4787,
                "key.parsed_declaration" : "var merged = self",
                "key.parsed_scope.end" : 158,
                "key.parsed_scope.start" : 158,
                "key.typename" : "FWJSON",
                "key.typeusr" : "$s11FWFramework6FWJSONVD",
                "key.usr" : "s:11FWFramework6FWJSONV6merged4withA2C_tKFADL_ACvp"
              }
            ],
            "key.typename" : "(FWJSON) -> (FWJSON) throws -> FWJSON",
            "key.typeusr" : "$s4with11FWFramework6FWJSONVAD_tKcD",
            "key.usr" : "s:11FWFramework6FWJSONV6merged4withA2C_tKF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.fileprivate",
            "key.annotated_decl" : "<Declaration>fileprivate mutating func merge(with other: <Type usr=\"s:11FWFramework6FWJSONV\">FWJSON<\/Type>, typecheck: <Type usr=\"s:Sb\">Bool<\/Type>) throws<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.mutating",
                "key.length" : 8,
                "key.offset" : 5085
              },
              {
                "key.attribute" : "source.decl.attribute.fileprivate",
                "key.length" : 11,
                "key.offset" : 5073
              }
            ],
            "key.bodylength" : 539,
            "key.bodyoffset" : 5150,
            "key.column" : 32,
            "key.decl_lang" : "source.lang.swift",
            "key.doc.column" : 32,
            "key.doc.comment" : "Private woker function which does the actual merging\nTypecheck is set to true for the first recursion level to prevent total override of the source JSON",
            "key.doc.declaration" : "fileprivate mutating func merge(with other: FWJSON, typecheck: Bool) throws",
            "key.doc.file" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift\" line=\"167\" column=\"32\"><Name>merge(with:typecheck:)<\/Name><USR>s:11FWFramework6FWJSONV5merge33_CE7FCE31305580F7F6A923B7611B8BA6LL4with9typecheckyAC_SbtKF<\/USR><Declaration>fileprivate mutating func merge(with other: FWJSON, typecheck: Bool) throws<\/Declaration><CommentParts><Abstract><Para>Private woker function which does the actual merging Typecheck is set to true for the first recursion level to prevent total override of the source JSON<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 167,
            "key.doc.name" : "merge(with:typecheck:)",
            "key.doc.type" : "Function",
            "key.doclength" : 174,
            "key.docoffset" : 4893,
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>fileprivate<\/syntaxtype.keyword> <syntaxtype.keyword>mutating<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>merge<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>with<\/decl.var.parameter.argument_label> <decl.var.parameter.name>other<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:11FWFramework6FWJSONV\">FWJSON<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>typecheck<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 596,
            "key.line" : 167,
            "key.name" : "merge(with:typecheck:)",
            "key.namelength" : 42,
            "key.nameoffset" : 5099,
            "key.offset" : 5094,
            "key.parsed_declaration" : "fileprivate mutating func merge(with other: FWJSON, typecheck: Bool) throws",
            "key.parsed_scope.end" : 186,
            "key.parsed_scope.start" : 167,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONV5merge4withyAC_tKF\">merge(with:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "(inout FWJSON) -> (FWJSON, Bool) throws -> ()",
            "key.typeusr" : "$s4with9typechecky11FWFramework6FWJSONV_SbtKcD",
            "key.usr" : "s:11FWFramework6FWJSONV5merge33_CE7FCE31305580F7F6A923B7611B8BA6LL4with9typecheckyAC_SbtKF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.fileprivate",
            "key.annotated_decl" : "<Declaration>fileprivate var rawArray: [Any]<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.fileprivate",
                "key.length" : 11,
                "key.offset" : 5719
              }
            ],
            "key.column" : 21,
            "key.decl_lang" : "source.lang.swift",
            "key.doc.column" : 21,
            "key.doc.comment" : "Private object",
            "key.doc.declaration" : "fileprivate var rawArray: [Any]",
            "key.doc.file" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift\" line=\"189\" column=\"21\"><Name>rawArray<\/Name><USR>s:11FWFramework6FWJSONV8rawArray33_CE7FCE31305580F7F6A923B7611B8BA6LLSayypGvp<\/USR><Declaration>fileprivate var rawArray: [Any]<\/Declaration><CommentParts><Abstract><Para>Private object<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 189,
            "key.doc.name" : "rawArray",
            "key.doc.type" : "Other",
            "key.doclength" : 19,
            "key.docoffset" : 5696,
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>fileprivate<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>rawArray<\/decl.name>: <decl.var.type>[<syntaxtype.keyword>Any<\/syntaxtype.keyword>]<\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 24,
            "key.line" : 189,
            "key.name" : "rawArray",
            "key.namelength" : 8,
            "key.nameoffset" : 5735,
            "key.offset" : 5731,
            "key.parsed_declaration" : "fileprivate var rawArray: [Any] = []",
            "key.parsed_scope.end" : 189,
            "key.parsed_scope.start" : 189,
            "key.setter_accessibility" : "source.lang.swift.accessibility.fileprivate",
            "key.typename" : "[Any]",
            "key.typeusr" : "$sSayypGD",
            "key.usr" : "s:11FWFramework6FWJSONV8rawArray33_CE7FCE31305580F7F6A923B7611B8BA6LLSayypGvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.fileprivate",
            "key.annotated_decl" : "<Declaration>fileprivate var rawDictionary: [<Type usr=\"s:SS\">String<\/Type> : Any]<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.fileprivate",
                "key.length" : 11,
                "key.offset" : 5760
              }
            ],
            "key.column" : 21,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>fileprivate<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>rawDictionary<\/decl.name>: <decl.var.type>[<ref.struct usr=\"s:SS\">String<\/ref.struct> : <syntaxtype.keyword>Any<\/syntaxtype.keyword>]<\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 38,
            "key.line" : 190,
            "key.name" : "rawDictionary",
            "key.namelength" : 13,
            "key.nameoffset" : 5776,
            "key.offset" : 5772,
            "key.parsed_declaration" : "fileprivate var rawDictionary: [String: Any] = [:]",
            "key.parsed_scope.end" : 190,
            "key.parsed_scope.start" : 190,
            "key.setter_accessibility" : "source.lang.swift.accessibility.fileprivate",
            "key.typename" : "[String : Any]",
            "key.typeusr" : "$sSDySSypGD",
            "key.usr" : "s:11FWFramework6FWJSONV13rawDictionary33_CE7FCE31305580F7F6A923B7611B8BA6LLSDySSypGvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.fileprivate",
            "key.annotated_decl" : "<Declaration>fileprivate var rawString: <Type usr=\"s:SS\">String<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.fileprivate",
                "key.length" : 11,
                "key.offset" : 5815
              }
            ],
            "key.column" : 21,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>fileprivate<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>rawString<\/decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 26,
            "key.line" : 191,
            "key.name" : "rawString",
            "key.namelength" : 9,
            "key.nameoffset" : 5831,
            "key.offset" : 5827,
            "key.parsed_declaration" : "fileprivate var rawString: String = \"\"",
            "key.parsed_scope.end" : 191,
            "key.parsed_scope.start" : 191,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONV9rawString_7optionsSSSgSS10FoundationE8EncodingV_So20NSJSONWritingOptionsVtF\">rawString(_:options:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONV9rawStringySSSgSDyAA24FWJSONWritingOptionsKeysOypGF\">rawString(_:)<\/RelatedName>"
              }
            ],
            "key.setter_accessibility" : "source.lang.swift.accessibility.fileprivate",
            "key.typename" : "String",
            "key.typeusr" : "$sSSD",
            "key.usr" : "s:11FWFramework6FWJSONV9rawString33_CE7FCE31305580F7F6A923B7611B8BA6LLSSvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.fileprivate",
            "key.annotated_decl" : "<Declaration>fileprivate var rawNumber: <Type usr=\"c:objc(cs)NSNumber\">NSNumber<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.fileprivate",
                "key.length" : 11,
                "key.offset" : 5858
              }
            ],
            "key.column" : 21,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>fileprivate<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>rawNumber<\/decl.name>: <decl.var.type><ref.class usr=\"c:objc(cs)NSNumber\">NSNumber<\/ref.class><\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 27,
            "key.line" : 192,
            "key.name" : "rawNumber",
            "key.namelength" : 9,
            "key.nameoffset" : 5874,
            "key.offset" : 5870,
            "key.parsed_declaration" : "fileprivate var rawNumber: NSNumber = 0",
            "key.parsed_scope.end" : 192,
            "key.parsed_scope.start" : 192,
            "key.setter_accessibility" : "source.lang.swift.accessibility.fileprivate",
            "key.typename" : "NSNumber",
            "key.typeusr" : "$sSo8NSNumberCD",
            "key.usr" : "s:11FWFramework6FWJSONV9rawNumber33_CE7FCE31305580F7F6A923B7611B8BA6LLSo8NSNumberCvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.fileprivate",
            "key.annotated_decl" : "<Declaration>fileprivate var rawNull: <Type usr=\"c:objc(cs)NSNull\">NSNull<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.fileprivate",
                "key.length" : 11,
                "key.offset" : 5902
              }
            ],
            "key.column" : 21,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>fileprivate<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>rawNull<\/decl.name>: <decl.var.type><ref.class usr=\"c:objc(cs)NSNull\">NSNull<\/ref.class><\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 30,
            "key.line" : 193,
            "key.name" : "rawNull",
            "key.namelength" : 7,
            "key.nameoffset" : 5918,
            "key.offset" : 5914,
            "key.parsed_declaration" : "fileprivate var rawNull: NSNull = NSNull()",
            "key.parsed_scope.end" : 193,
            "key.parsed_scope.start" : 193,
            "key.setter_accessibility" : "source.lang.swift.accessibility.fileprivate",
            "key.typename" : "NSNull",
            "key.typeusr" : "$sSo6NSNullCD",
            "key.usr" : "s:11FWFramework6FWJSONV7rawNull33_CE7FCE31305580F7F6A923B7611B8BA6LLSo6NSNullCvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.fileprivate",
            "key.annotated_decl" : "<Declaration>fileprivate var rawBool: <Type usr=\"s:Sb\">Bool<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.fileprivate",
                "key.length" : 11,
                "key.offset" : 5949
              }
            ],
            "key.column" : 21,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>fileprivate<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>rawBool<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 25,
            "key.line" : 194,
            "key.name" : "rawBool",
            "key.namelength" : 7,
            "key.nameoffset" : 5965,
            "key.offset" : 5961,
            "key.parsed_declaration" : "fileprivate var rawBool: Bool = false",
            "key.parsed_scope.end" : 194,
            "key.parsed_scope.start" : 194,
            "key.setter_accessibility" : "source.lang.swift.accessibility.fileprivate",
            "key.typename" : "Bool",
            "key.typeusr" : "$sSbD",
            "key.usr" : "s:11FWFramework6FWJSONV7rawBool33_CE7FCE31305580F7F6A923B7611B8BA6LLSbvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public fileprivate(set) var type: <Type usr=\"s:11FWFramework10FWJSONTypeO\">FWJSONType<\/Type> { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.setter_access.fileprivate",
                "key.length" : 16,
                "key.offset" : 6037
              },
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 6030
              }
            ],
            "key.column" : 33,
            "key.decl_lang" : "source.lang.swift",
            "key.doc.column" : 33,
            "key.doc.comment" : "JSON type, fileprivate setter",
            "key.doc.declaration" : "public fileprivate(set) var type: FWJSONType { get }",
            "key.doc.file" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift\" line=\"197\" column=\"33\"><Name>type<\/Name><USR>s:11FWFramework6FWJSONV4typeAA10FWJSONTypeOvp<\/USR><Declaration>public fileprivate(set) var type: FWJSONType { get }<\/Declaration><CommentParts><Abstract><Para>JSON type, fileprivate setter<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 197,
            "key.doc.name" : "type",
            "key.doc.type" : "Other",
            "key.doclength" : 34,
            "key.docoffset" : 5992,
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>fileprivate<\/syntaxtype.keyword>(set) <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>type<\/decl.name>: <decl.var.type><ref.enum usr=\"s:11FWFramework10FWJSONTypeO\">FWJSONType<\/ref.enum><\/decl.var.type> { get }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 28,
            "key.line" : 197,
            "key.name" : "type",
            "key.namelength" : 4,
            "key.nameoffset" : 6058,
            "key.offset" : 6054,
            "key.parsed_declaration" : "public fileprivate(set) var type: FWJSONType = .null",
            "key.parsed_scope.end" : 197,
            "key.parsed_scope.start" : 197,
            "key.setter_accessibility" : "source.lang.swift.accessibility.fileprivate",
            "key.typename" : "FWJSONType",
            "key.typeusr" : "$s11FWFramework10FWJSONTypeOD",
            "key.usr" : "s:11FWFramework6FWJSONV4typeAA10FWJSONTypeOvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public fileprivate(set) var error: <Type usr=\"s:11FWFramework11FWJSONErrorO\">FWJSONError<\/Type>? { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.setter_access.fileprivate",
                "key.length" : 16,
                "key.offset" : 6137
              },
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 6130
              }
            ],
            "key.column" : 33,
            "key.decl_lang" : "source.lang.swift",
            "key.doc.column" : 33,
            "key.doc.comment" : "Error in JSON, fileprivate setter",
            "key.doc.declaration" : "public fileprivate(set) var error: FWJSONError? { get }",
            "key.doc.file" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift\" line=\"200\" column=\"33\"><Name>error<\/Name><USR>s:11FWFramework6FWJSONV5errorAA11FWJSONErrorOSgvp<\/USR><Declaration>public fileprivate(set) var error: FWJSONError? { get }<\/Declaration><CommentParts><Abstract><Para>Error in JSON, fileprivate setter<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 200,
            "key.doc.name" : "error",
            "key.doc.type" : "Other",
            "key.doclength" : 38,
            "key.docoffset" : 6088,
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>fileprivate<\/syntaxtype.keyword>(set) <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>error<\/decl.name>: <decl.var.type><ref.enum usr=\"s:11FWFramework11FWJSONErrorO\">FWJSONError<\/ref.enum>?<\/decl.var.type> { get }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 23,
            "key.line" : 200,
            "key.name" : "error",
            "key.namelength" : 5,
            "key.nameoffset" : 6158,
            "key.offset" : 6154,
            "key.parsed_declaration" : "public fileprivate(set) var error: FWJSONError?",
            "key.parsed_scope.end" : 200,
            "key.parsed_scope.start" : 200,
            "key.setter_accessibility" : "source.lang.swift.accessibility.fileprivate",
            "key.typename" : "FWJSONError?",
            "key.typeusr" : "$s11FWFramework11FWJSONErrorOSgD",
            "key.usr" : "s:11FWFramework6FWJSONV5errorAA11FWJSONErrorOSgvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var object: Any { get set }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 6206
              }
            ],
            "key.bodylength" : 1278,
            "key.bodyoffset" : 6230,
            "key.column" : 16,
            "key.decl_lang" : "source.lang.swift",
            "key.doc.column" : 16,
            "key.doc.comment" : "Object in JSON",
            "key.doc.declaration" : "public var object: Any { get set }",
            "key.doc.file" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift\" line=\"203\" column=\"16\"><Name>object<\/Name><USR>s:11FWFramework6FWJSONV6objectypvp<\/USR><Declaration>public var object: Any { get set }<\/Declaration><CommentParts><Abstract><Para>Object in JSON<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 203,
            "key.doc.name" : "object",
            "key.doc.type" : "Other",
            "key.doclength" : 19,
            "key.docoffset" : 6183,
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>object<\/decl.name>: <decl.var.type><syntaxtype.keyword>Any<\/syntaxtype.keyword><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> <syntaxtype.keyword>set<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 1296,
            "key.line" : 203,
            "key.name" : "object",
            "key.namelength" : 6,
            "key.nameoffset" : 6217,
            "key.offset" : 6213,
            "key.parsed_declaration" : "public var object: Any",
            "key.parsed_scope.end" : 243,
            "key.parsed_scope.start" : 203,
            "key.setter_accessibility" : "source.lang.swift.accessibility.public",
            "key.typename" : "Any",
            "key.typeusr" : "$sypD",
            "key.usr" : "s:11FWFramework6FWJSONV6objectypvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public static var null: <Type usr=\"s:11FWFramework6FWJSONV\">FWJSON<\/Type> { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 7544
              }
            ],
            "key.bodylength" : 25,
            "key.bodyoffset" : 7576,
            "key.column" : 23,
            "key.decl_lang" : "source.lang.swift",
            "key.doc.column" : 23,
            "key.doc.comment" : "The static null JSON",
            "key.doc.declaration" : "public static var null: FWJSON { get }",
            "key.doc.file" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift\" line=\"246\" column=\"23\"><Name>null<\/Name><USR>s:11FWFramework6FWJSONV4nullACvpZ<\/USR><Declaration>public static var null: FWJSON { get }<\/Declaration><CommentParts><Abstract><Para>The static null JSON<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 246,
            "key.doc.name" : "null",
            "key.doc.type" : "Other",
            "key.doclength" : 25,
            "key.docoffset" : 7515,
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift",
            "key.fully_annotated_decl" : "<decl.var.static><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>null<\/decl.name>: <decl.var.type><ref.struct usr=\"s:11FWFramework6FWJSONV\">FWJSON<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.static>",
            "key.kind" : "source.lang.swift.decl.var.static",
            "key.length" : 51,
            "key.line" : 246,
            "key.name" : "null",
            "key.namelength" : 4,
            "key.nameoffset" : 7562,
            "key.offset" : 7551,
            "key.parsed_declaration" : "public static var null: FWJSON",
            "key.parsed_scope.end" : 246,
            "key.parsed_scope.start" : 246,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONV4nullSo6NSNullCSgvp\">null<\/RelatedName>"
              }
            ],
            "key.typename" : "FWJSON",
            "key.typeusr" : "$s11FWFramework6FWJSONVD",
            "key.usr" : "s:11FWFramework6FWJSONV4nullACvpZ"
          }
        ],
        "key.typename" : "FWJSON.Type",
        "key.typeusr" : "$s11FWFramework6FWJSONVmD",
        "key.usr" : "s:11FWFramework6FWJSONV"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.private",
        "key.annotated_decl" : "<Declaration>private func fwjson_unwrap(_ object: Any) -&gt; Any<\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.private",
            "key.length" : 7,
            "key.offset" : 7657
          }
        ],
        "key.bodylength" : 387,
        "key.bodyoffset" : 7707,
        "key.column" : 14,
        "key.decl_lang" : "source.lang.swift",
        "key.doc.column" : 14,
        "key.doc.comment" : "Private method to unwarp an object recursively",
        "key.doc.declaration" : "private func fwjson_unwrap(_ object: Any) -> Any",
        "key.doc.file" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift",
        "key.doc.full_as_xml" : "<Function file=\"\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift\" line=\"250\" column=\"14\"><Name>fwjson_unwrap(_:)<\/Name><USR>s:11FWFramework13fwjson_unwrap33_CE7FCE31305580F7F6A923B7611B8BA6LLyypypF<\/USR><Declaration>private func fwjson_unwrap(_ object: Any) -&gt; Any<\/Declaration><CommentParts><Abstract><Para>Private method to unwarp an object recursively<\/Para><\/Abstract><\/CommentParts><\/Function>",
        "key.doc.line" : 250,
        "key.doc.name" : "fwjson_unwrap(_:)",
        "key.doc.type" : "Function",
        "key.doclength" : 51,
        "key.docoffset" : 7606,
        "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift",
        "key.fully_annotated_decl" : "<decl.function.free><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>fwjson_unwrap<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>object<\/decl.var.parameter.name>: <decl.var.parameter.type><syntaxtype.keyword>Any<\/syntaxtype.keyword><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><syntaxtype.keyword>Any<\/syntaxtype.keyword><\/decl.function.returntype><\/decl.function.free>",
        "key.kind" : "source.lang.swift.decl.function.free",
        "key.length" : 430,
        "key.line" : 250,
        "key.name" : "fwjson_unwrap(_:)",
        "key.namelength" : 28,
        "key.nameoffset" : 7670,
        "key.offset" : 7665,
        "key.parsed_declaration" : "private func fwjson_unwrap(_ object: Any) -> Any",
        "key.parsed_scope.end" : 265,
        "key.parsed_scope.start" : 250,
        "key.substructure" : [

        ],
        "key.typename" : "(Any) -> Any",
        "key.typeusr" : "$syypypcD",
        "key.usr" : "s:11FWFramework13fwjson_unwrap33_CE7FCE31305580F7F6A923B7611B8BA6LLyypypF"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public enum FWIndex&lt;T&gt; : <Type usr=\"s:SL\">Comparable<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 8097
          }
        ],
        "key.bodylength" : 856,
        "key.bodyoffset" : 8138,
        "key.column" : 13,
        "key.decl_lang" : "source.lang.swift",
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 10,
            "key.offset" : 8126
          }
        ],
        "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift",
        "key.fully_annotated_decl" : "<decl.enum><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>enum<\/syntaxtype.keyword> <decl.name>FWIndex<\/decl.name>&lt;<decl.generic_type_param usr=\"s:11FWFramework7FWIndexO1Txmfp\"><decl.generic_type_param.name>T<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt; : <ref.protocol usr=\"s:SL\">Comparable<\/ref.protocol><\/decl.enum>",
        "key.inheritedtypes" : [
          {
            "key.name" : "Comparable"
          }
        ],
        "key.kind" : "source.lang.swift.decl.enum",
        "key.length" : 891,
        "key.line" : 267,
        "key.name" : "FWIndex",
        "key.namelength" : 7,
        "key.nameoffset" : 8109,
        "key.offset" : 8104,
        "key.parsed_declaration" : "public enum FWIndex<T: Any>: Comparable",
        "key.parsed_scope.end" : 288,
        "key.parsed_scope.start" : 267,
        "key.substructure" : [
          {
            "key.annotated_decl" : "<Declaration>T : Any<\/Declaration>",
            "key.column" : 21,
            "key.decl_lang" : "source.lang.swift",
            "key.elements" : [
              {
                "key.kind" : "source.lang.swift.structure.elem.typeref",
                "key.length" : 3,
                "key.offset" : 8120
              }
            ],
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift",
            "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>T<\/decl.generic_type_param.name> : <decl.generic_type_param.constraint><syntaxtype.keyword>Any<\/syntaxtype.keyword><\/decl.generic_type_param.constraint><\/decl.generic_type_param>",
            "key.inheritedtypes" : [
              {
                "key.name" : "Any"
              }
            ],
            "key.kind" : "source.lang.swift.decl.generic_type_param",
            "key.length" : 6,
            "key.line" : 267,
            "key.name" : "T",
            "key.namelength" : 1,
            "key.nameoffset" : 8117,
            "key.offset" : 8117,
            "key.parsed_declaration" : "public enum FWIndex<T: Any",
            "key.parsed_scope.end" : 267,
            "key.parsed_scope.start" : 267,
            "key.typename" : "T.Type",
            "key.typeusr" : "$sxmD",
            "key.usr" : "s:11FWFramework7FWIndexO1Txmfp"
          },
          {
            "key.kind" : "source.lang.swift.decl.enumcase",
            "key.length" : 15,
            "key.namelength" : 0,
            "key.nameoffset" : 0,
            "key.offset" : 8143,
            "key.substructure" : [
              {
                "key.accessibility" : "source.lang.swift.accessibility.public",
                "key.annotated_decl" : "<Declaration>case array(<Type usr=\"s:Si\">Int<\/Type>)<\/Declaration>",
                "key.column" : 10,
                "key.decl_lang" : "source.lang.swift",
                "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift",
                "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>array<\/decl.name>(<decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.enumelement>",
                "key.kind" : "source.lang.swift.decl.enumelement",
                "key.length" : 10,
                "key.line" : 268,
                "key.name" : "array(_:)",
                "key.namelength" : 10,
                "key.nameoffset" : 8148,
                "key.offset" : 8148,
                "key.parsed_declaration" : "case array(Int)",
                "key.parsed_scope.end" : 268,
                "key.parsed_scope.start" : 268,
                "key.substructure" : [

                ],
                "key.typename" : "<T> (FWIndex<T>.Type) -> (Int) -> FWIndex<T>",
                "key.typeusr" : "$sy11FWFramework7FWIndexOyxGSicADmcluD",
                "key.usr" : "s:11FWFramework7FWIndexO5arrayyACyxGSicAEmlF"
              }
            ]
          },
          {
            "key.kind" : "source.lang.swift.decl.enumcase",
            "key.length" : 43,
            "key.namelength" : 0,
            "key.nameoffset" : 0,
            "key.offset" : 8163,
            "key.substructure" : [
              {
                "key.accessibility" : "source.lang.swift.accessibility.public",
                "key.annotated_decl" : "<Declaration>case dictionary(<Type usr=\"s:s15DictionaryIndexa\">DictionaryIndex<\/Type>&lt;<Type usr=\"s:SS\">String<\/Type>, <Type usr=\"s:11FWFramework7FWIndexO1Txmfp\">T<\/Type>&gt;)<\/Declaration>",
                "key.column" : 10,
                "key.decl_lang" : "source.lang.swift",
                "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift",
                "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>dictionary<\/decl.name>(<decl.var.parameter><decl.var.parameter.type><ref.typealias usr=\"s:s15DictionaryIndexa\">DictionaryIndex<\/ref.typealias>&lt;<ref.struct usr=\"s:SS\">String<\/ref.struct>, <ref.generic_type_param usr=\"s:11FWFramework7FWIndexO1Txmfp\">T<\/ref.generic_type_param>&gt;<\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.enumelement>",
                "key.kind" : "source.lang.swift.decl.enumelement",
                "key.length" : 38,
                "key.line" : 269,
                "key.name" : "dictionary(_:)",
                "key.namelength" : 38,
                "key.nameoffset" : 8168,
                "key.offset" : 8168,
                "key.parsed_declaration" : "case dictionary(DictionaryIndex<String, T>)",
                "key.parsed_scope.end" : 269,
                "key.parsed_scope.start" : 269,
                "key.substructure" : [

                ],
                "key.typename" : "<T> (FWIndex<T>.Type) -> (Dictionary<String, T>.Index) -> FWIndex<T>",
                "key.typeusr" : "$sy11FWFramework7FWIndexOyxGSD5IndexVySSx_GcADmcluD",
                "key.usr" : "s:11FWFramework7FWIndexO10dictionaryyACyxGSD5IndexVySSx_GcAEmlF"
              }
            ]
          },
          {
            "key.kind" : "source.lang.swift.decl.enumcase",
            "key.length" : 9,
            "key.namelength" : 0,
            "key.nameoffset" : 0,
            "key.offset" : 8211,
            "key.substructure" : [
              {
                "key.accessibility" : "source.lang.swift.accessibility.public",
                "key.annotated_decl" : "<Declaration>case null<\/Declaration>",
                "key.column" : 10,
                "key.decl_lang" : "source.lang.swift",
                "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift",
                "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>null<\/decl.name><\/decl.enumelement>",
                "key.kind" : "source.lang.swift.decl.enumelement",
                "key.length" : 4,
                "key.line" : 270,
                "key.name" : "null",
                "key.namelength" : 4,
                "key.nameoffset" : 8216,
                "key.offset" : 8216,
                "key.parsed_declaration" : "case null",
                "key.parsed_scope.end" : 270,
                "key.parsed_scope.start" : 270,
                "key.typename" : "<T> (FWIndex<T>.Type) -> FWIndex<T>",
                "key.typeusr" : "$sy11FWFramework7FWIndexOyxGADmcluD",
                "key.usr" : "s:11FWFramework7FWIndexO4nullyACyxGAEmlF"
              }
            ]
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public static func == (lhs: <Type usr=\"s:11FWFramework7FWIndexO\">FWIndex<\/Type>, rhs: <Type usr=\"s:11FWFramework7FWIndexO\">FWIndex<\/Type>) -&gt; <Type usr=\"s:Sb\">Bool<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 8233
              }
            ],
            "key.bodylength" : 358,
            "key.bodyoffset" : 8286,
            "key.column" : 24,
            "key.decl_lang" : "source.lang.swift",
            "key.doc.declaration" : "static func == (lhs: Self, rhs: Self) -> Bool",
            "key.doc.discussion" : [
              {
                "Para" : "Equality is the inverse of inequality. For any values `a` and `b`, `a == b` implies that `a != b` is `false`."
              },
              {
                "Note" : ""
              }
            ],
            "key.doc.full_as_xml" : "<Function><Name>==(_:_:)<\/Name><USR>s:SQ2eeoiySbx_xtFZ<\/USR><Declaration>static func == (lhs: Self, rhs: Self) -&gt; Bool<\/Declaration><CommentParts><Abstract><Para>Returns a Boolean value indicating whether two values are equal.<\/Para><\/Abstract><Parameters><Parameter><Name>lhs<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>A value to compare.<\/Para><\/Discussion><\/Parameter><Parameter><Name>rhs<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Another value to compare.<\/Para><\/Discussion><\/Parameter><\/Parameters><Discussion><Para>Equality is the inverse of inequality. For any values <codeVoice>a<\/codeVoice> and <codeVoice>b<\/codeVoice>, <codeVoice>a == b<\/codeVoice> implies that <codeVoice>a != b<\/codeVoice> is <codeVoice>false<\/codeVoice>.<\/Para><Note><Para>This documentation comment was inherited from <codeVoice>Equatable<\/codeVoice>.<\/Para><\/Note><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.name" : "==(_:_:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "A value to compare."
                  }
                ],
                "name" : "lhs"
              },
              {
                "discussion" : [
                  {
                    "Para" : "Another value to compare."
                  }
                ],
                "name" : "rhs"
              }
            ],
            "key.doc.type" : "Function",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift",
            "key.fully_annotated_decl" : "<decl.function.operator.infix><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>== <\/decl.name>(<decl.var.parameter><decl.var.parameter.name>lhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.enum usr=\"s:11FWFramework7FWIndexO\">FWIndex<\/ref.enum><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>rhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.enum usr=\"s:11FWFramework7FWIndexO\">FWIndex<\/ref.enum><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.function.returntype><\/decl.function.operator.infix>",
            "key.kind" : "source.lang.swift.decl.function.method.static",
            "key.length" : 419,
            "key.line" : 272,
            "key.name" : "==(_:_:)",
            "key.namelength" : 31,
            "key.nameoffset" : 8245,
            "key.offset" : 8226,
            "key.overrides" : [
              {
                "key.usr" : "s:SQ2eeoiySbx_xtFZ"
              }
            ],
            "key.parsed_declaration" : "static public func == (lhs: FWIndex, rhs: FWIndex) -> Bool",
            "key.parsed_scope.end" : 279,
            "key.parsed_scope.start" : 272,
            "key.substructure" : [

            ],
            "key.typename" : "<T> (FWIndex<T>.Type) -> (FWIndex<T>, FWIndex<T>) -> Bool",
            "key.typeusr" : "$sySb11FWFramework7FWIndexOyxG_ADtcD",
            "key.usr" : "s:SQ2eeoiySbx_xtFZ"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public static func &lt; (lhs: <Type usr=\"s:11FWFramework7FWIndexO\">FWIndex<\/Type>, rhs: <Type usr=\"s:11FWFramework7FWIndexO\">FWIndex<\/Type>) -&gt; <Type usr=\"s:Sb\">Bool<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 8658
              }
            ],
            "key.bodylength" : 282,
            "key.bodyoffset" : 8710,
            "key.column" : 24,
            "key.decl_lang" : "source.lang.swift",
            "key.doc.declaration" : "static func < (lhs: Self, rhs: Self) -> Bool",
            "key.doc.discussion" : [
              {
                "Para" : "This function is the only requirement of the `Comparable` protocol. The remainder of the relational operator functions are implemented by the standard library for any type that conforms to `Comparable`."
              },
              {
                "Note" : ""
              }
            ],
            "key.doc.full_as_xml" : "<Function><Name>&lt;(_:_:)<\/Name><USR>s:SL1loiySbx_xtFZ<\/USR><Declaration>static func &lt; (lhs: Self, rhs: Self) -&gt; Bool<\/Declaration><CommentParts><Abstract><Para>Returns a Boolean value indicating whether the value of the first argument is less than that of the second argument.<\/Para><\/Abstract><Parameters><Parameter><Name>lhs<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>A value to compare.<\/Para><\/Discussion><\/Parameter><Parameter><Name>rhs<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Another value to compare.<\/Para><\/Discussion><\/Parameter><\/Parameters><Discussion><Para>This function is the only requirement of the <codeVoice>Comparable<\/codeVoice> protocol. The remainder of the relational operator functions are implemented by the standard library for any type that conforms to <codeVoice>Comparable<\/codeVoice>.<\/Para><Note><Para>This documentation comment was inherited from <codeVoice>Comparable<\/codeVoice>.<\/Para><\/Note><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.name" : "<(_:_:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "A value to compare."
                  }
                ],
                "name" : "lhs"
              },
              {
                "discussion" : [
                  {
                    "Para" : "Another value to compare."
                  }
                ],
                "name" : "rhs"
              }
            ],
            "key.doc.type" : "Function",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift",
            "key.fully_annotated_decl" : "<decl.function.operator.infix><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>&lt; <\/decl.name>(<decl.var.parameter><decl.var.parameter.name>lhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.enum usr=\"s:11FWFramework7FWIndexO\">FWIndex<\/ref.enum><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>rhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.enum usr=\"s:11FWFramework7FWIndexO\">FWIndex<\/ref.enum><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.function.returntype><\/decl.function.operator.infix>",
            "key.kind" : "source.lang.swift.decl.function.method.static",
            "key.length" : 342,
            "key.line" : 281,
            "key.name" : "<(_:_:)",
            "key.namelength" : 30,
            "key.nameoffset" : 8670,
            "key.offset" : 8651,
            "key.overrides" : [
              {
                "key.usr" : "s:SL1loiySbx_xtFZ"
              }
            ],
            "key.parsed_declaration" : "static public func < (lhs: FWIndex, rhs: FWIndex) -> Bool",
            "key.parsed_scope.end" : 287,
            "key.parsed_scope.start" : 281,
            "key.substructure" : [

            ],
            "key.typename" : "<T> (FWIndex<T>.Type) -> (FWIndex<T>, FWIndex<T>) -> Bool",
            "key.typeusr" : "$sySb11FWFramework7FWIndexOyxG_ADtcD",
            "key.usr" : "s:SL1loiySbx_xtFZ"
          }
        ],
        "key.typename" : "FWIndex<T>.Type",
        "key.typeusr" : "$s11FWFramework7FWIndexOyxGmD",
        "key.usr" : "s:11FWFramework7FWIndexO"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public typealias FWJSONIndex = <Type usr=\"s:11FWFramework7FWIndexO\">FWIndex<\/Type>&lt;<Type usr=\"s:11FWFramework6FWJSONV\">FWJSON<\/Type>&gt;<\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 8997
          }
        ],
        "key.column" : 18,
        "key.decl_lang" : "source.lang.swift",
        "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift",
        "key.fully_annotated_decl" : "<decl.typealias><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>typealias<\/syntaxtype.keyword> <decl.name>FWJSONIndex<\/decl.name> = <ref.enum usr=\"s:11FWFramework7FWIndexO\">FWIndex<\/ref.enum>&lt;<ref.struct usr=\"s:11FWFramework6FWJSONV\">FWJSON<\/ref.struct>&gt;<\/decl.typealias>",
        "key.kind" : "source.lang.swift.decl.typealias",
        "key.length" : 39,
        "key.line" : 290,
        "key.name" : "FWJSONIndex",
        "key.namelength" : 11,
        "key.nameoffset" : 9014,
        "key.offset" : 9004,
        "key.parsed_declaration" : "public typealias FWJSONIndex = FWIndex<FWJSON>",
        "key.parsed_scope.end" : 290,
        "key.parsed_scope.start" : 290,
        "key.typename" : "FWIndex<FWJSON>.Type",
        "key.typeusr" : "$s11FWFramework7FWIndexOyAA6FWJSONVGmD",
        "key.usr" : "s:11FWFramework11FWJSONIndexa"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public typealias FWJSONRawIndex = <Type usr=\"s:11FWFramework7FWIndexO\">FWIndex<\/Type>&lt;Any&gt;<\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 9044
          }
        ],
        "key.column" : 18,
        "key.decl_lang" : "source.lang.swift",
        "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift",
        "key.fully_annotated_decl" : "<decl.typealias><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>typealias<\/syntaxtype.keyword> <decl.name>FWJSONRawIndex<\/decl.name> = <ref.enum usr=\"s:11FWFramework7FWIndexO\">FWIndex<\/ref.enum>&lt;<syntaxtype.keyword>Any<\/syntaxtype.keyword>&gt;<\/decl.typealias>",
        "key.kind" : "source.lang.swift.decl.typealias",
        "key.length" : 39,
        "key.line" : 291,
        "key.name" : "FWJSONRawIndex",
        "key.namelength" : 14,
        "key.nameoffset" : 9061,
        "key.offset" : 9051,
        "key.parsed_declaration" : "public typealias FWJSONRawIndex = FWIndex<Any>",
        "key.parsed_scope.end" : 291,
        "key.parsed_scope.start" : 291,
        "key.typename" : "FWIndex<Any>.Type",
        "key.typeusr" : "$s11FWFramework7FWIndexOyypGmD",
        "key.usr" : "s:11FWFramework14FWJSONRawIndexa"
      },
      {
        "key.annotated_decl" : "<Declaration>public struct FWJSON<\/Declaration>",
        "key.bodylength" : 1171,
        "key.bodyoffset" : 9128,
        "key.column" : 15,
        "key.decl_lang" : "source.lang.swift",
        "key.doc.column" : 15,
        "key.doc.declaration" : "public struct FWJSON",
        "key.doc.discussion" : [
          {
            "List-Bullet" : ""
          }
        ],
        "key.doc.file" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift\" line=\"73\" column=\"15\"><Name>FWJSON<\/Name><USR>s:11FWFramework6FWJSONV<\/USR><Declaration>public struct FWJSON<\/Declaration><CommentParts><Abstract><Para>FWJSON<\/Para><\/Abstract><Discussion><List-Bullet><Item><Para>see: <Link href=\"https:\/\/github.com\/SwiftyJSON\/SwiftyJSON\">SwiftyJSON<\/Link><\/Para><\/Item><\/List-Bullet><\/Discussion><\/CommentParts><\/Class>",
        "key.doc.line" : 73,
        "key.doc.name" : "FWJSON",
        "key.doc.type" : "Class",
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 16,
            "key.offset" : 9110
          }
        ],
        "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift",
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>FWJSON<\/decl.name><\/decl.struct>",
        "key.inheritedtypes" : [
          {
            "key.name" : "Swift.Collection"
          }
        ],
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 1208,
        "key.line" : 73,
        "key.name" : "FWJSON",
        "key.namelength" : 6,
        "key.nameoffset" : 9102,
        "key.offset" : 9092,
        "key.parsed_declaration" : "extension FWJSON: Swift.Collection",
        "key.parsed_scope.end" : 328,
        "key.parsed_scope.start" : 293,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public typealias Index = <Type usr=\"s:11FWFramework14FWJSONRawIndexa\">FWJSONRawIndex<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 9134
              }
            ],
            "key.column" : 22,
            "key.decl_lang" : "source.lang.swift",
            "key.doc.declaration" : "associatedtype Index : Comparable where Self.Index == Self.Indices.Element, Self.Indices.Element == Self.Indices.Index, Self.Indices.Index == Self.SubSequence.Index, Self.SubSequence.Index == Self.Indices.Indices.Element, Self.Indices.Indices.Element == Self.Indices.Indices.Index, Self.Indices.Indices.Index == Self.SubSequence.Indices.Element, Self.SubSequence.Indices.Element == Self.SubSequence.Indices.Index, Self.SubSequence.Indices.Index == Self.Indices.Indices.Indices.Element, Self.Indices.Indices.Indices.Element == Self.Indices.Indices.Indices.Index, Self.Indices.Indices.Indices.Index == Self.SubSequence.Indices.Indices.Element, Self.SubSequence.Indices.Indices.Element == Self.SubSequence.Indices.Indices.Index, Self.SubSequence.Indices.Indices.Index == Self.SubSequence.Indices.Indices.Indices.Element, Self.SubSequence.Indices.Indices.Indices.Element == Self.SubSequence.Indices.Indices.Indices.Index",
            "key.doc.discussion" : [
              {
                "Para" : "Valid indices consist of the position of every element and a “past the end” position that’s not valid for use as a subscript argument."
              },
              {
                "Note" : ""
              }
            ],
            "key.doc.full_as_xml" : "<Other><Name>Index<\/Name><USR>s:Sl5IndexQa<\/USR><Declaration>associatedtype Index : Comparable where Self.Index == Self.Indices.Element, Self.Indices.Element == Self.Indices.Index, Self.Indices.Index == Self.SubSequence.Index, Self.SubSequence.Index == Self.Indices.Indices.Element, Self.Indices.Indices.Element == Self.Indices.Indices.Index, Self.Indices.Indices.Index == Self.SubSequence.Indices.Element, Self.SubSequence.Indices.Element == Self.SubSequence.Indices.Index, Self.SubSequence.Indices.Index == Self.Indices.Indices.Indices.Element, Self.Indices.Indices.Indices.Element == Self.Indices.Indices.Indices.Index, Self.Indices.Indices.Indices.Index == Self.SubSequence.Indices.Indices.Element, Self.SubSequence.Indices.Indices.Element == Self.SubSequence.Indices.Indices.Index, Self.SubSequence.Indices.Indices.Index == Self.SubSequence.Indices.Indices.Indices.Element, Self.SubSequence.Indices.Indices.Indices.Element == Self.SubSequence.Indices.Indices.Indices.Index<\/Declaration><CommentParts><Abstract><Para>A type that represents a position in the collection.<\/Para><\/Abstract><Discussion><Para>Valid indices consist of the position of every element and a “past the end” position that’s not valid for use as a subscript argument.<\/Para><Note><Para>This documentation comment was inherited from <codeVoice>Collection<\/codeVoice>.<\/Para><\/Note><\/Discussion><\/CommentParts><\/Other>",
            "key.doc.name" : "Index",
            "key.doc.type" : "Other",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift",
            "key.fully_annotated_decl" : "<decl.typealias><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>typealias<\/syntaxtype.keyword> <decl.name>Index<\/decl.name> = <ref.typealias usr=\"s:11FWFramework14FWJSONRawIndexa\">FWJSONRawIndex<\/ref.typealias><\/decl.typealias>",
            "key.kind" : "source.lang.swift.decl.typealias",
            "key.length" : 32,
            "key.line" : 295,
            "key.name" : "Index",
            "key.namelength" : 5,
            "key.nameoffset" : 9151,
            "key.offset" : 9141,
            "key.overrides" : [
              {
                "key.usr" : "s:Sl5IndexQa"
              }
            ],
            "key.parsed_declaration" : "public typealias Index = FWJSONRawIndex",
            "key.parsed_scope.end" : 295,
            "key.parsed_scope.start" : 295,
            "key.typename" : "FWIndex<Any>.Type",
            "key.typeusr" : "$s11FWFramework7FWIndexOyypGmD",
            "key.usr" : "s:Sl5IndexQa"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var startIndex: <Type usr=\"s:11FWFramework6FWJSONV5Indexa\">Index<\/Type> { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 9179
              }
            ],
            "key.bodylength" : 208,
            "key.bodyoffset" : 9209,
            "key.column" : 16,
            "key.decl_lang" : "source.lang.swift",
            "key.doc.declaration" : "var startIndex: Self.Index { get }",
            "key.doc.discussion" : [
              {
                "Para" : "If the collection is empty, `startIndex` is equal to `endIndex`."
              },
              {
                "Note" : ""
              }
            ],
            "key.doc.full_as_xml" : "<Other><Name>startIndex<\/Name><USR>s:Sl10startIndex0B0Qzvp<\/USR><Declaration>var startIndex: Self.Index { get }<\/Declaration><CommentParts><Abstract><Para>The position of the first element in a nonempty collection.<\/Para><\/Abstract><Discussion><Para>If the collection is empty, <codeVoice>startIndex<\/codeVoice> is equal to <codeVoice>endIndex<\/codeVoice>.<\/Para><Note><Para>This documentation comment was inherited from <codeVoice>Collection<\/codeVoice>.<\/Para><\/Note><\/Discussion><\/CommentParts><\/Other>",
            "key.doc.name" : "startIndex",
            "key.doc.type" : "Other",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>startIndex<\/decl.name>: <decl.var.type><ref.typealias usr=\"s:11FWFramework6FWJSONV5Indexa\">Index<\/ref.typealias><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 232,
            "key.line" : 297,
            "key.name" : "startIndex",
            "key.namelength" : 10,
            "key.nameoffset" : 9190,
            "key.offset" : 9186,
            "key.overrides" : [
              {
                "key.usr" : "s:Sl10startIndex0B0Qzvp"
              }
            ],
            "key.parsed_declaration" : "public var startIndex: Index",
            "key.parsed_scope.end" : 303,
            "key.parsed_scope.start" : 297,
            "key.typename" : "FWIndex<Any>",
            "key.typeusr" : "$s11FWFramework7FWIndexOyypGD",
            "key.usr" : "s:Sl10startIndex0B0Qzvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var endIndex: <Type usr=\"s:11FWFramework6FWJSONV5Indexa\">Index<\/Type> { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 9424
              }
            ],
            "key.bodylength" : 204,
            "key.bodyoffset" : 9452,
            "key.column" : 16,
            "key.decl_lang" : "source.lang.swift",
            "key.doc.declaration" : "var endIndex: Self.Index { get }",
            "key.doc.discussion" : [
              {
                "Para" : "When you need a range that includes the last element of a collection, use the half-open range operator (`..<`) with `endIndex`. The `..<` operator creates a range that doesn’t include the upper bound, so it’s always safe to use with `endIndex`. For example:"
              },
              {
                "CodeListing" : ""
              },
              {
                "Para" : "If the collection is empty, `endIndex` is equal to `startIndex`."
              },
              {
                "Note" : ""
              }
            ],
            "key.doc.full_as_xml" : "<Other><Name>endIndex<\/Name><USR>s:Sl8endIndex0B0Qzvp<\/USR><Declaration>var endIndex: Self.Index { get }<\/Declaration><CommentParts><Abstract><Para>The collection’s “past the end” position—that is, the position one greater than the last valid subscript argument.<\/Para><\/Abstract><Discussion><Para>When you need a range that includes the last element of a collection, use the half-open range operator (<codeVoice>..&lt;<\/codeVoice>) with <codeVoice>endIndex<\/codeVoice>. The <codeVoice>..&lt;<\/codeVoice> operator creates a range that doesn’t include the upper bound, so it’s always safe to use with <codeVoice>endIndex<\/codeVoice>. For example:<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let numbers = [10, 20, 30, 40, 50]]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[if let index = numbers.firstIndex(of: 30) {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    print(numbers[index ..< numbers.endIndex])]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"[30, 40, 50]\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>If the collection is empty, <codeVoice>endIndex<\/codeVoice> is equal to <codeVoice>startIndex<\/codeVoice>.<\/Para><Note><Para>This documentation comment was inherited from <codeVoice>Collection<\/codeVoice>.<\/Para><\/Note><\/Discussion><\/CommentParts><\/Other>",
            "key.doc.name" : "endIndex",
            "key.doc.type" : "Other",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>endIndex<\/decl.name>: <decl.var.type><ref.typealias usr=\"s:11FWFramework6FWJSONV5Indexa\">Index<\/ref.typealias><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 226,
            "key.line" : 305,
            "key.name" : "endIndex",
            "key.namelength" : 8,
            "key.nameoffset" : 9435,
            "key.offset" : 9431,
            "key.overrides" : [
              {
                "key.usr" : "s:Sl8endIndex0B0Qzvp"
              }
            ],
            "key.parsed_declaration" : "public var endIndex: Index",
            "key.parsed_scope.end" : 311,
            "key.parsed_scope.start" : 305,
            "key.typename" : "FWIndex<Any>",
            "key.typeusr" : "$s11FWFramework7FWIndexOyypGD",
            "key.usr" : "s:Sl8endIndex0B0Qzvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func index(after i: <Type usr=\"s:11FWFramework6FWJSONV5Indexa\">Index<\/Type>) -&gt; <Type usr=\"s:11FWFramework6FWJSONV5Indexa\">Index<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 9663
              }
            ],
            "key.bodylength" : 246,
            "key.bodyoffset" : 9707,
            "key.column" : 17,
            "key.decl_lang" : "source.lang.swift",
            "key.doc.declaration" : "func index(after i: Self.Index) -> Self.Index",
            "key.doc.discussion" : [
              {
                "Para" : "The successor of an index must be well defined. For an index `i` into a collection `c`, calling `c.index(after: i)` returns the same index every time."
              },
              {
                "Note" : ""
              }
            ],
            "key.doc.full_as_xml" : "<Function><Name>index(after:)<\/Name><USR>s:Sl5index5after5IndexQzAD_tF<\/USR><Declaration>func index(after i: Self.Index) -&gt; Self.Index<\/Declaration><CommentParts><Abstract><Para>Returns the position immediately after the given index.<\/Para><\/Abstract><Parameters><Parameter><Name>i<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>A valid index of the collection. <codeVoice>i<\/codeVoice> must be less than <codeVoice>endIndex<\/codeVoice>.<\/Para><\/Discussion><\/Parameter><\/Parameters><ResultDiscussion><Para>The index value immediately after <codeVoice>i<\/codeVoice>.<\/Para><\/ResultDiscussion><Discussion><Para>The successor of an index must be well defined. For an index <codeVoice>i<\/codeVoice> into a collection <codeVoice>c<\/codeVoice>, calling <codeVoice>c.index(after: i)<\/codeVoice> returns the same index every time.<\/Para><Note><Para>This documentation comment was inherited from <codeVoice>Collection<\/codeVoice>.<\/Para><\/Note><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.name" : "index(after:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "A valid index of the collection. `i` must be less than `endIndex`."
                  }
                ],
                "name" : "i"
              }
            ],
            "key.doc.result_discussion" : [
              {
                "Para" : "The index value immediately after `i`."
              }
            ],
            "key.doc.type" : "Function",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>index<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>after<\/decl.var.parameter.argument_label> <decl.var.parameter.name>i<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.typealias usr=\"s:11FWFramework6FWJSONV5Indexa\">Index<\/ref.typealias><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:11FWFramework6FWJSONV5Indexa\">Index<\/ref.typealias><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 284,
            "key.line" : 313,
            "key.name" : "index(after:)",
            "key.namelength" : 21,
            "key.nameoffset" : 9675,
            "key.offset" : 9670,
            "key.overrides" : [
              {
                "key.usr" : "s:Sl5index5after5IndexQzAD_tF"
              }
            ],
            "key.parsed_declaration" : "public func index(after i: Index) -> Index",
            "key.parsed_scope.end" : 319,
            "key.parsed_scope.start" : 313,
            "key.substructure" : [

            ],
            "key.typename" : "(FWJSON) -> (FWIndex<Any>) -> FWIndex<Any>",
            "key.typeusr" : "$s5after11FWFramework7FWIndexOyypGAE_tcD",
            "key.usr" : "s:Sl5index5after5IndexQzAD_tF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public subscript(position: <Type usr=\"s:11FWFramework6FWJSONV5Indexa\">Index<\/Type>) -&gt; (<Type usr=\"s:SS\">String<\/Type>, <Type usr=\"s:11FWFramework6FWJSONV\">FWJSON<\/Type>) { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 9960
              }
            ],
            "key.bodylength" : 281,
            "key.bodyoffset" : 10016,
            "key.column" : 12,
            "key.decl_lang" : "source.lang.swift",
            "key.doc.declaration" : "subscript(position: Self.Index) -> Self.Element { get }",
            "key.doc.discussion" : [
              {
                "Para" : "The following example accesses an element of an array through its subscript to print its value:"
              },
              {
                "CodeListing" : ""
              },
              {
                "Para" : "You can subscript a collection with any valid index other than the collection’s end index. The end index refers to the position one past the last element of a collection, so it doesn’t correspond with an element."
              },
              {
                "Complexity" : ""
              },
              {
                "Note" : ""
              }
            ],
            "key.doc.full_as_xml" : "<Other><Name>subscript(_:)<\/Name><USR>s:Sly7ElementQz5IndexQzcip<\/USR><Declaration>subscript(position: Self.Index) -&gt; Self.Element { get }<\/Declaration><CommentParts><Abstract><Para>Accesses the element at the specified position.<\/Para><\/Abstract><Parameters><Parameter><Name>position<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The position of the element to access. <codeVoice>position<\/codeVoice> must be a valid index of the collection that is not equal to the <codeVoice>endIndex<\/codeVoice> property.<\/Para><\/Discussion><\/Parameter><\/Parameters><Discussion><Para>The following example accesses an element of an array through its subscript to print its value:<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[var streets = [\"Adams\", \"Bryant\", \"Channing\", \"Douglas\", \"Evarts\"]]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(streets[1])]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"Bryant\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>You can subscript a collection with any valid index other than the collection’s end index. The end index refers to the position one past the last element of a collection, so it doesn’t correspond with an element.<\/Para><Complexity><Para>O(1)<\/Para><\/Complexity><Note><Para>This documentation comment was inherited from <codeVoice>Collection<\/codeVoice>.<\/Para><\/Note><\/Discussion><\/CommentParts><\/Other>",
            "key.doc.name" : "subscript(_:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "The position of the element to access. `position` must be a valid index of the collection that is not equal to the `endIndex` property."
                  }
                ],
                "name" : "position"
              }
            ],
            "key.doc.type" : "Other",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift",
            "key.fully_annotated_decl" : "<decl.function.subscript><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>subscript<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.name>position<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.typealias usr=\"s:11FWFramework6FWJSONV5Indexa\">Index<\/ref.typealias><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><tuple>(<tuple.element><tuple.element.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/tuple.element.type><\/tuple.element>, <tuple.element><tuple.element.type><ref.struct usr=\"s:11FWFramework6FWJSONV\">FWJSON<\/ref.struct><\/tuple.element.type><\/tuple.element>)<\/tuple><\/decl.function.returntype> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.function.subscript>",
            "key.kind" : "source.lang.swift.decl.function.subscript",
            "key.length" : 331,
            "key.line" : 321,
            "key.name" : "subscript(_:)",
            "key.namelength" : 27,
            "key.nameoffset" : 9967,
            "key.offset" : 9967,
            "key.overrides" : [
              {
                "key.usr" : "s:Sly7ElementQz5IndexQzcip"
              }
            ],
            "key.parsed_declaration" : "public subscript (position: Index) -> (String, FWJSON)",
            "key.parsed_scope.end" : 327,
            "key.parsed_scope.start" : 321,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONV5indexACSi_tc33_CE7FCE31305580F7F6A923B7611B8BA6Llip\">subscript(index:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONV3keyACSS_tc33_CE7FCE31305580F7F6A923B7611B8BA6Llip\">subscript(key:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONV3subAcA19FWJSONSubscriptType_p_tc33_CE7FCE31305580F7F6A923B7611B8BA6Llip\">subscript(sub:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONVyACSayAA19FWJSONSubscriptType_pGcip\">subscript(_:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONVyAcA19FWJSONSubscriptType_pd_tcip\">subscript(_:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "(FWIndex<Any>) -> (String, FWJSON)",
            "key.typeusr" : "$sySS_11FWFramework6FWJSONVtAA7FWIndexOyypGcD",
            "key.usr" : "s:Sly7ElementQz5IndexQzcip"
          }
        ],
        "key.typename" : "FWJSON.Type",
        "key.typeusr" : "$s11FWFramework6FWJSONVmD",
        "key.usr" : "s:11FWFramework6FWJSONV"
      },
      {
        "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
        "key.length" : 17,
        "key.name" : "MARK: - Subscript",
        "key.namelength" : 0,
        "key.nameoffset" : 0,
        "key.offset" : 10305
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public enum FWJSONKey<\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 10390
          }
        ],
        "key.bodylength" : 42,
        "key.bodyoffset" : 10413,
        "key.column" : 13,
        "key.decl_lang" : "source.lang.swift",
        "key.doc.column" : 13,
        "key.doc.comment" : "To mark both String and Int can be used in subscript.",
        "key.doc.declaration" : "public enum FWJSONKey",
        "key.doc.file" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift",
        "key.doc.full_as_xml" : "<Other file=\"\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift\" line=\"335\" column=\"13\"><Name>FWJSONKey<\/Name><USR>s:11FWFramework9FWJSONKeyO<\/USR><Declaration>public enum FWJSONKey<\/Declaration><CommentParts><Abstract><Para>To mark both String and Int can be used in subscript.<\/Para><\/Abstract><\/CommentParts><\/Other>",
        "key.doc.line" : 335,
        "key.doc.name" : "FWJSONKey",
        "key.doc.type" : "Other",
        "key.doclength" : 65,
        "key.docoffset" : 10324,
        "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift",
        "key.fully_annotated_decl" : "<decl.enum><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>enum<\/syntaxtype.keyword> <decl.name>FWJSONKey<\/decl.name><\/decl.enum>",
        "key.kind" : "source.lang.swift.decl.enum",
        "key.length" : 59,
        "key.line" : 335,
        "key.name" : "FWJSONKey",
        "key.namelength" : 9,
        "key.nameoffset" : 10402,
        "key.offset" : 10397,
        "key.parsed_declaration" : "public enum FWJSONKey",
        "key.parsed_scope.end" : 338,
        "key.parsed_scope.start" : 335,
        "key.substructure" : [
          {
            "key.kind" : "source.lang.swift.decl.enumcase",
            "key.length" : 15,
            "key.namelength" : 0,
            "key.nameoffset" : 0,
            "key.offset" : 10418,
            "key.substructure" : [
              {
                "key.accessibility" : "source.lang.swift.accessibility.public",
                "key.annotated_decl" : "<Declaration>case index(<Type usr=\"s:Si\">Int<\/Type>)<\/Declaration>",
                "key.column" : 10,
                "key.decl_lang" : "source.lang.swift",
                "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift",
                "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>index<\/decl.name>(<decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.enumelement>",
                "key.kind" : "source.lang.swift.decl.enumelement",
                "key.length" : 10,
                "key.line" : 336,
                "key.name" : "index(_:)",
                "key.namelength" : 10,
                "key.nameoffset" : 10423,
                "key.offset" : 10423,
                "key.parsed_declaration" : "case index(Int)",
                "key.parsed_scope.end" : 336,
                "key.parsed_scope.start" : 336,
                "key.substructure" : [

                ],
                "key.typename" : "(FWJSONKey.Type) -> (Int) -> FWJSONKey",
                "key.typeusr" : "$sy11FWFramework9FWJSONKeyOSicACmcD",
                "key.usr" : "s:11FWFramework9FWJSONKeyO5indexyACSicACmF"
              }
            ]
          },
          {
            "key.kind" : "source.lang.swift.decl.enumcase",
            "key.length" : 16,
            "key.namelength" : 0,
            "key.nameoffset" : 0,
            "key.offset" : 10438,
            "key.substructure" : [
              {
                "key.accessibility" : "source.lang.swift.accessibility.public",
                "key.annotated_decl" : "<Declaration>case key(<Type usr=\"s:SS\">String<\/Type>)<\/Declaration>",
                "key.column" : 10,
                "key.decl_lang" : "source.lang.swift",
                "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift",
                "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>key<\/decl.name>(<decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.enumelement>",
                "key.kind" : "source.lang.swift.decl.enumelement",
                "key.length" : 11,
                "key.line" : 337,
                "key.name" : "key(_:)",
                "key.namelength" : 11,
                "key.nameoffset" : 10443,
                "key.offset" : 10443,
                "key.parsed_declaration" : "case key(String)",
                "key.parsed_scope.end" : 337,
                "key.parsed_scope.start" : 337,
                "key.substructure" : [

                ],
                "key.typename" : "(FWJSONKey.Type) -> (String) -> FWJSONKey",
                "key.typeusr" : "$sy11FWFramework9FWJSONKeyOSScACmcD",
                "key.usr" : "s:11FWFramework9FWJSONKeyO3keyyACSScACmF"
              }
            ]
          }
        ],
        "key.typename" : "FWJSONKey.Type",
        "key.typeusr" : "$s11FWFramework9FWJSONKeyOmD",
        "key.usr" : "s:11FWFramework9FWJSONKeyO"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public protocol FWJSONSubscriptType<\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 10458
          }
        ],
        "key.bodylength" : 36,
        "key.bodyoffset" : 10495,
        "key.column" : 17,
        "key.decl_lang" : "source.lang.swift",
        "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift",
        "key.fully_annotated_decl" : "<decl.protocol><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>protocol<\/syntaxtype.keyword> <decl.name>FWJSONSubscriptType<\/decl.name><\/decl.protocol>",
        "key.kind" : "source.lang.swift.decl.protocol",
        "key.length" : 67,
        "key.line" : 340,
        "key.name" : "FWJSONSubscriptType",
        "key.namelength" : 19,
        "key.nameoffset" : 10474,
        "key.offset" : 10465,
        "key.parsed_declaration" : "public protocol FWJSONSubscriptType",
        "key.parsed_scope.end" : 342,
        "key.parsed_scope.start" : 340,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>var jsonKey: <Type usr=\"s:11FWFramework9FWJSONKeyO\">FWJSONKey<\/Type> { get }<\/Declaration>",
            "key.bodylength" : 5,
            "key.bodyoffset" : 10524,
            "key.column" : 9,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>jsonKey<\/decl.name>: <decl.var.type><ref.enum usr=\"s:11FWFramework9FWJSONKeyO\">FWJSONKey<\/ref.enum><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 30,
            "key.line" : 341,
            "key.name" : "jsonKey",
            "key.namelength" : 7,
            "key.nameoffset" : 10504,
            "key.offset" : 10500,
            "key.parsed_declaration" : "var jsonKey: FWJSONKey",
            "key.parsed_scope.end" : 341,
            "key.parsed_scope.start" : 341,
            "key.typename" : "FWJSONKey",
            "key.typeusr" : "$s11FWFramework9FWJSONKeyOD",
            "key.usr" : "s:11FWFramework19FWJSONSubscriptTypeP7jsonKeyAA9FWJSONKeyOvp"
          }
        ],
        "key.typename" : "FWJSONSubscriptType.Protocol",
        "key.typeusr" : "$s11FWFramework19FWJSONSubscriptType_pmD",
        "key.usr" : "s:11FWFramework19FWJSONSubscriptTypeP"
      },
      {
        "key.annotated_decl" : "<Declaration>@frozen struct Int : <Type usr=\"s:s17FixedWidthIntegerP\">FixedWidthInteger<\/Type>, <Type usr=\"s:SZ\">SignedInteger<\/Type>, <Type usr=\"s:s35_ExpressibleByBuiltinIntegerLiteralP\">_ExpressibleByBuiltinIntegerLiteral<\/Type><\/Declaration>",
        "key.bodylength" : 80,
        "key.bodyoffset" : 10570,
        "key.decl_lang" : "source.lang.swift",
        "key.doc.declaration" : "@frozen struct Int : FixedWidthInteger, SignedInteger, _ExpressibleByBuiltinIntegerLiteral",
        "key.doc.discussion" : [
          {
            "Para" : "On 32-bit platforms, `Int` is the same size as `Int32`, and on 64-bit platforms, `Int` is the same size as `Int64`."
          }
        ],
        "key.doc.full_as_xml" : "<Class><Name>Int<\/Name><USR>s:Si<\/USR><Declaration>@frozen struct Int : FixedWidthInteger, SignedInteger, _ExpressibleByBuiltinIntegerLiteral<\/Declaration><CommentParts><Abstract><Para>A signed integer value type.<\/Para><\/Abstract><Discussion><Para>On 32-bit platforms, <codeVoice>Int<\/codeVoice> is the same size as <codeVoice>Int32<\/codeVoice>, and on 64-bit platforms, <codeVoice>Int<\/codeVoice> is the same size as <codeVoice>Int64<\/codeVoice>.<\/Para><\/Discussion><\/CommentParts><\/Class>",
        "key.doc.name" : "Int",
        "key.doc.type" : "Class",
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 19,
            "key.offset" : 10549
          }
        ],
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@frozen<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>Int<\/decl.name> : <ref.protocol usr=\"s:s17FixedWidthIntegerP\">FixedWidthInteger<\/ref.protocol>, <ref.protocol usr=\"s:SZ\">SignedInteger<\/ref.protocol>, <ref.protocol usr=\"s:s35_ExpressibleByBuiltinIntegerLiteralP\">_ExpressibleByBuiltinIntegerLiteral<\/ref.protocol><\/decl.struct>",
        "key.groupname" : "Math\/Integers",
        "key.inheritedtypes" : [
          {
            "key.name" : "FWJSONSubscriptType"
          }
        ],
        "key.is_system" : true,
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 117,
        "key.modulename" : "Swift",
        "key.name" : "Int",
        "key.namelength" : 3,
        "key.nameoffset" : 10544,
        "key.offset" : 10534,
        "key.parsed_declaration" : "extension Int: FWJSONSubscriptType",
        "key.parsed_scope.end" : 348,
        "key.parsed_scope.start" : 344,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var jsonKey: <Type usr=\"s:11FWFramework9FWJSONKeyO\">FWJSONKey<\/Type> { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 10575
              }
            ],
            "key.bodylength" : 42,
            "key.bodyoffset" : 10606,
            "key.column" : 16,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>jsonKey<\/decl.name>: <decl.var.type><ref.enum usr=\"s:11FWFramework9FWJSONKeyO\">FWJSONKey<\/ref.enum><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.groupname" : "Math\/Integers",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 67,
            "key.line" : 345,
            "key.name" : "jsonKey",
            "key.namelength" : 7,
            "key.nameoffset" : 10586,
            "key.offset" : 10582,
            "key.overrides" : [
              {
                "key.usr" : "s:11FWFramework19FWJSONSubscriptTypeP7jsonKeyAA9FWJSONKeyOvp"
              }
            ],
            "key.parsed_declaration" : "public var jsonKey: FWJSONKey",
            "key.parsed_scope.end" : 347,
            "key.parsed_scope.start" : 345,
            "key.typename" : "FWJSONKey",
            "key.typeusr" : "$s11FWFramework9FWJSONKeyOD",
            "key.usr" : "s:Si11FWFrameworkE7jsonKeyAA9FWJSONKeyOvp"
          }
        ],
        "key.typename" : "Int.Type",
        "key.typeusr" : "$sSimD",
        "key.usr" : "s:Si"
      },
      {
        "key.annotated_decl" : "<Declaration>@frozen struct String<\/Declaration>",
        "key.bodylength" : 78,
        "key.bodyoffset" : 10692,
        "key.decl_lang" : "source.lang.swift",
        "key.doc.declaration" : "@frozen struct String",
        "key.doc.discussion" : [
          {
            "Para" : "A string is a series of characters, such as `\"Swift\"`, that forms a collection. Strings in Swift are Unicode correct and locale insensitive, and are designed to be efficient. The `String` type bridges with the Objective-C class `NSString` and offers interoperability with C functions that works with strings."
          },
          {
            "Para" : "You can create new strings using string literals or string interpolations. A  is a series of characters enclosed in quotes."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : " are string literals that evaluate any included expressions and convert the results to string form. String interpolations give you an easy way to build a string from multiple pieces. Wrap each expression in a string interpolation in parentheses, prefixed by a backslash."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "Combine strings using the concatenation operator (`+`)."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "Multiline string literals are enclosed in three double quotation marks (`\"\"\"`), with each delimiter on its own line. Indentation is stripped from each line of a multiline string literal to match the indentation of the closing delimiter."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "Strings always have value semantics. Modifying a copy of a string leaves the original unaffected."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "Comparing strings for equality using the equal-to operator (`==`) or a relational operator (like `<` or `>=`) is always performed using Unicode canonical representation. As a result, different representations of a string compare as being equal."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "The Unicode scalar value `\"\\u{301}\"` modifies the preceding character to include an accent, so `\"e\\u{301}\"` has the same canonical representation as the single Unicode scalar value `\"é\"`."
          },
          {
            "Para" : "Basic string operations are not sensitive to locale settings, ensuring that string comparisons and other operations always have a single, stable result, allowing strings to be used as keys in `Dictionary` instances and for other purposes."
          },
          {
            "Para" : "A string is a collection of , which approximate human-readable characters. Many individual characters, such as “é”, “김”, and “🇮🇳”, can be made up of multiple Unicode scalar values. These scalar values are combined by Unicode’s boundary algorithms into extended grapheme clusters, represented by the Swift `Character` type. Each element of a string is represented by a `Character` instance."
          },
          {
            "Para" : "For example, to retrieve the first word of a longer string, you can search for a space and then create a substring from a prefix of the string up to that point:"
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "The `firstName` constant is an instance of the `Substring` type—a type that represents substrings of a string while sharing the original string’s storage. Substrings present the same interface as strings."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "If you need to access the contents of a string as encoded in different Unicode encodings, use one of the string’s `unicodeScalars`, `utf16`, or `utf8` properties. Each property provides access to a view of the string as a series of code units, each encoded in a different Unicode encoding."
          },
          {
            "Para" : "To demonstrate the different views available for every string, the following examples use this `String` instance:"
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "The `cafe` string is a collection of the nine characters that are visible when the string is displayed."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "A string’s `unicodeScalars` property is a collection of Unicode scalar values, the 21-bit codes that are the basic unit of Unicode. Each scalar value is represented by a `Unicode.Scalar` instance and is equivalent to a UTF-32 code unit."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "The `unicodeScalars` view’s elements comprise each Unicode scalar value in the `cafe` string. In particular, because `cafe` was declared using the decomposed form of the `\"é\"` character, `unicodeScalars` contains the scalar values for both the letter `\"e\"` (101) and the accent character `\"´\"` (769)."
          },
          {
            "Para" : "A string’s `utf16` property is a collection of UTF-16 code units, the 16-bit encoding form of the string’s Unicode scalar values. Each code unit is stored as a `UInt16` instance."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "The elements of the `utf16` view are the code units for the string when encoded in UTF-16. These elements match those accessed through indexed `NSString` APIs."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "A string’s `utf8` property is a collection of UTF-8 code units, the 8-bit encoding form of the string’s Unicode scalar values. Each code unit is stored as a `UInt8` instance."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "The elements of the `utf8` view are the code units for the string when encoded in UTF-8. This representation matches the one used when `String` instances are passed to C APIs."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "When you need to know the length of a string, you must first consider what you’ll use the length for. Are you measuring the number of characters that will be displayed on the screen, or are you measuring the amount of storage needed for the string in a particular encoding? A single string can have greatly differing lengths when measured by its different views."
          },
          {
            "Para" : "For example, an ASCII character like the capital letter  is represented by a single element in each of its four views. The Unicode scalar value of  is `65`, which is small enough to fit in a single code unit in both UTF-16 and UTF-8."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "On the other hand, an emoji flag character is constructed from a pair of Unicode scalar values, like `\"\\u{1F1F5}\"` and `\"\\u{1F1F7}\"`. Each of these scalar values, in turn, is too large to fit into a single UTF-16 or UTF-8 code unit. As a result, each view of the string `\"🇵🇷\"` reports a different length."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "To check whether a string is empty, use its `isEmpty` property instead of comparing the length of one of the views to `0`. Unlike with `isEmpty`, calculating a view’s `count` property requires iterating through the elements of the string."
          },
          {
            "Para" : "To find individual elements of a string, use the appropriate view for your task. For example, to retrieve the first word of a longer string, you can search the string for a space and then create a new string from a prefix of the string up to that point."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "Strings and their views share indices, so you can access the UTF-8 view of the `name` string using the same `firstSpace` index."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "Note that an index into one view may not have an exact corresponding position in another view. For example, the `flag` string declared above comprises a single character, but is composed of eight code units when encoded as UTF-8. The following code creates constants for the first and second positions in the `flag.utf8` view. Accessing the `utf8` view with these indices yields the first and second code UTF-8 units."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "When used to access the elements of the `flag` string itself, however, the `secondCodeUnit` index does not correspond to the position of a specific character. Instead of only accessing the specific UTF-8 code unit, that index is treated as the position of the character at the index’s encoded offset. In the case of `secondCodeUnit`, that character is still the flag itself."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "If you need to validate that an index from one string’s view corresponds with an exact position in another view, use the index’s `samePosition(in:)` method or the `init(_:within:)` initializer."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "Although strings in Swift have value semantics, strings use a copy-on-write strategy to store their data in a buffer. This buffer can then be shared by different copies of a string. A string’s data is only copied lazily, upon mutation, when more than one string instance is using the same buffer. Therefore, the first in any sequence of mutating operations may cost O() time and space."
          },
          {
            "Para" : "When a string’s contiguous storage fills up, a new buffer must be allocated and data must be moved to the new storage. String buffers use an exponential growth strategy that makes appending to a string a constant time operation when averaged over many append operations."
          },
          {
            "Para" : "Any `String` instance can be bridged to `NSString` using the type-cast operator (`as`), and any `String` instance that originates in Objective-C may use an `NSString` instance as its storage. Because any arbitrary subclass of `NSString` can become a `String` instance, there are no guarantees about representation or efficiency when a `String` instance is backed by `NSString` storage. Because `NSString` is immutable, it is just as though the storage was shared by a copy. The first in any sequence of mutating operations causes elements to be copied into unique, contiguous storage which may cost O() time and space, where  is the length of the string’s encoded representation (or more, if the underlying `NSString` has unusual performance characteristics)."
          },
          {
            "Para" : "For more information about the Unicode terms used in this discussion, see the . In particular, this discussion mentions , , and ."
          }
        ],
        "key.doc.full_as_xml" : "<Class><Name>String<\/Name><USR>s:SS<\/USR><Declaration>@frozen struct String<\/Declaration><CommentParts><Abstract><Para>A Unicode string value that is a collection of characters.<\/Para><\/Abstract><Discussion><Para>A string is a series of characters, such as <codeVoice>&quot;Swift&quot;<\/codeVoice>, that forms a collection. Strings in Swift are Unicode correct and locale insensitive, and are designed to be efficient. The <codeVoice>String<\/codeVoice> type bridges with the Objective-C class <codeVoice>NSString<\/codeVoice> and offers interoperability with C functions that works with strings.<\/Para><Para>You can create new strings using string literals or string interpolations. A <emphasis>string literal<\/emphasis> is a series of characters enclosed in quotes.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let greeting = \"Welcome!\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para><emphasis>String interpolations<\/emphasis> are string literals that evaluate any included expressions and convert the results to string form. String interpolations give you an easy way to build a string from multiple pieces. Wrap each expression in a string interpolation in parentheses, prefixed by a backslash.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let name = \"Rosa\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let personalizedGreeting = \"Welcome, \\(name)!\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ personalizedGreeting == \"Welcome, Rosa!\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let price = 2]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let number = 3]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let cookiePrice = \"\\(number) cookies: $\\(price * number).\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ cookiePrice == \"3 cookies: $6.\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>Combine strings using the concatenation operator (<codeVoice>+<\/codeVoice>).<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let longerGreeting = greeting + \" We're glad you're here!\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ longerGreeting == \"Welcome! We're glad you're here!\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>Multiline string literals are enclosed in three double quotation marks (<codeVoice>&quot;&quot;&quot;<\/codeVoice>), with each delimiter on its own line. Indentation is stripped from each line of a multiline string literal to match the indentation of the closing delimiter.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let banner = \"\"\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[          __,]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[         (           o  \/) _\/_]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[          `.  , , , ,  \/\/  \/]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        (___)(_(_\/_(_ \/\/_ (__]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[                     \/)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[                    (\/]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        \"\"\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><rawHTML><![CDATA[<h1>]]><\/rawHTML>Modifying and Comparing Strings<rawHTML><![CDATA[<\/h1>]]><\/rawHTML><Para>Strings always have value semantics. Modifying a copy of a string leaves the original unaffected.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[var otherGreeting = greeting]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[otherGreeting += \" Have a nice time!\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ otherGreeting == \"Welcome! Have a nice time!\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(greeting)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"Welcome!\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>Comparing strings for equality using the equal-to operator (<codeVoice>==<\/codeVoice>) or a relational operator (like <codeVoice>&lt;<\/codeVoice> or <codeVoice>&gt;=<\/codeVoice>) is always performed using Unicode canonical representation. As a result, different representations of a string compare as being equal.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let cafe1 = \"Cafe\\u{301}\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let cafe2 = \"Café\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(cafe1 == cafe2)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"true\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>The Unicode scalar value <codeVoice>&quot;\\u{301}&quot;<\/codeVoice> modifies the preceding character to include an accent, so <codeVoice>&quot;e\\u{301}&quot;<\/codeVoice> has the same canonical representation as the single Unicode scalar value <codeVoice>&quot;é&quot;<\/codeVoice>.<\/Para><Para>Basic string operations are not sensitive to locale settings, ensuring that string comparisons and other operations always have a single, stable result, allowing strings to be used as keys in <codeVoice>Dictionary<\/codeVoice> instances and for other purposes.<\/Para><rawHTML><![CDATA[<h1>]]><\/rawHTML>Accessing String Elements<rawHTML><![CDATA[<\/h1>]]><\/rawHTML><Para>A string is a collection of <emphasis>extended grapheme clusters<\/emphasis>, which approximate human-readable characters. Many individual characters, such as “é”, “김”, and “🇮🇳”, can be made up of multiple Unicode scalar values. These scalar values are combined by Unicode’s boundary algorithms into extended grapheme clusters, represented by the Swift <codeVoice>Character<\/codeVoice> type. Each element of a string is represented by a <codeVoice>Character<\/codeVoice> instance.<\/Para><Para>For example, to retrieve the first word of a longer string, you can search for a space and then create a substring from a prefix of the string up to that point:<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let name = \"Marie Curie\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let firstSpace = name.firstIndex(of: \" \") ?? name.endIndex]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let firstName = name[..<firstSpace]]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ firstName == \"Marie\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>The <codeVoice>firstName<\/codeVoice> constant is an instance of the <codeVoice>Substring<\/codeVoice> type—a type that represents substrings of a string while sharing the original string’s storage. Substrings present the same interface as strings.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[print(\"\\(name)'s first name has \\(firstName.count) letters.\")]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"Marie Curie's first name has 5 letters.\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><rawHTML><![CDATA[<h1>]]><\/rawHTML>Accessing a String’s Unicode Representation<rawHTML><![CDATA[<\/h1>]]><\/rawHTML><Para>If you need to access the contents of a string as encoded in different Unicode encodings, use one of the string’s <codeVoice>unicodeScalars<\/codeVoice>, <codeVoice>utf16<\/codeVoice>, or <codeVoice>utf8<\/codeVoice> properties. Each property provides access to a view of the string as a series of code units, each encoded in a different Unicode encoding.<\/Para><Para>To demonstrate the different views available for every string, the following examples use this <codeVoice>String<\/codeVoice> instance:<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let cafe = \"Cafe\\u{301} du 🌍\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(cafe)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"Café du 🌍\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>The <codeVoice>cafe<\/codeVoice> string is a collection of the nine characters that are visible when the string is displayed.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[print(cafe.count)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"9\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(Array(cafe))]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"[\"C\", \"a\", \"f\", \"é\", \" \", \"d\", \"u\", \" \", \"🌍\"]\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><rawHTML><![CDATA[<h2>]]><\/rawHTML>Unicode Scalar View<rawHTML><![CDATA[<\/h2>]]><\/rawHTML><Para>A string’s <codeVoice>unicodeScalars<\/codeVoice> property is a collection of Unicode scalar values, the 21-bit codes that are the basic unit of Unicode. Each scalar value is represented by a <codeVoice>Unicode.Scalar<\/codeVoice> instance and is equivalent to a UTF-32 code unit.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[print(cafe.unicodeScalars.count)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"10\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(Array(cafe.unicodeScalars))]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"[\"C\", \"a\", \"f\", \"e\", \"\\u{0301}\", \" \", \"d\", \"u\", \" \", \"\\u{0001F30D}\"]\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(cafe.unicodeScalars.map { $0.value })]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"[67, 97, 102, 101, 769, 32, 100, 117, 32, 127757]\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>The <codeVoice>unicodeScalars<\/codeVoice> view’s elements comprise each Unicode scalar value in the <codeVoice>cafe<\/codeVoice> string. In particular, because <codeVoice>cafe<\/codeVoice> was declared using the decomposed form of the <codeVoice>&quot;é&quot;<\/codeVoice> character, <codeVoice>unicodeScalars<\/codeVoice> contains the scalar values for both the letter <codeVoice>&quot;e&quot;<\/codeVoice> (101) and the accent character <codeVoice>&quot;´&quot;<\/codeVoice> (769).<\/Para><rawHTML><![CDATA[<h2>]]><\/rawHTML>UTF-16 View<rawHTML><![CDATA[<\/h2>]]><\/rawHTML><Para>A string’s <codeVoice>utf16<\/codeVoice> property is a collection of UTF-16 code units, the 16-bit encoding form of the string’s Unicode scalar values. Each code unit is stored as a <codeVoice>UInt16<\/codeVoice> instance.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[print(cafe.utf16.count)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"11\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(Array(cafe.utf16))]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"[67, 97, 102, 101, 769, 32, 100, 117, 32, 55356, 57101]\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>The elements of the <codeVoice>utf16<\/codeVoice> view are the code units for the string when encoded in UTF-16. These elements match those accessed through indexed <codeVoice>NSString<\/codeVoice> APIs.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let nscafe = cafe as NSString]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(nscafe.length)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"11\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(nscafe.character(at: 3))]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"101\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><rawHTML><![CDATA[<h2>]]><\/rawHTML>UTF-8 View<rawHTML><![CDATA[<\/h2>]]><\/rawHTML><Para>A string’s <codeVoice>utf8<\/codeVoice> property is a collection of UTF-8 code units, the 8-bit encoding form of the string’s Unicode scalar values. Each code unit is stored as a <codeVoice>UInt8<\/codeVoice> instance.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[print(cafe.utf8.count)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"14\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(Array(cafe.utf8))]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"[67, 97, 102, 101, 204, 129, 32, 100, 117, 32, 240, 159, 140, 141]\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>The elements of the <codeVoice>utf8<\/codeVoice> view are the code units for the string when encoded in UTF-8. This representation matches the one used when <codeVoice>String<\/codeVoice> instances are passed to C APIs.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let cLength = strlen(cafe)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(cLength)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"14\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><rawHTML><![CDATA[<h1>]]><\/rawHTML>Measuring the Length of a String<rawHTML><![CDATA[<\/h1>]]><\/rawHTML><Para>When you need to know the length of a string, you must first consider what you’ll use the length for. Are you measuring the number of characters that will be displayed on the screen, or are you measuring the amount of storage needed for the string in a particular encoding? A single string can have greatly differing lengths when measured by its different views.<\/Para><Para>For example, an ASCII character like the capital letter <emphasis>A<\/emphasis> is represented by a single element in each of its four views. The Unicode scalar value of <emphasis>A<\/emphasis> is <codeVoice>65<\/codeVoice>, which is small enough to fit in a single code unit in both UTF-16 and UTF-8.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let capitalA = \"A\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(capitalA.count)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"1\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(capitalA.unicodeScalars.count)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"1\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(capitalA.utf16.count)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"1\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(capitalA.utf8.count)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"1\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>On the other hand, an emoji flag character is constructed from a pair of Unicode scalar values, like <codeVoice>&quot;\\u{1F1F5}&quot;<\/codeVoice> and <codeVoice>&quot;\\u{1F1F7}&quot;<\/codeVoice>. Each of these scalar values, in turn, is too large to fit into a single UTF-16 or UTF-8 code unit. As a result, each view of the string <codeVoice>&quot;🇵🇷&quot;<\/codeVoice> reports a different length.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let flag = \"🇵🇷\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(flag.count)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"1\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(flag.unicodeScalars.count)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"2\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(flag.utf16.count)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"4\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(flag.utf8.count)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"8\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>To check whether a string is empty, use its <codeVoice>isEmpty<\/codeVoice> property instead of comparing the length of one of the views to <codeVoice>0<\/codeVoice>. Unlike with <codeVoice>isEmpty<\/codeVoice>, calculating a view’s <codeVoice>count<\/codeVoice> property requires iterating through the elements of the string.<\/Para><rawHTML><![CDATA[<h1>]]><\/rawHTML>Accessing String View Elements<rawHTML><![CDATA[<\/h1>]]><\/rawHTML><Para>To find individual elements of a string, use the appropriate view for your task. For example, to retrieve the first word of a longer string, you can search the string for a space and then create a new string from a prefix of the string up to that point.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let name = \"Marie Curie\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let firstSpace = name.firstIndex(of: \" \") ?? name.endIndex]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let firstName = name[..<firstSpace]]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(firstName)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"Marie\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>Strings and their views share indices, so you can access the UTF-8 view of the <codeVoice>name<\/codeVoice> string using the same <codeVoice>firstSpace<\/codeVoice> index.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[print(Array(name.utf8[..<firstSpace]))]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"[77, 97, 114, 105, 101]\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>Note that an index into one view may not have an exact corresponding position in another view. For example, the <codeVoice>flag<\/codeVoice> string declared above comprises a single character, but is composed of eight code units when encoded as UTF-8. The following code creates constants for the first and second positions in the <codeVoice>flag.utf8<\/codeVoice> view. Accessing the <codeVoice>utf8<\/codeVoice> view with these indices yields the first and second code UTF-8 units.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let firstCodeUnit = flag.startIndex]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let secondCodeUnit = flag.utf8.index(after: firstCodeUnit)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ flag.utf8[firstCodeUnit] == 240]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ flag.utf8[secondCodeUnit] == 159]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>When used to access the elements of the <codeVoice>flag<\/codeVoice> string itself, however, the <codeVoice>secondCodeUnit<\/codeVoice> index does not correspond to the position of a specific character. Instead of only accessing the specific UTF-8 code unit, that index is treated as the position of the character at the index’s encoded offset. In the case of <codeVoice>secondCodeUnit<\/codeVoice>, that character is still the flag itself.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[\/\/ flag[firstCodeUnit] == \"🇵🇷\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ flag[secondCodeUnit] == \"🇵🇷\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>If you need to validate that an index from one string’s view corresponds with an exact position in another view, use the index’s <codeVoice>samePosition(in:)<\/codeVoice> method or the <codeVoice>init(_:within:)<\/codeVoice> initializer.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[if let exactIndex = secondCodeUnit.samePosition(in: flag) {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    print(flag[exactIndex])]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[} else {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    print(\"No exact match for this position.\")]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"No exact match for this position.\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><rawHTML><![CDATA[<h1>]]><\/rawHTML>Performance Optimizations<rawHTML><![CDATA[<\/h1>]]><\/rawHTML><Para>Although strings in Swift have value semantics, strings use a copy-on-write strategy to store their data in a buffer. This buffer can then be shared by different copies of a string. A string’s data is only copied lazily, upon mutation, when more than one string instance is using the same buffer. Therefore, the first in any sequence of mutating operations may cost O(<emphasis>n<\/emphasis>) time and space.<\/Para><Para>When a string’s contiguous storage fills up, a new buffer must be allocated and data must be moved to the new storage. String buffers use an exponential growth strategy that makes appending to a string a constant time operation when averaged over many append operations.<\/Para><rawHTML><![CDATA[<h1>]]><\/rawHTML>Bridging Between String and NSString<rawHTML><![CDATA[<\/h1>]]><\/rawHTML><Para>Any <codeVoice>String<\/codeVoice> instance can be bridged to <codeVoice>NSString<\/codeVoice> using the type-cast operator (<codeVoice>as<\/codeVoice>), and any <codeVoice>String<\/codeVoice> instance that originates in Objective-C may use an <codeVoice>NSString<\/codeVoice> instance as its storage. Because any arbitrary subclass of <codeVoice>NSString<\/codeVoice> can become a <codeVoice>String<\/codeVoice> instance, there are no guarantees about representation or efficiency when a <codeVoice>String<\/codeVoice> instance is backed by <codeVoice>NSString<\/codeVoice> storage. Because <codeVoice>NSString<\/codeVoice> is immutable, it is just as though the storage was shared by a copy. The first in any sequence of mutating operations causes elements to be copied into unique, contiguous storage which may cost O(<emphasis>n<\/emphasis>) time and space, where <emphasis>n<\/emphasis> is the length of the string’s encoded representation (or more, if the underlying <codeVoice>NSString<\/codeVoice> has unusual performance characteristics).<\/Para><Para>For more information about the Unicode terms used in this discussion, see the <Link href=\"http:\/\/www.unicode.org\/glossary\/\">Unicode.org glossary<\/Link>. In particular, this discussion mentions <Link href=\"http:\/\/www.unicode.org\/glossary\/#extended_grapheme_cluster\">extended grapheme clusters<\/Link>, <Link href=\"http:\/\/www.unicode.org\/glossary\/#unicode_scalar_value\">Unicode scalar values<\/Link>, and <Link href=\"http:\/\/www.unicode.org\/glossary\/#canonical_equivalent\">canonical equivalence<\/Link>.<\/Para><\/Discussion><\/CommentParts><\/Class>",
        "key.doc.name" : "String",
        "key.doc.type" : "Class",
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 19,
            "key.offset" : 10671
          }
        ],
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@frozen<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>String<\/decl.name><\/decl.struct>",
        "key.groupname" : "String",
        "key.inheritedtypes" : [
          {
            "key.name" : "FWJSONSubscriptType"
          }
        ],
        "key.is_system" : true,
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 118,
        "key.modulename" : "Swift",
        "key.name" : "String",
        "key.namelength" : 6,
        "key.nameoffset" : 10663,
        "key.offset" : 10653,
        "key.parsed_declaration" : "extension String: FWJSONSubscriptType",
        "key.parsed_scope.end" : 354,
        "key.parsed_scope.start" : 350,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var jsonKey: <Type usr=\"s:11FWFramework9FWJSONKeyO\">FWJSONKey<\/Type> { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 10697
              }
            ],
            "key.bodylength" : 40,
            "key.bodyoffset" : 10728,
            "key.column" : 16,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>jsonKey<\/decl.name>: <decl.var.type><ref.enum usr=\"s:11FWFramework9FWJSONKeyO\">FWJSONKey<\/ref.enum><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.groupname" : "String",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 65,
            "key.line" : 351,
            "key.name" : "jsonKey",
            "key.namelength" : 7,
            "key.nameoffset" : 10708,
            "key.offset" : 10704,
            "key.overrides" : [
              {
                "key.usr" : "s:11FWFramework19FWJSONSubscriptTypeP7jsonKeyAA9FWJSONKeyOvp"
              }
            ],
            "key.parsed_declaration" : "public var jsonKey: FWJSONKey",
            "key.parsed_scope.end" : 353,
            "key.parsed_scope.start" : 351,
            "key.typename" : "FWJSONKey",
            "key.typeusr" : "$s11FWFramework9FWJSONKeyOD",
            "key.usr" : "s:SS11FWFrameworkE7jsonKeyAA9FWJSONKeyOvp"
          }
        ],
        "key.typename" : "String.Type",
        "key.typeusr" : "$sSSmD",
        "key.usr" : "s:SS"
      },
      {
        "key.annotated_decl" : "<Declaration>public struct FWJSON<\/Declaration>",
        "key.bodylength" : 3636,
        "key.bodyoffset" : 10791,
        "key.column" : 15,
        "key.decl_lang" : "source.lang.swift",
        "key.doc.column" : 15,
        "key.doc.declaration" : "public struct FWJSON",
        "key.doc.discussion" : [
          {
            "List-Bullet" : ""
          }
        ],
        "key.doc.file" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift\" line=\"73\" column=\"15\"><Name>FWJSON<\/Name><USR>s:11FWFramework6FWJSONV<\/USR><Declaration>public struct FWJSON<\/Declaration><CommentParts><Abstract><Para>FWJSON<\/Para><\/Abstract><Discussion><List-Bullet><Item><Para>see: <Link href=\"https:\/\/github.com\/SwiftyJSON\/SwiftyJSON\">SwiftyJSON<\/Link><\/Para><\/Item><\/List-Bullet><\/Discussion><\/CommentParts><\/Class>",
        "key.doc.line" : 73,
        "key.doc.name" : "FWJSON",
        "key.doc.type" : "Class",
        "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift",
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>FWJSON<\/decl.name><\/decl.struct>",
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 3655,
        "key.line" : 73,
        "key.name" : "FWJSON",
        "key.namelength" : 6,
        "key.nameoffset" : 10783,
        "key.offset" : 10773,
        "key.parsed_declaration" : "extension FWJSON",
        "key.parsed_scope.end" : 474,
        "key.parsed_scope.start" : 356,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.fileprivate",
            "key.annotated_decl" : "<Declaration>fileprivate subscript(index index: <Type usr=\"s:Si\">Int<\/Type>) -&gt; <Type usr=\"s:11FWFramework6FWJSONV\">FWJSON<\/Type> { get set }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.fileprivate",
                "key.length" : 11,
                "key.offset" : 10911
              }
            ],
            "key.bodylength" : 652,
            "key.bodyoffset" : 10962,
            "key.column" : 17,
            "key.decl_lang" : "source.lang.swift",
            "key.doc.column" : 17,
            "key.doc.comment" : "If `type` is `.array`, return json whose object is `array[index]`, otherwise return null json with error.",
            "key.doc.declaration" : "fileprivate subscript(index index: Int) -> FWJSON { get set }",
            "key.doc.file" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift\" line=\"359\" column=\"17\"><Name>subscript(index:)<\/Name><USR>s:11FWFramework6FWJSONV5indexACSi_tc33_CE7FCE31305580F7F6A923B7611B8BA6Llip<\/USR><Declaration>fileprivate subscript(index index: Int) -&gt; FWJSON { get set }<\/Declaration><CommentParts><Abstract><Para>If <codeVoice>type<\/codeVoice> is <codeVoice>.array<\/codeVoice>, return json whose object is <codeVoice>array[index]<\/codeVoice>, otherwise return null json with error.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 359,
            "key.doc.name" : "subscript(index:)",
            "key.doc.type" : "Other",
            "key.doclength" : 110,
            "key.docoffset" : 10797,
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift",
            "key.fully_annotated_decl" : "<decl.function.subscript><syntaxtype.keyword>fileprivate<\/syntaxtype.keyword> <syntaxtype.keyword>subscript<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>index<\/decl.var.parameter.argument_label> <decl.var.parameter.name>index<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:11FWFramework6FWJSONV\">FWJSON<\/ref.struct><\/decl.function.returntype> { <syntaxtype.keyword>get<\/syntaxtype.keyword> <syntaxtype.keyword>set<\/syntaxtype.keyword> }<\/decl.function.subscript>",
            "key.kind" : "source.lang.swift.decl.function.subscript",
            "key.length" : 692,
            "key.line" : 359,
            "key.name" : "subscript(index:)",
            "key.namelength" : 27,
            "key.nameoffset" : 10923,
            "key.offset" : 10923,
            "key.parsed_declaration" : "fileprivate subscript(index index: Int) -> FWJSON",
            "key.parsed_scope.end" : 380,
            "key.parsed_scope.start" : 359,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONVySS_ACtAA7FWIndexOyypGcip\">subscript(_:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONV3keyACSS_tc33_CE7FCE31305580F7F6A923B7611B8BA6Llip\">subscript(key:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONV3subAcA19FWJSONSubscriptType_p_tc33_CE7FCE31305580F7F6A923B7611B8BA6Llip\">subscript(sub:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONVyACSayAA19FWJSONSubscriptType_pGcip\">subscript(_:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONVyAcA19FWJSONSubscriptType_pd_tcip\">subscript(_:)<\/RelatedName>"
              }
            ],
            "key.setter_accessibility" : "source.lang.swift.accessibility.fileprivate",
            "key.substructure" : [

            ],
            "key.typename" : "(Int) -> FWJSON",
            "key.typeusr" : "$s5index11FWFramework6FWJSONVSi_tcD",
            "key.usr" : "s:11FWFramework6FWJSONV5indexACSi_tc33_CE7FCE31305580F7F6A923B7611B8BA6Llip"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.fileprivate",
            "key.annotated_decl" : "<Declaration>fileprivate subscript(key key: <Type usr=\"s:SS\">String<\/Type>) -&gt; <Type usr=\"s:11FWFramework6FWJSONV\">FWJSON<\/Type> { get set }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.fileprivate",
                "key.length" : 11,
                "key.offset" : 11744
              }
            ],
            "key.bodylength" : 545,
            "key.bodyoffset" : 11794,
            "key.column" : 17,
            "key.decl_lang" : "source.lang.swift",
            "key.doc.column" : 17,
            "key.doc.comment" : "If `type` is `.dictionary`, return json whose object is `dictionary[key]` , otherwise return null json with error.",
            "key.doc.declaration" : "fileprivate subscript(key key: String) -> FWJSON { get set }",
            "key.doc.file" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift\" line=\"383\" column=\"17\"><Name>subscript(key:)<\/Name><USR>s:11FWFramework6FWJSONV3keyACSS_tc33_CE7FCE31305580F7F6A923B7611B8BA6Llip<\/USR><Declaration>fileprivate subscript(key key: String) -&gt; FWJSON { get set }<\/Declaration><CommentParts><Abstract><Para>If <codeVoice>type<\/codeVoice> is <codeVoice>.dictionary<\/codeVoice>, return json whose object is <codeVoice>dictionary[key]<\/codeVoice> , otherwise return null json with error.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 383,
            "key.doc.name" : "subscript(key:)",
            "key.doc.type" : "Other",
            "key.doclength" : 119,
            "key.docoffset" : 11621,
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift",
            "key.fully_annotated_decl" : "<decl.function.subscript><syntaxtype.keyword>fileprivate<\/syntaxtype.keyword> <syntaxtype.keyword>subscript<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>key<\/decl.var.parameter.argument_label> <decl.var.parameter.name>key<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:11FWFramework6FWJSONV\">FWJSON<\/ref.struct><\/decl.function.returntype> { <syntaxtype.keyword>get<\/syntaxtype.keyword> <syntaxtype.keyword>set<\/syntaxtype.keyword> }<\/decl.function.subscript>",
            "key.kind" : "source.lang.swift.decl.function.subscript",
            "key.length" : 584,
            "key.line" : 383,
            "key.name" : "subscript(key:)",
            "key.namelength" : 26,
            "key.nameoffset" : 11756,
            "key.offset" : 11756,
            "key.parsed_declaration" : "fileprivate subscript(key key: String) -> FWJSON",
            "key.parsed_scope.end" : 402,
            "key.parsed_scope.start" : 383,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONVySS_ACtAA7FWIndexOyypGcip\">subscript(_:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONV5indexACSi_tc33_CE7FCE31305580F7F6A923B7611B8BA6Llip\">subscript(index:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONV3subAcA19FWJSONSubscriptType_p_tc33_CE7FCE31305580F7F6A923B7611B8BA6Llip\">subscript(sub:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONVyACSayAA19FWJSONSubscriptType_pGcip\">subscript(_:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONVyAcA19FWJSONSubscriptType_pd_tcip\">subscript(_:)<\/RelatedName>"
              }
            ],
            "key.setter_accessibility" : "source.lang.swift.accessibility.fileprivate",
            "key.substructure" : [

            ],
            "key.typename" : "(String) -> FWJSON",
            "key.typeusr" : "$s3key11FWFramework6FWJSONVSS_tcD",
            "key.usr" : "s:11FWFramework6FWJSONV3keyACSS_tc33_CE7FCE31305580F7F6A923B7611B8BA6Llip"
          },
          {
            "key.annotated_decl" : "<Declaration>var r: <Type usr=\"s:11FWFramework6FWJSONV\">FWJSON<\/Type><\/Declaration>",
            "key.column" : 17,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift",
            "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>r<\/decl.name>: <decl.var.type><ref.struct usr=\"s:11FWFramework6FWJSONV\">FWJSON<\/ref.struct><\/decl.var.type><\/decl.var.local>",
            "key.kind" : "source.lang.swift.decl.var.local",
            "key.length" : 19,
            "key.line" : 385,
            "key.name" : "r",
            "key.namelength" : 1,
            "key.nameoffset" : 11825,
            "key.offset" : 11821,
            "key.parsed_declaration" : "var r = FWJSON.null",
            "key.parsed_scope.end" : 385,
            "key.parsed_scope.start" : 385,
            "key.typename" : "FWJSON",
            "key.typeusr" : "$s11FWFramework6FWJSONVD",
            "key.usr" : "s:11FWFramework6FWJSONV3keyACSS_tc33_CE7FCE31305580F7F6A923B7611B8BA6Llig1rL_ACvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.fileprivate",
            "key.annotated_decl" : "<Declaration>fileprivate subscript(sub sub: <Type usr=\"s:11FWFramework19FWJSONSubscriptTypeP\">FWJSONSubscriptType<\/Type>) -&gt; <Type usr=\"s:11FWFramework6FWJSONV\">FWJSON<\/Type> { get set }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.fileprivate",
                "key.length" : 11,
                "key.offset" : 12450
              }
            ],
            "key.bodylength" : 395,
            "key.bodyoffset" : 12513,
            "key.column" : 17,
            "key.decl_lang" : "source.lang.swift",
            "key.doc.column" : 17,
            "key.doc.comment" : "If `sub` is `Int`, return `subscript(index:)`; If `sub` is `String`,  return `subscript(key:)`.",
            "key.doc.declaration" : "fileprivate subscript(sub sub: FWJSONSubscriptType) -> FWJSON { get set }",
            "key.doc.file" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift\" line=\"405\" column=\"17\"><Name>subscript(sub:)<\/Name><USR>s:11FWFramework6FWJSONV3subAcA19FWJSONSubscriptType_p_tc33_CE7FCE31305580F7F6A923B7611B8BA6Llip<\/USR><Declaration>fileprivate subscript(sub sub: FWJSONSubscriptType) -&gt; FWJSON { get set }<\/Declaration><CommentParts><Abstract><Para>If <codeVoice>sub<\/codeVoice> is <codeVoice>Int<\/codeVoice>, return <codeVoice>subscript(index:)<\/codeVoice>; If <codeVoice>sub<\/codeVoice> is <codeVoice>String<\/codeVoice>,  return <codeVoice>subscript(key:)<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 405,
            "key.doc.name" : "subscript(sub:)",
            "key.doc.type" : "Other",
            "key.doclength" : 100,
            "key.docoffset" : 12346,
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift",
            "key.fully_annotated_decl" : "<decl.function.subscript><syntaxtype.keyword>fileprivate<\/syntaxtype.keyword> <syntaxtype.keyword>subscript<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>sub<\/decl.var.parameter.argument_label> <decl.var.parameter.name>sub<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.protocol usr=\"s:11FWFramework19FWJSONSubscriptTypeP\">FWJSONSubscriptType<\/ref.protocol><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:11FWFramework6FWJSONV\">FWJSON<\/ref.struct><\/decl.function.returntype> { <syntaxtype.keyword>get<\/syntaxtype.keyword> <syntaxtype.keyword>set<\/syntaxtype.keyword> }<\/decl.function.subscript>",
            "key.kind" : "source.lang.swift.decl.function.subscript",
            "key.length" : 447,
            "key.line" : 405,
            "key.name" : "subscript(sub:)",
            "key.namelength" : 39,
            "key.nameoffset" : 12462,
            "key.offset" : 12462,
            "key.parsed_declaration" : "fileprivate subscript(sub sub: FWJSONSubscriptType) -> FWJSON",
            "key.parsed_scope.end" : 418,
            "key.parsed_scope.start" : 405,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONVySS_ACtAA7FWIndexOyypGcip\">subscript(_:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONV5indexACSi_tc33_CE7FCE31305580F7F6A923B7611B8BA6Llip\">subscript(index:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONV3keyACSS_tc33_CE7FCE31305580F7F6A923B7611B8BA6Llip\">subscript(key:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONVyACSayAA19FWJSONSubscriptType_pGcip\">subscript(_:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONVyAcA19FWJSONSubscriptType_pd_tcip\">subscript(_:)<\/RelatedName>"
              }
            ],
            "key.setter_accessibility" : "source.lang.swift.accessibility.fileprivate",
            "key.substructure" : [

            ],
            "key.typename" : "(FWJSONSubscriptType) -> FWJSON",
            "key.typeusr" : "$s3sub11FWFramework6FWJSONVAB19FWJSONSubscriptType_p_tcD",
            "key.usr" : "s:11FWFramework6FWJSONV3subAcA19FWJSONSubscriptType_p_tc33_CE7FCE31305580F7F6A923B7611B8BA6Llip"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public subscript(path: [<Type usr=\"s:11FWFramework19FWJSONSubscriptTypeP\">FWJSONSubscriptType<\/Type>]) -&gt; <Type usr=\"s:11FWFramework6FWJSONV\">FWJSON<\/Type> { get set }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 13362
              }
            ],
            "key.bodylength" : 471,
            "key.bodyoffset" : 13419,
            "key.column" : 12,
            "key.decl_lang" : "source.lang.swift",
            "key.doc.column" : 12,
            "key.doc.comment" : "Find a json in the complex data structures by using array of Int and\/or String as path.\n    \nExample:\n    \n```\nlet json = JSON[data]\nlet path = [9,\"list\",\"person\",\"name\"]\nlet name = json[path]\n```\n    \nThe same as: let name = json[9][\"list\"][\"person\"][\"name\"]\n    \n- parameter path: The target json's path.\n    \n- returns: Return a json found by the path or a null json with error",
            "key.doc.declaration" : "public subscript(path: [FWJSONSubscriptType]) -> FWJSON { get set }",
            "key.doc.discussion" : [
              {
                "Para" : "Example:"
              },
              {
                "CodeListing" : ""
              },
              {
                "Para" : "The same as: let name = json[9][“list”][“person”][“name”]"
              }
            ],
            "key.doc.file" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift\" line=\"437\" column=\"12\"><Name>subscript(_:)<\/Name><USR>s:11FWFramework6FWJSONVyACSayAA19FWJSONSubscriptType_pGcip<\/USR><Declaration>public subscript(path: [FWJSONSubscriptType]) -&gt; FWJSON { get set }<\/Declaration><CommentParts><Abstract><Para>Find a json in the complex data structures by using array of Int and\/or String as path.<\/Para><\/Abstract><Parameters><Parameter><Name>path<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The target json’s path.<\/Para><\/Discussion><\/Parameter><\/Parameters><ResultDiscussion><Para>Return a json found by the path or a null json with error<\/Para><\/ResultDiscussion><Discussion><Para>Example:<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let json = JSON[data]]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let path = [9,\"list\",\"person\",\"name\"]]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let name = json[path]]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>The same as: let name = json[9][“list”][“person”][“name”]<\/Para><\/Discussion><\/CommentParts><\/Other>",
            "key.doc.line" : 437,
            "key.doc.name" : "subscript(_:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "The target json’s path."
                  }
                ],
                "name" : "path"
              }
            ],
            "key.doc.result_discussion" : [
              {
                "Para" : "Return a json found by the path or a null json with error"
              }
            ],
            "key.doc.type" : "Other",
            "key.doclength" : 442,
            "key.docoffset" : 12915,
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift",
            "key.fully_annotated_decl" : "<decl.function.subscript><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>subscript<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.name>path<\/decl.var.parameter.name>: <decl.var.parameter.type>[<ref.protocol usr=\"s:11FWFramework19FWJSONSubscriptTypeP\">FWJSONSubscriptType<\/ref.protocol>]<\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:11FWFramework6FWJSONV\">FWJSON<\/ref.struct><\/decl.function.returntype> { <syntaxtype.keyword>get<\/syntaxtype.keyword> <syntaxtype.keyword>set<\/syntaxtype.keyword> }<\/decl.function.subscript>",
            "key.kind" : "source.lang.swift.decl.function.subscript",
            "key.length" : 522,
            "key.line" : 437,
            "key.name" : "subscript(_:)",
            "key.namelength" : 38,
            "key.nameoffset" : 13369,
            "key.offset" : 13369,
            "key.parsed_declaration" : "public subscript(path: [FWJSONSubscriptType]) -> FWJSON",
            "key.parsed_scope.end" : 453,
            "key.parsed_scope.start" : 437,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONVySS_ACtAA7FWIndexOyypGcip\">subscript(_:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONV5indexACSi_tc33_CE7FCE31305580F7F6A923B7611B8BA6Llip\">subscript(index:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONV3keyACSS_tc33_CE7FCE31305580F7F6A923B7611B8BA6Llip\">subscript(key:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONV3subAcA19FWJSONSubscriptType_p_tc33_CE7FCE31305580F7F6A923B7611B8BA6Llip\">subscript(sub:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONVyAcA19FWJSONSubscriptType_pd_tcip\">subscript(_:)<\/RelatedName>"
              }
            ],
            "key.setter_accessibility" : "source.lang.swift.accessibility.public",
            "key.substructure" : [

            ],
            "key.typename" : "([FWJSONSubscriptType]) -> FWJSON",
            "key.typeusr" : "$sy11FWFramework6FWJSONVSayAA19FWJSONSubscriptType_pGcD",
            "key.usr" : "s:11FWFramework6FWJSONVyACSayAA19FWJSONSubscriptType_pGcip"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public subscript(path: <Type usr=\"s:11FWFramework19FWJSONSubscriptTypeP\">FWJSONSubscriptType<\/Type>...) -&gt; <Type usr=\"s:11FWFramework6FWJSONV\">FWJSON<\/Type> { get set }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 14250
              }
            ],
            "key.bodylength" : 117,
            "key.bodyoffset" : 14308,
            "key.column" : 12,
            "key.decl_lang" : "source.lang.swift",
            "key.doc.column" : 12,
            "key.doc.comment" : "Find a json in the complex data structures by using array of Int and\/or String as path.\n\n- parameter path: The target json's path. Example:\n\nlet name = json[9,\"list\",\"person\",\"name\"]\n\nThe same as: let name = json[9][\"list\"][\"person\"][\"name\"]\n\n- returns: Return a json found by the path or a null json with error",
            "key.doc.declaration" : "public subscript(path: FWJSONSubscriptType...) -> FWJSON { get set }",
            "key.doc.discussion" : [
              {
                "Para" : "let name = json[9,“list”,“person”,“name”]"
              },
              {
                "Para" : "The same as: let name = json[9][“list”][“person”][“name”]"
              }
            ],
            "key.doc.file" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift\" line=\"466\" column=\"12\"><Name>subscript(_:)<\/Name><USR>s:11FWFramework6FWJSONVyAcA19FWJSONSubscriptType_pd_tcip<\/USR><Declaration>public subscript(path: FWJSONSubscriptType...) -&gt; FWJSON { get set }<\/Declaration><CommentParts><Abstract><Para>Find a json in the complex data structures by using array of Int and\/or String as path.<\/Para><\/Abstract><Parameters><Parameter><Name>path<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The target json’s path. Example:<\/Para><\/Discussion><\/Parameter><\/Parameters><ResultDiscussion><Para>Return a json found by the path or a null json with error<\/Para><\/ResultDiscussion><Discussion><Para>let name = json[9,“list”,“person”,“name”]<\/Para><Para>The same as: let name = json[9][“list”][“person”][“name”]<\/Para><\/Discussion><\/CommentParts><\/Other>",
            "key.doc.line" : 466,
            "key.doc.name" : "subscript(_:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "The target json’s path. Example:"
                  }
                ],
                "name" : "path"
              }
            ],
            "key.doc.result_discussion" : [
              {
                "Para" : "Return a json found by the path or a null json with error"
              }
            ],
            "key.doc.type" : "Other",
            "key.doclength" : 348,
            "key.docoffset" : 13897,
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift",
            "key.fully_annotated_decl" : "<decl.function.subscript><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>subscript<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.name>path<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.protocol usr=\"s:11FWFramework19FWJSONSubscriptTypeP\">FWJSONSubscriptType<\/ref.protocol><\/decl.var.parameter.type>...<\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:11FWFramework6FWJSONV\">FWJSON<\/ref.struct><\/decl.function.returntype> { <syntaxtype.keyword>get<\/syntaxtype.keyword> <syntaxtype.keyword>set<\/syntaxtype.keyword> }<\/decl.function.subscript>",
            "key.kind" : "source.lang.swift.decl.function.subscript",
            "key.length" : 169,
            "key.line" : 466,
            "key.name" : "subscript(_:)",
            "key.namelength" : 39,
            "key.nameoffset" : 14257,
            "key.offset" : 14257,
            "key.parsed_declaration" : "public subscript(path: FWJSONSubscriptType...) -> FWJSON",
            "key.parsed_scope.end" : 473,
            "key.parsed_scope.start" : 466,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONVySS_ACtAA7FWIndexOyypGcip\">subscript(_:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONV5indexACSi_tc33_CE7FCE31305580F7F6A923B7611B8BA6Llip\">subscript(index:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONV3keyACSS_tc33_CE7FCE31305580F7F6A923B7611B8BA6Llip\">subscript(key:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONV3subAcA19FWJSONSubscriptType_p_tc33_CE7FCE31305580F7F6A923B7611B8BA6Llip\">subscript(sub:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONVyACSayAA19FWJSONSubscriptType_pGcip\">subscript(_:)<\/RelatedName>"
              }
            ],
            "key.setter_accessibility" : "source.lang.swift.accessibility.public",
            "key.substructure" : [

            ],
            "key.typename" : "(FWJSONSubscriptType...) -> FWJSON",
            "key.typeusr" : "$sy11FWFramework6FWJSONVAA19FWJSONSubscriptType_pd_tcD",
            "key.usr" : "s:11FWFramework6FWJSONVyAcA19FWJSONSubscriptType_pd_tcip"
          }
        ],
        "key.typename" : "FWJSON.Type",
        "key.typeusr" : "$s11FWFramework6FWJSONVmD",
        "key.usr" : "s:11FWFramework6FWJSONV"
      },
      {
        "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
        "key.length" : 26,
        "key.name" : "MARK: - LiteralConvertible",
        "key.namelength" : 0,
        "key.nameoffset" : 0,
        "key.offset" : 14433
      },
      {
        "key.annotated_decl" : "<Declaration>public struct FWJSON<\/Declaration>",
        "key.bodylength" : 295,
        "key.bodyoffset" : 14513,
        "key.column" : 15,
        "key.decl_lang" : "source.lang.swift",
        "key.doc.column" : 15,
        "key.doc.declaration" : "public struct FWJSON",
        "key.doc.discussion" : [
          {
            "List-Bullet" : ""
          }
        ],
        "key.doc.file" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift\" line=\"73\" column=\"15\"><Name>FWJSON<\/Name><USR>s:11FWFramework6FWJSONV<\/USR><Declaration>public struct FWJSON<\/Declaration><CommentParts><Abstract><Para>FWJSON<\/Para><\/Abstract><Discussion><List-Bullet><Item><Para>see: <Link href=\"https:\/\/github.com\/SwiftyJSON\/SwiftyJSON\">SwiftyJSON<\/Link><\/Para><\/Item><\/List-Bullet><\/Discussion><\/CommentParts><\/Class>",
        "key.doc.line" : 73,
        "key.doc.name" : "FWJSON",
        "key.doc.type" : "Class",
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 32,
            "key.offset" : 14479
          }
        ],
        "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift",
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>FWJSON<\/decl.name><\/decl.struct>",
        "key.inheritedtypes" : [
          {
            "key.name" : "Swift.ExpressibleByStringLiteral"
          }
        ],
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 348,
        "key.line" : 73,
        "key.name" : "FWJSON",
        "key.namelength" : 6,
        "key.nameoffset" : 14471,
        "key.offset" : 14461,
        "key.parsed_declaration" : "extension FWJSON: Swift.ExpressibleByStringLiteral",
        "key.parsed_scope.end" : 491,
        "key.parsed_scope.start" : 478,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public init(stringLiteral value: <Type usr=\"s:s17StringLiteralTypea\">StringLiteralType<\/Type>)<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 14519
              }
            ],
            "key.bodylength" : 30,
            "key.bodyoffset" : 14572,
            "key.column" : 12,
            "key.decl_lang" : "source.lang.swift",
            "key.doc.declaration" : "init(stringLiteral value: Self.StringLiteralType)",
            "key.doc.discussion" : [
              {
                "Note" : ""
              }
            ],
            "key.doc.full_as_xml" : "<Function><Name>init(stringLiteral:)<\/Name><USR>s:s26ExpressibleByStringLiteralP06stringD0x0cD4TypeQz_tcfc<\/USR><Declaration>init(stringLiteral value: Self.StringLiteralType)<\/Declaration><CommentParts><Abstract><Para>Creates an instance initialized to the given string value.<\/Para><\/Abstract><Parameters><Parameter><Name>value<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The value of the new instance.<\/Para><\/Discussion><\/Parameter><\/Parameters><Discussion><Note><Para>This documentation comment was inherited from <codeVoice>ExpressibleByStringLiteral<\/codeVoice>.<\/Para><\/Note><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.name" : "init(stringLiteral:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "The value of the new instance."
                  }
                ],
                "name" : "value"
              }
            ],
            "key.doc.type" : "Function",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift",
            "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>init<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>stringLiteral<\/decl.var.parameter.argument_label> <decl.var.parameter.name>value<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.typealias usr=\"s:s17StringLiteralTypea\">StringLiteralType<\/ref.typealias><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.constructor>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 77,
            "key.line" : 480,
            "key.name" : "init(stringLiteral:)",
            "key.namelength" : 44,
            "key.nameoffset" : 14526,
            "key.offset" : 14526,
            "key.overrides" : [
              {
                "key.usr" : "s:s26ExpressibleByStringLiteralP06stringD0x0cD4TypeQz_tcfc"
              }
            ],
            "key.parsed_declaration" : "public init(stringLiteral value: StringLiteralType)",
            "key.parsed_scope.end" : 482,
            "key.parsed_scope.start" : 480,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONV4data7optionsAC10Foundation4DataV_So20NSJSONReadingOptionsVtKcfc\">init(data:options:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONVyACypcfc\">init(_:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONV9parseJSONACSS_tcfc\">init(parseJSON:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONV10jsonObjectACyp_tc33_CE7FCE31305580F7F6A923B7611B8BA6Llfc\">init(jsonObject:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONV30extendedGraphemeClusterLiteralACSS_tcfc\">init(extendedGraphemeClusterLiteral:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONV20unicodeScalarLiteralACSS_tcfc\">init(unicodeScalarLiteral:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONV14integerLiteralACSi_tcfc\">init(integerLiteral:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONV14booleanLiteralACSb_tcfc\">init(booleanLiteral:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONV12floatLiteralACSd_tcfc\">init(floatLiteral:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONV17dictionaryLiteralACSS_yptd_tcfc\">init(dictionaryLiteral:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONV12arrayLiteralACypd_tcfc\">init(arrayLiteral:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONV8rawValueACSgyp_tcfc\">init(rawValue:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONV4fromACs7Decoder_p_tKcfc\">init(from:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "(FWJSON.Type) -> (String) -> FWJSON",
            "key.typeusr" : "$s13stringLiteral11FWFramework6FWJSONVSS_tcD",
            "key.usr" : "s:s26ExpressibleByStringLiteralP06stringD0x0cD4TypeQz_tcfc"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public init(extendedGraphemeClusterLiteral value: <Type usr=\"s:s17StringLiteralTypea\">StringLiteralType<\/Type>)<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 14609
              }
            ],
            "key.bodylength" : 30,
            "key.bodyoffset" : 14679,
            "key.column" : 12,
            "key.decl_lang" : "source.lang.swift",
            "key.doc.declaration" : "init(extendedGraphemeClusterLiteral value: Self.ExtendedGraphemeClusterLiteralType)",
            "key.doc.discussion" : [
              {
                "Note" : ""
              }
            ],
            "key.doc.full_as_xml" : "<Function><Name>init(extendedGraphemeClusterLiteral:)<\/Name><USR>s:s43ExpressibleByExtendedGraphemeClusterLiteralP08extendeddeF0x0cdeF4TypeQz_tcfc<\/USR><Declaration>init(extendedGraphemeClusterLiteral value: Self.ExtendedGraphemeClusterLiteralType)<\/Declaration><CommentParts><Abstract><Para>Creates an instance initialized to the given value.<\/Para><\/Abstract><Parameters><Parameter><Name>value<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The value of the new instance.<\/Para><\/Discussion><\/Parameter><\/Parameters><Discussion><Note><Para>This documentation comment was inherited from <codeVoice>ExpressibleByExtendedGraphemeClusterLiteral<\/codeVoice>.<\/Para><\/Note><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.name" : "init(extendedGraphemeClusterLiteral:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "The value of the new instance."
                  }
                ],
                "name" : "value"
              }
            ],
            "key.doc.type" : "Function",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift",
            "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>init<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>extendedGraphemeClusterLiteral<\/decl.var.parameter.argument_label> <decl.var.parameter.name>value<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.typealias usr=\"s:s17StringLiteralTypea\">StringLiteralType<\/ref.typealias><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.constructor>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 94,
            "key.line" : 484,
            "key.name" : "init(extendedGraphemeClusterLiteral:)",
            "key.namelength" : 61,
            "key.nameoffset" : 14616,
            "key.offset" : 14616,
            "key.overrides" : [
              {
                "key.usr" : "s:s43ExpressibleByExtendedGraphemeClusterLiteralP08extendeddeF0x0cdeF4TypeQz_tcfc"
              }
            ],
            "key.parsed_declaration" : "public init(extendedGraphemeClusterLiteral value: StringLiteralType)",
            "key.parsed_scope.end" : 486,
            "key.parsed_scope.start" : 484,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONV4data7optionsAC10Foundation4DataV_So20NSJSONReadingOptionsVtKcfc\">init(data:options:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONVyACypcfc\">init(_:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONV9parseJSONACSS_tcfc\">init(parseJSON:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONV10jsonObjectACyp_tc33_CE7FCE31305580F7F6A923B7611B8BA6Llfc\">init(jsonObject:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONV13stringLiteralACSS_tcfc\">init(stringLiteral:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONV20unicodeScalarLiteralACSS_tcfc\">init(unicodeScalarLiteral:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONV14integerLiteralACSi_tcfc\">init(integerLiteral:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONV14booleanLiteralACSb_tcfc\">init(booleanLiteral:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONV12floatLiteralACSd_tcfc\">init(floatLiteral:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONV17dictionaryLiteralACSS_yptd_tcfc\">init(dictionaryLiteral:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONV12arrayLiteralACypd_tcfc\">init(arrayLiteral:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONV8rawValueACSgyp_tcfc\">init(rawValue:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONV4fromACs7Decoder_p_tKcfc\">init(from:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "(FWJSON.Type) -> (String) -> FWJSON",
            "key.typeusr" : "$s30extendedGraphemeClusterLiteral11FWFramework6FWJSONVSS_tcD",
            "key.usr" : "s:s43ExpressibleByExtendedGraphemeClusterLiteralP08extendeddeF0x0cdeF4TypeQz_tcfc"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public init(unicodeScalarLiteral value: <Type usr=\"s:s17StringLiteralTypea\">StringLiteralType<\/Type>)<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 14716
              }
            ],
            "key.bodylength" : 30,
            "key.bodyoffset" : 14776,
            "key.column" : 12,
            "key.decl_lang" : "source.lang.swift",
            "key.doc.declaration" : "init(unicodeScalarLiteral value: Self.UnicodeScalarLiteralType)",
            "key.doc.discussion" : [
              {
                "Note" : ""
              }
            ],
            "key.doc.full_as_xml" : "<Function><Name>init(unicodeScalarLiteral:)<\/Name><USR>s:s33ExpressibleByUnicodeScalarLiteralP07unicodedE0x0cdE4TypeQz_tcfc<\/USR><Declaration>init(unicodeScalarLiteral value: Self.UnicodeScalarLiteralType)<\/Declaration><CommentParts><Abstract><Para>Creates an instance initialized to the given value.<\/Para><\/Abstract><Parameters><Parameter><Name>value<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The value of the new instance.<\/Para><\/Discussion><\/Parameter><\/Parameters><Discussion><Note><Para>This documentation comment was inherited from <codeVoice>ExpressibleByUnicodeScalarLiteral<\/codeVoice>.<\/Para><\/Note><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.name" : "init(unicodeScalarLiteral:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "The value of the new instance."
                  }
                ],
                "name" : "value"
              }
            ],
            "key.doc.type" : "Function",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift",
            "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>init<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>unicodeScalarLiteral<\/decl.var.parameter.argument_label> <decl.var.parameter.name>value<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.typealias usr=\"s:s17StringLiteralTypea\">StringLiteralType<\/ref.typealias><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.constructor>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 84,
            "key.line" : 488,
            "key.name" : "init(unicodeScalarLiteral:)",
            "key.namelength" : 51,
            "key.nameoffset" : 14723,
            "key.offset" : 14723,
            "key.overrides" : [
              {
                "key.usr" : "s:s33ExpressibleByUnicodeScalarLiteralP07unicodedE0x0cdE4TypeQz_tcfc"
              }
            ],
            "key.parsed_declaration" : "public init(unicodeScalarLiteral value: StringLiteralType)",
            "key.parsed_scope.end" : 490,
            "key.parsed_scope.start" : 488,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONV4data7optionsAC10Foundation4DataV_So20NSJSONReadingOptionsVtKcfc\">init(data:options:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONVyACypcfc\">init(_:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONV9parseJSONACSS_tcfc\">init(parseJSON:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONV10jsonObjectACyp_tc33_CE7FCE31305580F7F6A923B7611B8BA6Llfc\">init(jsonObject:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONV13stringLiteralACSS_tcfc\">init(stringLiteral:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONV30extendedGraphemeClusterLiteralACSS_tcfc\">init(extendedGraphemeClusterLiteral:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONV14integerLiteralACSi_tcfc\">init(integerLiteral:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONV14booleanLiteralACSb_tcfc\">init(booleanLiteral:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONV12floatLiteralACSd_tcfc\">init(floatLiteral:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONV17dictionaryLiteralACSS_yptd_tcfc\">init(dictionaryLiteral:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONV12arrayLiteralACypd_tcfc\">init(arrayLiteral:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONV8rawValueACSgyp_tcfc\">init(rawValue:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONV4fromACs7Decoder_p_tKcfc\">init(from:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "(FWJSON.Type) -> (String) -> FWJSON",
            "key.typeusr" : "$s20unicodeScalarLiteral11FWFramework6FWJSONVSS_tcD",
            "key.usr" : "s:s33ExpressibleByUnicodeScalarLiteralP07unicodedE0x0cdE4TypeQz_tcfc"
          }
        ],
        "key.typename" : "FWJSON.Type",
        "key.typeusr" : "$s11FWFramework6FWJSONVmD",
        "key.usr" : "s:11FWFramework6FWJSONV"
      },
      {
        "key.annotated_decl" : "<Declaration>public struct FWJSON<\/Declaration>",
        "key.bodylength" : 93,
        "key.bodyoffset" : 14864,
        "key.column" : 15,
        "key.decl_lang" : "source.lang.swift",
        "key.doc.column" : 15,
        "key.doc.declaration" : "public struct FWJSON",
        "key.doc.discussion" : [
          {
            "List-Bullet" : ""
          }
        ],
        "key.doc.file" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift\" line=\"73\" column=\"15\"><Name>FWJSON<\/Name><USR>s:11FWFramework6FWJSONV<\/USR><Declaration>public struct FWJSON<\/Declaration><CommentParts><Abstract><Para>FWJSON<\/Para><\/Abstract><Discussion><List-Bullet><Item><Para>see: <Link href=\"https:\/\/github.com\/SwiftyJSON\/SwiftyJSON\">SwiftyJSON<\/Link><\/Para><\/Item><\/List-Bullet><\/Discussion><\/CommentParts><\/Class>",
        "key.doc.line" : 73,
        "key.doc.name" : "FWJSON",
        "key.doc.type" : "Class",
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 33,
            "key.offset" : 14829
          }
        ],
        "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift",
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>FWJSON<\/decl.name><\/decl.struct>",
        "key.inheritedtypes" : [
          {
            "key.name" : "Swift.ExpressibleByIntegerLiteral"
          }
        ],
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 147,
        "key.line" : 73,
        "key.name" : "FWJSON",
        "key.namelength" : 6,
        "key.nameoffset" : 14821,
        "key.offset" : 14811,
        "key.parsed_declaration" : "extension FWJSON: Swift.ExpressibleByIntegerLiteral",
        "key.parsed_scope.end" : 498,
        "key.parsed_scope.start" : 493,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public init(integerLiteral value: <Type usr=\"s:s18IntegerLiteralTypea\">IntegerLiteralType<\/Type>)<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 14870
              }
            ],
            "key.bodylength" : 30,
            "key.bodyoffset" : 14925,
            "key.column" : 12,
            "key.decl_lang" : "source.lang.swift",
            "key.doc.declaration" : "init(integerLiteral value: Self.IntegerLiteralType)",
            "key.doc.discussion" : [
              {
                "Para" : "Do not call this initializer directly. Instead, initialize a variable or constant using an integer literal. For example:"
              },
              {
                "CodeListing" : ""
              },
              {
                "Para" : "In this example, the assignment to the `x` constant calls this integer literal initializer behind the scenes."
              },
              {
                "Note" : ""
              }
            ],
            "key.doc.full_as_xml" : "<Function><Name>init(integerLiteral:)<\/Name><USR>s:s27ExpressibleByIntegerLiteralP07integerD0x0cD4TypeQz_tcfc<\/USR><Declaration>init(integerLiteral value: Self.IntegerLiteralType)<\/Declaration><CommentParts><Abstract><Para>Creates an instance initialized to the specified integer value.<\/Para><\/Abstract><Parameters><Parameter><Name>value<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The value to create.<\/Para><\/Discussion><\/Parameter><\/Parameters><Discussion><Para>Do not call this initializer directly. Instead, initialize a variable or constant using an integer literal. For example:<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let x = 23]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>In this example, the assignment to the <codeVoice>x<\/codeVoice> constant calls this integer literal initializer behind the scenes.<\/Para><Note><Para>This documentation comment was inherited from <codeVoice>ExpressibleByIntegerLiteral<\/codeVoice>.<\/Para><\/Note><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.name" : "init(integerLiteral:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "The value to create."
                  }
                ],
                "name" : "value"
              }
            ],
            "key.doc.type" : "Function",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift",
            "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>init<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>integerLiteral<\/decl.var.parameter.argument_label> <decl.var.parameter.name>value<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.typealias usr=\"s:s18IntegerLiteralTypea\">IntegerLiteralType<\/ref.typealias><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.constructor>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 79,
            "key.line" : 495,
            "key.name" : "init(integerLiteral:)",
            "key.namelength" : 46,
            "key.nameoffset" : 14877,
            "key.offset" : 14877,
            "key.overrides" : [
              {
                "key.usr" : "s:s27ExpressibleByIntegerLiteralP07integerD0x0cD4TypeQz_tcfc"
              }
            ],
            "key.parsed_declaration" : "public init(integerLiteral value: IntegerLiteralType)",
            "key.parsed_scope.end" : 497,
            "key.parsed_scope.start" : 495,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONV4data7optionsAC10Foundation4DataV_So20NSJSONReadingOptionsVtKcfc\">init(data:options:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONVyACypcfc\">init(_:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONV9parseJSONACSS_tcfc\">init(parseJSON:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONV10jsonObjectACyp_tc33_CE7FCE31305580F7F6A923B7611B8BA6Llfc\">init(jsonObject:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONV13stringLiteralACSS_tcfc\">init(stringLiteral:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONV30extendedGraphemeClusterLiteralACSS_tcfc\">init(extendedGraphemeClusterLiteral:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONV20unicodeScalarLiteralACSS_tcfc\">init(unicodeScalarLiteral:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONV14booleanLiteralACSb_tcfc\">init(booleanLiteral:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONV12floatLiteralACSd_tcfc\">init(floatLiteral:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONV17dictionaryLiteralACSS_yptd_tcfc\">init(dictionaryLiteral:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONV12arrayLiteralACypd_tcfc\">init(arrayLiteral:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONV8rawValueACSgyp_tcfc\">init(rawValue:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONV4fromACs7Decoder_p_tKcfc\">init(from:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "(FWJSON.Type) -> (Int) -> FWJSON",
            "key.typeusr" : "$s14integerLiteral11FWFramework6FWJSONVSi_tcD",
            "key.usr" : "s:s27ExpressibleByIntegerLiteralP07integerD0x0cD4TypeQz_tcfc"
          }
        ],
        "key.typename" : "FWJSON.Type",
        "key.typeusr" : "$s11FWFramework6FWJSONVmD",
        "key.usr" : "s:11FWFramework6FWJSONV"
      },
      {
        "key.annotated_decl" : "<Declaration>public struct FWJSON<\/Declaration>",
        "key.bodylength" : 93,
        "key.bodyoffset" : 15013,
        "key.column" : 15,
        "key.decl_lang" : "source.lang.swift",
        "key.doc.column" : 15,
        "key.doc.declaration" : "public struct FWJSON",
        "key.doc.discussion" : [
          {
            "List-Bullet" : ""
          }
        ],
        "key.doc.file" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift\" line=\"73\" column=\"15\"><Name>FWJSON<\/Name><USR>s:11FWFramework6FWJSONV<\/USR><Declaration>public struct FWJSON<\/Declaration><CommentParts><Abstract><Para>FWJSON<\/Para><\/Abstract><Discussion><List-Bullet><Item><Para>see: <Link href=\"https:\/\/github.com\/SwiftyJSON\/SwiftyJSON\">SwiftyJSON<\/Link><\/Para><\/Item><\/List-Bullet><\/Discussion><\/CommentParts><\/Class>",
        "key.doc.line" : 73,
        "key.doc.name" : "FWJSON",
        "key.doc.type" : "Class",
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 33,
            "key.offset" : 14978
          }
        ],
        "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift",
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>FWJSON<\/decl.name><\/decl.struct>",
        "key.inheritedtypes" : [
          {
            "key.name" : "Swift.ExpressibleByBooleanLiteral"
          }
        ],
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 147,
        "key.line" : 73,
        "key.name" : "FWJSON",
        "key.namelength" : 6,
        "key.nameoffset" : 14970,
        "key.offset" : 14960,
        "key.parsed_declaration" : "extension FWJSON: Swift.ExpressibleByBooleanLiteral",
        "key.parsed_scope.end" : 505,
        "key.parsed_scope.start" : 500,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public init(booleanLiteral value: <Type usr=\"s:s18BooleanLiteralTypea\">BooleanLiteralType<\/Type>)<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 15019
              }
            ],
            "key.bodylength" : 30,
            "key.bodyoffset" : 15074,
            "key.column" : 12,
            "key.decl_lang" : "source.lang.swift",
            "key.doc.declaration" : "init(booleanLiteral value: Self.BooleanLiteralType)",
            "key.doc.discussion" : [
              {
                "Para" : "Do not call this initializer directly. Instead, initialize a variable or constant using one of the Boolean literals `true` and `false`. For example:"
              },
              {
                "CodeListing" : ""
              },
              {
                "Para" : "In this example, the assignment to the `twasBrillig` constant calls this Boolean literal initializer behind the scenes."
              },
              {
                "Note" : ""
              }
            ],
            "key.doc.full_as_xml" : "<Function><Name>init(booleanLiteral:)<\/Name><USR>s:s27ExpressibleByBooleanLiteralP07booleanD0x0cD4TypeQz_tcfc<\/USR><Declaration>init(booleanLiteral value: Self.BooleanLiteralType)<\/Declaration><CommentParts><Abstract><Para>Creates an instance initialized to the given Boolean value.<\/Para><\/Abstract><Parameters><Parameter><Name>value<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The value of the new instance.<\/Para><\/Discussion><\/Parameter><\/Parameters><Discussion><Para>Do not call this initializer directly. Instead, initialize a variable or constant using one of the Boolean literals <codeVoice>true<\/codeVoice> and <codeVoice>false<\/codeVoice>. For example:<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let twasBrillig = true]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>In this example, the assignment to the <codeVoice>twasBrillig<\/codeVoice> constant calls this Boolean literal initializer behind the scenes.<\/Para><Note><Para>This documentation comment was inherited from <codeVoice>ExpressibleByBooleanLiteral<\/codeVoice>.<\/Para><\/Note><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.name" : "init(booleanLiteral:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "The value of the new instance."
                  }
                ],
                "name" : "value"
              }
            ],
            "key.doc.type" : "Function",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift",
            "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>init<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>booleanLiteral<\/decl.var.parameter.argument_label> <decl.var.parameter.name>value<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.typealias usr=\"s:s18BooleanLiteralTypea\">BooleanLiteralType<\/ref.typealias><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.constructor>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 79,
            "key.line" : 502,
            "key.name" : "init(booleanLiteral:)",
            "key.namelength" : 46,
            "key.nameoffset" : 15026,
            "key.offset" : 15026,
            "key.overrides" : [
              {
                "key.usr" : "s:s27ExpressibleByBooleanLiteralP07booleanD0x0cD4TypeQz_tcfc"
              }
            ],
            "key.parsed_declaration" : "public init(booleanLiteral value: BooleanLiteralType)",
            "key.parsed_scope.end" : 504,
            "key.parsed_scope.start" : 502,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONV4data7optionsAC10Foundation4DataV_So20NSJSONReadingOptionsVtKcfc\">init(data:options:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONVyACypcfc\">init(_:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONV9parseJSONACSS_tcfc\">init(parseJSON:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONV10jsonObjectACyp_tc33_CE7FCE31305580F7F6A923B7611B8BA6Llfc\">init(jsonObject:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONV13stringLiteralACSS_tcfc\">init(stringLiteral:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONV30extendedGraphemeClusterLiteralACSS_tcfc\">init(extendedGraphemeClusterLiteral:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONV20unicodeScalarLiteralACSS_tcfc\">init(unicodeScalarLiteral:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONV14integerLiteralACSi_tcfc\">init(integerLiteral:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONV12floatLiteralACSd_tcfc\">init(floatLiteral:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONV17dictionaryLiteralACSS_yptd_tcfc\">init(dictionaryLiteral:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONV12arrayLiteralACypd_tcfc\">init(arrayLiteral:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONV8rawValueACSgyp_tcfc\">init(rawValue:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONV4fromACs7Decoder_p_tKcfc\">init(from:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "(FWJSON.Type) -> (Bool) -> FWJSON",
            "key.typeusr" : "$s14booleanLiteral11FWFramework6FWJSONVSb_tcD",
            "key.usr" : "s:s27ExpressibleByBooleanLiteralP07booleanD0x0cD4TypeQz_tcfc"
          }
        ],
        "key.typename" : "FWJSON.Type",
        "key.typeusr" : "$s11FWFramework6FWJSONVmD",
        "key.usr" : "s:11FWFramework6FWJSONV"
      },
      {
        "key.annotated_decl" : "<Declaration>public struct FWJSON<\/Declaration>",
        "key.bodylength" : 89,
        "key.bodyoffset" : 15160,
        "key.column" : 15,
        "key.decl_lang" : "source.lang.swift",
        "key.doc.column" : 15,
        "key.doc.declaration" : "public struct FWJSON",
        "key.doc.discussion" : [
          {
            "List-Bullet" : ""
          }
        ],
        "key.doc.file" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift\" line=\"73\" column=\"15\"><Name>FWJSON<\/Name><USR>s:11FWFramework6FWJSONV<\/USR><Declaration>public struct FWJSON<\/Declaration><CommentParts><Abstract><Para>FWJSON<\/Para><\/Abstract><Discussion><List-Bullet><Item><Para>see: <Link href=\"https:\/\/github.com\/SwiftyJSON\/SwiftyJSON\">SwiftyJSON<\/Link><\/Para><\/Item><\/List-Bullet><\/Discussion><\/CommentParts><\/Class>",
        "key.doc.line" : 73,
        "key.doc.name" : "FWJSON",
        "key.doc.type" : "Class",
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 31,
            "key.offset" : 15127
          }
        ],
        "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift",
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>FWJSON<\/decl.name><\/decl.struct>",
        "key.inheritedtypes" : [
          {
            "key.name" : "Swift.ExpressibleByFloatLiteral"
          }
        ],
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 141,
        "key.line" : 73,
        "key.name" : "FWJSON",
        "key.namelength" : 6,
        "key.nameoffset" : 15119,
        "key.offset" : 15109,
        "key.parsed_declaration" : "extension FWJSON: Swift.ExpressibleByFloatLiteral",
        "key.parsed_scope.end" : 512,
        "key.parsed_scope.start" : 507,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public init(floatLiteral value: <Type usr=\"s:s16FloatLiteralTypea\">FloatLiteralType<\/Type>)<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 15166
              }
            ],
            "key.bodylength" : 30,
            "key.bodyoffset" : 15217,
            "key.column" : 12,
            "key.decl_lang" : "source.lang.swift",
            "key.doc.declaration" : "init(floatLiteral value: Self.FloatLiteralType)",
            "key.doc.discussion" : [
              {
                "Para" : "Do not call this initializer directly. Instead, initialize a variable or constant using a floating-point literal. For example:"
              },
              {
                "CodeListing" : ""
              },
              {
                "Para" : "In this example, the assignment to the `x` constant calls this floating-point literal initializer behind the scenes."
              },
              {
                "Note" : ""
              }
            ],
            "key.doc.full_as_xml" : "<Function><Name>init(floatLiteral:)<\/Name><USR>s:s25ExpressibleByFloatLiteralP05floatD0x0cD4TypeQz_tcfc<\/USR><Declaration>init(floatLiteral value: Self.FloatLiteralType)<\/Declaration><CommentParts><Abstract><Para>Creates an instance initialized to the specified floating-point value.<\/Para><\/Abstract><Parameters><Parameter><Name>value<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The value to create.<\/Para><\/Discussion><\/Parameter><\/Parameters><Discussion><Para>Do not call this initializer directly. Instead, initialize a variable or constant using a floating-point literal. For example:<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let x = 21.5]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>In this example, the assignment to the <codeVoice>x<\/codeVoice> constant calls this floating-point literal initializer behind the scenes.<\/Para><Note><Para>This documentation comment was inherited from <codeVoice>ExpressibleByFloatLiteral<\/codeVoice>.<\/Para><\/Note><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.name" : "init(floatLiteral:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "The value to create."
                  }
                ],
                "name" : "value"
              }
            ],
            "key.doc.type" : "Function",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift",
            "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>init<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>floatLiteral<\/decl.var.parameter.argument_label> <decl.var.parameter.name>value<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.typealias usr=\"s:s16FloatLiteralTypea\">FloatLiteralType<\/ref.typealias><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.constructor>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 75,
            "key.line" : 509,
            "key.name" : "init(floatLiteral:)",
            "key.namelength" : 42,
            "key.nameoffset" : 15173,
            "key.offset" : 15173,
            "key.overrides" : [
              {
                "key.usr" : "s:s25ExpressibleByFloatLiteralP05floatD0x0cD4TypeQz_tcfc"
              }
            ],
            "key.parsed_declaration" : "public init(floatLiteral value: FloatLiteralType)",
            "key.parsed_scope.end" : 511,
            "key.parsed_scope.start" : 509,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONV4data7optionsAC10Foundation4DataV_So20NSJSONReadingOptionsVtKcfc\">init(data:options:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONVyACypcfc\">init(_:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONV9parseJSONACSS_tcfc\">init(parseJSON:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONV10jsonObjectACyp_tc33_CE7FCE31305580F7F6A923B7611B8BA6Llfc\">init(jsonObject:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONV13stringLiteralACSS_tcfc\">init(stringLiteral:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONV30extendedGraphemeClusterLiteralACSS_tcfc\">init(extendedGraphemeClusterLiteral:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONV20unicodeScalarLiteralACSS_tcfc\">init(unicodeScalarLiteral:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONV14integerLiteralACSi_tcfc\">init(integerLiteral:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONV14booleanLiteralACSb_tcfc\">init(booleanLiteral:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONV17dictionaryLiteralACSS_yptd_tcfc\">init(dictionaryLiteral:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONV12arrayLiteralACypd_tcfc\">init(arrayLiteral:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONV8rawValueACSgyp_tcfc\">init(rawValue:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONV4fromACs7Decoder_p_tKcfc\">init(from:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "(FWJSON.Type) -> (Double) -> FWJSON",
            "key.typeusr" : "$s12floatLiteral11FWFramework6FWJSONVSd_tcD",
            "key.usr" : "s:s25ExpressibleByFloatLiteralP05floatD0x0cD4TypeQz_tcfc"
          }
        ],
        "key.typename" : "FWJSON.Type",
        "key.typeusr" : "$s11FWFramework6FWJSONVmD",
        "key.usr" : "s:11FWFramework6FWJSONV"
      },
      {
        "key.annotated_decl" : "<Declaration>public struct FWJSON<\/Declaration>",
        "key.bodylength" : 185,
        "key.bodyoffset" : 15308,
        "key.column" : 15,
        "key.decl_lang" : "source.lang.swift",
        "key.doc.column" : 15,
        "key.doc.declaration" : "public struct FWJSON",
        "key.doc.discussion" : [
          {
            "List-Bullet" : ""
          }
        ],
        "key.doc.file" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift\" line=\"73\" column=\"15\"><Name>FWJSON<\/Name><USR>s:11FWFramework6FWJSONV<\/USR><Declaration>public struct FWJSON<\/Declaration><CommentParts><Abstract><Para>FWJSON<\/Para><\/Abstract><Discussion><List-Bullet><Item><Para>see: <Link href=\"https:\/\/github.com\/SwiftyJSON\/SwiftyJSON\">SwiftyJSON<\/Link><\/Para><\/Item><\/List-Bullet><\/Discussion><\/CommentParts><\/Class>",
        "key.doc.line" : 73,
        "key.doc.name" : "FWJSON",
        "key.doc.type" : "Class",
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 36,
            "key.offset" : 15270
          }
        ],
        "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift",
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>FWJSON<\/decl.name><\/decl.struct>",
        "key.inheritedtypes" : [
          {
            "key.name" : "Swift.ExpressibleByDictionaryLiteral"
          }
        ],
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 242,
        "key.line" : 73,
        "key.name" : "FWJSON",
        "key.namelength" : 6,
        "key.nameoffset" : 15262,
        "key.offset" : 15252,
        "key.parsed_declaration" : "extension FWJSON: Swift.ExpressibleByDictionaryLiteral",
        "key.parsed_scope.end" : 519,
        "key.parsed_scope.start" : 514,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public init(dictionaryLiteral elements: (<Type usr=\"s:SS\">String<\/Type>, Any)...)<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 15313
              }
            ],
            "key.bodylength" : 119,
            "key.bodyoffset" : 15372,
            "key.column" : 12,
            "key.decl_lang" : "source.lang.swift",
            "key.doc.declaration" : "init(dictionaryLiteral elements: (Self.Key, Self.Value)...)",
            "key.doc.discussion" : [
              {
                "Note" : ""
              }
            ],
            "key.doc.full_as_xml" : "<Function><Name>init(dictionaryLiteral:)<\/Name><USR>s:s30ExpressibleByDictionaryLiteralP010dictionaryD0x3KeyQz_5ValueQztd_tcfc<\/USR><Declaration>init(dictionaryLiteral elements: (Self.Key, Self.Value)...)<\/Declaration><CommentParts><Abstract><Para>Creates an instance initialized with the given key-value pairs.<\/Para><\/Abstract><Discussion><Note><Para>This documentation comment was inherited from <codeVoice>ExpressibleByDictionaryLiteral<\/codeVoice>.<\/Para><\/Note><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.name" : "init(dictionaryLiteral:)",
            "key.doc.type" : "Function",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift",
            "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>init<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>dictionaryLiteral<\/decl.var.parameter.argument_label> <decl.var.parameter.name>elements<\/decl.var.parameter.name>: <decl.var.parameter.type><tuple>(<tuple.element><tuple.element.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/tuple.element.type><\/tuple.element>, <tuple.element><tuple.element.type><syntaxtype.keyword>Any<\/syntaxtype.keyword><\/tuple.element.type><\/tuple.element>)<\/tuple><\/decl.var.parameter.type>...<\/decl.var.parameter>)<\/decl.function.constructor>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 172,
            "key.line" : 515,
            "key.name" : "init(dictionaryLiteral:)",
            "key.namelength" : 50,
            "key.nameoffset" : 15320,
            "key.offset" : 15320,
            "key.overrides" : [
              {
                "key.usr" : "s:s30ExpressibleByDictionaryLiteralP010dictionaryD0x3KeyQz_5ValueQztd_tcfc"
              }
            ],
            "key.parsed_declaration" : "public init(dictionaryLiteral elements: (String, Any)...)",
            "key.parsed_scope.end" : 518,
            "key.parsed_scope.start" : 515,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONV4data7optionsAC10Foundation4DataV_So20NSJSONReadingOptionsVtKcfc\">init(data:options:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONVyACypcfc\">init(_:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONV9parseJSONACSS_tcfc\">init(parseJSON:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONV10jsonObjectACyp_tc33_CE7FCE31305580F7F6A923B7611B8BA6Llfc\">init(jsonObject:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONV13stringLiteralACSS_tcfc\">init(stringLiteral:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONV30extendedGraphemeClusterLiteralACSS_tcfc\">init(extendedGraphemeClusterLiteral:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONV20unicodeScalarLiteralACSS_tcfc\">init(unicodeScalarLiteral:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONV14integerLiteralACSi_tcfc\">init(integerLiteral:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONV14booleanLiteralACSb_tcfc\">init(booleanLiteral:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONV12floatLiteralACSd_tcfc\">init(floatLiteral:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONV12arrayLiteralACypd_tcfc\">init(arrayLiteral:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONV8rawValueACSgyp_tcfc\">init(rawValue:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONV4fromACs7Decoder_p_tKcfc\">init(from:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>let dictionary: [<Type usr=\"s:SS\">String<\/Type> : Any]<\/Declaration>",
                "key.column" : 13,
                "key.decl_lang" : "source.lang.swift",
                "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>dictionary<\/decl.name>: <decl.var.type>[<ref.struct usr=\"s:SS\">String<\/ref.struct> : <syntaxtype.keyword>Any<\/syntaxtype.keyword>]<\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 75,
                "key.line" : 516,
                "key.name" : "dictionary",
                "key.namelength" : 10,
                "key.nameoffset" : 15385,
                "key.offset" : 15381,
                "key.parsed_declaration" : "let dictionary = elements.reduce(into: [String: Any](), { $0[$1.0] = $1.1})",
                "key.parsed_scope.end" : 516,
                "key.parsed_scope.start" : 516,
                "key.typename" : "[String : Any]",
                "key.typeusr" : "$sSDySSypGD",
                "key.usr" : "s:11FWFramework6FWJSONV17dictionaryLiteralACSS_yptd_tcfc0C0L_SDySSypGvp"
              }
            ],
            "key.typename" : "(FWJSON.Type) -> ((String, Any)...) -> FWJSON",
            "key.typeusr" : "$s17dictionaryLiteral11FWFramework6FWJSONVSS_yptd_tcD",
            "key.usr" : "s:s30ExpressibleByDictionaryLiteralP010dictionaryD0x3KeyQz_5ValueQztd_tcfc"
          }
        ],
        "key.typename" : "FWJSON.Type",
        "key.typeusr" : "$s11FWFramework6FWJSONVmD",
        "key.usr" : "s:11FWFramework6FWJSONV"
      },
      {
        "key.annotated_decl" : "<Declaration>public struct FWJSON<\/Declaration>",
        "key.bodylength" : 85,
        "key.bodyoffset" : 15547,
        "key.column" : 15,
        "key.decl_lang" : "source.lang.swift",
        "key.doc.column" : 15,
        "key.doc.declaration" : "public struct FWJSON",
        "key.doc.discussion" : [
          {
            "List-Bullet" : ""
          }
        ],
        "key.doc.file" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift\" line=\"73\" column=\"15\"><Name>FWJSON<\/Name><USR>s:11FWFramework6FWJSONV<\/USR><Declaration>public struct FWJSON<\/Declaration><CommentParts><Abstract><Para>FWJSON<\/Para><\/Abstract><Discussion><List-Bullet><Item><Para>see: <Link href=\"https:\/\/github.com\/SwiftyJSON\/SwiftyJSON\">SwiftyJSON<\/Link><\/Para><\/Item><\/List-Bullet><\/Discussion><\/CommentParts><\/Class>",
        "key.doc.line" : 73,
        "key.doc.name" : "FWJSON",
        "key.doc.type" : "Class",
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 31,
            "key.offset" : 15514
          }
        ],
        "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift",
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>FWJSON<\/decl.name><\/decl.struct>",
        "key.inheritedtypes" : [
          {
            "key.name" : "Swift.ExpressibleByArrayLiteral"
          }
        ],
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 137,
        "key.line" : 73,
        "key.name" : "FWJSON",
        "key.namelength" : 6,
        "key.nameoffset" : 15506,
        "key.offset" : 15496,
        "key.parsed_declaration" : "extension FWJSON: Swift.ExpressibleByArrayLiteral",
        "key.parsed_scope.end" : 526,
        "key.parsed_scope.start" : 521,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public init(arrayLiteral elements: Any...)<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 15553
              }
            ],
            "key.bodylength" : 33,
            "key.bodyoffset" : 15597,
            "key.column" : 12,
            "key.decl_lang" : "source.lang.swift",
            "key.doc.declaration" : "init(arrayLiteral elements: Self.ArrayLiteralElement...)",
            "key.doc.discussion" : [
              {
                "Note" : ""
              }
            ],
            "key.doc.full_as_xml" : "<Function><Name>init(arrayLiteral:)<\/Name><USR>s:s25ExpressibleByArrayLiteralP05arrayD0x0cD7ElementQzd_tcfc<\/USR><Declaration>init(arrayLiteral elements: Self.ArrayLiteralElement...)<\/Declaration><CommentParts><Abstract><Para>Creates an instance initialized with the given elements.<\/Para><\/Abstract><Discussion><Note><Para>This documentation comment was inherited from <codeVoice>ExpressibleByArrayLiteral<\/codeVoice>.<\/Para><\/Note><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.name" : "init(arrayLiteral:)",
            "key.doc.type" : "Function",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift",
            "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>init<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>arrayLiteral<\/decl.var.parameter.argument_label> <decl.var.parameter.name>elements<\/decl.var.parameter.name>: <decl.var.parameter.type><syntaxtype.keyword>Any<\/syntaxtype.keyword><\/decl.var.parameter.type>...<\/decl.var.parameter>)<\/decl.function.constructor>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 71,
            "key.line" : 523,
            "key.name" : "init(arrayLiteral:)",
            "key.namelength" : 35,
            "key.nameoffset" : 15560,
            "key.offset" : 15560,
            "key.overrides" : [
              {
                "key.usr" : "s:s25ExpressibleByArrayLiteralP05arrayD0x0cD7ElementQzd_tcfc"
              }
            ],
            "key.parsed_declaration" : "public init(arrayLiteral elements: Any...)",
            "key.parsed_scope.end" : 525,
            "key.parsed_scope.start" : 523,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONV4data7optionsAC10Foundation4DataV_So20NSJSONReadingOptionsVtKcfc\">init(data:options:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONVyACypcfc\">init(_:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONV9parseJSONACSS_tcfc\">init(parseJSON:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONV10jsonObjectACyp_tc33_CE7FCE31305580F7F6A923B7611B8BA6Llfc\">init(jsonObject:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONV13stringLiteralACSS_tcfc\">init(stringLiteral:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONV30extendedGraphemeClusterLiteralACSS_tcfc\">init(extendedGraphemeClusterLiteral:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONV20unicodeScalarLiteralACSS_tcfc\">init(unicodeScalarLiteral:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONV14integerLiteralACSi_tcfc\">init(integerLiteral:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONV14booleanLiteralACSb_tcfc\">init(booleanLiteral:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONV12floatLiteralACSd_tcfc\">init(floatLiteral:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONV17dictionaryLiteralACSS_yptd_tcfc\">init(dictionaryLiteral:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONV8rawValueACSgyp_tcfc\">init(rawValue:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONV4fromACs7Decoder_p_tKcfc\">init(from:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "(FWJSON.Type) -> (Any...) -> FWJSON",
            "key.typeusr" : "$s12arrayLiteral11FWFramework6FWJSONVypd_tcD",
            "key.usr" : "s:s25ExpressibleByArrayLiteralP05arrayD0x0cD7ElementQzd_tcfc"
          }
        ],
        "key.typename" : "FWJSON.Type",
        "key.typeusr" : "$s11FWFramework6FWJSONVmD",
        "key.usr" : "s:11FWFramework6FWJSONV"
      },
      {
        "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
        "key.length" : 11,
        "key.name" : "MARK: - Raw",
        "key.namelength" : 0,
        "key.nameoffset" : 0,
        "key.offset" : 15638
      },
      {
        "key.annotated_decl" : "<Declaration>public struct FWJSON<\/Declaration>",
        "key.bodylength" : 4948,
        "key.bodyoffset" : 15693,
        "key.column" : 15,
        "key.decl_lang" : "source.lang.swift",
        "key.doc.column" : 15,
        "key.doc.declaration" : "public struct FWJSON",
        "key.doc.discussion" : [
          {
            "List-Bullet" : ""
          }
        ],
        "key.doc.file" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift\" line=\"73\" column=\"15\"><Name>FWJSON<\/Name><USR>s:11FWFramework6FWJSONV<\/USR><Declaration>public struct FWJSON<\/Declaration><CommentParts><Abstract><Para>FWJSON<\/Para><\/Abstract><Discussion><List-Bullet><Item><Para>see: <Link href=\"https:\/\/github.com\/SwiftyJSON\/SwiftyJSON\">SwiftyJSON<\/Link><\/Para><\/Item><\/List-Bullet><\/Discussion><\/CommentParts><\/Class>",
        "key.doc.line" : 73,
        "key.doc.name" : "FWJSON",
        "key.doc.type" : "Class",
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 22,
            "key.offset" : 15669
          }
        ],
        "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift",
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>FWJSON<\/decl.name><\/decl.struct>",
        "key.inheritedtypes" : [
          {
            "key.name" : "Swift.RawRepresentable"
          }
        ],
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 4991,
        "key.line" : 73,
        "key.name" : "FWJSON",
        "key.namelength" : 6,
        "key.nameoffset" : 15661,
        "key.offset" : 15651,
        "key.parsed_declaration" : "extension FWJSON: Swift.RawRepresentable",
        "key.parsed_scope.end" : 647,
        "key.parsed_scope.start" : 530,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public init?(rawValue: Any)<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 15699
              }
            ],
            "key.bodylength" : 134,
            "key.bodyoffset" : 15728,
            "key.column" : 12,
            "key.decl_lang" : "source.lang.swift",
            "key.doc.declaration" : "init?(rawValue: Self.RawValue)",
            "key.doc.discussion" : [
              {
                "Para" : "If there is no value of the type that corresponds with the specified raw value, this initializer returns `nil`. For example:"
              },
              {
                "CodeListing" : ""
              },
              {
                "Note" : ""
              }
            ],
            "key.doc.full_as_xml" : "<Function><Name>init(rawValue:)<\/Name><USR>s:SY8rawValuexSg03RawB0Qz_tcfc<\/USR><Declaration>init?(rawValue: Self.RawValue)<\/Declaration><CommentParts><Abstract><Para>Creates a new instance with the specified raw value.<\/Para><\/Abstract><Parameters><Parameter><Name>rawValue<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The raw value to use for the new instance.<\/Para><\/Discussion><\/Parameter><\/Parameters><Discussion><Para>If there is no value of the type that corresponds with the specified raw value, this initializer returns <codeVoice>nil<\/codeVoice>. For example:<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[enum PaperSize: String {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    case A4, A5, Letter, Legal]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(PaperSize(rawValue: \"Legal\"))]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"Optional(\"PaperSize.Legal\")\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(PaperSize(rawValue: \"Tabloid\"))]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"nil\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Note><Para>This documentation comment was inherited from <codeVoice>RawRepresentable<\/codeVoice>.<\/Para><\/Note><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.name" : "init(rawValue:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "The raw value to use for the new instance."
                  }
                ],
                "name" : "rawValue"
              }
            ],
            "key.doc.type" : "Function",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift",
            "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>init<\/syntaxtype.keyword>?(<decl.var.parameter><decl.var.parameter.argument_label>rawValue<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><syntaxtype.keyword>Any<\/syntaxtype.keyword><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.constructor>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 157,
            "key.line" : 532,
            "key.name" : "init(rawValue:)",
            "key.namelength" : 20,
            "key.nameoffset" : 15706,
            "key.offset" : 15706,
            "key.overrides" : [
              {
                "key.usr" : "s:SY8rawValuexSg03RawB0Qz_tcfc"
              }
            ],
            "key.parsed_declaration" : "public init?(rawValue: Any)",
            "key.parsed_scope.end" : 538,
            "key.parsed_scope.start" : 532,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONV4data7optionsAC10Foundation4DataV_So20NSJSONReadingOptionsVtKcfc\">init(data:options:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONVyACypcfc\">init(_:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONV9parseJSONACSS_tcfc\">init(parseJSON:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONV10jsonObjectACyp_tc33_CE7FCE31305580F7F6A923B7611B8BA6Llfc\">init(jsonObject:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONV13stringLiteralACSS_tcfc\">init(stringLiteral:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONV30extendedGraphemeClusterLiteralACSS_tcfc\">init(extendedGraphemeClusterLiteral:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONV20unicodeScalarLiteralACSS_tcfc\">init(unicodeScalarLiteral:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONV14integerLiteralACSi_tcfc\">init(integerLiteral:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONV14booleanLiteralACSb_tcfc\">init(booleanLiteral:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONV12floatLiteralACSd_tcfc\">init(floatLiteral:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONV17dictionaryLiteralACSS_yptd_tcfc\">init(dictionaryLiteral:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONV12arrayLiteralACypd_tcfc\">init(arrayLiteral:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONV4fromACs7Decoder_p_tKcfc\">init(from:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "(FWJSON.Type) -> (Any) -> FWJSON?",
            "key.typeusr" : "$s8rawValue11FWFramework6FWJSONVSgyp_tcD",
            "key.usr" : "s:SY8rawValuexSg03RawB0Qz_tcfc"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var rawValue: Any { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 15869
              }
            ],
            "key.bodylength" : 27,
            "key.bodyoffset" : 15895,
            "key.column" : 16,
            "key.decl_lang" : "source.lang.swift",
            "key.doc.declaration" : "var rawValue: Self.RawValue { get }",
            "key.doc.discussion" : [
              {
                "Para" : "A new instance initialized with `rawValue` will be equivalent to this instance. For example:"
              },
              {
                "CodeListing" : ""
              },
              {
                "Note" : ""
              }
            ],
            "key.doc.full_as_xml" : "<Other><Name>rawValue<\/Name><USR>s:SY8rawValue03RawB0Qzvp<\/USR><Declaration>var rawValue: Self.RawValue { get }<\/Declaration><CommentParts><Abstract><Para>The corresponding value of the raw type.<\/Para><\/Abstract><Discussion><Para>A new instance initialized with <codeVoice>rawValue<\/codeVoice> will be equivalent to this instance. For example:<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[enum PaperSize: String {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    case A4, A5, Letter, Legal]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let selectedSize = PaperSize.Letter]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(selectedSize.rawValue)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"Letter\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(selectedSize == PaperSize(rawValue: selectedSize.rawValue)!)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"true\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Note><Para>This documentation comment was inherited from <codeVoice>RawRepresentable<\/codeVoice>.<\/Para><\/Note><\/Discussion><\/CommentParts><\/Other>",
            "key.doc.name" : "rawValue",
            "key.doc.type" : "Other",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>rawValue<\/decl.name>: <decl.var.type><syntaxtype.keyword>Any<\/syntaxtype.keyword><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 47,
            "key.line" : 540,
            "key.name" : "rawValue",
            "key.namelength" : 8,
            "key.nameoffset" : 15880,
            "key.offset" : 15876,
            "key.overrides" : [
              {
                "key.usr" : "s:SY8rawValue03RawB0Qzvp"
              }
            ],
            "key.parsed_declaration" : "public var rawValue: Any",
            "key.parsed_scope.end" : 542,
            "key.parsed_scope.start" : 540,
            "key.typename" : "Any",
            "key.typeusr" : "$sypD",
            "key.usr" : "s:SY8rawValue03RawB0Qzvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func rawData(options opt: <Type usr=\"c:objc(cs)NSJSONSerialization\">JSONSerialization<\/Type>.<Type usr=\"c:@E@NSJSONWritingOptions\">WritingOptions<\/Type> = JSONSerialization.WritingOptions(rawValue: 0)) throws -&gt; <Type usr=\"s:10Foundation4DataV\">Data<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 15929
              }
            ],
            "key.bodylength" : 203,
            "key.bodyoffset" : 16060,
            "key.column" : 17,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>rawData<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>options<\/decl.var.parameter.argument_label> <decl.var.parameter.name>opt<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"c:objc(cs)NSJSONSerialization\">JSONSerialization<\/ref.class>.<ref.struct usr=\"c:@E@NSJSONWritingOptions\">WritingOptions<\/ref.struct><\/decl.var.parameter.type> = JSONSerialization.WritingOptions(rawValue: 0)<\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><ref.struct usr=\"s:10Foundation4DataV\">Data<\/ref.struct><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 328,
            "key.line" : 544,
            "key.name" : "rawData(options:)",
            "key.namelength" : 102,
            "key.nameoffset" : 15941,
            "key.offset" : 15936,
            "key.parsed_declaration" : "public func rawData(options opt: JSONSerialization.WritingOptions = JSONSerialization.WritingOptions(rawValue: 0)) throws -> Data",
            "key.parsed_scope.end" : 550,
            "key.parsed_scope.start" : 544,
            "key.substructure" : [

            ],
            "key.typename" : "(FWJSON) -> (JSONSerialization.WritingOptions) throws -> Data",
            "key.typeusr" : "$s7options10Foundation4DataVSo20NSJSONWritingOptionsV_tKcD",
            "key.usr" : "s:11FWFramework6FWJSONV7rawData7options10Foundation0D0VSo20NSJSONWritingOptionsV_tKF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func rawString(_ encoding: <Type usr=\"s:SS\">String<\/Type>.<Type usr=\"s:SS10FoundationE8EncodingV\">Encoding<\/Type> = .utf8, options opt: <Type usr=\"c:objc(cs)NSJSONSerialization\">JSONSerialization<\/Type>.<Type usr=\"c:@E@NSJSONWritingOptions\">WritingOptions<\/Type> = .prettyPrinted) -&gt; <Type usr=\"s:SS\">String<\/Type>?<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 16270
              }
            ],
            "key.bodylength" : 242,
            "key.bodyoffset" : 16405,
            "key.column" : 17,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>rawString<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>encoding<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct>.<ref.struct usr=\"s:SS10FoundationE8EncodingV\">Encoding<\/ref.struct><\/decl.var.parameter.type> = .utf8<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>options<\/decl.var.parameter.argument_label> <decl.var.parameter.name>opt<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"c:objc(cs)NSJSONSerialization\">JSONSerialization<\/ref.class>.<ref.struct usr=\"c:@E@NSJSONWritingOptions\">WritingOptions<\/ref.struct><\/decl.var.parameter.type> = .prettyPrinted<\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:SS\">String<\/ref.struct>?<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 371,
            "key.line" : 552,
            "key.name" : "rawString(_:options:)",
            "key.namelength" : 110,
            "key.nameoffset" : 16282,
            "key.offset" : 16277,
            "key.parsed_declaration" : "public func rawString(_ encoding: String.Encoding = .utf8, options opt: JSONSerialization.WritingOptions = .prettyPrinted) -> String?",
            "key.parsed_scope.end" : 559,
            "key.parsed_scope.start" : 552,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONV9rawString33_CE7FCE31305580F7F6A923B7611B8BA6LLSSvp\">rawString<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONV9rawStringySSSgSDyAA24FWJSONWritingOptionsKeysOypGF\">rawString(_:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "(FWJSON) -> (String.Encoding, JSONSerialization.WritingOptions) -> String?",
            "key.typeusr" : "$s_7optionsSSSgSS10FoundationE8EncodingV_So20NSJSONWritingOptionsVtcD",
            "key.usr" : "s:11FWFramework6FWJSONV9rawString_7optionsSSSgSS10FoundationE8EncodingV_So20NSJSONWritingOptionsVtF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func rawString(_ options: [<Type usr=\"s:11FWFramework24FWJSONWritingOptionsKeysO\">FWJSONWritingOptionsKeys<\/Type> : Any]) -&gt; <Type usr=\"s:SS\">String<\/Type>?<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 16654
              }
            ],
            "key.bodylength" : 410,
            "key.bodyoffset" : 16732,
            "key.column" : 17,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>rawString<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>options<\/decl.var.parameter.name>: <decl.var.parameter.type>[<ref.enum usr=\"s:11FWFramework24FWJSONWritingOptionsKeysO\">FWJSONWritingOptionsKeys<\/ref.enum> : <syntaxtype.keyword>Any<\/syntaxtype.keyword>]<\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:SS\">String<\/ref.struct>?<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 482,
            "key.line" : 561,
            "key.name" : "rawString(_:)",
            "key.namelength" : 53,
            "key.nameoffset" : 16666,
            "key.offset" : 16661,
            "key.parsed_declaration" : "public func rawString(_ options: [FWJSONWritingOptionsKeys: Any]) -> String?",
            "key.parsed_scope.end" : 570,
            "key.parsed_scope.start" : 561,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONV9rawString33_CE7FCE31305580F7F6A923B7611B8BA6LLSSvp\">rawString<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONV9rawString_7optionsSSSgSS10FoundationE8EncodingV_So20NSJSONWritingOptionsVtF\">rawString(_:options:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>let encoding: <Type usr=\"s:SS\">String<\/Type>.<Type usr=\"s:SS10FoundationE8EncodingV\">Encoding<\/Type><\/Declaration>",
                "key.column" : 13,
                "key.decl_lang" : "source.lang.swift",
                "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>encoding<\/decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String<\/ref.struct>.<ref.struct usr=\"s:SS10FoundationE8EncodingV\">Encoding<\/ref.struct><\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 77,
                "key.line" : 562,
                "key.name" : "encoding",
                "key.namelength" : 8,
                "key.nameoffset" : 16745,
                "key.offset" : 16741,
                "key.parsed_declaration" : "let encoding = options[.encoding] as? String.Encoding ?? String.Encoding.utf8",
                "key.parsed_scope.end" : 562,
                "key.parsed_scope.start" : 562,
                "key.typename" : "String.Encoding",
                "key.typeusr" : "$sSS10FoundationE8EncodingVD",
                "key.usr" : "s:11FWFramework6FWJSONV9rawStringySSSgSDyAA24FWJSONWritingOptionsKeysOypGF8encodingL_SS10FoundationE8EncodingVvp"
              },
              {
                "key.annotated_decl" : "<Declaration>let maxObjectDepth: <Type usr=\"s:Si\">Int<\/Type><\/Declaration>",
                "key.column" : 13,
                "key.decl_lang" : "source.lang.swift",
                "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>maxObjectDepth<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 59,
                "key.line" : 563,
                "key.name" : "maxObjectDepth",
                "key.namelength" : 14,
                "key.nameoffset" : 16831,
                "key.offset" : 16827,
                "key.parsed_declaration" : "let maxObjectDepth = options[.maxObjextDepth] as? Int ?? 10",
                "key.parsed_scope.end" : 563,
                "key.parsed_scope.start" : 563,
                "key.typename" : "Int",
                "key.typeusr" : "$sSiD",
                "key.usr" : "s:11FWFramework6FWJSONV9rawStringySSSgSDyAA24FWJSONWritingOptionsKeysOypGF14maxObjectDepthL_Sivp"
              }
            ],
            "key.typename" : "(FWJSON) -> ([FWJSONWritingOptionsKeys : Any]) -> String?",
            "key.typeusr" : "$sySSSgSDy11FWFramework24FWJSONWritingOptionsKeysOypGcD",
            "key.usr" : "s:11FWFramework6FWJSONV9rawStringySSSgSDyAA24FWJSONWritingOptionsKeysOypGF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.fileprivate",
            "key.annotated_decl" : "<Declaration>fileprivate func _rawString(_ encoding: <Type usr=\"s:SS\">String<\/Type>.<Type usr=\"s:SS10FoundationE8EncodingV\">Encoding<\/Type> = .utf8, options: [<Type usr=\"s:11FWFramework24FWJSONWritingOptionsKeysO\">FWJSONWritingOptionsKeys<\/Type> : Any], maxObjectDepth: <Type usr=\"s:Si\">Int<\/Type> = 10) throws -&gt; <Type usr=\"s:SS\">String<\/Type>?<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.fileprivate",
                "key.length" : 11,
                "key.offset" : 17149
              }
            ],
            "key.bodylength" : 3338,
            "key.bodyoffset" : 17301,
            "key.column" : 22,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>fileprivate<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>_rawString<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>encoding<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct>.<ref.struct usr=\"s:SS10FoundationE8EncodingV\">Encoding<\/ref.struct><\/decl.var.parameter.type> = .utf8<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>options<\/decl.var.parameter.argument_label>: <decl.var.parameter.type>[<ref.enum usr=\"s:11FWFramework24FWJSONWritingOptionsKeysO\">FWJSONWritingOptionsKeys<\/ref.enum> : <syntaxtype.keyword>Any<\/syntaxtype.keyword>]<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>maxObjectDepth<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type> = 10<\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><ref.struct usr=\"s:SS\">String<\/ref.struct>?<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 3479,
            "key.line" : 572,
            "key.name" : "_rawString(_:options:maxObjectDepth:)",
            "key.namelength" : 115,
            "key.nameoffset" : 17166,
            "key.offset" : 17161,
            "key.parsed_declaration" : "fileprivate func _rawString(_ encoding: String.Encoding = .utf8, options: [FWJSONWritingOptionsKeys: Any], maxObjectDepth: Int = 10) throws -> String?",
            "key.parsed_scope.end" : 646,
            "key.parsed_scope.start" : 572,
            "key.substructure" : [

            ],
            "key.typename" : "(FWJSON) -> (String.Encoding, [FWJSONWritingOptionsKeys : Any], Int) throws -> String?",
            "key.typeusr" : "$s_7options14maxObjectDepthSSSgSS10FoundationE8EncodingV_SDy11FWFramework24FWJSONWritingOptionsKeysOypGSitKcD",
            "key.usr" : "s:11FWFramework6FWJSONV10_rawString33_CE7FCE31305580F7F6A923B7611B8BA6LL_7options14maxObjectDepthSSSgSS10FoundationE8EncodingV_SDyAA24FWJSONWritingOptionsKeysOypGSitKF"
          }
        ],
        "key.typename" : "FWJSON.Type",
        "key.typeusr" : "$s11FWFramework6FWJSONVmD",
        "key.usr" : "s:11FWFramework6FWJSONV"
      },
      {
        "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
        "key.length" : 33,
        "key.name" : "MARK: - Printable, DebugPrintable",
        "key.namelength" : 0,
        "key.nameoffset" : 0,
        "key.offset" : 20647
      },
      {
        "key.annotated_decl" : "<Declaration>public struct FWJSON<\/Declaration>",
        "key.bodylength" : 184,
        "key.bodyoffset" : 20767,
        "key.column" : 15,
        "key.decl_lang" : "source.lang.swift",
        "key.doc.column" : 15,
        "key.doc.declaration" : "public struct FWJSON",
        "key.doc.discussion" : [
          {
            "List-Bullet" : ""
          }
        ],
        "key.doc.file" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift\" line=\"73\" column=\"15\"><Name>FWJSON<\/Name><USR>s:11FWFramework6FWJSONV<\/USR><Declaration>public struct FWJSON<\/Declaration><CommentParts><Abstract><Para>FWJSON<\/Para><\/Abstract><Discussion><List-Bullet><Item><Para>see: <Link href=\"https:\/\/github.com\/SwiftyJSON\/SwiftyJSON\">SwiftyJSON<\/Link><\/Para><\/Item><\/List-Bullet><\/Discussion><\/CommentParts><\/Class>",
        "key.doc.line" : 73,
        "key.doc.name" : "FWJSON",
        "key.doc.type" : "Class",
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 29,
            "key.offset" : 20700
          },
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 34,
            "key.offset" : 20731
          }
        ],
        "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift",
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>FWJSON<\/decl.name><\/decl.struct>",
        "key.inheritedtypes" : [
          {
            "key.name" : "Swift.CustomStringConvertible"
          },
          {
            "key.name" : "Swift.CustomDebugStringConvertible"
          }
        ],
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 270,
        "key.line" : 73,
        "key.name" : "FWJSON",
        "key.namelength" : 6,
        "key.nameoffset" : 20692,
        "key.offset" : 20682,
        "key.parsed_declaration" : "extension FWJSON: Swift.CustomStringConvertible, Swift.CustomDebugStringConvertible",
        "key.parsed_scope.end" : 660,
        "key.parsed_scope.start" : 651,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var description: <Type usr=\"s:SS\">String<\/Type> { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 20773
              }
            ],
            "key.bodylength" : 68,
            "key.bodyoffset" : 20805,
            "key.column" : 16,
            "key.decl_lang" : "source.lang.swift",
            "key.doc.declaration" : "var description: String { get }",
            "key.doc.discussion" : [
              {
                "Para" : "Calling this property directly is discouraged. Instead, convert an instance of any type to a string by using the `String(describing:)` initializer. This initializer works with any type, and uses the custom `description` property for types that conform to `CustomStringConvertible`:"
              },
              {
                "CodeListing" : ""
              },
              {
                "Para" : "The conversion of `p` to a string in the assignment to `s` uses the `Point` type’s `description` property."
              },
              {
                "Note" : ""
              }
            ],
            "key.doc.full_as_xml" : "<Other><Name>description<\/Name><USR>s:s23CustomStringConvertibleP11descriptionSSvp<\/USR><Declaration>var description: String { get }<\/Declaration><CommentParts><Abstract><Para>A textual representation of this instance.<\/Para><\/Abstract><Discussion><Para>Calling this property directly is discouraged. Instead, convert an instance of any type to a string by using the <codeVoice>String(describing:)<\/codeVoice> initializer. This initializer works with any type, and uses the custom <codeVoice>description<\/codeVoice> property for types that conform to <codeVoice>CustomStringConvertible<\/codeVoice>:<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[struct Point: CustomStringConvertible {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    let x: Int, y: Int]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    var description: String {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        return \"(\\(x), \\(y))\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    }]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let p = Point(x: 21, y: 30)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let s = String(describing: p)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(s)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"(21, 30)\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>The conversion of <codeVoice>p<\/codeVoice> to a string in the assignment to <codeVoice>s<\/codeVoice> uses the <codeVoice>Point<\/codeVoice> type’s <codeVoice>description<\/codeVoice> property.<\/Para><Note><Para>This documentation comment was inherited from <codeVoice>CustomStringConvertible<\/codeVoice>.<\/Para><\/Note><\/Discussion><\/CommentParts><\/Other>",
            "key.doc.name" : "description",
            "key.doc.type" : "Other",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>description<\/decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 94,
            "key.line" : 653,
            "key.name" : "description",
            "key.namelength" : 11,
            "key.nameoffset" : 20784,
            "key.offset" : 20780,
            "key.overrides" : [
              {
                "key.usr" : "s:s23CustomStringConvertibleP11descriptionSSvp"
              }
            ],
            "key.parsed_declaration" : "public var description: String",
            "key.parsed_scope.end" : 655,
            "key.parsed_scope.start" : 653,
            "key.typename" : "String",
            "key.typeusr" : "$sSSD",
            "key.usr" : "s:s23CustomStringConvertibleP11descriptionSSvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var debugDescription: <Type usr=\"s:SS\">String<\/Type> { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 20880
              }
            ],
            "key.bodylength" : 32,
            "key.bodyoffset" : 20917,
            "key.column" : 16,
            "key.decl_lang" : "source.lang.swift",
            "key.doc.declaration" : "var debugDescription: String { get }",
            "key.doc.discussion" : [
              {
                "Para" : "Calling this property directly is discouraged. Instead, convert an instance of any type to a string by using the `String(reflecting:)` initializer. This initializer works with any type, and uses the custom `debugDescription` property for types that conform to `CustomDebugStringConvertible`:"
              },
              {
                "CodeListing" : ""
              },
              {
                "Para" : "The conversion of `p` to a string in the assignment to `s` uses the `Point` type’s `debugDescription` property."
              },
              {
                "Note" : ""
              }
            ],
            "key.doc.full_as_xml" : "<Other><Name>debugDescription<\/Name><USR>s:s28CustomDebugStringConvertibleP16debugDescriptionSSvp<\/USR><Declaration>var debugDescription: String { get }<\/Declaration><CommentParts><Abstract><Para>A textual representation of this instance, suitable for debugging.<\/Para><\/Abstract><Discussion><Para>Calling this property directly is discouraged. Instead, convert an instance of any type to a string by using the <codeVoice>String(reflecting:)<\/codeVoice> initializer. This initializer works with any type, and uses the custom <codeVoice>debugDescription<\/codeVoice> property for types that conform to <codeVoice>CustomDebugStringConvertible<\/codeVoice>:<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[struct Point: CustomDebugStringConvertible {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    let x: Int, y: Int]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    var debugDescription: String {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        return \"(\\(x), \\(y))\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    }]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let p = Point(x: 21, y: 30)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let s = String(reflecting: p)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(s)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"(21, 30)\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>The conversion of <codeVoice>p<\/codeVoice> to a string in the assignment to <codeVoice>s<\/codeVoice> uses the <codeVoice>Point<\/codeVoice> type’s <codeVoice>debugDescription<\/codeVoice> property.<\/Para><Note><Para>This documentation comment was inherited from <codeVoice>CustomDebugStringConvertible<\/codeVoice>.<\/Para><\/Note><\/Discussion><\/CommentParts><\/Other>",
            "key.doc.name" : "debugDescription",
            "key.doc.type" : "Other",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>debugDescription<\/decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 63,
            "key.line" : 657,
            "key.name" : "debugDescription",
            "key.namelength" : 16,
            "key.nameoffset" : 20891,
            "key.offset" : 20887,
            "key.overrides" : [
              {
                "key.usr" : "s:s28CustomDebugStringConvertibleP16debugDescriptionSSvp"
              }
            ],
            "key.parsed_declaration" : "public var debugDescription: String",
            "key.parsed_scope.end" : 659,
            "key.parsed_scope.start" : 657,
            "key.typename" : "String",
            "key.typeusr" : "$sSSD",
            "key.usr" : "s:s28CustomDebugStringConvertibleP16debugDescriptionSSvp"
          }
        ],
        "key.typename" : "FWJSON.Type",
        "key.typeusr" : "$s11FWFramework6FWJSONVmD",
        "key.usr" : "s:11FWFramework6FWJSONV"
      },
      {
        "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
        "key.length" : 13,
        "key.name" : "MARK: - Array",
        "key.namelength" : 0,
        "key.nameoffset" : 0,
        "key.offset" : 20957
      },
      {
        "key.annotated_decl" : "<Declaration>public struct FWJSON<\/Declaration>",
        "key.bodylength" : 510,
        "key.bodyoffset" : 20990,
        "key.column" : 15,
        "key.decl_lang" : "source.lang.swift",
        "key.doc.column" : 15,
        "key.doc.declaration" : "public struct FWJSON",
        "key.doc.discussion" : [
          {
            "List-Bullet" : ""
          }
        ],
        "key.doc.file" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift\" line=\"73\" column=\"15\"><Name>FWJSON<\/Name><USR>s:11FWFramework6FWJSONV<\/USR><Declaration>public struct FWJSON<\/Declaration><CommentParts><Abstract><Para>FWJSON<\/Para><\/Abstract><Discussion><List-Bullet><Item><Para>see: <Link href=\"https:\/\/github.com\/SwiftyJSON\/SwiftyJSON\">SwiftyJSON<\/Link><\/Para><\/Item><\/List-Bullet><\/Discussion><\/CommentParts><\/Class>",
        "key.doc.line" : 73,
        "key.doc.name" : "FWJSON",
        "key.doc.type" : "Class",
        "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift",
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>FWJSON<\/decl.name><\/decl.struct>",
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 529,
        "key.line" : 73,
        "key.name" : "FWJSON",
        "key.namelength" : 6,
        "key.nameoffset" : 20982,
        "key.offset" : 20972,
        "key.parsed_declaration" : "extension FWJSON",
        "key.parsed_scope.end" : 688,
        "key.parsed_scope.start" : 664,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var array: [<Type usr=\"s:11FWFramework6FWJSONV\">FWJSON<\/Type>]? { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 21018
              }
            ],
            "key.bodylength" : 71,
            "key.bodyoffset" : 21047,
            "key.column" : 16,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>array<\/decl.name>: <decl.var.type>[<ref.struct usr=\"s:11FWFramework6FWJSONV\">FWJSON<\/ref.struct>]?<\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 94,
            "key.line" : 667,
            "key.name" : "array",
            "key.namelength" : 5,
            "key.nameoffset" : 21029,
            "key.offset" : 21025,
            "key.parsed_declaration" : "public var array: [FWJSON]?",
            "key.parsed_scope.end" : 669,
            "key.parsed_scope.start" : 667,
            "key.typename" : "[FWJSON]?",
            "key.typeusr" : "$sSay11FWFramework6FWJSONVGSgD",
            "key.usr" : "s:11FWFramework6FWJSONV5arraySayACGSgvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var arrayValue: [<Type usr=\"s:11FWFramework6FWJSONV\">FWJSON<\/Type>] { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 21151
              }
            ],
            "key.bodylength" : 37,
            "key.bodyoffset" : 21184,
            "key.column" : 16,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>arrayValue<\/decl.name>: <decl.var.type>[<ref.struct usr=\"s:11FWFramework6FWJSONV\">FWJSON<\/ref.struct>]<\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 64,
            "key.line" : 672,
            "key.name" : "arrayValue",
            "key.namelength" : 10,
            "key.nameoffset" : 21162,
            "key.offset" : 21158,
            "key.parsed_declaration" : "public var arrayValue: [FWJSON]",
            "key.parsed_scope.end" : 674,
            "key.parsed_scope.start" : 672,
            "key.typename" : "[FWJSON]",
            "key.typeusr" : "$sSay11FWFramework6FWJSONVGD",
            "key.usr" : "s:11FWFramework6FWJSONV10arrayValueSayACGvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var arrayObject: [Any]? { get set }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 21249
              }
            ],
            "key.bodylength" : 217,
            "key.bodyoffset" : 21281,
            "key.column" : 16,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>arrayObject<\/decl.name>: <decl.var.type>[<syntaxtype.keyword>Any<\/syntaxtype.keyword>]?<\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> <syntaxtype.keyword>set<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 243,
            "key.line" : 677,
            "key.name" : "arrayObject",
            "key.namelength" : 11,
            "key.nameoffset" : 21260,
            "key.offset" : 21256,
            "key.parsed_declaration" : "public var arrayObject: [Any]?",
            "key.parsed_scope.end" : 687,
            "key.parsed_scope.start" : 677,
            "key.setter_accessibility" : "source.lang.swift.accessibility.public",
            "key.typename" : "[Any]?",
            "key.typeusr" : "$sSayypGSgD",
            "key.usr" : "s:11FWFramework6FWJSONV11arrayObjectSayypGSgvp"
          }
        ],
        "key.typename" : "FWJSON.Type",
        "key.typeusr" : "$s11FWFramework6FWJSONVmD",
        "key.usr" : "s:11FWFramework6FWJSONV"
      },
      {
        "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
        "key.length" : 18,
        "key.name" : "MARK: - Dictionary",
        "key.namelength" : 0,
        "key.nameoffset" : 0,
        "key.offset" : 21506
      },
      {
        "key.annotated_decl" : "<Declaration>public struct FWJSON<\/Declaration>",
        "key.bodylength" : 808,
        "key.bodyoffset" : 21544,
        "key.column" : 15,
        "key.decl_lang" : "source.lang.swift",
        "key.doc.column" : 15,
        "key.doc.declaration" : "public struct FWJSON",
        "key.doc.discussion" : [
          {
            "List-Bullet" : ""
          }
        ],
        "key.doc.file" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift\" line=\"73\" column=\"15\"><Name>FWJSON<\/Name><USR>s:11FWFramework6FWJSONV<\/USR><Declaration>public struct FWJSON<\/Declaration><CommentParts><Abstract><Para>FWJSON<\/Para><\/Abstract><Discussion><List-Bullet><Item><Para>see: <Link href=\"https:\/\/github.com\/SwiftyJSON\/SwiftyJSON\">SwiftyJSON<\/Link><\/Para><\/Item><\/List-Bullet><\/Discussion><\/CommentParts><\/Class>",
        "key.doc.line" : 73,
        "key.doc.name" : "FWJSON",
        "key.doc.type" : "Class",
        "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift",
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>FWJSON<\/decl.name><\/decl.struct>",
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 827,
        "key.line" : 73,
        "key.name" : "FWJSON",
        "key.namelength" : 6,
        "key.nameoffset" : 21536,
        "key.offset" : 21526,
        "key.parsed_declaration" : "extension FWJSON",
        "key.parsed_scope.end" : 725,
        "key.parsed_scope.start" : 692,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var dictionary: [<Type usr=\"s:SS\">String<\/Type> : <Type usr=\"s:11FWFramework6FWJSONV\">FWJSON<\/Type>]? { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 21581
              }
            ],
            "key.bodylength" : 291,
            "key.bodyoffset" : 21623,
            "key.column" : 16,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>dictionary<\/decl.name>: <decl.var.type>[<ref.struct usr=\"s:SS\">String<\/ref.struct> : <ref.struct usr=\"s:11FWFramework6FWJSONV\">FWJSON<\/ref.struct>]?<\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 327,
            "key.line" : 695,
            "key.name" : "dictionary",
            "key.namelength" : 10,
            "key.nameoffset" : 21592,
            "key.offset" : 21588,
            "key.parsed_declaration" : "public var dictionary: [String: FWJSON]?",
            "key.parsed_scope.end" : 705,
            "key.parsed_scope.start" : 695,
            "key.typename" : "[String : FWJSON]?",
            "key.typeusr" : "$sSDySS11FWFramework6FWJSONVGSgD",
            "key.usr" : "s:11FWFramework6FWJSONV10dictionarySDySSACGSgvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var dictionaryValue: [<Type usr=\"s:SS\">String<\/Type> : <Type usr=\"s:11FWFramework6FWJSONV\">FWJSON<\/Type>] { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 21956
              }
            ],
            "key.bodylength" : 38,
            "key.bodyoffset" : 22002,
            "key.column" : 16,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>dictionaryValue<\/decl.name>: <decl.var.type>[<ref.struct usr=\"s:SS\">String<\/ref.struct> : <ref.struct usr=\"s:11FWFramework6FWJSONV\">FWJSON<\/ref.struct>]<\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 78,
            "key.line" : 708,
            "key.name" : "dictionaryValue",
            "key.namelength" : 15,
            "key.nameoffset" : 21967,
            "key.offset" : 21963,
            "key.parsed_declaration" : "public var dictionaryValue: [String: FWJSON]",
            "key.parsed_scope.end" : 710,
            "key.parsed_scope.start" : 708,
            "key.typename" : "[String : FWJSON]",
            "key.typeusr" : "$sSDySS11FWFramework6FWJSONVGD",
            "key.usr" : "s:11FWFramework6FWJSONV15dictionaryValueSDySSACGvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var dictionaryObject: [<Type usr=\"s:SS\">String<\/Type> : Any]? { get set }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 22078
              }
            ],
            "key.bodylength" : 227,
            "key.bodyoffset" : 22123,
            "key.column" : 16,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>dictionaryObject<\/decl.name>: <decl.var.type>[<ref.struct usr=\"s:SS\">String<\/ref.struct> : <syntaxtype.keyword>Any<\/syntaxtype.keyword>]?<\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> <syntaxtype.keyword>set<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 266,
            "key.line" : 714,
            "key.name" : "dictionaryObject",
            "key.namelength" : 16,
            "key.nameoffset" : 22089,
            "key.offset" : 22085,
            "key.parsed_declaration" : "public var dictionaryObject: [String: Any]?",
            "key.parsed_scope.end" : 724,
            "key.parsed_scope.start" : 714,
            "key.setter_accessibility" : "source.lang.swift.accessibility.public",
            "key.typename" : "[String : Any]?",
            "key.typeusr" : "$sSDySSypGSgD",
            "key.usr" : "s:11FWFramework6FWJSONV16dictionaryObjectSDySSypGSgvp"
          }
        ],
        "key.typename" : "FWJSON.Type",
        "key.typeusr" : "$s11FWFramework6FWJSONVmD",
        "key.usr" : "s:11FWFramework6FWJSONV"
      },
      {
        "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
        "key.length" : 12,
        "key.name" : "MARK: - Bool",
        "key.namelength" : 0,
        "key.nameoffset" : 0,
        "key.offset" : 22358
      },
      {
        "key.annotated_decl" : "<Declaration>public struct FWJSON<\/Declaration>",
        "key.bodylength" : 722,
        "key.bodyoffset" : 22390,
        "key.column" : 15,
        "key.decl_lang" : "source.lang.swift",
        "key.doc.column" : 15,
        "key.doc.declaration" : "public struct FWJSON",
        "key.doc.discussion" : [
          {
            "List-Bullet" : ""
          }
        ],
        "key.doc.file" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift\" line=\"73\" column=\"15\"><Name>FWJSON<\/Name><USR>s:11FWFramework6FWJSONV<\/USR><Declaration>public struct FWJSON<\/Declaration><CommentParts><Abstract><Para>FWJSON<\/Para><\/Abstract><Discussion><List-Bullet><Item><Para>see: <Link href=\"https:\/\/github.com\/SwiftyJSON\/SwiftyJSON\">SwiftyJSON<\/Link><\/Para><\/Item><\/List-Bullet><\/Discussion><\/CommentParts><\/Class>",
        "key.doc.line" : 73,
        "key.doc.name" : "FWJSON",
        "key.doc.type" : "Class",
        "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift",
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>FWJSON<\/decl.name><\/decl.struct>",
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 741,
        "key.line" : 73,
        "key.name" : "FWJSON",
        "key.namelength" : 6,
        "key.nameoffset" : 22382,
        "key.offset" : 22372,
        "key.parsed_declaration" : "extension FWJSON",
        "key.parsed_scope.end" : 758,
        "key.parsed_scope.start" : 729,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var bool: <Type usr=\"s:Sb\">Bool<\/Type>? { get set }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 22432
              }
            ],
            "key.bodylength" : 209,
            "key.bodyoffset" : 22456,
            "key.column" : 16,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>bool<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool<\/ref.struct>?<\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> <syntaxtype.keyword>set<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 227,
            "key.line" : 732,
            "key.name" : "bool",
            "key.namelength" : 4,
            "key.nameoffset" : 22443,
            "key.offset" : 22439,
            "key.parsed_declaration" : "public var bool: Bool?",
            "key.parsed_scope.end" : 742,
            "key.parsed_scope.start" : 732,
            "key.setter_accessibility" : "source.lang.swift.accessibility.public",
            "key.typename" : "Bool?",
            "key.typeusr" : "$sSbSgD",
            "key.usr" : "s:11FWFramework6FWJSONV4boolSbSgvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var boolValue: <Type usr=\"s:Sb\">Bool<\/Type> { get set }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 22696
              }
            ],
            "key.bodylength" : 386,
            "key.bodyoffset" : 22724,
            "key.column" : 16,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>boolValue<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> <syntaxtype.keyword>set<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 408,
            "key.line" : 745,
            "key.name" : "boolValue",
            "key.namelength" : 9,
            "key.nameoffset" : 22707,
            "key.offset" : 22703,
            "key.parsed_declaration" : "public var boolValue: Bool",
            "key.parsed_scope.end" : 757,
            "key.parsed_scope.start" : 745,
            "key.setter_accessibility" : "source.lang.swift.accessibility.public",
            "key.typename" : "Bool",
            "key.typeusr" : "$sSbD",
            "key.usr" : "s:11FWFramework6FWJSONV9boolValueSbvp"
          }
        ],
        "key.typename" : "FWJSON.Type",
        "key.typeusr" : "$s11FWFramework6FWJSONVmD",
        "key.usr" : "s:11FWFramework6FWJSONV"
      },
      {
        "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
        "key.length" : 14,
        "key.name" : "MARK: - String",
        "key.namelength" : 0,
        "key.nameoffset" : 0,
        "key.offset" : 23118
      },
      {
        "key.annotated_decl" : "<Declaration>public struct FWJSON<\/Declaration>",
        "key.bodylength" : 693,
        "key.bodyoffset" : 23152,
        "key.column" : 15,
        "key.decl_lang" : "source.lang.swift",
        "key.doc.column" : 15,
        "key.doc.declaration" : "public struct FWJSON",
        "key.doc.discussion" : [
          {
            "List-Bullet" : ""
          }
        ],
        "key.doc.file" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift\" line=\"73\" column=\"15\"><Name>FWJSON<\/Name><USR>s:11FWFramework6FWJSONV<\/USR><Declaration>public struct FWJSON<\/Declaration><CommentParts><Abstract><Para>FWJSON<\/Para><\/Abstract><Discussion><List-Bullet><Item><Para>see: <Link href=\"https:\/\/github.com\/SwiftyJSON\/SwiftyJSON\">SwiftyJSON<\/Link><\/Para><\/Item><\/List-Bullet><\/Discussion><\/CommentParts><\/Class>",
        "key.doc.line" : 73,
        "key.doc.name" : "FWJSON",
        "key.doc.type" : "Class",
        "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift",
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>FWJSON<\/decl.name><\/decl.struct>",
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 712,
        "key.line" : 73,
        "key.name" : "FWJSON",
        "key.namelength" : 6,
        "key.nameoffset" : 23144,
        "key.offset" : 23134,
        "key.parsed_declaration" : "extension FWJSON",
        "key.parsed_scope.end" : 791,
        "key.parsed_scope.start" : 762,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var string: <Type usr=\"s:SS\">String<\/Type>? { get set }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 23180
              }
            ],
            "key.bodylength" : 223,
            "key.bodyoffset" : 23208,
            "key.column" : 16,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>string<\/decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String<\/ref.struct>?<\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> <syntaxtype.keyword>set<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 245,
            "key.line" : 765,
            "key.name" : "string",
            "key.namelength" : 6,
            "key.nameoffset" : 23191,
            "key.offset" : 23187,
            "key.parsed_declaration" : "public var string: String?",
            "key.parsed_scope.end" : 775,
            "key.parsed_scope.start" : 765,
            "key.setter_accessibility" : "source.lang.swift.accessibility.public",
            "key.typename" : "String?",
            "key.typeusr" : "$sSSSgD",
            "key.usr" : "s:11FWFramework6FWJSONV6stringSSSgvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var stringValue: <Type usr=\"s:SS\">String<\/Type> { get set }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 23464
              }
            ],
            "key.bodylength" : 347,
            "key.bodyoffset" : 23496,
            "key.column" : 16,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>stringValue<\/decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> <syntaxtype.keyword>set<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 373,
            "key.line" : 778,
            "key.name" : "stringValue",
            "key.namelength" : 11,
            "key.nameoffset" : 23475,
            "key.offset" : 23471,
            "key.parsed_declaration" : "public var stringValue: String",
            "key.parsed_scope.end" : 790,
            "key.parsed_scope.start" : 778,
            "key.setter_accessibility" : "source.lang.swift.accessibility.public",
            "key.typename" : "String",
            "key.typeusr" : "$sSSD",
            "key.usr" : "s:11FWFramework6FWJSONV11stringValueSSvp"
          }
        ],
        "key.typename" : "FWJSON.Type",
        "key.typeusr" : "$s11FWFramework6FWJSONVmD",
        "key.usr" : "s:11FWFramework6FWJSONV"
      },
      {
        "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
        "key.length" : 14,
        "key.name" : "MARK: - Number",
        "key.namelength" : 0,
        "key.nameoffset" : 0,
        "key.offset" : 23851
      },
      {
        "key.annotated_decl" : "<Declaration>public struct FWJSON<\/Declaration>",
        "key.bodylength" : 882,
        "key.bodyoffset" : 23885,
        "key.column" : 15,
        "key.decl_lang" : "source.lang.swift",
        "key.doc.column" : 15,
        "key.doc.declaration" : "public struct FWJSON",
        "key.doc.discussion" : [
          {
            "List-Bullet" : ""
          }
        ],
        "key.doc.file" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift\" line=\"73\" column=\"15\"><Name>FWJSON<\/Name><USR>s:11FWFramework6FWJSONV<\/USR><Declaration>public struct FWJSON<\/Declaration><CommentParts><Abstract><Para>FWJSON<\/Para><\/Abstract><Discussion><List-Bullet><Item><Para>see: <Link href=\"https:\/\/github.com\/SwiftyJSON\/SwiftyJSON\">SwiftyJSON<\/Link><\/Para><\/Item><\/List-Bullet><\/Discussion><\/CommentParts><\/Class>",
        "key.doc.line" : 73,
        "key.doc.name" : "FWJSON",
        "key.doc.type" : "Class",
        "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift",
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>FWJSON<\/decl.name><\/decl.struct>",
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 901,
        "key.line" : 73,
        "key.name" : "FWJSON",
        "key.namelength" : 6,
        "key.nameoffset" : 23877,
        "key.offset" : 23867,
        "key.parsed_declaration" : "extension FWJSON",
        "key.parsed_scope.end" : 827,
        "key.parsed_scope.start" : 795,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var number: <Type usr=\"c:objc(cs)NSNumber\">NSNumber<\/Type>? { get set }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 23913
              }
            ],
            "key.bodylength" : 281,
            "key.bodyoffset" : 23943,
            "key.column" : 16,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>number<\/decl.name>: <decl.var.type><ref.class usr=\"c:objc(cs)NSNumber\">NSNumber<\/ref.class>?<\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> <syntaxtype.keyword>set<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 305,
            "key.line" : 798,
            "key.name" : "number",
            "key.namelength" : 6,
            "key.nameoffset" : 23924,
            "key.offset" : 23920,
            "key.parsed_declaration" : "public var number: NSNumber?",
            "key.parsed_scope.end" : 809,
            "key.parsed_scope.start" : 798,
            "key.setter_accessibility" : "source.lang.swift.accessibility.public",
            "key.typename" : "NSNumber?",
            "key.typeusr" : "$sSo8NSNumberCSgD",
            "key.usr" : "s:11FWFramework6FWJSONV6numberSo8NSNumberCSgvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var numberValue: <Type usr=\"c:objc(cs)NSNumber\">NSNumber<\/Type> { get set }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 24257
              }
            ],
            "key.bodylength" : 474,
            "key.bodyoffset" : 24291,
            "key.column" : 16,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>numberValue<\/decl.name>: <decl.var.type><ref.class usr=\"c:objc(cs)NSNumber\">NSNumber<\/ref.class><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> <syntaxtype.keyword>set<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 502,
            "key.line" : 812,
            "key.name" : "numberValue",
            "key.namelength" : 11,
            "key.nameoffset" : 24268,
            "key.offset" : 24264,
            "key.parsed_declaration" : "public var numberValue: NSNumber",
            "key.parsed_scope.end" : 826,
            "key.parsed_scope.start" : 812,
            "key.setter_accessibility" : "source.lang.swift.accessibility.public",
            "key.typename" : "NSNumber",
            "key.typeusr" : "$sSo8NSNumberCD",
            "key.usr" : "s:11FWFramework6FWJSONV11numberValueSo8NSNumberCvp"
          }
        ],
        "key.typename" : "FWJSON.Type",
        "key.typeusr" : "$s11FWFramework6FWJSONVmD",
        "key.usr" : "s:11FWFramework6FWJSONV"
      },
      {
        "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
        "key.length" : 12,
        "key.name" : "MARK: - Null",
        "key.namelength" : 0,
        "key.nameoffset" : 0,
        "key.offset" : 24773
      },
      {
        "key.annotated_decl" : "<Declaration>public struct FWJSON<\/Declaration>",
        "key.bodylength" : 408,
        "key.bodyoffset" : 24805,
        "key.column" : 15,
        "key.decl_lang" : "source.lang.swift",
        "key.doc.column" : 15,
        "key.doc.declaration" : "public struct FWJSON",
        "key.doc.discussion" : [
          {
            "List-Bullet" : ""
          }
        ],
        "key.doc.file" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift\" line=\"73\" column=\"15\"><Name>FWJSON<\/Name><USR>s:11FWFramework6FWJSONV<\/USR><Declaration>public struct FWJSON<\/Declaration><CommentParts><Abstract><Para>FWJSON<\/Para><\/Abstract><Discussion><List-Bullet><Item><Para>see: <Link href=\"https:\/\/github.com\/SwiftyJSON\/SwiftyJSON\">SwiftyJSON<\/Link><\/Para><\/Item><\/List-Bullet><\/Discussion><\/CommentParts><\/Class>",
        "key.doc.line" : 73,
        "key.doc.name" : "FWJSON",
        "key.doc.type" : "Class",
        "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift",
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>FWJSON<\/decl.name><\/decl.struct>",
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 427,
        "key.line" : 73,
        "key.name" : "FWJSON",
        "key.namelength" : 6,
        "key.nameoffset" : 24797,
        "key.offset" : 24787,
        "key.parsed_declaration" : "extension FWJSON",
        "key.parsed_scope.end" : 850,
        "key.parsed_scope.start" : 831,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var null: <Type usr=\"c:objc(cs)NSNull\">NSNull<\/Type>? { get set }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 24811
              }
            ],
            "key.bodylength" : 197,
            "key.bodyoffset" : 24837,
            "key.column" : 16,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>null<\/decl.name>: <decl.var.type><ref.class usr=\"c:objc(cs)NSNull\">NSNull<\/ref.class>?<\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> <syntaxtype.keyword>set<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 217,
            "key.line" : 833,
            "key.name" : "null",
            "key.namelength" : 4,
            "key.nameoffset" : 24822,
            "key.offset" : 24818,
            "key.parsed_declaration" : "public var null: NSNull?",
            "key.parsed_scope.end" : 843,
            "key.parsed_scope.start" : 833,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONV4nullACvpZ\">null<\/RelatedName>"
              }
            ],
            "key.setter_accessibility" : "source.lang.swift.accessibility.public",
            "key.typename" : "NSNull?",
            "key.typeusr" : "$sSo6NSNullCSgD",
            "key.usr" : "s:11FWFramework6FWJSONV4nullSo6NSNullCSgvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func exists() -&gt; <Type usr=\"s:Sb\">Bool<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 25040
              }
            ],
            "key.bodylength" : 141,
            "key.bodyoffset" : 25070,
            "key.column" : 17,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>exists<\/decl.name>() -&gt; <decl.function.returntype><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 165,
            "key.line" : 844,
            "key.name" : "exists()",
            "key.namelength" : 8,
            "key.nameoffset" : 25052,
            "key.offset" : 25047,
            "key.parsed_declaration" : "public func exists() -> Bool",
            "key.parsed_scope.end" : 849,
            "key.parsed_scope.start" : 844,
            "key.substructure" : [

            ],
            "key.typename" : "(FWJSON) -> () -> Bool",
            "key.typeusr" : "$sSbycD",
            "key.usr" : "s:11FWFramework6FWJSONV6existsSbyF"
          }
        ],
        "key.typename" : "FWJSON.Type",
        "key.typeusr" : "$s11FWFramework6FWJSONVmD",
        "key.usr" : "s:11FWFramework6FWJSONV"
      },
      {
        "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
        "key.length" : 11,
        "key.name" : "MARK: - URL",
        "key.namelength" : 0,
        "key.nameoffset" : 0,
        "key.offset" : 25219
      },
      {
        "key.annotated_decl" : "<Declaration>public struct FWJSON<\/Declaration>",
        "key.bodylength" : 934,
        "key.bodyoffset" : 25250,
        "key.column" : 15,
        "key.decl_lang" : "source.lang.swift",
        "key.doc.column" : 15,
        "key.doc.declaration" : "public struct FWJSON",
        "key.doc.discussion" : [
          {
            "List-Bullet" : ""
          }
        ],
        "key.doc.file" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift\" line=\"73\" column=\"15\"><Name>FWJSON<\/Name><USR>s:11FWFramework6FWJSONV<\/USR><Declaration>public struct FWJSON<\/Declaration><CommentParts><Abstract><Para>FWJSON<\/Para><\/Abstract><Discussion><List-Bullet><Item><Para>see: <Link href=\"https:\/\/github.com\/SwiftyJSON\/SwiftyJSON\">SwiftyJSON<\/Link><\/Para><\/Item><\/List-Bullet><\/Discussion><\/CommentParts><\/Class>",
        "key.doc.line" : 73,
        "key.doc.name" : "FWJSON",
        "key.doc.type" : "Class",
        "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift",
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>FWJSON<\/decl.name><\/decl.struct>",
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 953,
        "key.line" : 73,
        "key.name" : "FWJSON",
        "key.namelength" : 6,
        "key.nameoffset" : 25242,
        "key.offset" : 25232,
        "key.parsed_declaration" : "extension FWJSON",
        "key.parsed_scope.end" : 878,
        "key.parsed_scope.start" : 854,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var url: <Type usr=\"s:10Foundation3URLV\">URL<\/Type>? { get set }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 25275
              }
            ],
            "key.bodylength" : 885,
            "key.bodyoffset" : 25297,
            "key.column" : 16,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>url<\/decl.name>: <decl.var.type><ref.struct usr=\"s:10Foundation3URLV\">URL<\/ref.struct>?<\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> <syntaxtype.keyword>set<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 901,
            "key.line" : 857,
            "key.name" : "url",
            "key.namelength" : 3,
            "key.nameoffset" : 25286,
            "key.offset" : 25282,
            "key.parsed_declaration" : "public var url: URL?",
            "key.parsed_scope.end" : 877,
            "key.parsed_scope.start" : 857,
            "key.setter_accessibility" : "source.lang.swift.accessibility.public",
            "key.typename" : "URL?",
            "key.typeusr" : "$s10Foundation3URLVSgD",
            "key.usr" : "s:11FWFramework6FWJSONV3url10Foundation3URLVSgvp"
          }
        ],
        "key.typename" : "FWJSON.Type",
        "key.typeusr" : "$s11FWFramework6FWJSONVmD",
        "key.usr" : "s:11FWFramework6FWJSONV"
      },
      {
        "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
        "key.length" : 53,
        "key.name" : "MARK: - Int, Double, Float, Int8, Int16, Int32, Int64",
        "key.namelength" : 0,
        "key.nameoffset" : 0,
        "key.offset" : 26190
      },
      {
        "key.annotated_decl" : "<Declaration>public struct FWJSON<\/Declaration>",
        "key.bodylength" : 5587,
        "key.bodyoffset" : 26263,
        "key.column" : 15,
        "key.decl_lang" : "source.lang.swift",
        "key.doc.column" : 15,
        "key.doc.declaration" : "public struct FWJSON",
        "key.doc.discussion" : [
          {
            "List-Bullet" : ""
          }
        ],
        "key.doc.file" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift\" line=\"73\" column=\"15\"><Name>FWJSON<\/Name><USR>s:11FWFramework6FWJSONV<\/USR><Declaration>public struct FWJSON<\/Declaration><CommentParts><Abstract><Para>FWJSON<\/Para><\/Abstract><Discussion><List-Bullet><Item><Para>see: <Link href=\"https:\/\/github.com\/SwiftyJSON\/SwiftyJSON\">SwiftyJSON<\/Link><\/Para><\/Item><\/List-Bullet><\/Discussion><\/CommentParts><\/Class>",
        "key.doc.line" : 73,
        "key.doc.name" : "FWJSON",
        "key.doc.type" : "Class",
        "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift",
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>FWJSON<\/decl.name><\/decl.struct>",
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 5606,
        "key.line" : 73,
        "key.name" : "FWJSON",
        "key.namelength" : 6,
        "key.nameoffset" : 26255,
        "key.offset" : 26245,
        "key.parsed_declaration" : "extension FWJSON",
        "key.parsed_scope.end" : 1147,
        "key.parsed_scope.start" : 882,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var double: <Type usr=\"s:Sd\">Double<\/Type>? { get set }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 26269
              }
            ],
            "key.bodylength" : 253,
            "key.bodyoffset" : 26297,
            "key.column" : 16,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>double<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Sd\">Double<\/ref.struct>?<\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> <syntaxtype.keyword>set<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 275,
            "key.line" : 884,
            "key.name" : "double",
            "key.namelength" : 6,
            "key.nameoffset" : 26280,
            "key.offset" : 26276,
            "key.parsed_declaration" : "public var double: Double?",
            "key.parsed_scope.end" : 895,
            "key.parsed_scope.start" : 884,
            "key.setter_accessibility" : "source.lang.swift.accessibility.public",
            "key.typename" : "Double?",
            "key.typeusr" : "$sSdSgD",
            "key.usr" : "s:11FWFramework6FWJSONV6doubleSdSgvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var doubleValue: <Type usr=\"s:Sd\">Double<\/Type> { get set }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 26557
              }
            ],
            "key.bodylength" : 143,
            "key.bodyoffset" : 26589,
            "key.column" : 16,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>doubleValue<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Sd\">Double<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> <syntaxtype.keyword>set<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 169,
            "key.line" : 897,
            "key.name" : "doubleValue",
            "key.namelength" : 11,
            "key.nameoffset" : 26568,
            "key.offset" : 26564,
            "key.parsed_declaration" : "public var doubleValue: Double",
            "key.parsed_scope.end" : 904,
            "key.parsed_scope.start" : 897,
            "key.setter_accessibility" : "source.lang.swift.accessibility.public",
            "key.typename" : "Double",
            "key.typeusr" : "$sSdD",
            "key.usr" : "s:11FWFramework6FWJSONV11doubleValueSdvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var float: <Type usr=\"s:Sf\">Float<\/Type>? { get set }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 26739
              }
            ],
            "key.bodylength" : 252,
            "key.bodyoffset" : 26765,
            "key.column" : 16,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>float<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Sf\">Float<\/ref.struct>?<\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> <syntaxtype.keyword>set<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 272,
            "key.line" : 906,
            "key.name" : "float",
            "key.namelength" : 5,
            "key.nameoffset" : 26750,
            "key.offset" : 26746,
            "key.parsed_declaration" : "public var float: Float?",
            "key.parsed_scope.end" : 917,
            "key.parsed_scope.start" : 906,
            "key.setter_accessibility" : "source.lang.swift.accessibility.public",
            "key.typename" : "Float?",
            "key.typeusr" : "$sSfSgD",
            "key.usr" : "s:11FWFramework6FWJSONV5floatSfSgvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var floatValue: <Type usr=\"s:Sf\">Float<\/Type> { get set }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 27024
              }
            ],
            "key.bodylength" : 142,
            "key.bodyoffset" : 27054,
            "key.column" : 16,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>floatValue<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Sf\">Float<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> <syntaxtype.keyword>set<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 166,
            "key.line" : 919,
            "key.name" : "floatValue",
            "key.namelength" : 10,
            "key.nameoffset" : 27035,
            "key.offset" : 27031,
            "key.parsed_declaration" : "public var floatValue: Float",
            "key.parsed_scope.end" : 926,
            "key.parsed_scope.start" : 919,
            "key.setter_accessibility" : "source.lang.swift.accessibility.public",
            "key.typename" : "Float",
            "key.typeusr" : "$sSfD",
            "key.usr" : "s:11FWFramework6FWJSONV10floatValueSfvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var int: <Type usr=\"s:Si\">Int<\/Type>? { get set }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 27203
              }
            ],
            "key.bodylength" : 250,
            "key.bodyoffset" : 27225,
            "key.column" : 16,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>int<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int<\/ref.struct>?<\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> <syntaxtype.keyword>set<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 266,
            "key.line" : 928,
            "key.name" : "int",
            "key.namelength" : 3,
            "key.nameoffset" : 27214,
            "key.offset" : 27210,
            "key.parsed_declaration" : "public var int: Int?",
            "key.parsed_scope.end" : 939,
            "key.parsed_scope.start" : 928,
            "key.setter_accessibility" : "source.lang.swift.accessibility.public",
            "key.typename" : "Int?",
            "key.typeusr" : "$sSiSgD",
            "key.usr" : "s:11FWFramework6FWJSONV3intSiSgvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var intValue: <Type usr=\"s:Si\">Int<\/Type> { get set }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 27482
              }
            ],
            "key.bodylength" : 140,
            "key.bodyoffset" : 27508,
            "key.column" : 16,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>intValue<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> <syntaxtype.keyword>set<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 160,
            "key.line" : 941,
            "key.name" : "intValue",
            "key.namelength" : 8,
            "key.nameoffset" : 27493,
            "key.offset" : 27489,
            "key.parsed_declaration" : "public var intValue: Int",
            "key.parsed_scope.end" : 948,
            "key.parsed_scope.start" : 941,
            "key.setter_accessibility" : "source.lang.swift.accessibility.public",
            "key.typename" : "Int",
            "key.typeusr" : "$sSiD",
            "key.usr" : "s:11FWFramework6FWJSONV8intValueSivp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var uInt: <Type usr=\"s:Su\">UInt<\/Type>? { get set }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 27655
              }
            ],
            "key.bodylength" : 251,
            "key.bodyoffset" : 27679,
            "key.column" : 16,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>uInt<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Su\">UInt<\/ref.struct>?<\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> <syntaxtype.keyword>set<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 269,
            "key.line" : 950,
            "key.name" : "uInt",
            "key.namelength" : 4,
            "key.nameoffset" : 27666,
            "key.offset" : 27662,
            "key.parsed_declaration" : "public var uInt: UInt?",
            "key.parsed_scope.end" : 961,
            "key.parsed_scope.start" : 950,
            "key.setter_accessibility" : "source.lang.swift.accessibility.public",
            "key.typename" : "UInt?",
            "key.typeusr" : "$sSuSgD",
            "key.usr" : "s:11FWFramework6FWJSONV4uIntSuSgvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var uIntValue: <Type usr=\"s:Su\">UInt<\/Type> { get set }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 27937
              }
            ],
            "key.bodylength" : 141,
            "key.bodyoffset" : 27965,
            "key.column" : 16,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>uIntValue<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Su\">UInt<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> <syntaxtype.keyword>set<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 163,
            "key.line" : 963,
            "key.name" : "uIntValue",
            "key.namelength" : 9,
            "key.nameoffset" : 27948,
            "key.offset" : 27944,
            "key.parsed_declaration" : "public var uIntValue: UInt",
            "key.parsed_scope.end" : 970,
            "key.parsed_scope.start" : 963,
            "key.setter_accessibility" : "source.lang.swift.accessibility.public",
            "key.typename" : "UInt",
            "key.typeusr" : "$sSuD",
            "key.usr" : "s:11FWFramework6FWJSONV9uIntValueSuvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var int8: <Type usr=\"s:s4Int8V\">Int8<\/Type>? { get set }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 28113
              }
            ],
            "key.bodylength" : 257,
            "key.bodyoffset" : 28137,
            "key.column" : 16,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>int8<\/decl.name>: <decl.var.type><ref.struct usr=\"s:s4Int8V\">Int8<\/ref.struct>?<\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> <syntaxtype.keyword>set<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 275,
            "key.line" : 972,
            "key.name" : "int8",
            "key.namelength" : 4,
            "key.nameoffset" : 28124,
            "key.offset" : 28120,
            "key.parsed_declaration" : "public var int8: Int8?",
            "key.parsed_scope.end" : 983,
            "key.parsed_scope.start" : 972,
            "key.setter_accessibility" : "source.lang.swift.accessibility.public",
            "key.typename" : "Int8?",
            "key.typeusr" : "$ss4Int8VSgD",
            "key.usr" : "s:11FWFramework6FWJSONV4int8s4Int8VSgvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var int8Value: <Type usr=\"s:s4Int8V\">Int8<\/Type> { get set }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 28401
              }
            ],
            "key.bodylength" : 146,
            "key.bodyoffset" : 28429,
            "key.column" : 16,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>int8Value<\/decl.name>: <decl.var.type><ref.struct usr=\"s:s4Int8V\">Int8<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> <syntaxtype.keyword>set<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 168,
            "key.line" : 985,
            "key.name" : "int8Value",
            "key.namelength" : 9,
            "key.nameoffset" : 28412,
            "key.offset" : 28408,
            "key.parsed_declaration" : "public var int8Value: Int8",
            "key.parsed_scope.end" : 992,
            "key.parsed_scope.start" : 985,
            "key.setter_accessibility" : "source.lang.swift.accessibility.public",
            "key.typename" : "Int8",
            "key.typeusr" : "$ss4Int8VD",
            "key.usr" : "s:11FWFramework6FWJSONV9int8Values4Int8Vvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var uInt8: <Type usr=\"s:s5UInt8V\">UInt8<\/Type>? { get set }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 28582
              }
            ],
            "key.bodylength" : 253,
            "key.bodyoffset" : 28608,
            "key.column" : 16,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>uInt8<\/decl.name>: <decl.var.type><ref.struct usr=\"s:s5UInt8V\">UInt8<\/ref.struct>?<\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> <syntaxtype.keyword>set<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 273,
            "key.line" : 994,
            "key.name" : "uInt8",
            "key.namelength" : 5,
            "key.nameoffset" : 28593,
            "key.offset" : 28589,
            "key.parsed_declaration" : "public var uInt8: UInt8?",
            "key.parsed_scope.end" : 1005,
            "key.parsed_scope.start" : 994,
            "key.setter_accessibility" : "source.lang.swift.accessibility.public",
            "key.typename" : "UInt8?",
            "key.typeusr" : "$ss5UInt8VSgD",
            "key.usr" : "s:11FWFramework6FWJSONV5uInt8s5UInt8VSgvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var uInt8Value: <Type usr=\"s:s5UInt8V\">UInt8<\/Type> { get set }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 28868
              }
            ],
            "key.bodylength" : 142,
            "key.bodyoffset" : 28898,
            "key.column" : 16,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>uInt8Value<\/decl.name>: <decl.var.type><ref.struct usr=\"s:s5UInt8V\">UInt8<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> <syntaxtype.keyword>set<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 166,
            "key.line" : 1007,
            "key.name" : "uInt8Value",
            "key.namelength" : 10,
            "key.nameoffset" : 28879,
            "key.offset" : 28875,
            "key.parsed_declaration" : "public var uInt8Value: UInt8",
            "key.parsed_scope.end" : 1014,
            "key.parsed_scope.start" : 1007,
            "key.setter_accessibility" : "source.lang.swift.accessibility.public",
            "key.typename" : "UInt8",
            "key.typeusr" : "$ss5UInt8VD",
            "key.usr" : "s:11FWFramework6FWJSONV10uInt8Values5UInt8Vvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var int16: <Type usr=\"s:s5Int16V\">Int16<\/Type>? { get set }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 29047
              }
            ],
            "key.bodylength" : 253,
            "key.bodyoffset" : 29073,
            "key.column" : 16,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>int16<\/decl.name>: <decl.var.type><ref.struct usr=\"s:s5Int16V\">Int16<\/ref.struct>?<\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> <syntaxtype.keyword>set<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 273,
            "key.line" : 1016,
            "key.name" : "int16",
            "key.namelength" : 5,
            "key.nameoffset" : 29058,
            "key.offset" : 29054,
            "key.parsed_declaration" : "public var int16: Int16?",
            "key.parsed_scope.end" : 1027,
            "key.parsed_scope.start" : 1016,
            "key.setter_accessibility" : "source.lang.swift.accessibility.public",
            "key.typename" : "Int16?",
            "key.typeusr" : "$ss5Int16VSgD",
            "key.usr" : "s:11FWFramework6FWJSONV5int16s5Int16VSgvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var int16Value: <Type usr=\"s:s5Int16V\">Int16<\/Type> { get set }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 29333
              }
            ],
            "key.bodylength" : 142,
            "key.bodyoffset" : 29363,
            "key.column" : 16,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>int16Value<\/decl.name>: <decl.var.type><ref.struct usr=\"s:s5Int16V\">Int16<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> <syntaxtype.keyword>set<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 166,
            "key.line" : 1029,
            "key.name" : "int16Value",
            "key.namelength" : 10,
            "key.nameoffset" : 29344,
            "key.offset" : 29340,
            "key.parsed_declaration" : "public var int16Value: Int16",
            "key.parsed_scope.end" : 1036,
            "key.parsed_scope.start" : 1029,
            "key.setter_accessibility" : "source.lang.swift.accessibility.public",
            "key.typename" : "Int16",
            "key.typeusr" : "$ss5Int16VD",
            "key.usr" : "s:11FWFramework6FWJSONV10int16Values5Int16Vvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var uInt16: <Type usr=\"s:s6UInt16V\">UInt16<\/Type>? { get set }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 29512
              }
            ],
            "key.bodylength" : 254,
            "key.bodyoffset" : 29540,
            "key.column" : 16,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>uInt16<\/decl.name>: <decl.var.type><ref.struct usr=\"s:s6UInt16V\">UInt16<\/ref.struct>?<\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> <syntaxtype.keyword>set<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 276,
            "key.line" : 1038,
            "key.name" : "uInt16",
            "key.namelength" : 6,
            "key.nameoffset" : 29523,
            "key.offset" : 29519,
            "key.parsed_declaration" : "public var uInt16: UInt16?",
            "key.parsed_scope.end" : 1049,
            "key.parsed_scope.start" : 1038,
            "key.setter_accessibility" : "source.lang.swift.accessibility.public",
            "key.typename" : "UInt16?",
            "key.typeusr" : "$ss6UInt16VSgD",
            "key.usr" : "s:11FWFramework6FWJSONV6uInt16s6UInt16VSgvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var uInt16Value: <Type usr=\"s:s6UInt16V\">UInt16<\/Type> { get set }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 29801
              }
            ],
            "key.bodylength" : 143,
            "key.bodyoffset" : 29833,
            "key.column" : 16,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>uInt16Value<\/decl.name>: <decl.var.type><ref.struct usr=\"s:s6UInt16V\">UInt16<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> <syntaxtype.keyword>set<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 169,
            "key.line" : 1051,
            "key.name" : "uInt16Value",
            "key.namelength" : 11,
            "key.nameoffset" : 29812,
            "key.offset" : 29808,
            "key.parsed_declaration" : "public var uInt16Value: UInt16",
            "key.parsed_scope.end" : 1058,
            "key.parsed_scope.start" : 1051,
            "key.setter_accessibility" : "source.lang.swift.accessibility.public",
            "key.typename" : "UInt16",
            "key.typeusr" : "$ss6UInt16VD",
            "key.usr" : "s:11FWFramework6FWJSONV11uInt16Values6UInt16Vvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var int32: <Type usr=\"s:s5Int32V\">Int32<\/Type>? { get set }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 29983
              }
            ],
            "key.bodylength" : 253,
            "key.bodyoffset" : 30009,
            "key.column" : 16,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>int32<\/decl.name>: <decl.var.type><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct>?<\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> <syntaxtype.keyword>set<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 273,
            "key.line" : 1060,
            "key.name" : "int32",
            "key.namelength" : 5,
            "key.nameoffset" : 29994,
            "key.offset" : 29990,
            "key.parsed_declaration" : "public var int32: Int32?",
            "key.parsed_scope.end" : 1071,
            "key.parsed_scope.start" : 1060,
            "key.setter_accessibility" : "source.lang.swift.accessibility.public",
            "key.typename" : "Int32?",
            "key.typeusr" : "$ss5Int32VSgD",
            "key.usr" : "s:11FWFramework6FWJSONV5int32s5Int32VSgvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var int32Value: <Type usr=\"s:s5Int32V\">Int32<\/Type> { get set }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 30269
              }
            ],
            "key.bodylength" : 142,
            "key.bodyoffset" : 30299,
            "key.column" : 16,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>int32Value<\/decl.name>: <decl.var.type><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> <syntaxtype.keyword>set<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 166,
            "key.line" : 1073,
            "key.name" : "int32Value",
            "key.namelength" : 10,
            "key.nameoffset" : 30280,
            "key.offset" : 30276,
            "key.parsed_declaration" : "public var int32Value: Int32",
            "key.parsed_scope.end" : 1080,
            "key.parsed_scope.start" : 1073,
            "key.setter_accessibility" : "source.lang.swift.accessibility.public",
            "key.typename" : "Int32",
            "key.typeusr" : "$ss5Int32VD",
            "key.usr" : "s:11FWFramework6FWJSONV10int32Values5Int32Vvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var uInt32: <Type usr=\"s:s6UInt32V\">UInt32<\/Type>? { get set }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 30448
              }
            ],
            "key.bodylength" : 254,
            "key.bodyoffset" : 30476,
            "key.column" : 16,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>uInt32<\/decl.name>: <decl.var.type><ref.struct usr=\"s:s6UInt32V\">UInt32<\/ref.struct>?<\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> <syntaxtype.keyword>set<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 276,
            "key.line" : 1082,
            "key.name" : "uInt32",
            "key.namelength" : 6,
            "key.nameoffset" : 30459,
            "key.offset" : 30455,
            "key.parsed_declaration" : "public var uInt32: UInt32?",
            "key.parsed_scope.end" : 1093,
            "key.parsed_scope.start" : 1082,
            "key.setter_accessibility" : "source.lang.swift.accessibility.public",
            "key.typename" : "UInt32?",
            "key.typeusr" : "$ss6UInt32VSgD",
            "key.usr" : "s:11FWFramework6FWJSONV6uInt32s6UInt32VSgvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var uInt32Value: <Type usr=\"s:s6UInt32V\">UInt32<\/Type> { get set }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 30737
              }
            ],
            "key.bodylength" : 143,
            "key.bodyoffset" : 30769,
            "key.column" : 16,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>uInt32Value<\/decl.name>: <decl.var.type><ref.struct usr=\"s:s6UInt32V\">UInt32<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> <syntaxtype.keyword>set<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 169,
            "key.line" : 1095,
            "key.name" : "uInt32Value",
            "key.namelength" : 11,
            "key.nameoffset" : 30748,
            "key.offset" : 30744,
            "key.parsed_declaration" : "public var uInt32Value: UInt32",
            "key.parsed_scope.end" : 1102,
            "key.parsed_scope.start" : 1095,
            "key.setter_accessibility" : "source.lang.swift.accessibility.public",
            "key.typename" : "UInt32",
            "key.typeusr" : "$ss6UInt32VD",
            "key.usr" : "s:11FWFramework6FWJSONV11uInt32Values6UInt32Vvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var int64: <Type usr=\"s:s5Int64V\">Int64<\/Type>? { get set }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 30919
              }
            ],
            "key.bodylength" : 253,
            "key.bodyoffset" : 30945,
            "key.column" : 16,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>int64<\/decl.name>: <decl.var.type><ref.struct usr=\"s:s5Int64V\">Int64<\/ref.struct>?<\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> <syntaxtype.keyword>set<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 273,
            "key.line" : 1104,
            "key.name" : "int64",
            "key.namelength" : 5,
            "key.nameoffset" : 30930,
            "key.offset" : 30926,
            "key.parsed_declaration" : "public var int64: Int64?",
            "key.parsed_scope.end" : 1115,
            "key.parsed_scope.start" : 1104,
            "key.setter_accessibility" : "source.lang.swift.accessibility.public",
            "key.typename" : "Int64?",
            "key.typeusr" : "$ss5Int64VSgD",
            "key.usr" : "s:11FWFramework6FWJSONV5int64s5Int64VSgvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var int64Value: <Type usr=\"s:s5Int64V\">Int64<\/Type> { get set }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 31205
              }
            ],
            "key.bodylength" : 142,
            "key.bodyoffset" : 31235,
            "key.column" : 16,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>int64Value<\/decl.name>: <decl.var.type><ref.struct usr=\"s:s5Int64V\">Int64<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> <syntaxtype.keyword>set<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 166,
            "key.line" : 1117,
            "key.name" : "int64Value",
            "key.namelength" : 10,
            "key.nameoffset" : 31216,
            "key.offset" : 31212,
            "key.parsed_declaration" : "public var int64Value: Int64",
            "key.parsed_scope.end" : 1124,
            "key.parsed_scope.start" : 1117,
            "key.setter_accessibility" : "source.lang.swift.accessibility.public",
            "key.typename" : "Int64",
            "key.typeusr" : "$ss5Int64VD",
            "key.usr" : "s:11FWFramework6FWJSONV10int64Values5Int64Vvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var uInt64: <Type usr=\"s:s6UInt64V\">UInt64<\/Type>? { get set }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 31384
              }
            ],
            "key.bodylength" : 254,
            "key.bodyoffset" : 31412,
            "key.column" : 16,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>uInt64<\/decl.name>: <decl.var.type><ref.struct usr=\"s:s6UInt64V\">UInt64<\/ref.struct>?<\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> <syntaxtype.keyword>set<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 276,
            "key.line" : 1126,
            "key.name" : "uInt64",
            "key.namelength" : 6,
            "key.nameoffset" : 31395,
            "key.offset" : 31391,
            "key.parsed_declaration" : "public var uInt64: UInt64?",
            "key.parsed_scope.end" : 1137,
            "key.parsed_scope.start" : 1126,
            "key.setter_accessibility" : "source.lang.swift.accessibility.public",
            "key.typename" : "UInt64?",
            "key.typeusr" : "$ss6UInt64VSgD",
            "key.usr" : "s:11FWFramework6FWJSONV6uInt64s6UInt64VSgvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var uInt64Value: <Type usr=\"s:s6UInt64V\">UInt64<\/Type> { get set }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 31673
              }
            ],
            "key.bodylength" : 143,
            "key.bodyoffset" : 31705,
            "key.column" : 16,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>uInt64Value<\/decl.name>: <decl.var.type><ref.struct usr=\"s:s6UInt64V\">UInt64<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> <syntaxtype.keyword>set<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 169,
            "key.line" : 1139,
            "key.name" : "uInt64Value",
            "key.namelength" : 11,
            "key.nameoffset" : 31684,
            "key.offset" : 31680,
            "key.parsed_declaration" : "public var uInt64Value: UInt64",
            "key.parsed_scope.end" : 1146,
            "key.parsed_scope.start" : 1139,
            "key.setter_accessibility" : "source.lang.swift.accessibility.public",
            "key.typename" : "UInt64",
            "key.typeusr" : "$ss6UInt64VD",
            "key.usr" : "s:11FWFramework6FWJSONV11uInt64Values6UInt64Vvp"
          }
        ],
        "key.typename" : "FWJSON.Type",
        "key.typeusr" : "$s11FWFramework6FWJSONVmD",
        "key.usr" : "s:11FWFramework6FWJSONV"
      },
      {
        "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
        "key.length" : 18,
        "key.name" : "MARK: - Comparable",
        "key.namelength" : 0,
        "key.nameoffset" : 0,
        "key.offset" : 31856
      },
      {
        "key.annotated_decl" : "<Declaration>public struct FWJSON<\/Declaration>",
        "key.bodylength" : 0,
        "key.bodyoffset" : 31912,
        "key.column" : 15,
        "key.decl_lang" : "source.lang.swift",
        "key.doc.column" : 15,
        "key.doc.declaration" : "public struct FWJSON",
        "key.doc.discussion" : [
          {
            "List-Bullet" : ""
          }
        ],
        "key.doc.file" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift\" line=\"73\" column=\"15\"><Name>FWJSON<\/Name><USR>s:11FWFramework6FWJSONV<\/USR><Declaration>public struct FWJSON<\/Declaration><CommentParts><Abstract><Para>FWJSON<\/Para><\/Abstract><Discussion><List-Bullet><Item><Para>see: <Link href=\"https:\/\/github.com\/SwiftyJSON\/SwiftyJSON\">SwiftyJSON<\/Link><\/Para><\/Item><\/List-Bullet><\/Discussion><\/CommentParts><\/Class>",
        "key.doc.line" : 73,
        "key.doc.name" : "FWJSON",
        "key.doc.type" : "Class",
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 16,
            "key.offset" : 31894
          }
        ],
        "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift",
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>FWJSON<\/decl.name><\/decl.struct>",
        "key.inheritedtypes" : [
          {
            "key.name" : "Swift.Comparable"
          }
        ],
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 37,
        "key.line" : 73,
        "key.name" : "FWJSON",
        "key.namelength" : 6,
        "key.nameoffset" : 31886,
        "key.offset" : 31876,
        "key.parsed_declaration" : "extension FWJSON: Swift.Comparable",
        "key.parsed_scope.end" : 1151,
        "key.parsed_scope.start" : 1151,
        "key.typename" : "FWJSON.Type",
        "key.typeusr" : "$s11FWFramework6FWJSONVmD",
        "key.usr" : "s:11FWFramework6FWJSONV"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public func == (lhs: <Type usr=\"s:11FWFramework6FWJSONV\">FWJSON<\/Type>, rhs: <Type usr=\"s:11FWFramework6FWJSONV\">FWJSON<\/Type>) -&gt; <Type usr=\"s:Sb\">Bool<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 31915
          }
        ],
        "key.bodylength" : 524,
        "key.bodyoffset" : 31966,
        "key.column" : 13,
        "key.decl_lang" : "source.lang.swift",
        "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift",
        "key.fully_annotated_decl" : "<decl.function.operator.infix><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>== <\/decl.name>(<decl.var.parameter><decl.var.parameter.name>lhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:11FWFramework6FWJSONV\">FWJSON<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>rhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:11FWFramework6FWJSONV\">FWJSON<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.function.returntype><\/decl.function.operator.infix>",
        "key.kind" : "source.lang.swift.decl.function.free",
        "key.length" : 569,
        "key.line" : 1153,
        "key.name" : "==(_:_:)",
        "key.namelength" : 29,
        "key.nameoffset" : 31927,
        "key.offset" : 31922,
        "key.parsed_declaration" : "public func == (lhs: FWJSON, rhs: FWJSON) -> Bool",
        "key.parsed_scope.end" : 1164,
        "key.parsed_scope.start" : 1153,
        "key.related_decls" : [
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework7FWIndexO2eeoiySbACyxG_AEtFZ\">== (_: FWIndex, _: FWIndex) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework2eeoiySbSo8NSNumberC_ADtF\">== (_: NSNumber, _: NSNumber) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s2eeoiySbypXpSg_ABtF\">== (_: Any.Type?, _: Any.Type?) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s2eeoiySbx_xtSYRzSQ8RawValueRpzlF\">== &lt;T&gt;(_: T, _: T) -&gt; Bool where T : RawRepresentable, T.RawValue : Equatable<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s2eeoiySbyt_yttF\">== (_: (), _: ()) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s2eeoiySbx_q_t_x_q_ttSQRzSQR_r0_lF\">== &lt;A, B&gt;(_: (A, B), _: (A, B)) -&gt; Bool where A : Equatable, B : Equatable<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s2eeoiySbx_q_q0_t_x_q_q0_ttSQRzSQR_SQR0_r1_lF\">== &lt;A, B, C&gt;(_: (A, B, C), _: (A, B, C)) -&gt; Bool where A : Equatable, B : Equatable, C : Equatable<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s2eeoiySbx_q_q0_q1_t_x_q_q0_q1_ttSQRzSQR_SQR0_SQR1_r2_lF\">== &lt;A, B, C, D&gt;(_: (A, B, C, D), _: (A, B, C, D)) -&gt; Bool where A : Equatable, B : Equatable, C : Equatable, D : Equatable<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s2eeoiySbx_q_q0_q1_q2_t_x_q_q0_q1_q2_ttSQRzSQR_SQR0_SQR1_SQR2_r3_lF\">== &lt;A, B, C, D, E&gt;(_: (A, B, C, D, E), _: (A, B, C, D, E)) -&gt; Bool where A : Equatable, B : Equatable, C : Equatable, D : Equatable, E : Equatable<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s2eeoiySbx_q_q0_q1_q2_q3_t_x_q_q0_q1_q2_q3_ttSQRzSQR_SQR0_SQR1_SQR2_SQR3_r4_lF\">== &lt;A, B, C, D, E, F&gt;(_: (A, B, C, D, E, F), _: (A, B, C, D, E, F)) -&gt; Bool where A : Equatable, B : Equatable, C : Equatable, D : Equatable, E : Equatable, F : Equatable<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SasSQRzlE2eeoiySbSayxG_ABtFZ\">== (_: Array&lt;Element&gt;, _: Array&lt;Element&gt;) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s10ArraySliceVsSQRzlE2eeoiySbAByxG_ADtFZ\">== (_: ArraySlice&lt;Element&gt;, _: ArraySlice&lt;Element&gt;) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sb2eeoiyS2b_SbtFZ\">== (_: Bool, _: Bool) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SJ2eeoiySbSJ_SJtFZ\">== (_: Character, _: Character) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s17CodingUserInfoKeyV2eeoiySbAB_ABtFZ\">== (_: CodingUserInfoKey, _: CodingUserInfoKey) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s15ContiguousArrayVsSQRzlE2eeoiySbAByxG_ADtFZ\">== (_: ContiguousArray&lt;Element&gt;, _: ContiguousArray&lt;Element&gt;) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SNsSxRzSZ6StrideRpzrlE5IndexO2eeoiySbADyx_G_AFtFZ\">== (_: ClosedRange&lt;Bound&gt;.Index, _: ClosedRange&lt;Bound&gt;.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SN2eeoiySbSNyxG_ABtFZ\">== (_: ClosedRange&lt;Bound&gt;, _: ClosedRange&lt;Bound&gt;) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s13OpaquePointerV2eeoiySbAB_ABtFZ\">== (_: OpaquePointer, _: OpaquePointer) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SD4KeysV2eeoiySbAByxq__G_ADtFZ\">== (_: Dictionary&lt;Key, Value&gt;.Keys, _: Dictionary&lt;Key, Value&gt;.Keys) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SDsSQR_rlE2eeoiySbSDyxq_G_ABtFZ\">== (_: [Key : Value], _: [Key : Value]) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SD5IndexV2eeoiySbAByxq__G_ADtFZ\">== (_: Dictionary&lt;Key, Value&gt;.Index, _: Dictionary&lt;Key, Value&gt;.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s15EmptyCollectionV2eeoiySbAByxG_ADtFZ\">== (_: EmptyCollection&lt;Element&gt;, _: EmptyCollection&lt;Element&gt;) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SQ2eeoiySbx_xtFZ\">== (_: Self, _: Self) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s8AnyIndexV2eeoiySbAB_ABtFZ\">== (_: AnyIndex, _: AnyIndex) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s15FlattenSequenceVsSlRzSl7ElementRpzrlE5IndexV2eeoiySbAFyx_G_AHtFZ\">== (_: FlattenCollection&lt;Base&gt;.Index, _: FlattenCollection&lt;Base&gt;.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s17FloatingPointSignO2eeoiySbAB_ABtFZ\">== (_: FloatingPointSign, _: FloatingPointSign) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s27FloatingPointClassificationO2eeoiySbAB_ABtFZ\">== (_: FloatingPointClassification, _: FloatingPointClassification) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s25FloatingPointRoundingRuleO2eeoiySbAB_ABtFZ\">== (_: FloatingPointRoundingRule, _: FloatingPointRoundingRule) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SFsE2eeoiySbx_xtFZ\">== (_: Self, _: Self) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s11AnyHashableV2eeoiySbAB_ABtFZ\">== (_: AnyHashable, _: AnyHashable) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SzsE2eeoiySbx_qd__tSzRd__lFZ\">== &lt;Other&gt;(_: Self, _: Other) -&gt; Bool where Other : BinaryInteger<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s10AnyKeyPathC2eeoiySbAB_ABtFZ\">== (_: AnyKeyPath, _: AnyKeyPath) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s20ManagedBufferPointerV2eeoiySbAByxq_G_ADtFZ\">== (_: ManagedBufferPointer&lt;Header, Element&gt;, _: ManagedBufferPointer&lt;Header, Element&gt;) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s7UnicodeO6ScalarV2eeoiySbAD_ADtFZ\">== (_: Unicode.Scalar, _: Unicode.Scalar) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SO2eeoiySbSO_SOtFZ\">== (_: ObjectIdentifier, _: ObjectIdentifier) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SqsSQRzlE2eeoiySbxSg_ABtFZ\">== (_: Wrapped?, _: Wrapped?) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sq2eeoiySbxSg_s26_OptionalNilComparisonTypeVtFZ\">== (_: Wrapped?, _: _OptionalNilComparisonType) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sq2eeoiySbs26_OptionalNilComparisonTypeV_xSgtFZ\">== (_: _OptionalNilComparisonType, _: Wrapped?) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s8_PointerPsE2eeoiySbx_xtFZ\">== (_: Self, _: Self) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5NeverO2eeoiySbAB_ABtFZ\">== (_: Never, _: Never) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s23LazyPrefixWhileSequenceVsSlRzrlE5IndexV2eeoiySbADyx_G_AFtFZ\">== (_: LazyPrefixWhileCollection&lt;Base&gt;.Index, _: LazyPrefixWhileCollection&lt;Base&gt;.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sn2eeoiySbSnyxG_ABtFZ\">== (_: Range&lt;Bound&gt;, _: Range&lt;Bound&gt;) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6ResultOsSQRzSQR_rlE2eeoiySbAByxq_G_ADtFZ\">== (_: Result&lt;Success, Failure&gt;, _: Result&lt;Success, Failure&gt;) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s18ReversedCollectionV5IndexV2eeoiySbADyx_G_AFtFZ\">== (_: ReversedCollection&lt;Base&gt;.Index, _: ReversedCollection&lt;Base&gt;.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sh2eeoiySbShyxG_ABtFZ\">== (_: Set&lt;Element&gt;, _: Set&lt;Element&gt;) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sh5IndexV2eeoiySbAByx_G_ADtFZ\">== (_: Set&lt;Element&gt;.Index, _: Set&lt;Element&gt;.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SxsE2eeoiySbx_xtFZ\">== (_: Self, _: Self) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SysE2eeoiySbx_qd__tSyRd__lFZ\">== &lt;RHS&gt;(_: Self, _: RHS) -&gt; Bool where RHS : StringProtocol<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SS2eeoiySbSS_SStFZ\">== (_: String, _: String) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SS5IndexV2eeoiySbAB_ABtFZ\">== (_: String.Index, _: String.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s11_UIntBufferV5IndexV2eeoiySbADyx_G_AFtFZ\">== (_: _UIntBuffer&lt;Element&gt;.Index, _: _UIntBuffer&lt;Element&gt;.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s7UnicodeO15GeneralCategoryO2eeoiySbAD_ADtFZ\">== (_: Unicode.GeneralCategory, _: Unicode.GeneralCategory) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s7UnicodeO23CanonicalCombiningClassV2eeoiySbAD_ADtFZ\">== (_: Unicode.CanonicalCombiningClass, _: Unicode.CanonicalCombiningClass) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s7UnicodeO11NumericTypeO2eeoiySbAD_ADtFZ\">== (_: Unicode.NumericType, _: Unicode.NumericType) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s7UnicodeO5UTF32O2eeoiySbAD_ADtFZ\">== (_: Unicode.UTF32, _: Unicode.UTF32) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s21UnicodeDecodingResultO2eeoiySbAB_ABtFZ\">== (_: UnicodeDecodingResult, _: UnicodeDecodingResult) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s16_ValidUTF8BufferV5IndexV2eeoiySbAD_ADtFZ\">== (_: _ValidUTF8Buffer.Index, _: _ValidUTF8Buffer.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s20CollectionDifferenceV5IndexV2eeoiySbADyx_G_AFtFZ\">== (_: CollectionDifference&lt;ChangeElement&gt;.Index, _: CollectionDifference&lt;ChangeElement&gt;.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s20CollectionDifferenceV6ChangeOsSQRzlE2eeoiySbADyx_G_AFtFZ\">== (_: CollectionDifference&lt;ChangeElement&gt;.Change, _: CollectionDifference&lt;ChangeElement&gt;.Change) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s20CollectionDifferenceVsSQRzlE2eeoiySbAByxG_ADtFZ\">== (_: CollectionDifference&lt;ChangeElement&gt;, _: CollectionDifference&lt;ChangeElement&gt;) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6MirrorV12DisplayStyleO2eeoiySbAD_ADtFZ\">== (_: Mirror.DisplayStyle, _: Mirror.DisplayStyle) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s4SIMDPsE2eeoiySbx_xtFZ\">== (_: Self, _: Self) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5UInt8V2eeoiySbAB_ABtFZ\">== (_: UInt8, _: UInt8) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s4Int8V2eeoiySbAB_ABtFZ\">== (_: Int8, _: Int8) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt16V2eeoiySbAB_ABtFZ\">== (_: UInt16, _: UInt16) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int16V2eeoiySbAB_ABtFZ\">== (_: Int16, _: Int16) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt32V2eeoiySbAB_ABtFZ\">== (_: UInt32, _: UInt32) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int32V2eeoiySbAB_ABtFZ\">== (_: Int32, _: Int32) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt64V2eeoiySbAB_ABtFZ\">== (_: UInt64, _: UInt64) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int64V2eeoiySbAB_ABtFZ\">== (_: Int64, _: Int64) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Su2eeoiySbSu_SutFZ\">== (_: UInt, _: UInt) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Si2eeoiySbSi_SitFZ\">== (_: Int, _: Int) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:ScT2eeoiySbScTyxq_G_ABtFZ\">== (_: Task&lt;Success, Failure&gt;, _: Task&lt;Success, Failure&gt;) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:ScP2eeoiySbScP_ScPtFZ\">== (_: TaskPriority, _: TaskPriority) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sct2eeoiySbSct_ScttFZ\">== (_: UnsafeCurrentTask, _: UnsafeCurrentTask) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:ScS12ContinuationV11TerminationO2eeoiySbADyx__G_AFtFZ\">== (_: AsyncStream&lt;Element&gt;.Continuation.Termination, _: AsyncStream&lt;Element&gt;.Continuation.Termination) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation11MeasurementVAASo11NSDimensionCRbzrlE15AttributedStyleV2eeoiySbAGyx_G_AItFZ\">== (_: Measurement&lt;UnitType&gt;.AttributedStyle, _: Measurement&lt;UnitType&gt;.AttributedStyle) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation14DateComponentsV2eeoiySbAC_ACtFZ\">== (_: DateComponents, _: DateComponents) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation20CodableConfigurationVAASQRzrlE2eeoiySbACyxq_G_AEtFZ\">== (_: CodableConfiguration&lt;T, ConfigurationProvider&gt;, _: CodableConfiguration&lt;T, ConfigurationProvider&gt;) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation4DateV19VerbatimFormatStyleV2eeoiySbAE_AEtFZ\">== (_: Date.VerbatimFormatStyle, _: Date.VerbatimFormatStyle) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:So8NSObjectC10FoundationE26KeyValueObservingPublisherV2eeoiySbAEy_xq_G_AGtFZ\">== (_: NSObject.KeyValueObservingPublisher&lt;Subject, Value&gt;, _: NSObject.KeyValueObservingPublisher&lt;Subject, Value&gt;) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation4DateV19RelativeFormatStyleV05UnitsE0V2eeoiySbAG_AGtFZ\">== (_: Date.RelativeFormatStyle.UnitsStyle, _: Date.RelativeFormatStyle.UnitsStyle) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation4DateV19RelativeFormatStyleV12PresentationV2eeoiySbAG_AGtFZ\">== (_: Date.RelativeFormatStyle.Presentation, _: Date.RelativeFormatStyle.Presentation) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation4DateV19RelativeFormatStyleV2eeoiySbAE_AEtFZ\">== (_: Date.RelativeFormatStyle, _: Date.RelativeFormatStyle) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation4DateV13ParseStrategyV2eeoiySbAE_AEtFZ\">== (_: Date.ParseStrategy, _: Date.ParseStrategy) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation9IndexPathV2eeoiySbAC_ACtFZ\">== (_: IndexPath, _: IndexPath) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation8TimeZoneV2eeoiySbAC_ACtFZ\">== (_: TimeZone, _: TimeZone) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation8IndexSetV0B0V2eeoiySbAE_AEtFZ\">== (_: IndexSet.Index, _: IndexSet.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation8IndexSetV9RangeViewV2eeoiySbAE_AEtFZ\">== (_: IndexSet.RangeView, _: IndexSet.RangeView) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation8IndexSetV2eeoiySbAC_ACtFZ\">== (_: IndexSet, _: IndexSet) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation26FloatingPointParseStrategyV2eeoiySbACyxG_AEtFZ\">== (_: FloatingPointParseStrategy&lt;Format&gt;, _: FloatingPointParseStrategy&lt;Format&gt;) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation15AttributeScopesO0A10AttributesV09DateFieldB0O0F0O2eeoiySbAI_AItFZ\">== (_: AttributeScopes.FoundationAttributes.DateFieldAttribute.Field, _: AttributeScopes.FoundationAttributes.DateFieldAttribute.Field) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation15AttributeScopesO0A10AttributesV09ByteCountB0O9ComponentO2eeoiySbAI_AItFZ\">== (_: AttributeScopes.FoundationAttributes.ByteCountAttribute.Component, _: AttributeScopes.FoundationAttributes.ByteCountAttribute.Component) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation15AttributeScopesO0A10AttributesV09ByteCountB0O4UnitO2eeoiySbAI_AItFZ\">== (_: AttributeScopes.FoundationAttributes.ByteCountAttribute.Unit, _: AttributeScopes.FoundationAttributes.ByteCountAttribute.Unit) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation11MeasurementVAASo11NSDimensionCRbzrlE11FormatStyleV9UnitWidthV2eeoiySbAIyx__G_AKtFZ\">== (_: Measurement&lt;UnitType&gt;.FormatStyle.UnitWidth, _: Measurement&lt;UnitType&gt;.FormatStyle.UnitWidth) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation11MeasurementVAASo11NSDimensionCRbzrlE11FormatStyleV2eeoiySbAGyx_G_AItFZ\">== (_: Measurement&lt;UnitType&gt;.FormatStyle, _: Measurement&lt;UnitType&gt;.FormatStyle) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation26MeasurementFormatUnitUsageV2eeoiySbACyxG_AEtFZ\">== (_: MeasurementFormatUnitUsage&lt;UnitType&gt;, _: MeasurementFormatUnitUsage&lt;UnitType&gt;) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:So20NSNotificationCenterC10FoundationE9PublisherV2eeoiySbAE_AEtFZ\">== (_: NotificationCenter.Publisher, _: NotificationCenter.Publisher) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation4DataV2eeoiySbAC_ACtFZ\">== (_: Data, _: Data) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:So8_NSRangeV10FoundationE2eeoiySbAB_ABtFZ\">== (_: NSRange, _: NSRange) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:So9NSDecimala10FoundationE11FormatStyleV2eeoiySbAE_AEtFZ\">== (_: Decimal.FormatStyle, _: Decimal.FormatStyle) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:So9NSDecimala10FoundationE11FormatStyleV7PercentV2eeoiySbAG_AGtFZ\">== (_: Decimal.FormatStyle.Percent, _: Decimal.FormatStyle.Percent) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:So9NSDecimala10FoundationE11FormatStyleV8CurrencyV2eeoiySbAG_AGtFZ\">== (_: Decimal.FormatStyle.Currency, _: Decimal.FormatStyle.Currency) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:So9NSDecimala10FoundationE11FormatStyleV10AttributedV2eeoiySbAG_AGtFZ\">== (_: Decimal.FormatStyle.Attributed, _: Decimal.FormatStyle.Attributed) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:So16NSOperationQueueC10FoundationE17SchedulerTimeTypeV6StrideV2eeoiySbAG_AGtFZ\">== (_: OperationQueue.SchedulerTimeType.Stride, _: OperationQueue.SchedulerTimeType.Stride) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:So9NSDecimala10FoundationE13ParseStrategyV2eeoiySbAEy_xG_AGtFZ\">== (_: Decimal.ParseStrategy&lt;Format&gt;, _: Decimal.ParseStrategy&lt;Format&gt;) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation4DateV15AttributedStyleV2eeoiySbAE_AEtFZ\">== (_: Date.AttributedStyle, _: Date.AttributedStyle) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation4DateV11FormatStyleV2eeoiySbAE_AEtFZ\">== (_: Date.FormatStyle, _: Date.FormatStyle) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation4DateV11FormatStyleV0bD0V2eeoiySbAG_AGtFZ\">== (_: Date.FormatStyle.DateStyle, _: Date.FormatStyle.DateStyle) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation4DateV11FormatStyleV04TimeD0V2eeoiySbAG_AGtFZ\">== (_: Date.FormatStyle.TimeStyle, _: Date.FormatStyle.TimeStyle) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:So9NSScannerC10FoundationE20NumberRepresentationO2eeoiySbAE_AEtFZ\">== (_: Scanner.NumberRepresentation, _: Scanner.NumberRepresentation) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation6LocaleV2eeoiySbAC_ACtFZ\">== (_: Locale, _: Locale) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation4DateV11FormatStyleV6SymbolV3EraV2eeoiySbAI_AItFZ\">== (_: Date.FormatStyle.Symbol.Era, _: Date.FormatStyle.Symbol.Era) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation4DateV11FormatStyleV6SymbolV4YearV2eeoiySbAI_AItFZ\">== (_: Date.FormatStyle.Symbol.Year, _: Date.FormatStyle.Symbol.Year) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation4DateV11FormatStyleV6SymbolV013YearForWeekOfF0V2eeoiySbAI_AItFZ\">== (_: Date.FormatStyle.Symbol.YearForWeekOfYear, _: Date.FormatStyle.Symbol.YearForWeekOfYear) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation4DateV11FormatStyleV6SymbolV10CyclicYearV2eeoiySbAI_AItFZ\">== (_: Date.FormatStyle.Symbol.CyclicYear, _: Date.FormatStyle.Symbol.CyclicYear) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation4DateV11FormatStyleV6SymbolV7QuarterV2eeoiySbAI_AItFZ\">== (_: Date.FormatStyle.Symbol.Quarter, _: Date.FormatStyle.Symbol.Quarter) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation4DateV11FormatStyleV6SymbolV5MonthV2eeoiySbAI_AItFZ\">== (_: Date.FormatStyle.Symbol.Month, _: Date.FormatStyle.Symbol.Month) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation4DateV11FormatStyleV6SymbolV4WeekV2eeoiySbAI_AItFZ\">== (_: Date.FormatStyle.Symbol.Week, _: Date.FormatStyle.Symbol.Week) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation4DateV11FormatStyleV6SymbolV3DayV2eeoiySbAI_AItFZ\">== (_: Date.FormatStyle.Symbol.Day, _: Date.FormatStyle.Symbol.Day) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation4DateV11FormatStyleV6SymbolV9DayOfYearV2eeoiySbAI_AItFZ\">== (_: Date.FormatStyle.Symbol.DayOfYear, _: Date.FormatStyle.Symbol.DayOfYear) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation4DateV11FormatStyleV6SymbolV7WeekdayV2eeoiySbAI_AItFZ\">== (_: Date.FormatStyle.Symbol.Weekday, _: Date.FormatStyle.Symbol.Weekday) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation4DateV11FormatStyleV6SymbolV9DayPeriodV2eeoiySbAI_AItFZ\">== (_: Date.FormatStyle.Symbol.DayPeriod, _: Date.FormatStyle.Symbol.DayPeriod) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation4DateV11FormatStyleV6SymbolV4HourV2eeoiySbAI_AItFZ\">== (_: Date.FormatStyle.Symbol.Hour, _: Date.FormatStyle.Symbol.Hour) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation4DateV11FormatStyleV6SymbolV6MinuteV2eeoiySbAI_AItFZ\">== (_: Date.FormatStyle.Symbol.Minute, _: Date.FormatStyle.Symbol.Minute) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation4DateV11FormatStyleV6SymbolV6SecondV2eeoiySbAI_AItFZ\">== (_: Date.FormatStyle.Symbol.Second, _: Date.FormatStyle.Symbol.Second) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation4DateV11FormatStyleV6SymbolV14SecondFractionV2eeoiySbAI_AItFZ\">== (_: Date.FormatStyle.Symbol.SecondFraction, _: Date.FormatStyle.Symbol.SecondFraction) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation4DateV11FormatStyleV6SymbolV8TimeZoneV2eeoiySbAI_AItFZ\">== (_: Date.FormatStyle.Symbol.TimeZone, _: Date.FormatStyle.Symbol.TimeZone) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation4DateV11FormatStyleV6SymbolV17StandaloneQuarterV2eeoiySbAI_AItFZ\">== (_: Date.FormatStyle.Symbol.StandaloneQuarter, _: Date.FormatStyle.Symbol.StandaloneQuarter) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation4DateV11FormatStyleV6SymbolV15StandaloneMonthV2eeoiySbAI_AItFZ\">== (_: Date.FormatStyle.Symbol.StandaloneMonth, _: Date.FormatStyle.Symbol.StandaloneMonth) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation4DateV11FormatStyleV6SymbolV17StandaloneWeekdayV2eeoiySbAI_AItFZ\">== (_: Date.FormatStyle.Symbol.StandaloneWeekday, _: Date.FormatStyle.Symbol.StandaloneWeekday) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation4DateV11FormatStyleV6SymbolV12VerbatimHourV2eeoiySbAI_AItFZ\">== (_: Date.FormatStyle.Symbol.VerbatimHour, _: Date.FormatStyle.Symbol.VerbatimHour) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation4DateV11FormatStyleV6SymbolV2eeoiySbAG_AGtFZ\">== (_: Date.FormatStyle.Symbol, _: Date.FormatStyle.Symbol) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation4DateV11FormatStyleV6SymbolV9DayPeriodV5WidthO2eeoiySbAK_AKtFZ\">== (_: Date.FormatStyle.Symbol.DayPeriod.Width, _: Date.FormatStyle.Symbol.DayPeriod.Width) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation4DateV11FormatStyleV6SymbolV4HourV9AMPMStyleV2eeoiySbAK_AKtFZ\">== (_: Date.FormatStyle.Symbol.Hour.AMPMStyle, _: Date.FormatStyle.Symbol.Hour.AMPMStyle) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation4DateV11FormatStyleV6SymbolV12VerbatimHourV0G5CycleV2eeoiySbAK_AKtFZ\">== (_: Date.FormatStyle.Symbol.VerbatimHour.HourCycle, _: Date.FormatStyle.Symbol.VerbatimHour.HourCycle) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation4DateV11FormatStyleV6SymbolV12VerbatimHourV5ClockV2eeoiySbAK_AKtFZ\">== (_: Date.FormatStyle.Symbol.VerbatimHour.Clock, _: Date.FormatStyle.Symbol.VerbatimHour.Clock) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation4DateV11FormatStyleV6SymbolV8TimeZoneV5WidthO2eeoiySbAK_AKtFZ\">== (_: Date.FormatStyle.Symbol.TimeZone.Width, _: Date.FormatStyle.Symbol.TimeZone.Width) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation12DateIntervalV2eeoiySbAC_ACtFZ\">== (_: DateInterval, _: DateInterval) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation3URLV2eeoiySbAC_ACtFZ\">== (_: URL, _: URL) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation18IntegerFormatStyleV2eeoiySbACyxG_AEtFZ\">== (_: IntegerFormatStyle&lt;Value&gt;, _: IntegerFormatStyle&lt;Value&gt;) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation18IntegerFormatStyleV7PercentV2eeoiySbAEyx_G_AGtFZ\">== (_: IntegerFormatStyle&lt;Value&gt;.Percent, _: IntegerFormatStyle&lt;Value&gt;.Percent) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation18IntegerFormatStyleV8CurrencyV2eeoiySbAEyx_G_AGtFZ\">== (_: IntegerFormatStyle&lt;Value&gt;.Currency, _: IntegerFormatStyle&lt;Value&gt;.Currency) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation18IntegerFormatStyleV10AttributedV2eeoiySbAEyx_G_AGtFZ\">== (_: IntegerFormatStyle&lt;Value&gt;.Attributed, _: IntegerFormatStyle&lt;Value&gt;.Attributed) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation17KeyPathComparatorV2eeoiySbACyxG_AEtFZ\">== (_: KeyPathComparator&lt;Compared&gt;, _: KeyPathComparator&lt;Compared&gt;) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation20IntegerParseStrategyV2eeoiySbACyxG_AEtFZ\">== (_: IntegerParseStrategy&lt;Format&gt;, _: IntegerParseStrategy&lt;Format&gt;) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation4UUIDV2eeoiySbAC_ACtFZ\">== (_: UUID, _: UUID) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:So9NSDecimala10FoundationE2eeoiySbAB_ABtFZ\">== (_: Decimal, _: Decimal) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation20PersonNameComponentsV11FormatStyleV2eeoiySbAE_AEtFZ\">== (_: PersonNameComponents.FormatStyle, _: PersonNameComponents.FormatStyle) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation20PersonNameComponentsV15AttributedStyleV2eeoiySbAE_AEtFZ\">== (_: PersonNameComponents.AttributedStyle, _: PersonNameComponents.AttributedStyle) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation20PersonNameComponentsV13ParseStrategyV2eeoiySbAE_AEtFZ\">== (_: PersonNameComponents.ParseStrategy, _: PersonNameComponents.ParseStrategy) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation4DateV12FormatStringV2eeoiySbAE_AEtFZ\">== (_: Date.FormatString, _: Date.FormatString) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation4DateV19IntervalFormatStyleV2eeoiySbAE_AEtFZ\">== (_: Date.IntervalFormatStyle, _: Date.IntervalFormatStyle) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation9SortOrderO2eeoiySbAC_ACtFZ\">== (_: SortOrder, _: SortOrder) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation20ComparableComparatorV2eeoiySbACyxG_AEtFZ\">== (_: ComparableComparator&lt;Compared&gt;, _: ComparableComparator&lt;Compared&gt;) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SS10FoundationE18StandardComparatorV2eeoiySbAC_ACtFZ\">== (_: String.StandardComparator, _: String.StandardComparator) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SS10FoundationE10ComparatorV2eeoiySbAC_ACtFZ\">== (_: String.Comparator, _: String.Comparator) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation21_BridgedStoredNSErrorPAAE2eeoiySbx_xtFZ\">== (_: Self, _: Self) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation4DateV21ComponentsFormatStyleV5FieldV2eeoiySbAG_AGtFZ\">== (_: Date.ComponentsFormatStyle.Field, _: Date.ComponentsFormatStyle.Field) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation4DateV21ComponentsFormatStyleV0E0V2eeoiySbAG_AGtFZ\">== (_: Date.ComponentsFormatStyle.Style, _: Date.ComponentsFormatStyle.Style) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation4DateV21ComponentsFormatStyleV2eeoiySbAE_AEtFZ\">== (_: Date.ComponentsFormatStyle, _: Date.ComponentsFormatStyle) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation11MeasurementV2eeoiySbACyqd__G_ACyqd_0_GtSo6NSUnitCRbd__AHRbd_0_r0_lFZ\">== &lt;LeftHandSideType, RightHandSideType&gt;(_: Measurement&lt;LeftHandSideType&gt;, _: Measurement&lt;RightHandSideType&gt;) -&gt; Bool where LeftHandSideType : Unit, RightHandSideType : Unit<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation24FloatingPointFormatStyleV2eeoiySbACyxG_AEtFZ\">== (_: FloatingPointFormatStyle&lt;Value&gt;, _: FloatingPointFormatStyle&lt;Value&gt;) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation24FloatingPointFormatStyleV7PercentV2eeoiySbAEyx_G_AGtFZ\">== (_: FloatingPointFormatStyle&lt;Value&gt;.Percent, _: FloatingPointFormatStyle&lt;Value&gt;.Percent) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation24FloatingPointFormatStyleV8CurrencyV2eeoiySbAEyx_G_AGtFZ\">== (_: FloatingPointFormatStyle&lt;Value&gt;.Currency, _: FloatingPointFormatStyle&lt;Value&gt;.Currency) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation24FloatingPointFormatStyleV10AttributedV2eeoiySbAEyx_G_AGtFZ\">== (_: FloatingPointFormatStyle&lt;Value&gt;.Attributed, _: FloatingPointFormatStyle&lt;Value&gt;.Attributed) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation32FormatStyleCapitalizationContextV2eeoiySbAC_ACtFZ\">== (_: FormatStyleCapitalizationContext, _: FormatStyleCapitalizationContext) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation30NumberFormatStyleConfigurationO8GroupingV2eeoiySbAE_AEtFZ\">== (_: NumberFormatStyleConfiguration.Grouping, _: NumberFormatStyleConfiguration.Grouping) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation30NumberFormatStyleConfigurationO9PrecisionV2eeoiySbAE_AEtFZ\">== (_: NumberFormatStyleConfiguration.Precision, _: NumberFormatStyleConfiguration.Precision) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation30NumberFormatStyleConfigurationO31DecimalSeparatorDisplayStrategyV2eeoiySbAE_AEtFZ\">== (_: NumberFormatStyleConfiguration.DecimalSeparatorDisplayStrategy, _: NumberFormatStyleConfiguration.DecimalSeparatorDisplayStrategy) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation30NumberFormatStyleConfigurationO19SignDisplayStrategyV2eeoiySbAE_AEtFZ\">== (_: NumberFormatStyleConfiguration.SignDisplayStrategy, _: NumberFormatStyleConfiguration.SignDisplayStrategy) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation30NumberFormatStyleConfigurationO8NotationV2eeoiySbAE_AEtFZ\">== (_: NumberFormatStyleConfiguration.Notation, _: NumberFormatStyleConfiguration.Notation) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation32CurrencyFormatStyleConfigurationO19SignDisplayStrategyV2eeoiySbAE_AEtFZ\">== (_: CurrencyFormatStyleConfiguration.SignDisplayStrategy, _: CurrencyFormatStyleConfiguration.SignDisplayStrategy) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation32CurrencyFormatStyleConfigurationO12PresentationV2eeoiySbAE_AEtFZ\">== (_: CurrencyFormatStyleConfiguration.Presentation, _: CurrencyFormatStyleConfiguration.Presentation) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation36DescriptiveNumberFormatConfigurationO12PresentationV2eeoiySbAE_AEtFZ\">== (_: DescriptiveNumberFormatConfiguration.Presentation, _: DescriptiveNumberFormatConfiguration.Presentation) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SS10FoundationE8EncodingV2eeoiySbAC_ACtFZ\">== (_: String.Encoding, _: String.Encoding) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation15ListFormatStyleV2eeoiySbACyxq_G_AEtFZ\">== (_: ListFormatStyle&lt;Style, Base&gt;, _: ListFormatStyle&lt;Style, Base&gt;) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation11StringStyleV2eeoiySbAC_ACtFZ\">== (_: StringStyle, _: StringStyle) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation20ByteCountFormatStyleV10AttributedV2eeoiySbAE_AEtFZ\">== (_: ByteCountFormatStyle.Attributed, _: ByteCountFormatStyle.Attributed) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation20ByteCountFormatStyleV2eeoiySbAC_ACtFZ\">== (_: ByteCountFormatStyle, _: ByteCountFormatStyle) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation18PresentationIntentV4KindO2eeoiySbAE_AEtFZ\">== (_: PresentationIntent.Kind, _: PresentationIntent.Kind) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation18PresentationIntentV11TableColumnV2eeoiySbAE_AEtFZ\">== (_: PresentationIntent.TableColumn, _: PresentationIntent.TableColumn) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation18PresentationIntentV0C4TypeV2eeoiySbAE_AEtFZ\">== (_: PresentationIntent.IntentType, _: PresentationIntent.IntentType) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation18PresentationIntentV2eeoiySbAC_ACtFZ\">== (_: PresentationIntent, _: PresentationIntent) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation18AttributeContainerV2eeoiySbAC_ACtFZ\">== (_: AttributeContainer, _: AttributeContainer) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation24AttributedStringProtocolPAAE2eeoiySbx_qd__tAaBRd__lFZ\">== &lt;RHS&gt;(_: Self, _: RHS) -&gt; Bool where RHS : AttributedStringProtocol<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation16AttributedStringV20AttributeMergePolicyO2eeoiySbAE_AEtFZ\">== (_: AttributedString.AttributeMergePolicy, _: AttributedString.AttributeMergePolicy) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation16AttributedStringV5IndexV2eeoiySbAE_AEtFZ\">== (_: AttributedString.Index, _: AttributedString.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation16AttributedStringV4RunsV3RunV2eeoiySbAG_AGtFZ\">== (_: AttributedString.Runs.Run, _: AttributedString.Runs.Run) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation16AttributedStringV4RunsV2eeoiySbAE_AEtFZ\">== (_: AttributedString.Runs, _: AttributedString.Runs) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation16AttributedStringV2eeoiySbAC_ACtFZ\">== (_: AttributedString, _: AttributedString) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation19AttributedSubstringV2eeoiySbAC_ACtFZ\">== (_: AttributedSubstring, _: AttributedSubstring) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation20PersonNameComponentsV2eeoiySbAC_ACtFZ\">== (_: PersonNameComponents, _: PersonNameComponents) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation12CharacterSetV2eeoiySbAC_ACtFZ\">== (_: CharacterSet, _: CharacterSet) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation14SortDescriptorV2eeoiySbACyxG_AEtFZ\">== (_: SortDescriptor&lt;Compared&gt;, _: SortDescriptor&lt;Compared&gt;) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation13URLComponentsV2eeoiySbAC_ACtFZ\">== (_: URLComponents, _: URLComponents) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation12URLQueryItemV2eeoiySbAC_ACtFZ\">== (_: URLQueryItem, _: URLQueryItem) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation10MorphologyV2eeoiySbAC_ACtFZ\">== (_: Morphology, _: Morphology) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation10MorphologyV13CustomPronounV2eeoiySbAE_AEtFZ\">== (_: Morphology.CustomPronoun, _: Morphology.CustomPronoun) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation14InflectionRuleO2eeoiySbAC_ACtFZ\">== (_: InflectionRule, _: InflectionRule) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation4DateV2eeoiySbAC_ACtFZ\">== (_: Date, _: Date) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation4DateV18ISO8601FormatStyleV2eeoiySbAE_AEtFZ\">== (_: Date.ISO8601FormatStyle, _: Date.ISO8601FormatStyle) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation12NotificationV2eeoiySbAC_ACtFZ\">== (_: Notification, _: Notification) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation8CalendarV10IdentifierO2eeoiySbAE_AEtFZ\">== (_: Calendar.Identifier, _: Calendar.Identifier) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation8CalendarV9ComponentO2eeoiySbAE_AEtFZ\">== (_: Calendar.Component, _: Calendar.Component) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation8CalendarV15SearchDirectionO2eeoiySbAE_AEtFZ\">== (_: Calendar.SearchDirection, _: Calendar.SearchDirection) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation8CalendarV18RepeatedTimePolicyO2eeoiySbAE_AEtFZ\">== (_: Calendar.RepeatedTimePolicy, _: Calendar.RepeatedTimePolicy) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation8CalendarV14MatchingPolicyO2eeoiySbAE_AEtFZ\">== (_: Calendar.MatchingPolicy, _: Calendar.MatchingPolicy) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation8CalendarV2eeoiySbAC_ACtFZ\">== (_: Calendar, _: Calendar) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SS10FoundationE17LocalizationValueV2eeoiySbAC_ACtFZ\">== (_: String.LocalizationValue, _: String.LocalizationValue) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation10URLRequestV2eeoiySbAC_ACtFZ\">== (_: URLRequest, _: URLRequest) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:So9NSRunLoopC10FoundationE17SchedulerTimeTypeV6StrideV2eeoiySbAG_AGtFZ\">== (_: RunLoop.SchedulerTimeType.Stride, _: RunLoop.SchedulerTimeType.Stride) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10ObjectiveC8SelectorV2eeoiySbAC_ACtFZ\">== (_: Selector, _: Selector) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:So8NSObjectC10ObjectiveCE2eeoiySbAB_ABtFZ\">== (_: NSObject, _: NSObject) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:6Darwin0A7BooleanV2eeoiySbAC_ACtFZ\">== (_: DarwinBoolean, _: DarwinBoolean) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14CoreFoundation9_CFObjectPAAE2eeoiySbx_xtFZ\">== (_: Self, _: Self) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:So17OS_dispatch_queueC8DispatchE19GlobalQueuePriorityO2eeoiySbAE_AEtFZ\">== (_: DispatchQueue.GlobalQueuePriority, _: DispatchQueue.GlobalQueuePriority) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:So17OS_dispatch_queueC8DispatchE20AutoreleaseFrequencyO2eeoiySbAE_AEtFZ\">== (_: DispatchQueue.AutoreleaseFrequency, _: DispatchQueue.AutoreleaseFrequency) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:8Dispatch0A4TimeV2eeoiySbAC_ACtFZ\">== (_: DispatchTime, _: DispatchTime) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:8Dispatch0A8WallTimeV2eeoiySbAC_ACtFZ\">== (_: DispatchWallTime, _: DispatchWallTime) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:8Dispatch0A12TimeIntervalO2eeoiySbAC_ACtFZ\">== (_: DispatchTimeInterval, _: DispatchTimeInterval) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:So17OS_dispatch_queueC8DispatchE17SchedulerTimeTypeV6StrideV2eeoiySbAG_AGtFZ\">== (_: DispatchQueue.SchedulerTimeType.Stride, _: DispatchQueue.SchedulerTimeType.Stride) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:8Dispatch0A3QoSV0B6SClassO2eeoiySbAE_AEtFZ\">== (_: DispatchQoS.QoSClass, _: DispatchQoS.QoSClass) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:8Dispatch0A3QoSV2eeoiySbAC_ACtFZ\">== (_: DispatchQoS, _: DispatchQoS) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:8Dispatch0A13TimeoutResultO2eeoiySbAC_ACtFZ\">== (_: DispatchTimeoutResult, _: DispatchTimeoutResult) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:So17CGAffineTransformV12CoreGraphicsE2eeoiySbAB_ABtFZ\">== (_: CGAffineTransform, _: CGAffineTransform) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:So7CGPointV12CoreGraphicsE2eeoiySbAB_ABtFZ\">== (_: CGPoint, _: CGPoint) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:So6CGSizeV12CoreGraphicsE2eeoiySbAB_ABtFZ\">== (_: CGSize, _: CGSize) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:So8CGVectorV12CoreGraphicsE2eeoiySbAB_ABtFZ\">== (_: CGVector, _: CGVector) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:So6CGRectV12CoreGraphicsE2eeoiySbAB_ABtFZ\">== (_: CGRect, _: CGRect) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:5UIKit26UIListContentConfigurationV15ImagePropertiesV2eeoiySbAE_AEtFZ\">== (_: UIListContentConfiguration.ImageProperties, _: UIListContentConfiguration.ImageProperties) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:5UIKit26UIListContentConfigurationV14TextPropertiesV0E9AlignmentO2eeoiySbAG_AGtFZ\">== (_: UIListContentConfiguration.TextProperties.TextAlignment, _: UIListContentConfiguration.TextProperties.TextAlignment) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:5UIKit26UIListContentConfigurationV14TextPropertiesV0E9TransformO2eeoiySbAG_AGtFZ\">== (_: UIListContentConfiguration.TextProperties.TextTransform, _: UIListContentConfiguration.TextProperties.TextTransform) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:5UIKit26UIListContentConfigurationV14TextPropertiesV2eeoiySbAE_AEtFZ\">== (_: UIListContentConfiguration.TextProperties, _: UIListContentConfiguration.TextProperties) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:5UIKit26UIListContentConfigurationV2eeoiySbAC_ACtFZ\">== (_: UIListContentConfiguration, _: UIListContentConfiguration) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:5UIKit15UIPointerEffectO8TintModeO2eeoiySbAE_AEtFZ\">== (_: UIPointerEffect.TintMode, _: UIPointerEffect.TintMode) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:5UIKit25UIBackgroundConfigurationV2eeoiySbAC_ACtFZ\">== (_: UIBackgroundConfiguration, _: UIBackgroundConfiguration) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:So12UIEdgeInsetsV5UIKitE2eeoiySbAB_ABtFZ\">== (_: UIEdgeInsets, _: UIEdgeInsets) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:So23NSDirectionalEdgeInsetsV5UIKitE2eeoiySbAB_ABtFZ\">== (_: NSDirectionalEdgeInsets, _: NSDirectionalEdgeInsets) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:So8UIOffsetV5UIKitE2eeoiySbAB_ABtFZ\">== (_: UIOffset, _: UIOffset) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:So12UIFloatRangea5UIKitE2eeoiySbAB_ABtFZ\">== (_: UIFloatRange, _: UIFloatRange) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:5UIKit28UIListSeparatorConfigurationV10VisibilityO2eeoiySbAE_AEtFZ\">== (_: UIListSeparatorConfiguration.Visibility, _: UIListSeparatorConfiguration.Visibility) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:5UIKit28UIListSeparatorConfigurationV2eeoiySbAC_ACtFZ\">== (_: UIListSeparatorConfiguration, _: UIListSeparatorConfiguration) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:So8UIButtonC5UIKitE13ConfigurationV4SizeO2eeoiySbAG_AGtFZ\">== (_: UIButton.Configuration.Size, _: UIButton.Configuration.Size) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:So8UIButtonC5UIKitE13ConfigurationV14TitleAlignmentO2eeoiySbAG_AGtFZ\">== (_: UIButton.Configuration.TitleAlignment, _: UIButton.Configuration.TitleAlignment) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:So8UIButtonC5UIKitE13ConfigurationV11CornerStyleO2eeoiySbAG_AGtFZ\">== (_: UIButton.Configuration.CornerStyle, _: UIButton.Configuration.CornerStyle) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:So8UIButtonC5UIKitE13ConfigurationV13MacIdiomStyleO2eeoiySbAG_AGtFZ\">== (_: UIButton.Configuration.MacIdiomStyle, _: UIButton.Configuration.MacIdiomStyle) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:So8UIButtonC5UIKitE13ConfigurationV2eeoiySbAE_AEtFZ\">== (_: UIButton.Configuration, _: UIButton.Configuration) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:5UIKit15UICellAccessoryV14DisplayedStateO2eeoiySbAE_AEtFZ\">== (_: UICellAccessory.DisplayedState, _: UICellAccessory.DisplayedState) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:5UIKit15UICellAccessoryV24OutlineDisclosureOptionsV5StyleO2eeoiySbAG_AGtFZ\">== (_: UICellAccessory.OutlineDisclosureOptions.Style, _: UICellAccessory.OutlineDisclosureOptions.Style) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:5UIKit15UICellAccessoryV0C4TypeO2eeoiySbAE_AEtFZ\">== (_: UICellAccessory.AccessoryType, _: UICellAccessory.AccessoryType) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:5UIKit35UICollectionLayoutListConfigurationV10AppearanceO2eeoiySbAE_AEtFZ\">== (_: UICollectionLayoutListConfiguration.Appearance, _: UICollectionLayoutListConfiguration.Appearance) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:5UIKit35UICollectionLayoutListConfigurationV10HeaderModeO2eeoiySbAE_AEtFZ\">== (_: UICollectionLayoutListConfiguration.HeaderMode, _: UICollectionLayoutListConfiguration.HeaderMode) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:5UIKit35UICollectionLayoutListConfigurationV10FooterModeO2eeoiySbAE_AEtFZ\">== (_: UICollectionLayoutListConfiguration.FooterMode, _: UICollectionLayoutListConfiguration.FooterMode) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:5UIKit24UIViewConfigurationStateV2eeoiySbAC_ACtFZ\">== (_: UIViewConfigurationState, _: UIViewConfigurationState) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:5UIKit24UICellConfigurationStateV04DragD0O2eeoiySbAE_AEtFZ\">== (_: UICellConfigurationState.DragState, _: UICellConfigurationState.DragState) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:5UIKit24UICellConfigurationStateV04DropD0O2eeoiySbAE_AEtFZ\">== (_: UICellConfigurationState.DropState, _: UICellConfigurationState.DropState) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:5UIKit24UICellConfigurationStateV2eeoiySbAC_ACtFZ\">== (_: UICellConfigurationState, _: UICellConfigurationState) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:So16CAFrameRateRangeV10QuartzCoreE2eeoiySbAB_ABtFZ\">== (_: CAFrameRateRange, _: CAFrameRateRange) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:So22NSManagedObjectContextC8CoreDataE17ScheduledTaskTypeO2eeoiySbAE_AEtFZ\">== (_: NSManagedObjectContext.ScheduledTaskType, _: NSManagedObjectContext.ScheduledTaskType) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:12AVFoundation15AVAsyncPropertyC6StatusOAASQR_rlE2eeoiySbAEyxq__G_AGtFZ\">== (_: AVAsyncProperty&lt;Root, Value&gt;.Status, _: AVAsyncProperty&lt;Root, Value&gt;.Status) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:22UniformTypeIdentifiers6UTTypeV2eeoiySbAC_ACtFZ\">== (_: UTType, _: UTType) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:22UniformTypeIdentifiers10UTTagClassV2eeoiySbAC_ACtFZ\">== (_: UTTagClass, _: UTTagClass) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:So11CMTimeRangea9CoreMediaE2eeoiySbAB_ABtFZ\">== (_: CMTimeRange, _: CMTimeRange) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:So17CMSampleBufferRefa9CoreMediaE13DataReadinessO2eeoiySbAE_AEtFZ\">== (_: CMSampleBuffer.DataReadiness, _: CMSampleBuffer.DataReadiness) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:So22CMFormatDescriptionRefa9CoreMediaE10ExtensionsV5ValueV2eeoiySbAG_AGtFZ\">== (_: CMFormatDescription.Extensions.Value, _: CMFormatDescription.Extensions.Value) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:So22CMFormatDescriptionRefa9CoreMediaE10ExtensionsV5IndexV2eeoiySbAG_AGtFZ\">== (_: CMFormatDescription.Extensions.Index, _: CMFormatDescription.Extensions.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:So22CMFormatDescriptionRefa9CoreMediaE10ExtensionsV2eeoiySbAE_AEtFZ\">== (_: CMFormatDescription.Extensions, _: CMFormatDescription.Extensions) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:So22CMFormatDescriptionRefa9CoreMediaE2eeoiySbAB_ABtFZ\">== (_: CMFormatDescription, _: CMFormatDescription) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:So6CMTimea9CoreMediaE2eeoiySbAB_ABtFZ\">== (_: CMTime, _: CMTime) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:So13simd_float2x2a0A0E2eeoiySbAB_ABtFZ\">== (_: simd_float2x2, _: simd_float2x2) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:So13simd_float3x2a0A0E2eeoiySbAB_ABtFZ\">== (_: simd_float3x2, _: simd_float3x2) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:So13simd_float4x2a0A0E2eeoiySbAB_ABtFZ\">== (_: simd_float4x2, _: simd_float4x2) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:So13simd_float2x3a0A0E2eeoiySbAB_ABtFZ\">== (_: simd_float2x3, _: simd_float2x3) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:So13simd_float3x3a0A0E2eeoiySbAB_ABtFZ\">== (_: simd_float3x3, _: simd_float3x3) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:So13simd_float4x3a0A0E2eeoiySbAB_ABtFZ\">== (_: simd_float4x3, _: simd_float4x3) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:So13simd_float2x4a0A0E2eeoiySbAB_ABtFZ\">== (_: simd_float2x4, _: simd_float2x4) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:So13simd_float3x4a0A0E2eeoiySbAB_ABtFZ\">== (_: simd_float3x4, _: simd_float3x4) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:So13simd_float4x4a0A0E2eeoiySbAB_ABtFZ\">== (_: simd_float4x4, _: simd_float4x4) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:So14simd_double2x2a0A0E2eeoiySbAB_ABtFZ\">== (_: simd_double2x2, _: simd_double2x2) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:So14simd_double3x2a0A0E2eeoiySbAB_ABtFZ\">== (_: simd_double3x2, _: simd_double3x2) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:So14simd_double4x2a0A0E2eeoiySbAB_ABtFZ\">== (_: simd_double4x2, _: simd_double4x2) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:So14simd_double2x3a0A0E2eeoiySbAB_ABtFZ\">== (_: simd_double2x3, _: simd_double2x3) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:So14simd_double3x3a0A0E2eeoiySbAB_ABtFZ\">== (_: simd_double3x3, _: simd_double3x3) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:So14simd_double4x3a0A0E2eeoiySbAB_ABtFZ\">== (_: simd_double4x3, _: simd_double4x3) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:So14simd_double2x4a0A0E2eeoiySbAB_ABtFZ\">== (_: simd_double2x4, _: simd_double2x4) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:So14simd_double3x4a0A0E2eeoiySbAB_ABtFZ\">== (_: simd_double3x4, _: simd_double3x4) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:So14simd_double4x4a0A0E2eeoiySbAB_ABtFZ\">== (_: simd_double4x4, _: simd_double4x4) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:So10simd_quatfa0A0E2eeoiySbAB_ABtFZ\">== (_: simd_quatf, _: simd_quatf) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:So10simd_quatda0A0E2eeoiySbAB_ABtFZ\">== (_: simd_quatd, _: simd_quatd) -&gt; Bool<\/RelatedName>"
          }
        ],
        "key.substructure" : [

        ],
        "key.typename" : "(FWJSON, FWJSON) -> Bool",
        "key.typeusr" : "$sySb11FWFramework6FWJSONV_ACtcD",
        "key.usr" : "s:11FWFramework2eeoiySbAA6FWJSONV_ADtF"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public func &lt;= (lhs: <Type usr=\"s:11FWFramework6FWJSONV\">FWJSON<\/Type>, rhs: <Type usr=\"s:11FWFramework6FWJSONV\">FWJSON<\/Type>) -&gt; <Type usr=\"s:Sb\">Bool<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 32493
          }
        ],
        "key.bodylength" : 524,
        "key.bodyoffset" : 32544,
        "key.column" : 13,
        "key.decl_lang" : "source.lang.swift",
        "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift",
        "key.fully_annotated_decl" : "<decl.function.operator.infix><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>&lt;= <\/decl.name>(<decl.var.parameter><decl.var.parameter.name>lhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:11FWFramework6FWJSONV\">FWJSON<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>rhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:11FWFramework6FWJSONV\">FWJSON<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.function.returntype><\/decl.function.operator.infix>",
        "key.kind" : "source.lang.swift.decl.function.free",
        "key.length" : 569,
        "key.line" : 1166,
        "key.name" : "<=(_:_:)",
        "key.namelength" : 29,
        "key.nameoffset" : 32505,
        "key.offset" : 32500,
        "key.parsed_declaration" : "public func <= (lhs: FWJSON, rhs: FWJSON) -> Bool",
        "key.parsed_scope.end" : 1177,
        "key.parsed_scope.start" : 1166,
        "key.related_decls" : [
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework2leoiySbSo8NSNumberC_ADtF\">&lt;= (_: NSNumber, _: NSNumber) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s2leoiySbyt_yttF\">&lt;= (_: (), _: ()) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s2leoiySbx_q_t_x_q_ttSLRzSLR_r0_lF\">&lt;= &lt;A, B&gt;(_: (A, B), _: (A, B)) -&gt; Bool where A : Comparable, B : Comparable<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s2leoiySbx_q_q0_t_x_q_q0_ttSLRzSLR_SLR0_r1_lF\">&lt;= &lt;A, B, C&gt;(_: (A, B, C), _: (A, B, C)) -&gt; Bool where A : Comparable, B : Comparable, C : Comparable<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s2leoiySbx_q_q0_q1_t_x_q_q0_q1_ttSLRzSLR_SLR0_SLR1_r2_lF\">&lt;= &lt;A, B, C, D&gt;(_: (A, B, C, D), _: (A, B, C, D)) -&gt; Bool where A : Comparable, B : Comparable, C : Comparable, D : Comparable<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s2leoiySbx_q_q0_q1_q2_t_x_q_q0_q1_q2_ttSLRzSLR_SLR0_SLR1_SLR2_r3_lF\">&lt;= &lt;A, B, C, D, E&gt;(_: (A, B, C, D, E), _: (A, B, C, D, E)) -&gt; Bool where A : Comparable, B : Comparable, C : Comparable, D : Comparable, E : Comparable<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s2leoiySbx_q_q0_q1_q2_q3_t_x_q_q0_q1_q2_q3_ttSLRzSLR_SLR0_SLR1_SLR2_SLR3_r4_lF\">&lt;= &lt;A, B, C, D, E, F&gt;(_: (A, B, C, D, E, F), _: (A, B, C, D, E, F)) -&gt; Bool where A : Comparable, B : Comparable, C : Comparable, D : Comparable, E : Comparable, F : Comparable<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SL2leoiySbx_xtFZ\">&lt;= (_: Self, _: Self) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SLsE2leoiySbx_xtFZ\">&lt;= (_: Self, _: Self) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SFsE2leoiySbx_xtFZ\">&lt;= (_: Self, _: Self) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SzsE2leoiySbx_qd__tSzRd__lFZ\">&lt;= &lt;Other&gt;(_: Self, _: Other) -&gt; Bool where Other : BinaryInteger<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SzsE2leoiySbx_xtFZ\">&lt;= (_: Self, _: Self) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SysE2leoiySbx_qd__tSyRd__lFZ\">&lt;= &lt;RHS&gt;(_: Self, _: RHS) -&gt; Bool where RHS : StringProtocol<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5UInt8V2leoiySbAB_ABtFZ\">&lt;= (_: UInt8, _: UInt8) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s4Int8V2leoiySbAB_ABtFZ\">&lt;= (_: Int8, _: Int8) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt16V2leoiySbAB_ABtFZ\">&lt;= (_: UInt16, _: UInt16) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int16V2leoiySbAB_ABtFZ\">&lt;= (_: Int16, _: Int16) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt32V2leoiySbAB_ABtFZ\">&lt;= (_: UInt32, _: UInt32) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int32V2leoiySbAB_ABtFZ\">&lt;= (_: Int32, _: Int32) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt64V2leoiySbAB_ABtFZ\">&lt;= (_: UInt64, _: UInt64) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int64V2leoiySbAB_ABtFZ\">&lt;= (_: Int64, _: Int64) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Su2leoiySbSu_SutFZ\">&lt;= (_: UInt, _: UInt) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Si2leoiySbSi_SitFZ\">&lt;= (_: Int, _: Int) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:ScP2leoiySbScP_ScPtFZ\">&lt;= (_: TaskPriority, _: TaskPriority) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation9IndexPathV2leoiySbAC_ACtFZ\">&lt;= (_: IndexPath, _: IndexPath) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation8IndexSetV0B0V2leoiySbAE_AEtFZ\">&lt;= (_: IndexSet.Index, _: IndexSet.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:So21UIContentSizeCategorya5UIKitE2leoiySbAB_ABtFZ\">&lt;= (_: UIContentSizeCategory, _: UIContentSizeCategory) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:So6CMTimea9CoreMediaE2leoiySbAB_ABtFZ\">&lt;= (_: CMTime, _: CMTime) -&gt; Bool<\/RelatedName>"
          }
        ],
        "key.substructure" : [

        ],
        "key.typename" : "(FWJSON, FWJSON) -> Bool",
        "key.typeusr" : "$sySb11FWFramework6FWJSONV_ACtcD",
        "key.usr" : "s:11FWFramework2leoiySbAA6FWJSONV_ADtF"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public func &gt;= (lhs: <Type usr=\"s:11FWFramework6FWJSONV\">FWJSON<\/Type>, rhs: <Type usr=\"s:11FWFramework6FWJSONV\">FWJSON<\/Type>) -&gt; <Type usr=\"s:Sb\">Bool<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 33071
          }
        ],
        "key.bodylength" : 524,
        "key.bodyoffset" : 33122,
        "key.column" : 13,
        "key.decl_lang" : "source.lang.swift",
        "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift",
        "key.fully_annotated_decl" : "<decl.function.operator.infix><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>&gt;= <\/decl.name>(<decl.var.parameter><decl.var.parameter.name>lhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:11FWFramework6FWJSONV\">FWJSON<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>rhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:11FWFramework6FWJSONV\">FWJSON<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.function.returntype><\/decl.function.operator.infix>",
        "key.kind" : "source.lang.swift.decl.function.free",
        "key.length" : 569,
        "key.line" : 1179,
        "key.name" : ">=(_:_:)",
        "key.namelength" : 29,
        "key.nameoffset" : 33083,
        "key.offset" : 33078,
        "key.parsed_declaration" : "public func >= (lhs: FWJSON, rhs: FWJSON) -> Bool",
        "key.parsed_scope.end" : 1190,
        "key.parsed_scope.start" : 1179,
        "key.related_decls" : [
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework2geoiySbSo8NSNumberC_ADtF\">&gt;= (_: NSNumber, _: NSNumber) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s2geoiySbyt_yttF\">&gt;= (_: (), _: ()) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s2geoiySbx_q_t_x_q_ttSLRzSLR_r0_lF\">&gt;= &lt;A, B&gt;(_: (A, B), _: (A, B)) -&gt; Bool where A : Comparable, B : Comparable<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s2geoiySbx_q_q0_t_x_q_q0_ttSLRzSLR_SLR0_r1_lF\">&gt;= &lt;A, B, C&gt;(_: (A, B, C), _: (A, B, C)) -&gt; Bool where A : Comparable, B : Comparable, C : Comparable<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s2geoiySbx_q_q0_q1_t_x_q_q0_q1_ttSLRzSLR_SLR0_SLR1_r2_lF\">&gt;= &lt;A, B, C, D&gt;(_: (A, B, C, D), _: (A, B, C, D)) -&gt; Bool where A : Comparable, B : Comparable, C : Comparable, D : Comparable<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s2geoiySbx_q_q0_q1_q2_t_x_q_q0_q1_q2_ttSLRzSLR_SLR0_SLR1_SLR2_r3_lF\">&gt;= &lt;A, B, C, D, E&gt;(_: (A, B, C, D, E), _: (A, B, C, D, E)) -&gt; Bool where A : Comparable, B : Comparable, C : Comparable, D : Comparable, E : Comparable<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s2geoiySbx_q_q0_q1_q2_q3_t_x_q_q0_q1_q2_q3_ttSLRzSLR_SLR0_SLR1_SLR2_SLR3_r4_lF\">&gt;= &lt;A, B, C, D, E, F&gt;(_: (A, B, C, D, E, F), _: (A, B, C, D, E, F)) -&gt; Bool where A : Comparable, B : Comparable, C : Comparable, D : Comparable, E : Comparable, F : Comparable<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SL2geoiySbx_xtFZ\">&gt;= (_: Self, _: Self) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SLsE2geoiySbx_xtFZ\">&gt;= (_: Self, _: Self) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SFsE2geoiySbx_xtFZ\">&gt;= (_: Self, _: Self) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SzsE2geoiySbx_qd__tSzRd__lFZ\">&gt;= &lt;Other&gt;(_: Self, _: Other) -&gt; Bool where Other : BinaryInteger<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SzsE2geoiySbx_xtFZ\">&gt;= (_: Self, _: Self) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SysE2geoiySbx_qd__tSyRd__lFZ\">&gt;= &lt;RHS&gt;(_: Self, _: RHS) -&gt; Bool where RHS : StringProtocol<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5UInt8V2geoiySbAB_ABtFZ\">&gt;= (_: UInt8, _: UInt8) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s4Int8V2geoiySbAB_ABtFZ\">&gt;= (_: Int8, _: Int8) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt16V2geoiySbAB_ABtFZ\">&gt;= (_: UInt16, _: UInt16) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int16V2geoiySbAB_ABtFZ\">&gt;= (_: Int16, _: Int16) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt32V2geoiySbAB_ABtFZ\">&gt;= (_: UInt32, _: UInt32) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int32V2geoiySbAB_ABtFZ\">&gt;= (_: Int32, _: Int32) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt64V2geoiySbAB_ABtFZ\">&gt;= (_: UInt64, _: UInt64) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int64V2geoiySbAB_ABtFZ\">&gt;= (_: Int64, _: Int64) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Su2geoiySbSu_SutFZ\">&gt;= (_: UInt, _: UInt) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Si2geoiySbSi_SitFZ\">&gt;= (_: Int, _: Int) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:ScP2geoiySbScP_ScPtFZ\">&gt;= (_: TaskPriority, _: TaskPriority) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation9IndexPathV2geoiySbAC_ACtFZ\">&gt;= (_: IndexPath, _: IndexPath) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation8IndexSetV0B0V2geoiySbAE_AEtFZ\">&gt;= (_: IndexSet.Index, _: IndexSet.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:So21UIContentSizeCategorya5UIKitE2geoiySbAB_ABtFZ\">&gt;= (_: UIContentSizeCategory, _: UIContentSizeCategory) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:So6CMTimea9CoreMediaE2geoiySbAB_ABtFZ\">&gt;= (_: CMTime, _: CMTime) -&gt; Bool<\/RelatedName>"
          }
        ],
        "key.substructure" : [

        ],
        "key.typename" : "(FWJSON, FWJSON) -> Bool",
        "key.typeusr" : "$sySb11FWFramework6FWJSONV_ACtcD",
        "key.usr" : "s:11FWFramework2geoiySbAA6FWJSONV_ADtF"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public func &gt; (lhs: <Type usr=\"s:11FWFramework6FWJSONV\">FWJSON<\/Type>, rhs: <Type usr=\"s:11FWFramework6FWJSONV\">FWJSON<\/Type>) -&gt; <Type usr=\"s:Sb\">Bool<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 33649
          }
        ],
        "key.bodylength" : 216,
        "key.bodyoffset" : 33699,
        "key.column" : 13,
        "key.decl_lang" : "source.lang.swift",
        "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift",
        "key.fully_annotated_decl" : "<decl.function.operator.infix><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>&gt; <\/decl.name>(<decl.var.parameter><decl.var.parameter.name>lhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:11FWFramework6FWJSONV\">FWJSON<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>rhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:11FWFramework6FWJSONV\">FWJSON<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.function.returntype><\/decl.function.operator.infix>",
        "key.kind" : "source.lang.swift.decl.function.free",
        "key.length" : 260,
        "key.line" : 1192,
        "key.name" : ">(_:_:)",
        "key.namelength" : 28,
        "key.nameoffset" : 33661,
        "key.offset" : 33656,
        "key.parsed_declaration" : "public func > (lhs: FWJSON, rhs: FWJSON) -> Bool",
        "key.parsed_scope.end" : 1199,
        "key.parsed_scope.start" : 1192,
        "key.related_decls" : [
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework1goiySbSo8NSNumberC_ADtF\">&gt; (_: NSNumber, _: NSNumber) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s1goiySbyt_yttF\">&gt; (_: (), _: ()) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s1goiySbx_q_t_x_q_ttSLRzSLR_r0_lF\">&gt; &lt;A, B&gt;(_: (A, B), _: (A, B)) -&gt; Bool where A : Comparable, B : Comparable<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s1goiySbx_q_q0_t_x_q_q0_ttSLRzSLR_SLR0_r1_lF\">&gt; &lt;A, B, C&gt;(_: (A, B, C), _: (A, B, C)) -&gt; Bool where A : Comparable, B : Comparable, C : Comparable<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s1goiySbx_q_q0_q1_t_x_q_q0_q1_ttSLRzSLR_SLR0_SLR1_r2_lF\">&gt; &lt;A, B, C, D&gt;(_: (A, B, C, D), _: (A, B, C, D)) -&gt; Bool where A : Comparable, B : Comparable, C : Comparable, D : Comparable<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s1goiySbx_q_q0_q1_q2_t_x_q_q0_q1_q2_ttSLRzSLR_SLR0_SLR1_SLR2_r3_lF\">&gt; &lt;A, B, C, D, E&gt;(_: (A, B, C, D, E), _: (A, B, C, D, E)) -&gt; Bool where A : Comparable, B : Comparable, C : Comparable, D : Comparable, E : Comparable<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s1goiySbx_q_q0_q1_q2_q3_t_x_q_q0_q1_q2_q3_ttSLRzSLR_SLR0_SLR1_SLR2_SLR3_r4_lF\">&gt; &lt;A, B, C, D, E, F&gt;(_: (A, B, C, D, E, F), _: (A, B, C, D, E, F)) -&gt; Bool where A : Comparable, B : Comparable, C : Comparable, D : Comparable, E : Comparable, F : Comparable<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SL1goiySbx_xtFZ\">&gt; (_: Self, _: Self) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SLsE1goiySbx_xtFZ\">&gt; (_: Self, _: Self) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SFsE1goiySbx_xtFZ\">&gt; (_: Self, _: Self) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SzsE1goiySbx_qd__tSzRd__lFZ\">&gt; &lt;Other&gt;(_: Self, _: Other) -&gt; Bool where Other : BinaryInteger<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SzsE1goiySbx_xtFZ\">&gt; (_: Self, _: Self) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SysE1goiySbx_qd__tSyRd__lFZ\">&gt; &lt;RHS&gt;(_: Self, _: RHS) -&gt; Bool where RHS : StringProtocol<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5UInt8V1goiySbAB_ABtFZ\">&gt; (_: UInt8, _: UInt8) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s4Int8V1goiySbAB_ABtFZ\">&gt; (_: Int8, _: Int8) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt16V1goiySbAB_ABtFZ\">&gt; (_: UInt16, _: UInt16) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int16V1goiySbAB_ABtFZ\">&gt; (_: Int16, _: Int16) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt32V1goiySbAB_ABtFZ\">&gt; (_: UInt32, _: UInt32) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int32V1goiySbAB_ABtFZ\">&gt; (_: Int32, _: Int32) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt64V1goiySbAB_ABtFZ\">&gt; (_: UInt64, _: UInt64) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int64V1goiySbAB_ABtFZ\">&gt; (_: Int64, _: Int64) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Su1goiySbSu_SutFZ\">&gt; (_: UInt, _: UInt) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Si1goiySbSi_SitFZ\">&gt; (_: Int, _: Int) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:ScP1goiySbScP_ScPtFZ\">&gt; (_: TaskPriority, _: TaskPriority) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation9IndexPathV1goiySbAC_ACtFZ\">&gt; (_: IndexPath, _: IndexPath) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation8IndexSetV0B0V1goiySbAE_AEtFZ\">&gt; (_: IndexSet.Index, _: IndexSet.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation4DateV1goiySbAC_ACtFZ\">&gt; (_: Date, _: Date) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:So21UIContentSizeCategorya5UIKitE1goiySbAB_ABtFZ\">&gt; (_: UIContentSizeCategory, _: UIContentSizeCategory) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:So6CMTimea9CoreMediaE1goiySbAB_ABtFZ\">&gt; (_: CMTime, _: CMTime) -&gt; Bool<\/RelatedName>"
          }
        ],
        "key.substructure" : [

        ],
        "key.typename" : "(FWJSON, FWJSON) -> Bool",
        "key.typeusr" : "$sySb11FWFramework6FWJSONV_ACtcD",
        "key.usr" : "s:11FWFramework1goiySbAA6FWJSONV_ADtF"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public func &lt; (lhs: <Type usr=\"s:11FWFramework6FWJSONV\">FWJSON<\/Type>, rhs: <Type usr=\"s:11FWFramework6FWJSONV\">FWJSON<\/Type>) -&gt; <Type usr=\"s:Sb\">Bool<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 33918
          }
        ],
        "key.bodylength" : 216,
        "key.bodyoffset" : 33968,
        "key.column" : 13,
        "key.decl_lang" : "source.lang.swift",
        "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift",
        "key.fully_annotated_decl" : "<decl.function.operator.infix><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>&lt; <\/decl.name>(<decl.var.parameter><decl.var.parameter.name>lhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:11FWFramework6FWJSONV\">FWJSON<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>rhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:11FWFramework6FWJSONV\">FWJSON<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.function.returntype><\/decl.function.operator.infix>",
        "key.kind" : "source.lang.swift.decl.function.free",
        "key.length" : 260,
        "key.line" : 1201,
        "key.name" : "<(_:_:)",
        "key.namelength" : 28,
        "key.nameoffset" : 33930,
        "key.offset" : 33925,
        "key.parsed_declaration" : "public func < (lhs: FWJSON, rhs: FWJSON) -> Bool",
        "key.parsed_scope.end" : 1208,
        "key.parsed_scope.start" : 1201,
        "key.related_decls" : [
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework7FWIndexO1loiySbACyxG_AEtFZ\">&lt; (_: FWIndex, _: FWIndex) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework1loiySbSo8NSNumberC_ADtF\">&lt; (_: NSNumber, _: NSNumber) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s1loiySbyt_yttF\">&lt; (_: (), _: ()) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s1loiySbx_q_t_x_q_ttSLRzSLR_r0_lF\">&lt; &lt;A, B&gt;(_: (A, B), _: (A, B)) -&gt; Bool where A : Comparable, B : Comparable<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s1loiySbx_q_q0_t_x_q_q0_ttSLRzSLR_SLR0_r1_lF\">&lt; &lt;A, B, C&gt;(_: (A, B, C), _: (A, B, C)) -&gt; Bool where A : Comparable, B : Comparable, C : Comparable<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s1loiySbx_q_q0_q1_t_x_q_q0_q1_ttSLRzSLR_SLR0_SLR1_r2_lF\">&lt; &lt;A, B, C, D&gt;(_: (A, B, C, D), _: (A, B, C, D)) -&gt; Bool where A : Comparable, B : Comparable, C : Comparable, D : Comparable<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s1loiySbx_q_q0_q1_q2_t_x_q_q0_q1_q2_ttSLRzSLR_SLR0_SLR1_SLR2_r3_lF\">&lt; &lt;A, B, C, D, E&gt;(_: (A, B, C, D, E), _: (A, B, C, D, E)) -&gt; Bool where A : Comparable, B : Comparable, C : Comparable, D : Comparable, E : Comparable<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s1loiySbx_q_q0_q1_q2_q3_t_x_q_q0_q1_q2_q3_ttSLRzSLR_SLR0_SLR1_SLR2_SLR3_r4_lF\">&lt; &lt;A, B, C, D, E, F&gt;(_: (A, B, C, D, E, F), _: (A, B, C, D, E, F)) -&gt; Bool where A : Comparable, B : Comparable, C : Comparable, D : Comparable, E : Comparable, F : Comparable<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SJ1loiySbSJ_SJtFZ\">&lt; (_: Character, _: Character) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SL1loiySbx_xtFZ\">&lt; (_: Self, _: Self) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SNsSxRzSZ6StrideRpzrlE5IndexO1loiySbADyx_G_AFtFZ\">&lt; (_: ClosedRange&lt;Bound&gt;.Index, _: ClosedRange&lt;Bound&gt;.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SD5IndexV1loiySbAByxq__G_ADtFZ\">&lt; (_: Dictionary&lt;Key, Value&gt;.Index, _: Dictionary&lt;Key, Value&gt;.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s8AnyIndexV1loiySbAB_ABtFZ\">&lt; (_: AnyIndex, _: AnyIndex) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s15FlattenSequenceVsSlRzSl7ElementRpzrlE5IndexV1loiySbAFyx_G_AHtFZ\">&lt; (_: FlattenCollection&lt;Base&gt;.Index, _: FlattenCollection&lt;Base&gt;.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SFsE1loiySbx_xtFZ\">&lt; (_: Self, _: Self) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SzsE1loiySbx_qd__tSzRd__lFZ\">&lt; &lt;Other&gt;(_: Self, _: Other) -&gt; Bool where Other : BinaryInteger<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s7UnicodeO6ScalarV1loiySbAD_ADtFZ\">&lt; (_: Unicode.Scalar, _: Unicode.Scalar) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SO1loiySbSO_SOtFZ\">&lt; (_: ObjectIdentifier, _: ObjectIdentifier) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s8_PointerPsE1loiySbx_xtFZ\">&lt; (_: Self, _: Self) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5NeverO1loiySbAB_ABtFZ\">&lt; (_: Never, _: Never) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s23LazyPrefixWhileSequenceVsSlRzrlE5IndexV1loiySbADyx_G_AFtFZ\">&lt; (_: LazyPrefixWhileCollection&lt;Base&gt;.Index, _: LazyPrefixWhileCollection&lt;Base&gt;.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s18ReversedCollectionV5IndexV1loiySbADyx_G_AFtFZ\">&lt; (_: ReversedCollection&lt;Base&gt;.Index, _: ReversedCollection&lt;Base&gt;.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sh5IndexV1loiySbAByx_G_ADtFZ\">&lt; (_: Set&lt;Element&gt;.Index, _: Set&lt;Element&gt;.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SxsE1loiySbx_xtFZ\">&lt; (_: Self, _: Self) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SysE1loiySbx_qd__tSyRd__lFZ\">&lt; &lt;RHS&gt;(_: Self, _: RHS) -&gt; Bool where RHS : StringProtocol<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SS1loiySbSS_SStFZ\">&lt; (_: String, _: String) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SS5IndexV1loiySbAB_ABtFZ\">&lt; (_: String.Index, _: String.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s11_UIntBufferV5IndexV1loiySbADyx_G_AFtFZ\">&lt; (_: _UIntBuffer&lt;Element&gt;.Index, _: _UIntBuffer&lt;Element&gt;.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s7UnicodeO23CanonicalCombiningClassV1loiySbAD_ADtFZ\">&lt; (_: Unicode.CanonicalCombiningClass, _: Unicode.CanonicalCombiningClass) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s16_ValidUTF8BufferV5IndexV1loiySbAD_ADtFZ\">&lt; (_: _ValidUTF8Buffer.Index, _: _ValidUTF8Buffer.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s20CollectionDifferenceV5IndexV1loiySbADyx_G_AFtFZ\">&lt; (_: CollectionDifference&lt;ChangeElement&gt;.Index, _: CollectionDifference&lt;ChangeElement&gt;.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5UInt8V1loiySbAB_ABtFZ\">&lt; (_: UInt8, _: UInt8) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s4Int8V1loiySbAB_ABtFZ\">&lt; (_: Int8, _: Int8) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt16V1loiySbAB_ABtFZ\">&lt; (_: UInt16, _: UInt16) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int16V1loiySbAB_ABtFZ\">&lt; (_: Int16, _: Int16) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt32V1loiySbAB_ABtFZ\">&lt; (_: UInt32, _: UInt32) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int32V1loiySbAB_ABtFZ\">&lt; (_: Int32, _: Int32) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt64V1loiySbAB_ABtFZ\">&lt; (_: UInt64, _: UInt64) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int64V1loiySbAB_ABtFZ\">&lt; (_: Int64, _: Int64) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Su1loiySbSu_SutFZ\">&lt; (_: UInt, _: UInt) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Si1loiySbSi_SitFZ\">&lt; (_: Int, _: Int) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:ScP1loiySbScP_ScPtFZ\">&lt; (_: TaskPriority, _: TaskPriority) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation9IndexPathV1loiySbAC_ACtFZ\">&lt; (_: IndexPath, _: IndexPath) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation8IndexSetV0B0V1loiySbAE_AEtFZ\">&lt; (_: IndexSet.Index, _: IndexSet.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:So16NSOperationQueueC10FoundationE17SchedulerTimeTypeV6StrideV1loiySbAG_AGtFZ\">&lt; (_: OperationQueue.SchedulerTimeType.Stride, _: OperationQueue.SchedulerTimeType.Stride) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation12DateIntervalV1loiySbAC_ACtFZ\">&lt; (_: DateInterval, _: DateInterval) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:So9NSDecimala10FoundationE1loiySbAB_ABtFZ\">&lt; (_: Decimal, _: Decimal) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation11MeasurementV1loiySbACyqd__G_ACyqd_0_GtSo6NSUnitCRbd__AHRbd_0_r0_lFZ\">&lt; &lt;LeftHandSideType, RightHandSideType&gt;(_: Measurement&lt;LeftHandSideType&gt;, _: Measurement&lt;RightHandSideType&gt;) -&gt; Bool where LeftHandSideType : Unit, RightHandSideType : Unit<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation16AttributedStringV5IndexV1loiySbAE_AEtFZ\">&lt; (_: AttributedString.Index, _: AttributedString.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation16AttributedStringV4RunsV5IndexV1loiySbAG_AGtFZ\">&lt; (_: AttributedString.Runs.Index, _: AttributedString.Runs.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation4DateV1loiySbAC_ACtFZ\">&lt; (_: Date, _: Date) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:So9NSRunLoopC10FoundationE17SchedulerTimeTypeV6StrideV1loiySbAG_AGtFZ\">&lt; (_: RunLoop.SchedulerTimeType.Stride, _: RunLoop.SchedulerTimeType.Stride) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:8Dispatch0A4TimeV1loiySbAC_ACtFZ\">&lt; (_: DispatchTime, _: DispatchTime) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:8Dispatch0A8WallTimeV1loiySbAC_ACtFZ\">&lt; (_: DispatchWallTime, _: DispatchWallTime) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:So17OS_dispatch_queueC8DispatchE17SchedulerTimeTypeV1loiySbAE_AEtFZ\">&lt; (_: DispatchQueue.SchedulerTimeType, _: DispatchQueue.SchedulerTimeType) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:So17OS_dispatch_queueC8DispatchE17SchedulerTimeTypeV6StrideV1loiySbAG_AGtFZ\">&lt; (_: DispatchQueue.SchedulerTimeType.Stride, _: DispatchQueue.SchedulerTimeType.Stride) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:5UIKit01_A23NumericRawRepresentablePAAE1loiySbx_xtFZ\">&lt; (_: Self, _: Self) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:So21UIContentSizeCategorya5UIKitE1loiySbAB_ABtFZ\">&lt; (_: UIContentSizeCategory, _: UIContentSizeCategory) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:So22CMFormatDescriptionRefa9CoreMediaE10ExtensionsV5IndexV1loiySbAG_AGtFZ\">&lt; (_: CMFormatDescription.Extensions.Index, _: CMFormatDescription.Extensions.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:So6CMTimea9CoreMediaE1loiySbAB_ABtFZ\">&lt; (_: CMTime, _: CMTime) -&gt; Bool<\/RelatedName>"
          }
        ],
        "key.substructure" : [

        ],
        "key.typename" : "(FWJSON, FWJSON) -> Bool",
        "key.typeusr" : "$sySb11FWFramework6FWJSONV_ACtcD",
        "key.usr" : "s:11FWFramework1loiySbAA6FWJSONV_ADtF"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.private",
        "key.annotated_decl" : "<Declaration>private let trueNumber: <Type usr=\"c:objc(cs)NSNumber\">NSNumber<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.private",
            "key.length" : 7,
            "key.offset" : 34187
          }
        ],
        "key.column" : 13,
        "key.decl_lang" : "source.lang.swift",
        "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift",
        "key.fully_annotated_decl" : "<decl.var.global><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>trueNumber<\/decl.name>: <decl.var.type><ref.class usr=\"c:objc(cs)NSNumber\">NSNumber<\/ref.class><\/decl.var.type><\/decl.var.global>",
        "key.kind" : "source.lang.swift.decl.var.global",
        "key.length" : 38,
        "key.line" : 1210,
        "key.name" : "trueNumber",
        "key.namelength" : 10,
        "key.nameoffset" : 34199,
        "key.offset" : 34195,
        "key.parsed_declaration" : "private let trueNumber = NSNumber(value: true)",
        "key.parsed_scope.end" : 1210,
        "key.parsed_scope.start" : 1210,
        "key.typename" : "NSNumber",
        "key.typeusr" : "$sSo8NSNumberCD",
        "key.usr" : "s:11FWFramework10trueNumber33_CE7FCE31305580F7F6A923B7611B8BA6LLSo8NSNumberCvp"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.private",
        "key.annotated_decl" : "<Declaration>private let falseNumber: <Type usr=\"c:objc(cs)NSNumber\">NSNumber<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.private",
            "key.length" : 7,
            "key.offset" : 34234
          }
        ],
        "key.column" : 13,
        "key.decl_lang" : "source.lang.swift",
        "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift",
        "key.fully_annotated_decl" : "<decl.var.global><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>falseNumber<\/decl.name>: <decl.var.type><ref.class usr=\"c:objc(cs)NSNumber\">NSNumber<\/ref.class><\/decl.var.type><\/decl.var.global>",
        "key.kind" : "source.lang.swift.decl.var.global",
        "key.length" : 40,
        "key.line" : 1211,
        "key.name" : "falseNumber",
        "key.namelength" : 11,
        "key.nameoffset" : 34246,
        "key.offset" : 34242,
        "key.parsed_declaration" : "private let falseNumber = NSNumber(value: false)",
        "key.parsed_scope.end" : 1211,
        "key.parsed_scope.start" : 1211,
        "key.typename" : "NSNumber",
        "key.typeusr" : "$sSo8NSNumberCD",
        "key.usr" : "s:11FWFramework11falseNumber33_CE7FCE31305580F7F6A923B7611B8BA6LLSo8NSNumberCvp"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.private",
        "key.annotated_decl" : "<Declaration>private let trueObjCType: <Type usr=\"s:SS\">String<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.private",
            "key.length" : 7,
            "key.offset" : 34283
          }
        ],
        "key.column" : 13,
        "key.decl_lang" : "source.lang.swift",
        "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift",
        "key.fully_annotated_decl" : "<decl.var.global><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>trueObjCType<\/decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.type><\/decl.var.global>",
        "key.kind" : "source.lang.swift.decl.var.global",
        "key.length" : 55,
        "key.line" : 1212,
        "key.name" : "trueObjCType",
        "key.namelength" : 12,
        "key.nameoffset" : 34295,
        "key.offset" : 34291,
        "key.parsed_declaration" : "private let trueObjCType = String(cString: trueNumber.objCType)",
        "key.parsed_scope.end" : 1212,
        "key.parsed_scope.start" : 1212,
        "key.typename" : "String",
        "key.typeusr" : "$sSSD",
        "key.usr" : "s:11FWFramework12trueObjCType33_CE7FCE31305580F7F6A923B7611B8BA6LLSSvp"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.private",
        "key.annotated_decl" : "<Declaration>private let falseObjCType: <Type usr=\"s:SS\">String<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.private",
            "key.length" : 7,
            "key.offset" : 34347
          }
        ],
        "key.column" : 13,
        "key.decl_lang" : "source.lang.swift",
        "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift",
        "key.fully_annotated_decl" : "<decl.var.global><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>falseObjCType<\/decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.type><\/decl.var.global>",
        "key.kind" : "source.lang.swift.decl.var.global",
        "key.length" : 57,
        "key.line" : 1213,
        "key.name" : "falseObjCType",
        "key.namelength" : 13,
        "key.nameoffset" : 34359,
        "key.offset" : 34355,
        "key.parsed_declaration" : "private let falseObjCType = String(cString: falseNumber.objCType)",
        "key.parsed_scope.end" : 1213,
        "key.parsed_scope.start" : 1213,
        "key.typename" : "String",
        "key.typeusr" : "$sSSD",
        "key.usr" : "s:11FWFramework13falseObjCType33_CE7FCE31305580F7F6A923B7611B8BA6LLSSvp"
      },
      {
        "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
        "key.length" : 28,
        "key.name" : "MARK: - NSNumber: Comparable",
        "key.namelength" : 0,
        "key.nameoffset" : 0,
        "key.offset" : 34417
      },
      {
        "key.annotated_decl" : "<Declaration>class NSNumber : <Type usr=\"c:objc(cs)NSValue\">NSValue<\/Type><\/Declaration>",
        "key.bodylength" : 332,
        "key.bodyoffset" : 34467,
        "key.column" : 12,
        "key.decl_lang" : "source.lang.objc",
        "key.filepath" : "\/Applications\/Xcode.app\/Contents\/Developer\/Platforms\/MacOSX.platform\/Developer\/SDKs\/MacOSX12.0.sdk\/System\/Library\/Frameworks\/Foundation.framework\/Headers\/NSValue.h",
        "key.fully_annotated_decl" : "<decl.class><syntaxtype.keyword>class<\/syntaxtype.keyword> <decl.name>NSNumber<\/decl.name> : <ref.class usr=\"c:objc(cs)NSValue\">NSValue<\/ref.class><\/decl.class>",
        "key.is_system" : true,
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 353,
        "key.line" : 41,
        "key.modulename" : "Foundation.NSValue",
        "key.name" : "NSNumber",
        "key.namelength" : 8,
        "key.nameoffset" : 34457,
        "key.offset" : 34447,
        "key.parsed_declaration" : "extension NSNumber",
        "key.parsed_scope.end" : 1226,
        "key.parsed_scope.start" : 1217,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.fileprivate",
            "key.annotated_decl" : "<Declaration>fileprivate var isBool: <Type usr=\"s:Sb\">Bool<\/Type> { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.fileprivate",
                "key.length" : 11,
                "key.offset" : 34472
              }
            ],
            "key.bodylength" : 295,
            "key.bodyoffset" : 34502,
            "key.column" : 21,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>fileprivate<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>isBool<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 314,
            "key.line" : 1218,
            "key.name" : "isBool",
            "key.namelength" : 6,
            "key.nameoffset" : 34488,
            "key.offset" : 34484,
            "key.parsed_declaration" : "fileprivate var isBool: Bool",
            "key.parsed_scope.end" : 1225,
            "key.parsed_scope.start" : 1218,
            "key.typename" : "Bool",
            "key.typeusr" : "$sSbD",
            "key.usr" : "s:So8NSNumberC11FWFrameworkE6isBool33_CE7FCE31305580F7F6A923B7611B8BA6LLSbvp"
          },
          {
            "key.annotated_decl" : "<Declaration>let objCType: <Type usr=\"s:SS\">String<\/Type><\/Declaration>",
            "key.column" : 13,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift",
            "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>objCType<\/decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.type><\/decl.var.local>",
            "key.kind" : "source.lang.swift.decl.var.local",
            "key.length" : 45,
            "key.line" : 1219,
            "key.name" : "objCType",
            "key.namelength" : 8,
            "key.nameoffset" : 34515,
            "key.offset" : 34511,
            "key.parsed_declaration" : "let objCType = String(cString: self.objCType)",
            "key.parsed_scope.end" : 1219,
            "key.parsed_scope.start" : 1219,
            "key.typename" : "String",
            "key.typeusr" : "$sSSD",
            "key.usr" : "s:So8NSNumberC11FWFrameworkE6isBool33_CE7FCE31305580F7F6A923B7611B8BA6LLSbvg8objCTypeL_SSvp"
          }
        ],
        "key.typename" : "NSNumber.Type",
        "key.typeusr" : "$sSo8NSNumberCmD",
        "key.usr" : "c:objc(cs)NSNumber"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.internal",
        "key.annotated_decl" : "<Declaration>func == (lhs: <Type usr=\"c:objc(cs)NSNumber\">NSNumber<\/Type>, rhs: <Type usr=\"c:objc(cs)NSNumber\">NSNumber<\/Type>) -&gt; <Type usr=\"s:Sb\">Bool<\/Type><\/Declaration>",
        "key.bodylength" : 183,
        "key.bodyoffset" : 34850,
        "key.column" : 6,
        "key.decl_lang" : "source.lang.swift",
        "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift",
        "key.fully_annotated_decl" : "<decl.function.operator.infix><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>== <\/decl.name>(<decl.var.parameter><decl.var.parameter.name>lhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"c:objc(cs)NSNumber\">NSNumber<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>rhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"c:objc(cs)NSNumber\">NSNumber<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.function.returntype><\/decl.function.operator.infix>",
        "key.kind" : "source.lang.swift.decl.function.free",
        "key.length" : 232,
        "key.line" : 1228,
        "key.name" : "==(_:_:)",
        "key.namelength" : 33,
        "key.nameoffset" : 34807,
        "key.offset" : 34802,
        "key.parsed_declaration" : "func == (lhs: NSNumber, rhs: NSNumber) -> Bool",
        "key.parsed_scope.end" : 1234,
        "key.parsed_scope.start" : 1228,
        "key.related_decls" : [
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework7FWIndexO2eeoiySbACyxG_AEtFZ\">== (_: FWIndex, _: FWIndex) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework2eeoiySbAA6FWJSONV_ADtF\">== (_: FWJSON, _: FWJSON) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s2eeoiySbypXpSg_ABtF\">== (_: Any.Type?, _: Any.Type?) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s2eeoiySbx_xtSYRzSQ8RawValueRpzlF\">== &lt;T&gt;(_: T, _: T) -&gt; Bool where T : RawRepresentable, T.RawValue : Equatable<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s2eeoiySbyt_yttF\">== (_: (), _: ()) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s2eeoiySbx_q_t_x_q_ttSQRzSQR_r0_lF\">== &lt;A, B&gt;(_: (A, B), _: (A, B)) -&gt; Bool where A : Equatable, B : Equatable<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s2eeoiySbx_q_q0_t_x_q_q0_ttSQRzSQR_SQR0_r1_lF\">== &lt;A, B, C&gt;(_: (A, B, C), _: (A, B, C)) -&gt; Bool where A : Equatable, B : Equatable, C : Equatable<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s2eeoiySbx_q_q0_q1_t_x_q_q0_q1_ttSQRzSQR_SQR0_SQR1_r2_lF\">== &lt;A, B, C, D&gt;(_: (A, B, C, D), _: (A, B, C, D)) -&gt; Bool where A : Equatable, B : Equatable, C : Equatable, D : Equatable<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s2eeoiySbx_q_q0_q1_q2_t_x_q_q0_q1_q2_ttSQRzSQR_SQR0_SQR1_SQR2_r3_lF\">== &lt;A, B, C, D, E&gt;(_: (A, B, C, D, E), _: (A, B, C, D, E)) -&gt; Bool where A : Equatable, B : Equatable, C : Equatable, D : Equatable, E : Equatable<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s2eeoiySbx_q_q0_q1_q2_q3_t_x_q_q0_q1_q2_q3_ttSQRzSQR_SQR0_SQR1_SQR2_SQR3_r4_lF\">== &lt;A, B, C, D, E, F&gt;(_: (A, B, C, D, E, F), _: (A, B, C, D, E, F)) -&gt; Bool where A : Equatable, B : Equatable, C : Equatable, D : Equatable, E : Equatable, F : Equatable<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SasSQRzlE2eeoiySbSayxG_ABtFZ\">== (_: Array&lt;Element&gt;, _: Array&lt;Element&gt;) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s10ArraySliceVsSQRzlE2eeoiySbAByxG_ADtFZ\">== (_: ArraySlice&lt;Element&gt;, _: ArraySlice&lt;Element&gt;) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sb2eeoiyS2b_SbtFZ\">== (_: Bool, _: Bool) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SJ2eeoiySbSJ_SJtFZ\">== (_: Character, _: Character) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s17CodingUserInfoKeyV2eeoiySbAB_ABtFZ\">== (_: CodingUserInfoKey, _: CodingUserInfoKey) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s15ContiguousArrayVsSQRzlE2eeoiySbAByxG_ADtFZ\">== (_: ContiguousArray&lt;Element&gt;, _: ContiguousArray&lt;Element&gt;) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SNsSxRzSZ6StrideRpzrlE5IndexO2eeoiySbADyx_G_AFtFZ\">== (_: ClosedRange&lt;Bound&gt;.Index, _: ClosedRange&lt;Bound&gt;.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SN2eeoiySbSNyxG_ABtFZ\">== (_: ClosedRange&lt;Bound&gt;, _: ClosedRange&lt;Bound&gt;) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s13OpaquePointerV2eeoiySbAB_ABtFZ\">== (_: OpaquePointer, _: OpaquePointer) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SD4KeysV2eeoiySbAByxq__G_ADtFZ\">== (_: Dictionary&lt;Key, Value&gt;.Keys, _: Dictionary&lt;Key, Value&gt;.Keys) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SDsSQR_rlE2eeoiySbSDyxq_G_ABtFZ\">== (_: [Key : Value], _: [Key : Value]) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SD5IndexV2eeoiySbAByxq__G_ADtFZ\">== (_: Dictionary&lt;Key, Value&gt;.Index, _: Dictionary&lt;Key, Value&gt;.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s15EmptyCollectionV2eeoiySbAByxG_ADtFZ\">== (_: EmptyCollection&lt;Element&gt;, _: EmptyCollection&lt;Element&gt;) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SQ2eeoiySbx_xtFZ\">== (_: Self, _: Self) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s8AnyIndexV2eeoiySbAB_ABtFZ\">== (_: AnyIndex, _: AnyIndex) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s15FlattenSequenceVsSlRzSl7ElementRpzrlE5IndexV2eeoiySbAFyx_G_AHtFZ\">== (_: FlattenCollection&lt;Base&gt;.Index, _: FlattenCollection&lt;Base&gt;.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s17FloatingPointSignO2eeoiySbAB_ABtFZ\">== (_: FloatingPointSign, _: FloatingPointSign) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s27FloatingPointClassificationO2eeoiySbAB_ABtFZ\">== (_: FloatingPointClassification, _: FloatingPointClassification) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s25FloatingPointRoundingRuleO2eeoiySbAB_ABtFZ\">== (_: FloatingPointRoundingRule, _: FloatingPointRoundingRule) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SFsE2eeoiySbx_xtFZ\">== (_: Self, _: Self) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s11AnyHashableV2eeoiySbAB_ABtFZ\">== (_: AnyHashable, _: AnyHashable) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SzsE2eeoiySbx_qd__tSzRd__lFZ\">== &lt;Other&gt;(_: Self, _: Other) -&gt; Bool where Other : BinaryInteger<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s10AnyKeyPathC2eeoiySbAB_ABtFZ\">== (_: AnyKeyPath, _: AnyKeyPath) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s20ManagedBufferPointerV2eeoiySbAByxq_G_ADtFZ\">== (_: ManagedBufferPointer&lt;Header, Element&gt;, _: ManagedBufferPointer&lt;Header, Element&gt;) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s7UnicodeO6ScalarV2eeoiySbAD_ADtFZ\">== (_: Unicode.Scalar, _: Unicode.Scalar) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SO2eeoiySbSO_SOtFZ\">== (_: ObjectIdentifier, _: ObjectIdentifier) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SqsSQRzlE2eeoiySbxSg_ABtFZ\">== (_: Wrapped?, _: Wrapped?) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sq2eeoiySbxSg_s26_OptionalNilComparisonTypeVtFZ\">== (_: Wrapped?, _: _OptionalNilComparisonType) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sq2eeoiySbs26_OptionalNilComparisonTypeV_xSgtFZ\">== (_: _OptionalNilComparisonType, _: Wrapped?) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s8_PointerPsE2eeoiySbx_xtFZ\">== (_: Self, _: Self) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5NeverO2eeoiySbAB_ABtFZ\">== (_: Never, _: Never) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s23LazyPrefixWhileSequenceVsSlRzrlE5IndexV2eeoiySbADyx_G_AFtFZ\">== (_: LazyPrefixWhileCollection&lt;Base&gt;.Index, _: LazyPrefixWhileCollection&lt;Base&gt;.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sn2eeoiySbSnyxG_ABtFZ\">== (_: Range&lt;Bound&gt;, _: Range&lt;Bound&gt;) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6ResultOsSQRzSQR_rlE2eeoiySbAByxq_G_ADtFZ\">== (_: Result&lt;Success, Failure&gt;, _: Result&lt;Success, Failure&gt;) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s18ReversedCollectionV5IndexV2eeoiySbADyx_G_AFtFZ\">== (_: ReversedCollection&lt;Base&gt;.Index, _: ReversedCollection&lt;Base&gt;.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sh2eeoiySbShyxG_ABtFZ\">== (_: Set&lt;Element&gt;, _: Set&lt;Element&gt;) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sh5IndexV2eeoiySbAByx_G_ADtFZ\">== (_: Set&lt;Element&gt;.Index, _: Set&lt;Element&gt;.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SxsE2eeoiySbx_xtFZ\">== (_: Self, _: Self) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SysE2eeoiySbx_qd__tSyRd__lFZ\">== &lt;RHS&gt;(_: Self, _: RHS) -&gt; Bool where RHS : StringProtocol<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SS2eeoiySbSS_SStFZ\">== (_: String, _: String) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SS5IndexV2eeoiySbAB_ABtFZ\">== (_: String.Index, _: String.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s11_UIntBufferV5IndexV2eeoiySbADyx_G_AFtFZ\">== (_: _UIntBuffer&lt;Element&gt;.Index, _: _UIntBuffer&lt;Element&gt;.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s7UnicodeO15GeneralCategoryO2eeoiySbAD_ADtFZ\">== (_: Unicode.GeneralCategory, _: Unicode.GeneralCategory) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s7UnicodeO23CanonicalCombiningClassV2eeoiySbAD_ADtFZ\">== (_: Unicode.CanonicalCombiningClass, _: Unicode.CanonicalCombiningClass) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s7UnicodeO11NumericTypeO2eeoiySbAD_ADtFZ\">== (_: Unicode.NumericType, _: Unicode.NumericType) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s7UnicodeO5UTF32O2eeoiySbAD_ADtFZ\">== (_: Unicode.UTF32, _: Unicode.UTF32) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s21UnicodeDecodingResultO2eeoiySbAB_ABtFZ\">== (_: UnicodeDecodingResult, _: UnicodeDecodingResult) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s16_ValidUTF8BufferV5IndexV2eeoiySbAD_ADtFZ\">== (_: _ValidUTF8Buffer.Index, _: _ValidUTF8Buffer.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s20CollectionDifferenceV5IndexV2eeoiySbADyx_G_AFtFZ\">== (_: CollectionDifference&lt;ChangeElement&gt;.Index, _: CollectionDifference&lt;ChangeElement&gt;.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s20CollectionDifferenceV6ChangeOsSQRzlE2eeoiySbADyx_G_AFtFZ\">== (_: CollectionDifference&lt;ChangeElement&gt;.Change, _: CollectionDifference&lt;ChangeElement&gt;.Change) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s20CollectionDifferenceVsSQRzlE2eeoiySbAByxG_ADtFZ\">== (_: CollectionDifference&lt;ChangeElement&gt;, _: CollectionDifference&lt;ChangeElement&gt;) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6MirrorV12DisplayStyleO2eeoiySbAD_ADtFZ\">== (_: Mirror.DisplayStyle, _: Mirror.DisplayStyle) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s4SIMDPsE2eeoiySbx_xtFZ\">== (_: Self, _: Self) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5UInt8V2eeoiySbAB_ABtFZ\">== (_: UInt8, _: UInt8) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s4Int8V2eeoiySbAB_ABtFZ\">== (_: Int8, _: Int8) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt16V2eeoiySbAB_ABtFZ\">== (_: UInt16, _: UInt16) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int16V2eeoiySbAB_ABtFZ\">== (_: Int16, _: Int16) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt32V2eeoiySbAB_ABtFZ\">== (_: UInt32, _: UInt32) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int32V2eeoiySbAB_ABtFZ\">== (_: Int32, _: Int32) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt64V2eeoiySbAB_ABtFZ\">== (_: UInt64, _: UInt64) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int64V2eeoiySbAB_ABtFZ\">== (_: Int64, _: Int64) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Su2eeoiySbSu_SutFZ\">== (_: UInt, _: UInt) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Si2eeoiySbSi_SitFZ\">== (_: Int, _: Int) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:ScT2eeoiySbScTyxq_G_ABtFZ\">== (_: Task&lt;Success, Failure&gt;, _: Task&lt;Success, Failure&gt;) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:ScP2eeoiySbScP_ScPtFZ\">== (_: TaskPriority, _: TaskPriority) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sct2eeoiySbSct_ScttFZ\">== (_: UnsafeCurrentTask, _: UnsafeCurrentTask) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:ScS12ContinuationV11TerminationO2eeoiySbADyx__G_AFtFZ\">== (_: AsyncStream&lt;Element&gt;.Continuation.Termination, _: AsyncStream&lt;Element&gt;.Continuation.Termination) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation11MeasurementVAASo11NSDimensionCRbzrlE15AttributedStyleV2eeoiySbAGyx_G_AItFZ\">== (_: Measurement&lt;UnitType&gt;.AttributedStyle, _: Measurement&lt;UnitType&gt;.AttributedStyle) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation14DateComponentsV2eeoiySbAC_ACtFZ\">== (_: DateComponents, _: DateComponents) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation20CodableConfigurationVAASQRzrlE2eeoiySbACyxq_G_AEtFZ\">== (_: CodableConfiguration&lt;T, ConfigurationProvider&gt;, _: CodableConfiguration&lt;T, ConfigurationProvider&gt;) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation4DateV19VerbatimFormatStyleV2eeoiySbAE_AEtFZ\">== (_: Date.VerbatimFormatStyle, _: Date.VerbatimFormatStyle) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:So8NSObjectC10FoundationE26KeyValueObservingPublisherV2eeoiySbAEy_xq_G_AGtFZ\">== (_: NSObject.KeyValueObservingPublisher&lt;Subject, Value&gt;, _: NSObject.KeyValueObservingPublisher&lt;Subject, Value&gt;) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation4DateV19RelativeFormatStyleV05UnitsE0V2eeoiySbAG_AGtFZ\">== (_: Date.RelativeFormatStyle.UnitsStyle, _: Date.RelativeFormatStyle.UnitsStyle) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation4DateV19RelativeFormatStyleV12PresentationV2eeoiySbAG_AGtFZ\">== (_: Date.RelativeFormatStyle.Presentation, _: Date.RelativeFormatStyle.Presentation) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation4DateV19RelativeFormatStyleV2eeoiySbAE_AEtFZ\">== (_: Date.RelativeFormatStyle, _: Date.RelativeFormatStyle) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation4DateV13ParseStrategyV2eeoiySbAE_AEtFZ\">== (_: Date.ParseStrategy, _: Date.ParseStrategy) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation9IndexPathV2eeoiySbAC_ACtFZ\">== (_: IndexPath, _: IndexPath) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation8TimeZoneV2eeoiySbAC_ACtFZ\">== (_: TimeZone, _: TimeZone) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation8IndexSetV0B0V2eeoiySbAE_AEtFZ\">== (_: IndexSet.Index, _: IndexSet.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation8IndexSetV9RangeViewV2eeoiySbAE_AEtFZ\">== (_: IndexSet.RangeView, _: IndexSet.RangeView) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation8IndexSetV2eeoiySbAC_ACtFZ\">== (_: IndexSet, _: IndexSet) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation26FloatingPointParseStrategyV2eeoiySbACyxG_AEtFZ\">== (_: FloatingPointParseStrategy&lt;Format&gt;, _: FloatingPointParseStrategy&lt;Format&gt;) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation15AttributeScopesO0A10AttributesV09DateFieldB0O0F0O2eeoiySbAI_AItFZ\">== (_: AttributeScopes.FoundationAttributes.DateFieldAttribute.Field, _: AttributeScopes.FoundationAttributes.DateFieldAttribute.Field) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation15AttributeScopesO0A10AttributesV09ByteCountB0O9ComponentO2eeoiySbAI_AItFZ\">== (_: AttributeScopes.FoundationAttributes.ByteCountAttribute.Component, _: AttributeScopes.FoundationAttributes.ByteCountAttribute.Component) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation15AttributeScopesO0A10AttributesV09ByteCountB0O4UnitO2eeoiySbAI_AItFZ\">== (_: AttributeScopes.FoundationAttributes.ByteCountAttribute.Unit, _: AttributeScopes.FoundationAttributes.ByteCountAttribute.Unit) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation11MeasurementVAASo11NSDimensionCRbzrlE11FormatStyleV9UnitWidthV2eeoiySbAIyx__G_AKtFZ\">== (_: Measurement&lt;UnitType&gt;.FormatStyle.UnitWidth, _: Measurement&lt;UnitType&gt;.FormatStyle.UnitWidth) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation11MeasurementVAASo11NSDimensionCRbzrlE11FormatStyleV2eeoiySbAGyx_G_AItFZ\">== (_: Measurement&lt;UnitType&gt;.FormatStyle, _: Measurement&lt;UnitType&gt;.FormatStyle) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation26MeasurementFormatUnitUsageV2eeoiySbACyxG_AEtFZ\">== (_: MeasurementFormatUnitUsage&lt;UnitType&gt;, _: MeasurementFormatUnitUsage&lt;UnitType&gt;) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:So20NSNotificationCenterC10FoundationE9PublisherV2eeoiySbAE_AEtFZ\">== (_: NotificationCenter.Publisher, _: NotificationCenter.Publisher) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation4DataV2eeoiySbAC_ACtFZ\">== (_: Data, _: Data) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:So8_NSRangeV10FoundationE2eeoiySbAB_ABtFZ\">== (_: NSRange, _: NSRange) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:So9NSDecimala10FoundationE11FormatStyleV2eeoiySbAE_AEtFZ\">== (_: Decimal.FormatStyle, _: Decimal.FormatStyle) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:So9NSDecimala10FoundationE11FormatStyleV7PercentV2eeoiySbAG_AGtFZ\">== (_: Decimal.FormatStyle.Percent, _: Decimal.FormatStyle.Percent) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:So9NSDecimala10FoundationE11FormatStyleV8CurrencyV2eeoiySbAG_AGtFZ\">== (_: Decimal.FormatStyle.Currency, _: Decimal.FormatStyle.Currency) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:So9NSDecimala10FoundationE11FormatStyleV10AttributedV2eeoiySbAG_AGtFZ\">== (_: Decimal.FormatStyle.Attributed, _: Decimal.FormatStyle.Attributed) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:So16NSOperationQueueC10FoundationE17SchedulerTimeTypeV6StrideV2eeoiySbAG_AGtFZ\">== (_: OperationQueue.SchedulerTimeType.Stride, _: OperationQueue.SchedulerTimeType.Stride) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:So9NSDecimala10FoundationE13ParseStrategyV2eeoiySbAEy_xG_AGtFZ\">== (_: Decimal.ParseStrategy&lt;Format&gt;, _: Decimal.ParseStrategy&lt;Format&gt;) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation4DateV15AttributedStyleV2eeoiySbAE_AEtFZ\">== (_: Date.AttributedStyle, _: Date.AttributedStyle) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation4DateV11FormatStyleV2eeoiySbAE_AEtFZ\">== (_: Date.FormatStyle, _: Date.FormatStyle) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation4DateV11FormatStyleV0bD0V2eeoiySbAG_AGtFZ\">== (_: Date.FormatStyle.DateStyle, _: Date.FormatStyle.DateStyle) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation4DateV11FormatStyleV04TimeD0V2eeoiySbAG_AGtFZ\">== (_: Date.FormatStyle.TimeStyle, _: Date.FormatStyle.TimeStyle) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:So9NSScannerC10FoundationE20NumberRepresentationO2eeoiySbAE_AEtFZ\">== (_: Scanner.NumberRepresentation, _: Scanner.NumberRepresentation) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation6LocaleV2eeoiySbAC_ACtFZ\">== (_: Locale, _: Locale) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation4DateV11FormatStyleV6SymbolV3EraV2eeoiySbAI_AItFZ\">== (_: Date.FormatStyle.Symbol.Era, _: Date.FormatStyle.Symbol.Era) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation4DateV11FormatStyleV6SymbolV4YearV2eeoiySbAI_AItFZ\">== (_: Date.FormatStyle.Symbol.Year, _: Date.FormatStyle.Symbol.Year) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation4DateV11FormatStyleV6SymbolV013YearForWeekOfF0V2eeoiySbAI_AItFZ\">== (_: Date.FormatStyle.Symbol.YearForWeekOfYear, _: Date.FormatStyle.Symbol.YearForWeekOfYear) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation4DateV11FormatStyleV6SymbolV10CyclicYearV2eeoiySbAI_AItFZ\">== (_: Date.FormatStyle.Symbol.CyclicYear, _: Date.FormatStyle.Symbol.CyclicYear) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation4DateV11FormatStyleV6SymbolV7QuarterV2eeoiySbAI_AItFZ\">== (_: Date.FormatStyle.Symbol.Quarter, _: Date.FormatStyle.Symbol.Quarter) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation4DateV11FormatStyleV6SymbolV5MonthV2eeoiySbAI_AItFZ\">== (_: Date.FormatStyle.Symbol.Month, _: Date.FormatStyle.Symbol.Month) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation4DateV11FormatStyleV6SymbolV4WeekV2eeoiySbAI_AItFZ\">== (_: Date.FormatStyle.Symbol.Week, _: Date.FormatStyle.Symbol.Week) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation4DateV11FormatStyleV6SymbolV3DayV2eeoiySbAI_AItFZ\">== (_: Date.FormatStyle.Symbol.Day, _: Date.FormatStyle.Symbol.Day) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation4DateV11FormatStyleV6SymbolV9DayOfYearV2eeoiySbAI_AItFZ\">== (_: Date.FormatStyle.Symbol.DayOfYear, _: Date.FormatStyle.Symbol.DayOfYear) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation4DateV11FormatStyleV6SymbolV7WeekdayV2eeoiySbAI_AItFZ\">== (_: Date.FormatStyle.Symbol.Weekday, _: Date.FormatStyle.Symbol.Weekday) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation4DateV11FormatStyleV6SymbolV9DayPeriodV2eeoiySbAI_AItFZ\">== (_: Date.FormatStyle.Symbol.DayPeriod, _: Date.FormatStyle.Symbol.DayPeriod) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation4DateV11FormatStyleV6SymbolV4HourV2eeoiySbAI_AItFZ\">== (_: Date.FormatStyle.Symbol.Hour, _: Date.FormatStyle.Symbol.Hour) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation4DateV11FormatStyleV6SymbolV6MinuteV2eeoiySbAI_AItFZ\">== (_: Date.FormatStyle.Symbol.Minute, _: Date.FormatStyle.Symbol.Minute) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation4DateV11FormatStyleV6SymbolV6SecondV2eeoiySbAI_AItFZ\">== (_: Date.FormatStyle.Symbol.Second, _: Date.FormatStyle.Symbol.Second) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation4DateV11FormatStyleV6SymbolV14SecondFractionV2eeoiySbAI_AItFZ\">== (_: Date.FormatStyle.Symbol.SecondFraction, _: Date.FormatStyle.Symbol.SecondFraction) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation4DateV11FormatStyleV6SymbolV8TimeZoneV2eeoiySbAI_AItFZ\">== (_: Date.FormatStyle.Symbol.TimeZone, _: Date.FormatStyle.Symbol.TimeZone) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation4DateV11FormatStyleV6SymbolV17StandaloneQuarterV2eeoiySbAI_AItFZ\">== (_: Date.FormatStyle.Symbol.StandaloneQuarter, _: Date.FormatStyle.Symbol.StandaloneQuarter) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation4DateV11FormatStyleV6SymbolV15StandaloneMonthV2eeoiySbAI_AItFZ\">== (_: Date.FormatStyle.Symbol.StandaloneMonth, _: Date.FormatStyle.Symbol.StandaloneMonth) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation4DateV11FormatStyleV6SymbolV17StandaloneWeekdayV2eeoiySbAI_AItFZ\">== (_: Date.FormatStyle.Symbol.StandaloneWeekday, _: Date.FormatStyle.Symbol.StandaloneWeekday) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation4DateV11FormatStyleV6SymbolV12VerbatimHourV2eeoiySbAI_AItFZ\">== (_: Date.FormatStyle.Symbol.VerbatimHour, _: Date.FormatStyle.Symbol.VerbatimHour) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation4DateV11FormatStyleV6SymbolV2eeoiySbAG_AGtFZ\">== (_: Date.FormatStyle.Symbol, _: Date.FormatStyle.Symbol) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation4DateV11FormatStyleV6SymbolV9DayPeriodV5WidthO2eeoiySbAK_AKtFZ\">== (_: Date.FormatStyle.Symbol.DayPeriod.Width, _: Date.FormatStyle.Symbol.DayPeriod.Width) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation4DateV11FormatStyleV6SymbolV4HourV9AMPMStyleV2eeoiySbAK_AKtFZ\">== (_: Date.FormatStyle.Symbol.Hour.AMPMStyle, _: Date.FormatStyle.Symbol.Hour.AMPMStyle) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation4DateV11FormatStyleV6SymbolV12VerbatimHourV0G5CycleV2eeoiySbAK_AKtFZ\">== (_: Date.FormatStyle.Symbol.VerbatimHour.HourCycle, _: Date.FormatStyle.Symbol.VerbatimHour.HourCycle) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation4DateV11FormatStyleV6SymbolV12VerbatimHourV5ClockV2eeoiySbAK_AKtFZ\">== (_: Date.FormatStyle.Symbol.VerbatimHour.Clock, _: Date.FormatStyle.Symbol.VerbatimHour.Clock) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation4DateV11FormatStyleV6SymbolV8TimeZoneV5WidthO2eeoiySbAK_AKtFZ\">== (_: Date.FormatStyle.Symbol.TimeZone.Width, _: Date.FormatStyle.Symbol.TimeZone.Width) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation12DateIntervalV2eeoiySbAC_ACtFZ\">== (_: DateInterval, _: DateInterval) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation3URLV2eeoiySbAC_ACtFZ\">== (_: URL, _: URL) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation18IntegerFormatStyleV2eeoiySbACyxG_AEtFZ\">== (_: IntegerFormatStyle&lt;Value&gt;, _: IntegerFormatStyle&lt;Value&gt;) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation18IntegerFormatStyleV7PercentV2eeoiySbAEyx_G_AGtFZ\">== (_: IntegerFormatStyle&lt;Value&gt;.Percent, _: IntegerFormatStyle&lt;Value&gt;.Percent) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation18IntegerFormatStyleV8CurrencyV2eeoiySbAEyx_G_AGtFZ\">== (_: IntegerFormatStyle&lt;Value&gt;.Currency, _: IntegerFormatStyle&lt;Value&gt;.Currency) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation18IntegerFormatStyleV10AttributedV2eeoiySbAEyx_G_AGtFZ\">== (_: IntegerFormatStyle&lt;Value&gt;.Attributed, _: IntegerFormatStyle&lt;Value&gt;.Attributed) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation17KeyPathComparatorV2eeoiySbACyxG_AEtFZ\">== (_: KeyPathComparator&lt;Compared&gt;, _: KeyPathComparator&lt;Compared&gt;) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation20IntegerParseStrategyV2eeoiySbACyxG_AEtFZ\">== (_: IntegerParseStrategy&lt;Format&gt;, _: IntegerParseStrategy&lt;Format&gt;) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation4UUIDV2eeoiySbAC_ACtFZ\">== (_: UUID, _: UUID) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:So9NSDecimala10FoundationE2eeoiySbAB_ABtFZ\">== (_: Decimal, _: Decimal) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation20PersonNameComponentsV11FormatStyleV2eeoiySbAE_AEtFZ\">== (_: PersonNameComponents.FormatStyle, _: PersonNameComponents.FormatStyle) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation20PersonNameComponentsV15AttributedStyleV2eeoiySbAE_AEtFZ\">== (_: PersonNameComponents.AttributedStyle, _: PersonNameComponents.AttributedStyle) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation20PersonNameComponentsV13ParseStrategyV2eeoiySbAE_AEtFZ\">== (_: PersonNameComponents.ParseStrategy, _: PersonNameComponents.ParseStrategy) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation4DateV12FormatStringV2eeoiySbAE_AEtFZ\">== (_: Date.FormatString, _: Date.FormatString) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation4DateV19IntervalFormatStyleV2eeoiySbAE_AEtFZ\">== (_: Date.IntervalFormatStyle, _: Date.IntervalFormatStyle) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation9SortOrderO2eeoiySbAC_ACtFZ\">== (_: SortOrder, _: SortOrder) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation20ComparableComparatorV2eeoiySbACyxG_AEtFZ\">== (_: ComparableComparator&lt;Compared&gt;, _: ComparableComparator&lt;Compared&gt;) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SS10FoundationE18StandardComparatorV2eeoiySbAC_ACtFZ\">== (_: String.StandardComparator, _: String.StandardComparator) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SS10FoundationE10ComparatorV2eeoiySbAC_ACtFZ\">== (_: String.Comparator, _: String.Comparator) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation21_BridgedStoredNSErrorPAAE2eeoiySbx_xtFZ\">== (_: Self, _: Self) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation4DateV21ComponentsFormatStyleV5FieldV2eeoiySbAG_AGtFZ\">== (_: Date.ComponentsFormatStyle.Field, _: Date.ComponentsFormatStyle.Field) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation4DateV21ComponentsFormatStyleV0E0V2eeoiySbAG_AGtFZ\">== (_: Date.ComponentsFormatStyle.Style, _: Date.ComponentsFormatStyle.Style) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation4DateV21ComponentsFormatStyleV2eeoiySbAE_AEtFZ\">== (_: Date.ComponentsFormatStyle, _: Date.ComponentsFormatStyle) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation11MeasurementV2eeoiySbACyqd__G_ACyqd_0_GtSo6NSUnitCRbd__AHRbd_0_r0_lFZ\">== &lt;LeftHandSideType, RightHandSideType&gt;(_: Measurement&lt;LeftHandSideType&gt;, _: Measurement&lt;RightHandSideType&gt;) -&gt; Bool where LeftHandSideType : Unit, RightHandSideType : Unit<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation24FloatingPointFormatStyleV2eeoiySbACyxG_AEtFZ\">== (_: FloatingPointFormatStyle&lt;Value&gt;, _: FloatingPointFormatStyle&lt;Value&gt;) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation24FloatingPointFormatStyleV7PercentV2eeoiySbAEyx_G_AGtFZ\">== (_: FloatingPointFormatStyle&lt;Value&gt;.Percent, _: FloatingPointFormatStyle&lt;Value&gt;.Percent) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation24FloatingPointFormatStyleV8CurrencyV2eeoiySbAEyx_G_AGtFZ\">== (_: FloatingPointFormatStyle&lt;Value&gt;.Currency, _: FloatingPointFormatStyle&lt;Value&gt;.Currency) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation24FloatingPointFormatStyleV10AttributedV2eeoiySbAEyx_G_AGtFZ\">== (_: FloatingPointFormatStyle&lt;Value&gt;.Attributed, _: FloatingPointFormatStyle&lt;Value&gt;.Attributed) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation32FormatStyleCapitalizationContextV2eeoiySbAC_ACtFZ\">== (_: FormatStyleCapitalizationContext, _: FormatStyleCapitalizationContext) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation30NumberFormatStyleConfigurationO8GroupingV2eeoiySbAE_AEtFZ\">== (_: NumberFormatStyleConfiguration.Grouping, _: NumberFormatStyleConfiguration.Grouping) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation30NumberFormatStyleConfigurationO9PrecisionV2eeoiySbAE_AEtFZ\">== (_: NumberFormatStyleConfiguration.Precision, _: NumberFormatStyleConfiguration.Precision) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation30NumberFormatStyleConfigurationO31DecimalSeparatorDisplayStrategyV2eeoiySbAE_AEtFZ\">== (_: NumberFormatStyleConfiguration.DecimalSeparatorDisplayStrategy, _: NumberFormatStyleConfiguration.DecimalSeparatorDisplayStrategy) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation30NumberFormatStyleConfigurationO19SignDisplayStrategyV2eeoiySbAE_AEtFZ\">== (_: NumberFormatStyleConfiguration.SignDisplayStrategy, _: NumberFormatStyleConfiguration.SignDisplayStrategy) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation30NumberFormatStyleConfigurationO8NotationV2eeoiySbAE_AEtFZ\">== (_: NumberFormatStyleConfiguration.Notation, _: NumberFormatStyleConfiguration.Notation) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation32CurrencyFormatStyleConfigurationO19SignDisplayStrategyV2eeoiySbAE_AEtFZ\">== (_: CurrencyFormatStyleConfiguration.SignDisplayStrategy, _: CurrencyFormatStyleConfiguration.SignDisplayStrategy) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation32CurrencyFormatStyleConfigurationO12PresentationV2eeoiySbAE_AEtFZ\">== (_: CurrencyFormatStyleConfiguration.Presentation, _: CurrencyFormatStyleConfiguration.Presentation) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation36DescriptiveNumberFormatConfigurationO12PresentationV2eeoiySbAE_AEtFZ\">== (_: DescriptiveNumberFormatConfiguration.Presentation, _: DescriptiveNumberFormatConfiguration.Presentation) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SS10FoundationE8EncodingV2eeoiySbAC_ACtFZ\">== (_: String.Encoding, _: String.Encoding) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation15ListFormatStyleV2eeoiySbACyxq_G_AEtFZ\">== (_: ListFormatStyle&lt;Style, Base&gt;, _: ListFormatStyle&lt;Style, Base&gt;) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation11StringStyleV2eeoiySbAC_ACtFZ\">== (_: StringStyle, _: StringStyle) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation20ByteCountFormatStyleV10AttributedV2eeoiySbAE_AEtFZ\">== (_: ByteCountFormatStyle.Attributed, _: ByteCountFormatStyle.Attributed) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation20ByteCountFormatStyleV2eeoiySbAC_ACtFZ\">== (_: ByteCountFormatStyle, _: ByteCountFormatStyle) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation18PresentationIntentV4KindO2eeoiySbAE_AEtFZ\">== (_: PresentationIntent.Kind, _: PresentationIntent.Kind) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation18PresentationIntentV11TableColumnV2eeoiySbAE_AEtFZ\">== (_: PresentationIntent.TableColumn, _: PresentationIntent.TableColumn) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation18PresentationIntentV0C4TypeV2eeoiySbAE_AEtFZ\">== (_: PresentationIntent.IntentType, _: PresentationIntent.IntentType) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation18PresentationIntentV2eeoiySbAC_ACtFZ\">== (_: PresentationIntent, _: PresentationIntent) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation18AttributeContainerV2eeoiySbAC_ACtFZ\">== (_: AttributeContainer, _: AttributeContainer) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation24AttributedStringProtocolPAAE2eeoiySbx_qd__tAaBRd__lFZ\">== &lt;RHS&gt;(_: Self, _: RHS) -&gt; Bool where RHS : AttributedStringProtocol<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation16AttributedStringV20AttributeMergePolicyO2eeoiySbAE_AEtFZ\">== (_: AttributedString.AttributeMergePolicy, _: AttributedString.AttributeMergePolicy) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation16AttributedStringV5IndexV2eeoiySbAE_AEtFZ\">== (_: AttributedString.Index, _: AttributedString.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation16AttributedStringV4RunsV3RunV2eeoiySbAG_AGtFZ\">== (_: AttributedString.Runs.Run, _: AttributedString.Runs.Run) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation16AttributedStringV4RunsV2eeoiySbAE_AEtFZ\">== (_: AttributedString.Runs, _: AttributedString.Runs) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation16AttributedStringV2eeoiySbAC_ACtFZ\">== (_: AttributedString, _: AttributedString) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation19AttributedSubstringV2eeoiySbAC_ACtFZ\">== (_: AttributedSubstring, _: AttributedSubstring) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation20PersonNameComponentsV2eeoiySbAC_ACtFZ\">== (_: PersonNameComponents, _: PersonNameComponents) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation12CharacterSetV2eeoiySbAC_ACtFZ\">== (_: CharacterSet, _: CharacterSet) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation14SortDescriptorV2eeoiySbACyxG_AEtFZ\">== (_: SortDescriptor&lt;Compared&gt;, _: SortDescriptor&lt;Compared&gt;) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation13URLComponentsV2eeoiySbAC_ACtFZ\">== (_: URLComponents, _: URLComponents) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation12URLQueryItemV2eeoiySbAC_ACtFZ\">== (_: URLQueryItem, _: URLQueryItem) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation10MorphologyV2eeoiySbAC_ACtFZ\">== (_: Morphology, _: Morphology) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation10MorphologyV13CustomPronounV2eeoiySbAE_AEtFZ\">== (_: Morphology.CustomPronoun, _: Morphology.CustomPronoun) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation14InflectionRuleO2eeoiySbAC_ACtFZ\">== (_: InflectionRule, _: InflectionRule) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation4DateV2eeoiySbAC_ACtFZ\">== (_: Date, _: Date) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation4DateV18ISO8601FormatStyleV2eeoiySbAE_AEtFZ\">== (_: Date.ISO8601FormatStyle, _: Date.ISO8601FormatStyle) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation12NotificationV2eeoiySbAC_ACtFZ\">== (_: Notification, _: Notification) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation8CalendarV10IdentifierO2eeoiySbAE_AEtFZ\">== (_: Calendar.Identifier, _: Calendar.Identifier) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation8CalendarV9ComponentO2eeoiySbAE_AEtFZ\">== (_: Calendar.Component, _: Calendar.Component) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation8CalendarV15SearchDirectionO2eeoiySbAE_AEtFZ\">== (_: Calendar.SearchDirection, _: Calendar.SearchDirection) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation8CalendarV18RepeatedTimePolicyO2eeoiySbAE_AEtFZ\">== (_: Calendar.RepeatedTimePolicy, _: Calendar.RepeatedTimePolicy) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation8CalendarV14MatchingPolicyO2eeoiySbAE_AEtFZ\">== (_: Calendar.MatchingPolicy, _: Calendar.MatchingPolicy) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation8CalendarV2eeoiySbAC_ACtFZ\">== (_: Calendar, _: Calendar) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SS10FoundationE17LocalizationValueV2eeoiySbAC_ACtFZ\">== (_: String.LocalizationValue, _: String.LocalizationValue) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation10URLRequestV2eeoiySbAC_ACtFZ\">== (_: URLRequest, _: URLRequest) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:So9NSRunLoopC10FoundationE17SchedulerTimeTypeV6StrideV2eeoiySbAG_AGtFZ\">== (_: RunLoop.SchedulerTimeType.Stride, _: RunLoop.SchedulerTimeType.Stride) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10ObjectiveC8SelectorV2eeoiySbAC_ACtFZ\">== (_: Selector, _: Selector) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:So8NSObjectC10ObjectiveCE2eeoiySbAB_ABtFZ\">== (_: NSObject, _: NSObject) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:6Darwin0A7BooleanV2eeoiySbAC_ACtFZ\">== (_: DarwinBoolean, _: DarwinBoolean) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14CoreFoundation9_CFObjectPAAE2eeoiySbx_xtFZ\">== (_: Self, _: Self) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:So17OS_dispatch_queueC8DispatchE19GlobalQueuePriorityO2eeoiySbAE_AEtFZ\">== (_: DispatchQueue.GlobalQueuePriority, _: DispatchQueue.GlobalQueuePriority) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:So17OS_dispatch_queueC8DispatchE20AutoreleaseFrequencyO2eeoiySbAE_AEtFZ\">== (_: DispatchQueue.AutoreleaseFrequency, _: DispatchQueue.AutoreleaseFrequency) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:8Dispatch0A4TimeV2eeoiySbAC_ACtFZ\">== (_: DispatchTime, _: DispatchTime) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:8Dispatch0A8WallTimeV2eeoiySbAC_ACtFZ\">== (_: DispatchWallTime, _: DispatchWallTime) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:8Dispatch0A12TimeIntervalO2eeoiySbAC_ACtFZ\">== (_: DispatchTimeInterval, _: DispatchTimeInterval) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:So17OS_dispatch_queueC8DispatchE17SchedulerTimeTypeV6StrideV2eeoiySbAG_AGtFZ\">== (_: DispatchQueue.SchedulerTimeType.Stride, _: DispatchQueue.SchedulerTimeType.Stride) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:8Dispatch0A3QoSV0B6SClassO2eeoiySbAE_AEtFZ\">== (_: DispatchQoS.QoSClass, _: DispatchQoS.QoSClass) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:8Dispatch0A3QoSV2eeoiySbAC_ACtFZ\">== (_: DispatchQoS, _: DispatchQoS) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:8Dispatch0A13TimeoutResultO2eeoiySbAC_ACtFZ\">== (_: DispatchTimeoutResult, _: DispatchTimeoutResult) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:So17CGAffineTransformV12CoreGraphicsE2eeoiySbAB_ABtFZ\">== (_: CGAffineTransform, _: CGAffineTransform) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:So7CGPointV12CoreGraphicsE2eeoiySbAB_ABtFZ\">== (_: CGPoint, _: CGPoint) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:So6CGSizeV12CoreGraphicsE2eeoiySbAB_ABtFZ\">== (_: CGSize, _: CGSize) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:So8CGVectorV12CoreGraphicsE2eeoiySbAB_ABtFZ\">== (_: CGVector, _: CGVector) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:So6CGRectV12CoreGraphicsE2eeoiySbAB_ABtFZ\">== (_: CGRect, _: CGRect) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:5UIKit26UIListContentConfigurationV15ImagePropertiesV2eeoiySbAE_AEtFZ\">== (_: UIListContentConfiguration.ImageProperties, _: UIListContentConfiguration.ImageProperties) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:5UIKit26UIListContentConfigurationV14TextPropertiesV0E9AlignmentO2eeoiySbAG_AGtFZ\">== (_: UIListContentConfiguration.TextProperties.TextAlignment, _: UIListContentConfiguration.TextProperties.TextAlignment) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:5UIKit26UIListContentConfigurationV14TextPropertiesV0E9TransformO2eeoiySbAG_AGtFZ\">== (_: UIListContentConfiguration.TextProperties.TextTransform, _: UIListContentConfiguration.TextProperties.TextTransform) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:5UIKit26UIListContentConfigurationV14TextPropertiesV2eeoiySbAE_AEtFZ\">== (_: UIListContentConfiguration.TextProperties, _: UIListContentConfiguration.TextProperties) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:5UIKit26UIListContentConfigurationV2eeoiySbAC_ACtFZ\">== (_: UIListContentConfiguration, _: UIListContentConfiguration) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:5UIKit15UIPointerEffectO8TintModeO2eeoiySbAE_AEtFZ\">== (_: UIPointerEffect.TintMode, _: UIPointerEffect.TintMode) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:5UIKit25UIBackgroundConfigurationV2eeoiySbAC_ACtFZ\">== (_: UIBackgroundConfiguration, _: UIBackgroundConfiguration) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:So12UIEdgeInsetsV5UIKitE2eeoiySbAB_ABtFZ\">== (_: UIEdgeInsets, _: UIEdgeInsets) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:So23NSDirectionalEdgeInsetsV5UIKitE2eeoiySbAB_ABtFZ\">== (_: NSDirectionalEdgeInsets, _: NSDirectionalEdgeInsets) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:So8UIOffsetV5UIKitE2eeoiySbAB_ABtFZ\">== (_: UIOffset, _: UIOffset) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:So12UIFloatRangea5UIKitE2eeoiySbAB_ABtFZ\">== (_: UIFloatRange, _: UIFloatRange) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:5UIKit28UIListSeparatorConfigurationV10VisibilityO2eeoiySbAE_AEtFZ\">== (_: UIListSeparatorConfiguration.Visibility, _: UIListSeparatorConfiguration.Visibility) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:5UIKit28UIListSeparatorConfigurationV2eeoiySbAC_ACtFZ\">== (_: UIListSeparatorConfiguration, _: UIListSeparatorConfiguration) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:So8UIButtonC5UIKitE13ConfigurationV4SizeO2eeoiySbAG_AGtFZ\">== (_: UIButton.Configuration.Size, _: UIButton.Configuration.Size) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:So8UIButtonC5UIKitE13ConfigurationV14TitleAlignmentO2eeoiySbAG_AGtFZ\">== (_: UIButton.Configuration.TitleAlignment, _: UIButton.Configuration.TitleAlignment) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:So8UIButtonC5UIKitE13ConfigurationV11CornerStyleO2eeoiySbAG_AGtFZ\">== (_: UIButton.Configuration.CornerStyle, _: UIButton.Configuration.CornerStyle) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:So8UIButtonC5UIKitE13ConfigurationV13MacIdiomStyleO2eeoiySbAG_AGtFZ\">== (_: UIButton.Configuration.MacIdiomStyle, _: UIButton.Configuration.MacIdiomStyle) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:So8UIButtonC5UIKitE13ConfigurationV2eeoiySbAE_AEtFZ\">== (_: UIButton.Configuration, _: UIButton.Configuration) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:5UIKit15UICellAccessoryV14DisplayedStateO2eeoiySbAE_AEtFZ\">== (_: UICellAccessory.DisplayedState, _: UICellAccessory.DisplayedState) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:5UIKit15UICellAccessoryV24OutlineDisclosureOptionsV5StyleO2eeoiySbAG_AGtFZ\">== (_: UICellAccessory.OutlineDisclosureOptions.Style, _: UICellAccessory.OutlineDisclosureOptions.Style) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:5UIKit15UICellAccessoryV0C4TypeO2eeoiySbAE_AEtFZ\">== (_: UICellAccessory.AccessoryType, _: UICellAccessory.AccessoryType) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:5UIKit35UICollectionLayoutListConfigurationV10AppearanceO2eeoiySbAE_AEtFZ\">== (_: UICollectionLayoutListConfiguration.Appearance, _: UICollectionLayoutListConfiguration.Appearance) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:5UIKit35UICollectionLayoutListConfigurationV10HeaderModeO2eeoiySbAE_AEtFZ\">== (_: UICollectionLayoutListConfiguration.HeaderMode, _: UICollectionLayoutListConfiguration.HeaderMode) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:5UIKit35UICollectionLayoutListConfigurationV10FooterModeO2eeoiySbAE_AEtFZ\">== (_: UICollectionLayoutListConfiguration.FooterMode, _: UICollectionLayoutListConfiguration.FooterMode) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:5UIKit24UIViewConfigurationStateV2eeoiySbAC_ACtFZ\">== (_: UIViewConfigurationState, _: UIViewConfigurationState) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:5UIKit24UICellConfigurationStateV04DragD0O2eeoiySbAE_AEtFZ\">== (_: UICellConfigurationState.DragState, _: UICellConfigurationState.DragState) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:5UIKit24UICellConfigurationStateV04DropD0O2eeoiySbAE_AEtFZ\">== (_: UICellConfigurationState.DropState, _: UICellConfigurationState.DropState) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:5UIKit24UICellConfigurationStateV2eeoiySbAC_ACtFZ\">== (_: UICellConfigurationState, _: UICellConfigurationState) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:So16CAFrameRateRangeV10QuartzCoreE2eeoiySbAB_ABtFZ\">== (_: CAFrameRateRange, _: CAFrameRateRange) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:So22NSManagedObjectContextC8CoreDataE17ScheduledTaskTypeO2eeoiySbAE_AEtFZ\">== (_: NSManagedObjectContext.ScheduledTaskType, _: NSManagedObjectContext.ScheduledTaskType) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:12AVFoundation15AVAsyncPropertyC6StatusOAASQR_rlE2eeoiySbAEyxq__G_AGtFZ\">== (_: AVAsyncProperty&lt;Root, Value&gt;.Status, _: AVAsyncProperty&lt;Root, Value&gt;.Status) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:22UniformTypeIdentifiers6UTTypeV2eeoiySbAC_ACtFZ\">== (_: UTType, _: UTType) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:22UniformTypeIdentifiers10UTTagClassV2eeoiySbAC_ACtFZ\">== (_: UTTagClass, _: UTTagClass) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:So11CMTimeRangea9CoreMediaE2eeoiySbAB_ABtFZ\">== (_: CMTimeRange, _: CMTimeRange) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:So17CMSampleBufferRefa9CoreMediaE13DataReadinessO2eeoiySbAE_AEtFZ\">== (_: CMSampleBuffer.DataReadiness, _: CMSampleBuffer.DataReadiness) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:So22CMFormatDescriptionRefa9CoreMediaE10ExtensionsV5ValueV2eeoiySbAG_AGtFZ\">== (_: CMFormatDescription.Extensions.Value, _: CMFormatDescription.Extensions.Value) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:So22CMFormatDescriptionRefa9CoreMediaE10ExtensionsV5IndexV2eeoiySbAG_AGtFZ\">== (_: CMFormatDescription.Extensions.Index, _: CMFormatDescription.Extensions.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:So22CMFormatDescriptionRefa9CoreMediaE10ExtensionsV2eeoiySbAE_AEtFZ\">== (_: CMFormatDescription.Extensions, _: CMFormatDescription.Extensions) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:So22CMFormatDescriptionRefa9CoreMediaE2eeoiySbAB_ABtFZ\">== (_: CMFormatDescription, _: CMFormatDescription) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:So6CMTimea9CoreMediaE2eeoiySbAB_ABtFZ\">== (_: CMTime, _: CMTime) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:So13simd_float2x2a0A0E2eeoiySbAB_ABtFZ\">== (_: simd_float2x2, _: simd_float2x2) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:So13simd_float3x2a0A0E2eeoiySbAB_ABtFZ\">== (_: simd_float3x2, _: simd_float3x2) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:So13simd_float4x2a0A0E2eeoiySbAB_ABtFZ\">== (_: simd_float4x2, _: simd_float4x2) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:So13simd_float2x3a0A0E2eeoiySbAB_ABtFZ\">== (_: simd_float2x3, _: simd_float2x3) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:So13simd_float3x3a0A0E2eeoiySbAB_ABtFZ\">== (_: simd_float3x3, _: simd_float3x3) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:So13simd_float4x3a0A0E2eeoiySbAB_ABtFZ\">== (_: simd_float4x3, _: simd_float4x3) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:So13simd_float2x4a0A0E2eeoiySbAB_ABtFZ\">== (_: simd_float2x4, _: simd_float2x4) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:So13simd_float3x4a0A0E2eeoiySbAB_ABtFZ\">== (_: simd_float3x4, _: simd_float3x4) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:So13simd_float4x4a0A0E2eeoiySbAB_ABtFZ\">== (_: simd_float4x4, _: simd_float4x4) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:So14simd_double2x2a0A0E2eeoiySbAB_ABtFZ\">== (_: simd_double2x2, _: simd_double2x2) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:So14simd_double3x2a0A0E2eeoiySbAB_ABtFZ\">== (_: simd_double3x2, _: simd_double3x2) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:So14simd_double4x2a0A0E2eeoiySbAB_ABtFZ\">== (_: simd_double4x2, _: simd_double4x2) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:So14simd_double2x3a0A0E2eeoiySbAB_ABtFZ\">== (_: simd_double2x3, _: simd_double2x3) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:So14simd_double3x3a0A0E2eeoiySbAB_ABtFZ\">== (_: simd_double3x3, _: simd_double3x3) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:So14simd_double4x3a0A0E2eeoiySbAB_ABtFZ\">== (_: simd_double4x3, _: simd_double4x3) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:So14simd_double2x4a0A0E2eeoiySbAB_ABtFZ\">== (_: simd_double2x4, _: simd_double2x4) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:So14simd_double3x4a0A0E2eeoiySbAB_ABtFZ\">== (_: simd_double3x4, _: simd_double3x4) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:So14simd_double4x4a0A0E2eeoiySbAB_ABtFZ\">== (_: simd_double4x4, _: simd_double4x4) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:So10simd_quatfa0A0E2eeoiySbAB_ABtFZ\">== (_: simd_quatf, _: simd_quatf) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:So10simd_quatda0A0E2eeoiySbAB_ABtFZ\">== (_: simd_quatd, _: simd_quatd) -&gt; Bool<\/RelatedName>"
          }
        ],
        "key.substructure" : [

        ],
        "key.typename" : "(NSNumber, NSNumber) -> Bool",
        "key.typeusr" : "$sySbSo8NSNumberC_ABtcD",
        "key.usr" : "s:11FWFramework2eeoiySbSo8NSNumberC_ADtF"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.internal",
        "key.annotated_decl" : "<Declaration>func != (lhs: <Type usr=\"c:objc(cs)NSNumber\">NSNumber<\/Type>, rhs: <Type usr=\"c:objc(cs)NSNumber\">NSNumber<\/Type>) -&gt; <Type usr=\"s:Sb\">Bool<\/Type><\/Declaration>",
        "key.bodylength" : 26,
        "key.bodyoffset" : 35084,
        "key.column" : 6,
        "key.decl_lang" : "source.lang.swift",
        "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift",
        "key.fully_annotated_decl" : "<decl.function.operator.infix><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>!= <\/decl.name>(<decl.var.parameter><decl.var.parameter.name>lhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"c:objc(cs)NSNumber\">NSNumber<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>rhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"c:objc(cs)NSNumber\">NSNumber<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.function.returntype><\/decl.function.operator.infix>",
        "key.kind" : "source.lang.swift.decl.function.free",
        "key.length" : 75,
        "key.line" : 1236,
        "key.name" : "!=(_:_:)",
        "key.namelength" : 33,
        "key.nameoffset" : 35041,
        "key.offset" : 35036,
        "key.parsed_declaration" : "func != (lhs: NSNumber, rhs: NSNumber) -> Bool",
        "key.parsed_scope.end" : 1238,
        "key.parsed_scope.start" : 1236,
        "key.related_decls" : [
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s2neoiySbypXpSg_ABtF\">!= (_: Any.Type?, _: Any.Type?) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s2neoiySbx_xtSYRzSQ8RawValueRpzlF\">!= &lt;T&gt;(_: T, _: T) -&gt; Bool where T : RawRepresentable, T.RawValue : Equatable<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s2neoiySbx_xtSQRzSYRzSQ8RawValueSYRpzlF\">!= &lt;T&gt;(_: T, _: T) -&gt; Bool where T : Equatable, T : RawRepresentable, T.RawValue : Equatable<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s2neoiySbyt_yttF\">!= (_: (), _: ()) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s2neoiySbx_q_t_x_q_ttSQRzSQR_r0_lF\">!= &lt;A, B&gt;(_: (A, B), _: (A, B)) -&gt; Bool where A : Equatable, B : Equatable<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s2neoiySbx_q_q0_t_x_q_q0_ttSQRzSQR_SQR0_r1_lF\">!= &lt;A, B, C&gt;(_: (A, B, C), _: (A, B, C)) -&gt; Bool where A : Equatable, B : Equatable, C : Equatable<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s2neoiySbx_q_q0_q1_t_x_q_q0_q1_ttSQRzSQR_SQR0_SQR1_r2_lF\">!= &lt;A, B, C, D&gt;(_: (A, B, C, D), _: (A, B, C, D)) -&gt; Bool where A : Equatable, B : Equatable, C : Equatable, D : Equatable<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s2neoiySbx_q_q0_q1_q2_t_x_q_q0_q1_q2_ttSQRzSQR_SQR0_SQR1_SQR2_r3_lF\">!= &lt;A, B, C, D, E&gt;(_: (A, B, C, D, E), _: (A, B, C, D, E)) -&gt; Bool where A : Equatable, B : Equatable, C : Equatable, D : Equatable, E : Equatable<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s2neoiySbx_q_q0_q1_q2_q3_t_x_q_q0_q1_q2_q3_ttSQRzSQR_SQR0_SQR1_SQR2_SQR3_r4_lF\">!= &lt;A, B, C, D, E, F&gt;(_: (A, B, C, D, E, F), _: (A, B, C, D, E, F)) -&gt; Bool where A : Equatable, B : Equatable, C : Equatable, D : Equatable, E : Equatable, F : Equatable<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SQsE2neoiySbx_xtFZ\">!= (_: Self, _: Self) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SzsE2neoiySbx_qd__tSzRd__lFZ\">!= &lt;Other&gt;(_: Self, _: Other) -&gt; Bool where Other : BinaryInteger<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SzsE2neoiySbx_xtFZ\">!= (_: Self, _: Self) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sq2neoiySbxSg_s26_OptionalNilComparisonTypeVtFZ\">!= (_: Wrapped?, _: _OptionalNilComparisonType) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sq2neoiySbs26_OptionalNilComparisonTypeV_xSgtFZ\">!= (_: _OptionalNilComparisonType, _: Wrapped?) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SysE2neoiySbx_qd__tSyRd__lFZ\">!= &lt;RHS&gt;(_: Self, _: RHS) -&gt; Bool where RHS : StringProtocol<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:ScP2neoiySbScP_ScPtFZ\">!= (_: TaskPriority, _: TaskPriority) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:So11CMTimeRangea9CoreMediaE2neoiySbAB_ABtFZ\">!= (_: CMTimeRange, _: CMTimeRange) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:So6CMTimea9CoreMediaE2neoiySbAB_ABtFZ\">!= (_: CMTime, _: CMTime) -&gt; Bool<\/RelatedName>"
          }
        ],
        "key.substructure" : [

        ],
        "key.typename" : "(NSNumber, NSNumber) -> Bool",
        "key.typeusr" : "$sySbSo8NSNumberC_ABtcD",
        "key.usr" : "s:11FWFramework2neoiySbSo8NSNumberC_ADtF"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.internal",
        "key.annotated_decl" : "<Declaration>func &lt; (lhs: <Type usr=\"c:objc(cs)NSNumber\">NSNumber<\/Type>, rhs: <Type usr=\"c:objc(cs)NSNumber\">NSNumber<\/Type>) -&gt; <Type usr=\"s:Sb\">Bool<\/Type><\/Declaration>",
        "key.bodylength" : 189,
        "key.bodyoffset" : 35160,
        "key.column" : 6,
        "key.decl_lang" : "source.lang.swift",
        "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift",
        "key.fully_annotated_decl" : "<decl.function.operator.infix><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>&lt; <\/decl.name>(<decl.var.parameter><decl.var.parameter.name>lhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"c:objc(cs)NSNumber\">NSNumber<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>rhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"c:objc(cs)NSNumber\">NSNumber<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.function.returntype><\/decl.function.operator.infix>",
        "key.kind" : "source.lang.swift.decl.function.free",
        "key.length" : 237,
        "key.line" : 1240,
        "key.name" : "<(_:_:)",
        "key.namelength" : 32,
        "key.nameoffset" : 35118,
        "key.offset" : 35113,
        "key.parsed_declaration" : "func < (lhs: NSNumber, rhs: NSNumber) -> Bool",
        "key.parsed_scope.end" : 1247,
        "key.parsed_scope.start" : 1240,
        "key.related_decls" : [
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework7FWIndexO1loiySbACyxG_AEtFZ\">&lt; (_: FWIndex, _: FWIndex) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework1loiySbAA6FWJSONV_ADtF\">&lt; (_: FWJSON, _: FWJSON) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s1loiySbyt_yttF\">&lt; (_: (), _: ()) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s1loiySbx_q_t_x_q_ttSLRzSLR_r0_lF\">&lt; &lt;A, B&gt;(_: (A, B), _: (A, B)) -&gt; Bool where A : Comparable, B : Comparable<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s1loiySbx_q_q0_t_x_q_q0_ttSLRzSLR_SLR0_r1_lF\">&lt; &lt;A, B, C&gt;(_: (A, B, C), _: (A, B, C)) -&gt; Bool where A : Comparable, B : Comparable, C : Comparable<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s1loiySbx_q_q0_q1_t_x_q_q0_q1_ttSLRzSLR_SLR0_SLR1_r2_lF\">&lt; &lt;A, B, C, D&gt;(_: (A, B, C, D), _: (A, B, C, D)) -&gt; Bool where A : Comparable, B : Comparable, C : Comparable, D : Comparable<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s1loiySbx_q_q0_q1_q2_t_x_q_q0_q1_q2_ttSLRzSLR_SLR0_SLR1_SLR2_r3_lF\">&lt; &lt;A, B, C, D, E&gt;(_: (A, B, C, D, E), _: (A, B, C, D, E)) -&gt; Bool where A : Comparable, B : Comparable, C : Comparable, D : Comparable, E : Comparable<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s1loiySbx_q_q0_q1_q2_q3_t_x_q_q0_q1_q2_q3_ttSLRzSLR_SLR0_SLR1_SLR2_SLR3_r4_lF\">&lt; &lt;A, B, C, D, E, F&gt;(_: (A, B, C, D, E, F), _: (A, B, C, D, E, F)) -&gt; Bool where A : Comparable, B : Comparable, C : Comparable, D : Comparable, E : Comparable, F : Comparable<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SJ1loiySbSJ_SJtFZ\">&lt; (_: Character, _: Character) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SL1loiySbx_xtFZ\">&lt; (_: Self, _: Self) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SNsSxRzSZ6StrideRpzrlE5IndexO1loiySbADyx_G_AFtFZ\">&lt; (_: ClosedRange&lt;Bound&gt;.Index, _: ClosedRange&lt;Bound&gt;.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SD5IndexV1loiySbAByxq__G_ADtFZ\">&lt; (_: Dictionary&lt;Key, Value&gt;.Index, _: Dictionary&lt;Key, Value&gt;.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s8AnyIndexV1loiySbAB_ABtFZ\">&lt; (_: AnyIndex, _: AnyIndex) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s15FlattenSequenceVsSlRzSl7ElementRpzrlE5IndexV1loiySbAFyx_G_AHtFZ\">&lt; (_: FlattenCollection&lt;Base&gt;.Index, _: FlattenCollection&lt;Base&gt;.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SFsE1loiySbx_xtFZ\">&lt; (_: Self, _: Self) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SzsE1loiySbx_qd__tSzRd__lFZ\">&lt; &lt;Other&gt;(_: Self, _: Other) -&gt; Bool where Other : BinaryInteger<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s7UnicodeO6ScalarV1loiySbAD_ADtFZ\">&lt; (_: Unicode.Scalar, _: Unicode.Scalar) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SO1loiySbSO_SOtFZ\">&lt; (_: ObjectIdentifier, _: ObjectIdentifier) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s8_PointerPsE1loiySbx_xtFZ\">&lt; (_: Self, _: Self) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5NeverO1loiySbAB_ABtFZ\">&lt; (_: Never, _: Never) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s23LazyPrefixWhileSequenceVsSlRzrlE5IndexV1loiySbADyx_G_AFtFZ\">&lt; (_: LazyPrefixWhileCollection&lt;Base&gt;.Index, _: LazyPrefixWhileCollection&lt;Base&gt;.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s18ReversedCollectionV5IndexV1loiySbADyx_G_AFtFZ\">&lt; (_: ReversedCollection&lt;Base&gt;.Index, _: ReversedCollection&lt;Base&gt;.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sh5IndexV1loiySbAByx_G_ADtFZ\">&lt; (_: Set&lt;Element&gt;.Index, _: Set&lt;Element&gt;.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SxsE1loiySbx_xtFZ\">&lt; (_: Self, _: Self) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SysE1loiySbx_qd__tSyRd__lFZ\">&lt; &lt;RHS&gt;(_: Self, _: RHS) -&gt; Bool where RHS : StringProtocol<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SS1loiySbSS_SStFZ\">&lt; (_: String, _: String) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SS5IndexV1loiySbAB_ABtFZ\">&lt; (_: String.Index, _: String.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s11_UIntBufferV5IndexV1loiySbADyx_G_AFtFZ\">&lt; (_: _UIntBuffer&lt;Element&gt;.Index, _: _UIntBuffer&lt;Element&gt;.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s7UnicodeO23CanonicalCombiningClassV1loiySbAD_ADtFZ\">&lt; (_: Unicode.CanonicalCombiningClass, _: Unicode.CanonicalCombiningClass) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s16_ValidUTF8BufferV5IndexV1loiySbAD_ADtFZ\">&lt; (_: _ValidUTF8Buffer.Index, _: _ValidUTF8Buffer.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s20CollectionDifferenceV5IndexV1loiySbADyx_G_AFtFZ\">&lt; (_: CollectionDifference&lt;ChangeElement&gt;.Index, _: CollectionDifference&lt;ChangeElement&gt;.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5UInt8V1loiySbAB_ABtFZ\">&lt; (_: UInt8, _: UInt8) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s4Int8V1loiySbAB_ABtFZ\">&lt; (_: Int8, _: Int8) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt16V1loiySbAB_ABtFZ\">&lt; (_: UInt16, _: UInt16) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int16V1loiySbAB_ABtFZ\">&lt; (_: Int16, _: Int16) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt32V1loiySbAB_ABtFZ\">&lt; (_: UInt32, _: UInt32) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int32V1loiySbAB_ABtFZ\">&lt; (_: Int32, _: Int32) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt64V1loiySbAB_ABtFZ\">&lt; (_: UInt64, _: UInt64) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int64V1loiySbAB_ABtFZ\">&lt; (_: Int64, _: Int64) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Su1loiySbSu_SutFZ\">&lt; (_: UInt, _: UInt) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Si1loiySbSi_SitFZ\">&lt; (_: Int, _: Int) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:ScP1loiySbScP_ScPtFZ\">&lt; (_: TaskPriority, _: TaskPriority) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation9IndexPathV1loiySbAC_ACtFZ\">&lt; (_: IndexPath, _: IndexPath) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation8IndexSetV0B0V1loiySbAE_AEtFZ\">&lt; (_: IndexSet.Index, _: IndexSet.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:So16NSOperationQueueC10FoundationE17SchedulerTimeTypeV6StrideV1loiySbAG_AGtFZ\">&lt; (_: OperationQueue.SchedulerTimeType.Stride, _: OperationQueue.SchedulerTimeType.Stride) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation12DateIntervalV1loiySbAC_ACtFZ\">&lt; (_: DateInterval, _: DateInterval) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:So9NSDecimala10FoundationE1loiySbAB_ABtFZ\">&lt; (_: Decimal, _: Decimal) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation11MeasurementV1loiySbACyqd__G_ACyqd_0_GtSo6NSUnitCRbd__AHRbd_0_r0_lFZ\">&lt; &lt;LeftHandSideType, RightHandSideType&gt;(_: Measurement&lt;LeftHandSideType&gt;, _: Measurement&lt;RightHandSideType&gt;) -&gt; Bool where LeftHandSideType : Unit, RightHandSideType : Unit<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation16AttributedStringV5IndexV1loiySbAE_AEtFZ\">&lt; (_: AttributedString.Index, _: AttributedString.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation16AttributedStringV4RunsV5IndexV1loiySbAG_AGtFZ\">&lt; (_: AttributedString.Runs.Index, _: AttributedString.Runs.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation4DateV1loiySbAC_ACtFZ\">&lt; (_: Date, _: Date) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:So9NSRunLoopC10FoundationE17SchedulerTimeTypeV6StrideV1loiySbAG_AGtFZ\">&lt; (_: RunLoop.SchedulerTimeType.Stride, _: RunLoop.SchedulerTimeType.Stride) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:8Dispatch0A4TimeV1loiySbAC_ACtFZ\">&lt; (_: DispatchTime, _: DispatchTime) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:8Dispatch0A8WallTimeV1loiySbAC_ACtFZ\">&lt; (_: DispatchWallTime, _: DispatchWallTime) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:So17OS_dispatch_queueC8DispatchE17SchedulerTimeTypeV1loiySbAE_AEtFZ\">&lt; (_: DispatchQueue.SchedulerTimeType, _: DispatchQueue.SchedulerTimeType) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:So17OS_dispatch_queueC8DispatchE17SchedulerTimeTypeV6StrideV1loiySbAG_AGtFZ\">&lt; (_: DispatchQueue.SchedulerTimeType.Stride, _: DispatchQueue.SchedulerTimeType.Stride) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:5UIKit01_A23NumericRawRepresentablePAAE1loiySbx_xtFZ\">&lt; (_: Self, _: Self) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:So21UIContentSizeCategorya5UIKitE1loiySbAB_ABtFZ\">&lt; (_: UIContentSizeCategory, _: UIContentSizeCategory) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:So22CMFormatDescriptionRefa9CoreMediaE10ExtensionsV5IndexV1loiySbAG_AGtFZ\">&lt; (_: CMFormatDescription.Extensions.Index, _: CMFormatDescription.Extensions.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:So6CMTimea9CoreMediaE1loiySbAB_ABtFZ\">&lt; (_: CMTime, _: CMTime) -&gt; Bool<\/RelatedName>"
          }
        ],
        "key.substructure" : [

        ],
        "key.typename" : "(NSNumber, NSNumber) -> Bool",
        "key.typeusr" : "$sySbSo8NSNumberC_ABtcD",
        "key.usr" : "s:11FWFramework1loiySbSo8NSNumberC_ADtF"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.internal",
        "key.annotated_decl" : "<Declaration>func &gt; (lhs: <Type usr=\"c:objc(cs)NSNumber\">NSNumber<\/Type>, rhs: <Type usr=\"c:objc(cs)NSNumber\">NSNumber<\/Type>) -&gt; <Type usr=\"s:Sb\">Bool<\/Type><\/Declaration>",
        "key.bodylength" : 206,
        "key.bodyoffset" : 35399,
        "key.column" : 6,
        "key.decl_lang" : "source.lang.swift",
        "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift",
        "key.fully_annotated_decl" : "<decl.function.operator.infix><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>&gt; <\/decl.name>(<decl.var.parameter><decl.var.parameter.name>lhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"c:objc(cs)NSNumber\">NSNumber<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>rhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"c:objc(cs)NSNumber\">NSNumber<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.function.returntype><\/decl.function.operator.infix>",
        "key.kind" : "source.lang.swift.decl.function.free",
        "key.length" : 254,
        "key.line" : 1249,
        "key.name" : ">(_:_:)",
        "key.namelength" : 32,
        "key.nameoffset" : 35357,
        "key.offset" : 35352,
        "key.parsed_declaration" : "func > (lhs: NSNumber, rhs: NSNumber) -> Bool",
        "key.parsed_scope.end" : 1256,
        "key.parsed_scope.start" : 1249,
        "key.related_decls" : [
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework1goiySbAA6FWJSONV_ADtF\">&gt; (_: FWJSON, _: FWJSON) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s1goiySbyt_yttF\">&gt; (_: (), _: ()) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s1goiySbx_q_t_x_q_ttSLRzSLR_r0_lF\">&gt; &lt;A, B&gt;(_: (A, B), _: (A, B)) -&gt; Bool where A : Comparable, B : Comparable<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s1goiySbx_q_q0_t_x_q_q0_ttSLRzSLR_SLR0_r1_lF\">&gt; &lt;A, B, C&gt;(_: (A, B, C), _: (A, B, C)) -&gt; Bool where A : Comparable, B : Comparable, C : Comparable<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s1goiySbx_q_q0_q1_t_x_q_q0_q1_ttSLRzSLR_SLR0_SLR1_r2_lF\">&gt; &lt;A, B, C, D&gt;(_: (A, B, C, D), _: (A, B, C, D)) -&gt; Bool where A : Comparable, B : Comparable, C : Comparable, D : Comparable<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s1goiySbx_q_q0_q1_q2_t_x_q_q0_q1_q2_ttSLRzSLR_SLR0_SLR1_SLR2_r3_lF\">&gt; &lt;A, B, C, D, E&gt;(_: (A, B, C, D, E), _: (A, B, C, D, E)) -&gt; Bool where A : Comparable, B : Comparable, C : Comparable, D : Comparable, E : Comparable<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s1goiySbx_q_q0_q1_q2_q3_t_x_q_q0_q1_q2_q3_ttSLRzSLR_SLR0_SLR1_SLR2_SLR3_r4_lF\">&gt; &lt;A, B, C, D, E, F&gt;(_: (A, B, C, D, E, F), _: (A, B, C, D, E, F)) -&gt; Bool where A : Comparable, B : Comparable, C : Comparable, D : Comparable, E : Comparable, F : Comparable<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SL1goiySbx_xtFZ\">&gt; (_: Self, _: Self) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SLsE1goiySbx_xtFZ\">&gt; (_: Self, _: Self) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SFsE1goiySbx_xtFZ\">&gt; (_: Self, _: Self) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SzsE1goiySbx_qd__tSzRd__lFZ\">&gt; &lt;Other&gt;(_: Self, _: Other) -&gt; Bool where Other : BinaryInteger<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SzsE1goiySbx_xtFZ\">&gt; (_: Self, _: Self) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SysE1goiySbx_qd__tSyRd__lFZ\">&gt; &lt;RHS&gt;(_: Self, _: RHS) -&gt; Bool where RHS : StringProtocol<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5UInt8V1goiySbAB_ABtFZ\">&gt; (_: UInt8, _: UInt8) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s4Int8V1goiySbAB_ABtFZ\">&gt; (_: Int8, _: Int8) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt16V1goiySbAB_ABtFZ\">&gt; (_: UInt16, _: UInt16) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int16V1goiySbAB_ABtFZ\">&gt; (_: Int16, _: Int16) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt32V1goiySbAB_ABtFZ\">&gt; (_: UInt32, _: UInt32) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int32V1goiySbAB_ABtFZ\">&gt; (_: Int32, _: Int32) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt64V1goiySbAB_ABtFZ\">&gt; (_: UInt64, _: UInt64) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int64V1goiySbAB_ABtFZ\">&gt; (_: Int64, _: Int64) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Su1goiySbSu_SutFZ\">&gt; (_: UInt, _: UInt) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Si1goiySbSi_SitFZ\">&gt; (_: Int, _: Int) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:ScP1goiySbScP_ScPtFZ\">&gt; (_: TaskPriority, _: TaskPriority) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation9IndexPathV1goiySbAC_ACtFZ\">&gt; (_: IndexPath, _: IndexPath) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation8IndexSetV0B0V1goiySbAE_AEtFZ\">&gt; (_: IndexSet.Index, _: IndexSet.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation4DateV1goiySbAC_ACtFZ\">&gt; (_: Date, _: Date) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:So21UIContentSizeCategorya5UIKitE1goiySbAB_ABtFZ\">&gt; (_: UIContentSizeCategory, _: UIContentSizeCategory) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:So6CMTimea9CoreMediaE1goiySbAB_ABtFZ\">&gt; (_: CMTime, _: CMTime) -&gt; Bool<\/RelatedName>"
          }
        ],
        "key.substructure" : [

        ],
        "key.typename" : "(NSNumber, NSNumber) -> Bool",
        "key.typeusr" : "$sySbSo8NSNumberC_ABtcD",
        "key.usr" : "s:11FWFramework1goiySbSo8NSNumberC_ADtF"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.internal",
        "key.annotated_decl" : "<Declaration>func &lt;= (lhs: <Type usr=\"c:objc(cs)NSNumber\">NSNumber<\/Type>, rhs: <Type usr=\"c:objc(cs)NSNumber\">NSNumber<\/Type>) -&gt; <Type usr=\"s:Sb\">Bool<\/Type><\/Declaration>",
        "key.bodylength" : 190,
        "key.bodyoffset" : 35656,
        "key.column" : 6,
        "key.decl_lang" : "source.lang.swift",
        "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift",
        "key.fully_annotated_decl" : "<decl.function.operator.infix><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>&lt;= <\/decl.name>(<decl.var.parameter><decl.var.parameter.name>lhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"c:objc(cs)NSNumber\">NSNumber<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>rhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"c:objc(cs)NSNumber\">NSNumber<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.function.returntype><\/decl.function.operator.infix>",
        "key.kind" : "source.lang.swift.decl.function.free",
        "key.length" : 239,
        "key.line" : 1258,
        "key.name" : "<=(_:_:)",
        "key.namelength" : 33,
        "key.nameoffset" : 35613,
        "key.offset" : 35608,
        "key.parsed_declaration" : "func <= (lhs: NSNumber, rhs: NSNumber) -> Bool",
        "key.parsed_scope.end" : 1265,
        "key.parsed_scope.start" : 1258,
        "key.related_decls" : [
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework2leoiySbAA6FWJSONV_ADtF\">&lt;= (_: FWJSON, _: FWJSON) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s2leoiySbyt_yttF\">&lt;= (_: (), _: ()) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s2leoiySbx_q_t_x_q_ttSLRzSLR_r0_lF\">&lt;= &lt;A, B&gt;(_: (A, B), _: (A, B)) -&gt; Bool where A : Comparable, B : Comparable<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s2leoiySbx_q_q0_t_x_q_q0_ttSLRzSLR_SLR0_r1_lF\">&lt;= &lt;A, B, C&gt;(_: (A, B, C), _: (A, B, C)) -&gt; Bool where A : Comparable, B : Comparable, C : Comparable<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s2leoiySbx_q_q0_q1_t_x_q_q0_q1_ttSLRzSLR_SLR0_SLR1_r2_lF\">&lt;= &lt;A, B, C, D&gt;(_: (A, B, C, D), _: (A, B, C, D)) -&gt; Bool where A : Comparable, B : Comparable, C : Comparable, D : Comparable<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s2leoiySbx_q_q0_q1_q2_t_x_q_q0_q1_q2_ttSLRzSLR_SLR0_SLR1_SLR2_r3_lF\">&lt;= &lt;A, B, C, D, E&gt;(_: (A, B, C, D, E), _: (A, B, C, D, E)) -&gt; Bool where A : Comparable, B : Comparable, C : Comparable, D : Comparable, E : Comparable<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s2leoiySbx_q_q0_q1_q2_q3_t_x_q_q0_q1_q2_q3_ttSLRzSLR_SLR0_SLR1_SLR2_SLR3_r4_lF\">&lt;= &lt;A, B, C, D, E, F&gt;(_: (A, B, C, D, E, F), _: (A, B, C, D, E, F)) -&gt; Bool where A : Comparable, B : Comparable, C : Comparable, D : Comparable, E : Comparable, F : Comparable<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SL2leoiySbx_xtFZ\">&lt;= (_: Self, _: Self) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SLsE2leoiySbx_xtFZ\">&lt;= (_: Self, _: Self) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SFsE2leoiySbx_xtFZ\">&lt;= (_: Self, _: Self) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SzsE2leoiySbx_qd__tSzRd__lFZ\">&lt;= &lt;Other&gt;(_: Self, _: Other) -&gt; Bool where Other : BinaryInteger<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SzsE2leoiySbx_xtFZ\">&lt;= (_: Self, _: Self) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SysE2leoiySbx_qd__tSyRd__lFZ\">&lt;= &lt;RHS&gt;(_: Self, _: RHS) -&gt; Bool where RHS : StringProtocol<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5UInt8V2leoiySbAB_ABtFZ\">&lt;= (_: UInt8, _: UInt8) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s4Int8V2leoiySbAB_ABtFZ\">&lt;= (_: Int8, _: Int8) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt16V2leoiySbAB_ABtFZ\">&lt;= (_: UInt16, _: UInt16) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int16V2leoiySbAB_ABtFZ\">&lt;= (_: Int16, _: Int16) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt32V2leoiySbAB_ABtFZ\">&lt;= (_: UInt32, _: UInt32) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int32V2leoiySbAB_ABtFZ\">&lt;= (_: Int32, _: Int32) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt64V2leoiySbAB_ABtFZ\">&lt;= (_: UInt64, _: UInt64) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int64V2leoiySbAB_ABtFZ\">&lt;= (_: Int64, _: Int64) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Su2leoiySbSu_SutFZ\">&lt;= (_: UInt, _: UInt) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Si2leoiySbSi_SitFZ\">&lt;= (_: Int, _: Int) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:ScP2leoiySbScP_ScPtFZ\">&lt;= (_: TaskPriority, _: TaskPriority) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation9IndexPathV2leoiySbAC_ACtFZ\">&lt;= (_: IndexPath, _: IndexPath) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation8IndexSetV0B0V2leoiySbAE_AEtFZ\">&lt;= (_: IndexSet.Index, _: IndexSet.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:So21UIContentSizeCategorya5UIKitE2leoiySbAB_ABtFZ\">&lt;= (_: UIContentSizeCategory, _: UIContentSizeCategory) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:So6CMTimea9CoreMediaE2leoiySbAB_ABtFZ\">&lt;= (_: CMTime, _: CMTime) -&gt; Bool<\/RelatedName>"
          }
        ],
        "key.substructure" : [

        ],
        "key.typename" : "(NSNumber, NSNumber) -> Bool",
        "key.typeusr" : "$sySbSo8NSNumberC_ABtcD",
        "key.usr" : "s:11FWFramework2leoiySbSo8NSNumberC_ADtF"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.internal",
        "key.annotated_decl" : "<Declaration>func &gt;= (lhs: <Type usr=\"c:objc(cs)NSNumber\">NSNumber<\/Type>, rhs: <Type usr=\"c:objc(cs)NSNumber\">NSNumber<\/Type>) -&gt; <Type usr=\"s:Sb\">Bool<\/Type><\/Declaration>",
        "key.bodylength" : 189,
        "key.bodyoffset" : 35897,
        "key.column" : 6,
        "key.decl_lang" : "source.lang.swift",
        "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift",
        "key.fully_annotated_decl" : "<decl.function.operator.infix><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>&gt;= <\/decl.name>(<decl.var.parameter><decl.var.parameter.name>lhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"c:objc(cs)NSNumber\">NSNumber<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>rhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"c:objc(cs)NSNumber\">NSNumber<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.function.returntype><\/decl.function.operator.infix>",
        "key.kind" : "source.lang.swift.decl.function.free",
        "key.length" : 238,
        "key.line" : 1267,
        "key.name" : ">=(_:_:)",
        "key.namelength" : 33,
        "key.nameoffset" : 35854,
        "key.offset" : 35849,
        "key.parsed_declaration" : "func >= (lhs: NSNumber, rhs: NSNumber) -> Bool",
        "key.parsed_scope.end" : 1274,
        "key.parsed_scope.start" : 1267,
        "key.related_decls" : [
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework2geoiySbAA6FWJSONV_ADtF\">&gt;= (_: FWJSON, _: FWJSON) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s2geoiySbyt_yttF\">&gt;= (_: (), _: ()) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s2geoiySbx_q_t_x_q_ttSLRzSLR_r0_lF\">&gt;= &lt;A, B&gt;(_: (A, B), _: (A, B)) -&gt; Bool where A : Comparable, B : Comparable<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s2geoiySbx_q_q0_t_x_q_q0_ttSLRzSLR_SLR0_r1_lF\">&gt;= &lt;A, B, C&gt;(_: (A, B, C), _: (A, B, C)) -&gt; Bool where A : Comparable, B : Comparable, C : Comparable<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s2geoiySbx_q_q0_q1_t_x_q_q0_q1_ttSLRzSLR_SLR0_SLR1_r2_lF\">&gt;= &lt;A, B, C, D&gt;(_: (A, B, C, D), _: (A, B, C, D)) -&gt; Bool where A : Comparable, B : Comparable, C : Comparable, D : Comparable<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s2geoiySbx_q_q0_q1_q2_t_x_q_q0_q1_q2_ttSLRzSLR_SLR0_SLR1_SLR2_r3_lF\">&gt;= &lt;A, B, C, D, E&gt;(_: (A, B, C, D, E), _: (A, B, C, D, E)) -&gt; Bool where A : Comparable, B : Comparable, C : Comparable, D : Comparable, E : Comparable<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s2geoiySbx_q_q0_q1_q2_q3_t_x_q_q0_q1_q2_q3_ttSLRzSLR_SLR0_SLR1_SLR2_SLR3_r4_lF\">&gt;= &lt;A, B, C, D, E, F&gt;(_: (A, B, C, D, E, F), _: (A, B, C, D, E, F)) -&gt; Bool where A : Comparable, B : Comparable, C : Comparable, D : Comparable, E : Comparable, F : Comparable<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SL2geoiySbx_xtFZ\">&gt;= (_: Self, _: Self) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SLsE2geoiySbx_xtFZ\">&gt;= (_: Self, _: Self) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SFsE2geoiySbx_xtFZ\">&gt;= (_: Self, _: Self) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SzsE2geoiySbx_qd__tSzRd__lFZ\">&gt;= &lt;Other&gt;(_: Self, _: Other) -&gt; Bool where Other : BinaryInteger<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SzsE2geoiySbx_xtFZ\">&gt;= (_: Self, _: Self) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SysE2geoiySbx_qd__tSyRd__lFZ\">&gt;= &lt;RHS&gt;(_: Self, _: RHS) -&gt; Bool where RHS : StringProtocol<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5UInt8V2geoiySbAB_ABtFZ\">&gt;= (_: UInt8, _: UInt8) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s4Int8V2geoiySbAB_ABtFZ\">&gt;= (_: Int8, _: Int8) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt16V2geoiySbAB_ABtFZ\">&gt;= (_: UInt16, _: UInt16) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int16V2geoiySbAB_ABtFZ\">&gt;= (_: Int16, _: Int16) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt32V2geoiySbAB_ABtFZ\">&gt;= (_: UInt32, _: UInt32) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int32V2geoiySbAB_ABtFZ\">&gt;= (_: Int32, _: Int32) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt64V2geoiySbAB_ABtFZ\">&gt;= (_: UInt64, _: UInt64) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int64V2geoiySbAB_ABtFZ\">&gt;= (_: Int64, _: Int64) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Su2geoiySbSu_SutFZ\">&gt;= (_: UInt, _: UInt) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Si2geoiySbSi_SitFZ\">&gt;= (_: Int, _: Int) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:ScP2geoiySbScP_ScPtFZ\">&gt;= (_: TaskPriority, _: TaskPriority) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation9IndexPathV2geoiySbAC_ACtFZ\">&gt;= (_: IndexPath, _: IndexPath) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation8IndexSetV0B0V2geoiySbAE_AEtFZ\">&gt;= (_: IndexSet.Index, _: IndexSet.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:So21UIContentSizeCategorya5UIKitE2geoiySbAB_ABtFZ\">&gt;= (_: UIContentSizeCategory, _: UIContentSizeCategory) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:So6CMTimea9CoreMediaE2geoiySbAB_ABtFZ\">&gt;= (_: CMTime, _: CMTime) -&gt; Bool<\/RelatedName>"
          }
        ],
        "key.substructure" : [

        ],
        "key.typename" : "(NSNumber, NSNumber) -> Bool",
        "key.typeusr" : "$sySbSo8NSNumberC_ABtcD",
        "key.usr" : "s:11FWFramework2geoiySbSo8NSNumberC_ADtF"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public enum FWJSONWritingOptionsKeys<\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 36089
          }
        ],
        "key.bodylength" : 95,
        "key.bodyoffset" : 36127,
        "key.column" : 13,
        "key.decl_lang" : "source.lang.swift",
        "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift",
        "key.fully_annotated_decl" : "<decl.enum><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>enum<\/syntaxtype.keyword> <decl.name>FWJSONWritingOptionsKeys<\/decl.name><\/decl.enum>",
        "key.kind" : "source.lang.swift.decl.enum",
        "key.length" : 127,
        "key.line" : 1276,
        "key.name" : "FWJSONWritingOptionsKeys",
        "key.namelength" : 24,
        "key.nameoffset" : 36101,
        "key.offset" : 36096,
        "key.parsed_declaration" : "public enum FWJSONWritingOptionsKeys",
        "key.parsed_scope.end" : 1281,
        "key.parsed_scope.start" : 1276,
        "key.substructure" : [
          {
            "key.kind" : "source.lang.swift.decl.enumcase",
            "key.length" : 22,
            "key.namelength" : 0,
            "key.nameoffset" : 0,
            "key.offset" : 36132,
            "key.substructure" : [
              {
                "key.accessibility" : "source.lang.swift.accessibility.public",
                "key.annotated_decl" : "<Declaration>case jsonSerialization<\/Declaration>",
                "key.column" : 10,
                "key.decl_lang" : "source.lang.swift",
                "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift",
                "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>jsonSerialization<\/decl.name><\/decl.enumelement>",
                "key.kind" : "source.lang.swift.decl.enumelement",
                "key.length" : 17,
                "key.line" : 1277,
                "key.name" : "jsonSerialization",
                "key.namelength" : 17,
                "key.nameoffset" : 36137,
                "key.offset" : 36137,
                "key.parsed_declaration" : "case jsonSerialization",
                "key.parsed_scope.end" : 1277,
                "key.parsed_scope.start" : 1277,
                "key.typename" : "(FWJSONWritingOptionsKeys.Type) -> FWJSONWritingOptionsKeys",
                "key.typeusr" : "$sy11FWFramework24FWJSONWritingOptionsKeysOACmcD",
                "key.usr" : "s:11FWFramework24FWJSONWritingOptionsKeysO17jsonSerializationyA2CmF"
              }
            ]
          },
          {
            "key.kind" : "source.lang.swift.decl.enumcase",
            "key.length" : 20,
            "key.namelength" : 0,
            "key.nameoffset" : 0,
            "key.offset" : 36159,
            "key.substructure" : [
              {
                "key.accessibility" : "source.lang.swift.accessibility.public",
                "key.annotated_decl" : "<Declaration>case castNilToNSNull<\/Declaration>",
                "key.column" : 10,
                "key.decl_lang" : "source.lang.swift",
                "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift",
                "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>castNilToNSNull<\/decl.name><\/decl.enumelement>",
                "key.kind" : "source.lang.swift.decl.enumelement",
                "key.length" : 15,
                "key.line" : 1278,
                "key.name" : "castNilToNSNull",
                "key.namelength" : 15,
                "key.nameoffset" : 36164,
                "key.offset" : 36164,
                "key.parsed_declaration" : "case castNilToNSNull",
                "key.parsed_scope.end" : 1278,
                "key.parsed_scope.start" : 1278,
                "key.typename" : "(FWJSONWritingOptionsKeys.Type) -> FWJSONWritingOptionsKeys",
                "key.typeusr" : "$sy11FWFramework24FWJSONWritingOptionsKeysOACmcD",
                "key.usr" : "s:11FWFramework24FWJSONWritingOptionsKeysO15castNilToNSNullyA2CmF"
              }
            ]
          },
          {
            "key.kind" : "source.lang.swift.decl.enumcase",
            "key.length" : 19,
            "key.namelength" : 0,
            "key.nameoffset" : 0,
            "key.offset" : 36184,
            "key.substructure" : [
              {
                "key.accessibility" : "source.lang.swift.accessibility.public",
                "key.annotated_decl" : "<Declaration>case maxObjextDepth<\/Declaration>",
                "key.column" : 10,
                "key.decl_lang" : "source.lang.swift",
                "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift",
                "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>maxObjextDepth<\/decl.name><\/decl.enumelement>",
                "key.kind" : "source.lang.swift.decl.enumelement",
                "key.length" : 14,
                "key.line" : 1279,
                "key.name" : "maxObjextDepth",
                "key.namelength" : 14,
                "key.nameoffset" : 36189,
                "key.offset" : 36189,
                "key.parsed_declaration" : "case maxObjextDepth",
                "key.parsed_scope.end" : 1279,
                "key.parsed_scope.start" : 1279,
                "key.typename" : "(FWJSONWritingOptionsKeys.Type) -> FWJSONWritingOptionsKeys",
                "key.typeusr" : "$sy11FWFramework24FWJSONWritingOptionsKeysOACmcD",
                "key.usr" : "s:11FWFramework24FWJSONWritingOptionsKeysO14maxObjextDepthyA2CmF"
              }
            ]
          },
          {
            "key.kind" : "source.lang.swift.decl.enumcase",
            "key.length" : 13,
            "key.namelength" : 0,
            "key.nameoffset" : 0,
            "key.offset" : 36208,
            "key.substructure" : [
              {
                "key.accessibility" : "source.lang.swift.accessibility.public",
                "key.annotated_decl" : "<Declaration>case encoding<\/Declaration>",
                "key.column" : 10,
                "key.decl_lang" : "source.lang.swift",
                "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift",
                "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>encoding<\/decl.name><\/decl.enumelement>",
                "key.kind" : "source.lang.swift.decl.enumelement",
                "key.length" : 8,
                "key.line" : 1280,
                "key.name" : "encoding",
                "key.namelength" : 8,
                "key.nameoffset" : 36213,
                "key.offset" : 36213,
                "key.parsed_declaration" : "case encoding",
                "key.parsed_scope.end" : 1280,
                "key.parsed_scope.start" : 1280,
                "key.typename" : "(FWJSONWritingOptionsKeys.Type) -> FWJSONWritingOptionsKeys",
                "key.typeusr" : "$sy11FWFramework24FWJSONWritingOptionsKeysOACmcD",
                "key.usr" : "s:11FWFramework24FWJSONWritingOptionsKeysO8encodingyA2CmF"
              }
            ]
          }
        ],
        "key.typename" : "FWJSONWritingOptionsKeys.Type",
        "key.typeusr" : "$s11FWFramework24FWJSONWritingOptionsKeysOmD",
        "key.usr" : "s:11FWFramework24FWJSONWritingOptionsKeysO"
      },
      {
        "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
        "key.length" : 21,
        "key.name" : "MARK: - JSON: Codable",
        "key.namelength" : 0,
        "key.nameoffset" : 0,
        "key.offset" : 36228
      },
      {
        "key.annotated_decl" : "<Declaration>public struct FWJSON<\/Declaration>",
        "key.bodylength" : 4103,
        "key.bodyoffset" : 36277,
        "key.column" : 15,
        "key.decl_lang" : "source.lang.swift",
        "key.doc.column" : 15,
        "key.doc.declaration" : "public struct FWJSON",
        "key.doc.discussion" : [
          {
            "List-Bullet" : ""
          }
        ],
        "key.doc.file" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift\" line=\"73\" column=\"15\"><Name>FWJSON<\/Name><USR>s:11FWFramework6FWJSONV<\/USR><Declaration>public struct FWJSON<\/Declaration><CommentParts><Abstract><Para>FWJSON<\/Para><\/Abstract><Discussion><List-Bullet><Item><Para>see: <Link href=\"https:\/\/github.com\/SwiftyJSON\/SwiftyJSON\">SwiftyJSON<\/Link><\/Para><\/Item><\/List-Bullet><\/Discussion><\/CommentParts><\/Class>",
        "key.doc.line" : 73,
        "key.doc.name" : "FWJSON",
        "key.doc.type" : "Class",
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 7,
            "key.offset" : 36268
          }
        ],
        "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift",
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>FWJSON<\/decl.name><\/decl.struct>",
        "key.inheritedtypes" : [
          {
            "key.name" : "Codable"
          }
        ],
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 4131,
        "key.line" : 73,
        "key.name" : "FWJSON",
        "key.namelength" : 6,
        "key.nameoffset" : 36260,
        "key.offset" : 36250,
        "key.parsed_declaration" : "extension FWJSON: Codable",
        "key.parsed_scope.end" : 1390,
        "key.parsed_scope.start" : 1284,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>private static var codableTypes: [<Type usr=\"s:s7Codablea\">Codable<\/Type>.Type] { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.private",
                "key.length" : 7,
                "key.offset" : 36282
              }
            ],
            "key.bodylength" : 405,
            "key.bodyoffset" : 36331,
            "key.column" : 24,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift",
            "key.fully_annotated_decl" : "<decl.var.static><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>codableTypes<\/decl.name>: <decl.var.type>[<ref.typealias usr=\"s:s7Codablea\">Codable<\/ref.typealias>.Type]<\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.static>",
            "key.kind" : "source.lang.swift.decl.var.static",
            "key.length" : 447,
            "key.line" : 1285,
            "key.name" : "codableTypes",
            "key.namelength" : 12,
            "key.nameoffset" : 36301,
            "key.offset" : 36290,
            "key.parsed_declaration" : "private static var codableTypes: [Codable.Type]",
            "key.parsed_scope.end" : 1303,
            "key.parsed_scope.start" : 1285,
            "key.typename" : "[(Decodable & Encodable).Type]",
            "key.typeusr" : "$sSaySe_SEpXpGD",
            "key.usr" : "s:11FWFramework6FWJSONV12codableTypes33_CE7FCE31305580F7F6A923B7611B8BA6LLSaySe_SEpXpGvpZ"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public init(from decoder: <Type usr=\"s:s7DecoderP\">Decoder<\/Type>) throws<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 36742
              }
            ],
            "key.bodylength" : 2061,
            "key.bodyoffset" : 36785,
            "key.column" : 12,
            "key.decl_lang" : "source.lang.swift",
            "key.doc.declaration" : "init(from decoder: Decoder) throws",
            "key.doc.discussion" : [
              {
                "Para" : "This initializer throws an error if reading from the decoder fails, or if the data read is corrupted or otherwise invalid."
              },
              {
                "Note" : ""
              }
            ],
            "key.doc.full_as_xml" : "<Function><Name>init(from:)<\/Name><USR>s:Se4fromxs7Decoder_p_tKcfc<\/USR><Declaration>init(from decoder: Decoder) throws<\/Declaration><CommentParts><Abstract><Para>Creates a new instance by decoding from the given decoder.<\/Para><\/Abstract><Parameters><Parameter><Name>decoder<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The decoder to read data from.<\/Para><\/Discussion><\/Parameter><\/Parameters><Discussion><Para>This initializer throws an error if reading from the decoder fails, or if the data read is corrupted or otherwise invalid.<\/Para><Note><Para>This documentation comment was inherited from <codeVoice>Decodable<\/codeVoice>.<\/Para><\/Note><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.name" : "init(from:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "The decoder to read data from."
                  }
                ],
                "name" : "decoder"
              }
            ],
            "key.doc.type" : "Function",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift",
            "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>init<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>from<\/decl.var.parameter.argument_label> <decl.var.parameter.name>decoder<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.protocol usr=\"s:s7DecoderP\">Decoder<\/ref.protocol><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword><\/decl.function.constructor>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 2098,
            "key.line" : 1304,
            "key.name" : "init(from:)",
            "key.namelength" : 27,
            "key.nameoffset" : 36749,
            "key.offset" : 36749,
            "key.overrides" : [
              {
                "key.usr" : "s:Se4fromxs7Decoder_p_tKcfc"
              }
            ],
            "key.parsed_declaration" : "public init(from decoder: Decoder) throws",
            "key.parsed_scope.end" : 1348,
            "key.parsed_scope.start" : 1304,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONV4data7optionsAC10Foundation4DataV_So20NSJSONReadingOptionsVtKcfc\">init(data:options:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONVyACypcfc\">init(_:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONV9parseJSONACSS_tcfc\">init(parseJSON:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONV10jsonObjectACyp_tc33_CE7FCE31305580F7F6A923B7611B8BA6Llfc\">init(jsonObject:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONV13stringLiteralACSS_tcfc\">init(stringLiteral:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONV30extendedGraphemeClusterLiteralACSS_tcfc\">init(extendedGraphemeClusterLiteral:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONV20unicodeScalarLiteralACSS_tcfc\">init(unicodeScalarLiteral:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONV14integerLiteralACSi_tcfc\">init(integerLiteral:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONV14booleanLiteralACSb_tcfc\">init(booleanLiteral:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONV12floatLiteralACSd_tcfc\">init(floatLiteral:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONV17dictionaryLiteralACSS_yptd_tcfc\">init(dictionaryLiteral:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONV12arrayLiteralACypd_tcfc\">init(arrayLiteral:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework6FWJSONV8rawValueACSgyp_tcfc\">init(rawValue:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>var object: Any?<\/Declaration>",
                "key.column" : 13,
                "key.decl_lang" : "source.lang.swift",
                "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>object<\/decl.name>: <decl.var.type><syntaxtype.keyword>Any<\/syntaxtype.keyword>?<\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 16,
                "key.line" : 1305,
                "key.name" : "object",
                "key.namelength" : 6,
                "key.nameoffset" : 36798,
                "key.offset" : 36794,
                "key.parsed_declaration" : "var object: Any?",
                "key.parsed_scope.end" : 1305,
                "key.parsed_scope.start" : 1305,
                "key.typename" : "Any?",
                "key.typeusr" : "$sypSgD",
                "key.usr" : "s:11FWFramework6FWJSONV4fromACs7Decoder_p_tKcfc6objectL_ypSgvp"
              }
            ],
            "key.typename" : "(FWJSON.Type) -> (Decoder) throws -> FWJSON",
            "key.typeusr" : "$s4from11FWFramework6FWJSONVs7Decoder_p_tKcD",
            "key.usr" : "s:Se4fromxs7Decoder_p_tKcfc"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func encode(to encoder: <Type usr=\"s:s7EncoderP\">Encoder<\/Type>) throws<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 38852
              }
            ],
            "key.bodylength" : 1478,
            "key.bodyoffset" : 38900,
            "key.column" : 17,
            "key.decl_lang" : "source.lang.swift",
            "key.doc.declaration" : "func encode(to encoder: Encoder) throws",
            "key.doc.discussion" : [
              {
                "Para" : "If the value fails to encode anything, `encoder` will encode an empty keyed container in its place."
              },
              {
                "Para" : "This function throws an error if any values are invalid for the given encoder’s format."
              },
              {
                "Note" : ""
              }
            ],
            "key.doc.full_as_xml" : "<Function><Name>encode(to:)<\/Name><USR>s:SE6encode2toys7Encoder_p_tKF<\/USR><Declaration>func encode(to encoder: Encoder) throws<\/Declaration><CommentParts><Abstract><Para>Encodes this value into the given encoder.<\/Para><\/Abstract><Parameters><Parameter><Name>encoder<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The encoder to write data to.<\/Para><\/Discussion><\/Parameter><\/Parameters><Discussion><Para>If the value fails to encode anything, <codeVoice>encoder<\/codeVoice> will encode an empty keyed container in its place.<\/Para><Para>This function throws an error if any values are invalid for the given encoder’s format.<\/Para><Note><Para>This documentation comment was inherited from <codeVoice>Encodable<\/codeVoice>.<\/Para><\/Note><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.name" : "encode(to:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "The encoder to write data to."
                  }
                ],
                "name" : "encoder"
              }
            ],
            "key.doc.type" : "Function",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>encode<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>to<\/decl.var.parameter.argument_label> <decl.var.parameter.name>encoder<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.protocol usr=\"s:s7EncoderP\">Encoder<\/ref.protocol><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 1520,
            "key.line" : 1349,
            "key.name" : "encode(to:)",
            "key.namelength" : 27,
            "key.nameoffset" : 38864,
            "key.offset" : 38859,
            "key.overrides" : [
              {
                "key.usr" : "s:SE6encode2toys7Encoder_p_tKF"
              }
            ],
            "key.parsed_declaration" : "public func encode(to encoder: Encoder) throws",
            "key.parsed_scope.end" : 1389,
            "key.parsed_scope.start" : 1349,
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>var container: <Type usr=\"s:s28SingleValueEncodingContainerP\">SingleValueEncodingContainer<\/Type><\/Declaration>",
                "key.column" : 13,
                "key.decl_lang" : "source.lang.swift",
                "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWJson.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>container<\/decl.name>: <decl.var.type><ref.protocol usr=\"s:s28SingleValueEncodingContainerP\">SingleValueEncodingContainer<\/ref.protocol><\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 46,
                "key.line" : 1350,
                "key.name" : "container",
                "key.namelength" : 9,
                "key.nameoffset" : 38913,
                "key.offset" : 38909,
                "key.parsed_declaration" : "var container = encoder.singleValueContainer()",
                "key.parsed_scope.end" : 1350,
                "key.parsed_scope.start" : 1350,
                "key.typename" : "SingleValueEncodingContainer",
                "key.typeusr" : "$ss28SingleValueEncodingContainer_pD",
                "key.usr" : "s:11FWFramework6FWJSONV6encode2toys7Encoder_p_tKF9containerL_s28SingleValueEncodingContainer_pvp"
              }
            ],
            "key.typename" : "(FWJSON) -> (Encoder) throws -> ()",
            "key.typeusr" : "$s2toys7Encoder_p_tKcD",
            "key.usr" : "s:SE6encode2toys7Encoder_p_tKF"
          }
        ],
        "key.typename" : "FWJSON.Type",
        "key.typeusr" : "$s11FWFramework6FWJSONVmD",
        "key.usr" : "s:11FWFramework6FWJSONV"
      }
    ]
  }
}, {
  "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWLanguage.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 469,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public func FWLocalizedString(_ key: <Type usr=\"s:SS\">String<\/Type>, _ table: <Type usr=\"s:SS\">String<\/Type>? = nil) -&gt; <Type usr=\"s:SS\">String<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 331
          }
        ],
        "key.bodylength" : 56,
        "key.bodyoffset" : 411,
        "key.column" : 13,
        "key.decl_lang" : "source.lang.swift",
        "key.doc.column" : 13,
        "key.doc.comment" : "读取本地化字符串\n\n- Parameters:\n  - key: 本地化键名\n  - table: 本地化表名，默认Localizable.strings\n- Returns: 本地化字符串",
        "key.doc.declaration" : "public func FWLocalizedString(_ key: String, _ table: String? = nil) -> String",
        "key.doc.file" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWLanguage.swift",
        "key.doc.full_as_xml" : "<Function file=\"\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWLanguage.swift\" line=\"17\" column=\"13\"><Name>FWLocalizedString(_:_:)<\/Name><USR>s:11FWFramework17FWLocalizedStringyS2S_SSSgtF<\/USR><Declaration>public func FWLocalizedString(_ key: String, _ table: String? = nil) -&gt; String<\/Declaration><CommentParts><Abstract><Para>读取本地化字符串<\/Para><\/Abstract><Parameters><Parameter><Name>key<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>本地化键名<\/Para><\/Discussion><\/Parameter><Parameter><Name>table<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>本地化表名，默认Localizable.strings<\/Para><\/Discussion><\/Parameter><\/Parameters><ResultDiscussion><Para>本地化字符串<\/Para><\/ResultDiscussion><\/CommentParts><\/Function>",
        "key.doc.line" : 17,
        "key.doc.name" : "FWLocalizedString(_:_:)",
        "key.doc.parameters" : [
          {
            "discussion" : [
              {
                "Para" : "本地化键名"
              }
            ],
            "name" : "key"
          },
          {
            "discussion" : [
              {
                "Para" : "本地化表名，默认Localizable.strings"
              }
            ],
            "name" : "table"
          }
        ],
        "key.doc.result_discussion" : [
          {
            "Para" : "本地化字符串"
          }
        ],
        "key.doc.type" : "Function",
        "key.doclength" : 173,
        "key.docoffset" : 158,
        "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Service\/FWLanguage.swift",
        "key.fully_annotated_decl" : "<decl.function.free><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>FWLocalizedString<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>key<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>table<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct>?<\/decl.var.parameter.type> = nil<\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.function.returntype><\/decl.function.free>",
        "key.kind" : "source.lang.swift.decl.function.free",
        "key.length" : 130,
        "key.line" : 17,
        "key.name" : "FWLocalizedString(_:_:)",
        "key.namelength" : 56,
        "key.nameoffset" : 343,
        "key.offset" : 338,
        "key.parsed_declaration" : "public func FWLocalizedString(_ key: String, _ table: String? = nil) -> String",
        "key.parsed_scope.end" : 19,
        "key.parsed_scope.start" : 17,
        "key.substructure" : [

        ],
        "key.typename" : "(String, String?) -> String",
        "key.typeusr" : "$syS2S_SSSgtcD",
        "key.usr" : "s:11FWFramework17FWLocalizedStringyS2S_SSSgtF"
      }
    ]
  }
}, {
  "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAdaptive.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 3638,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
        "key.length" : 32,
        "key.name" : "MARK: - UIApplication+FWAdaptive",
        "key.namelength" : 0,
        "key.nameoffset" : 0,
        "key.offset" : 155
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public let FWIsDebug: <Type usr=\"s:Sb\">Bool<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 215
          }
        ],
        "key.column" : 12,
        "key.decl_lang" : "source.lang.swift",
        "key.doc.column" : 12,
        "key.doc.comment" : "是否是调试模式",
        "key.doc.declaration" : "public let FWIsDebug: Bool",
        "key.doc.file" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAdaptive.swift",
        "key.doc.full_as_xml" : "<Other file=\"\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAdaptive.swift\" line=\"14\" column=\"12\"><Name>FWIsDebug<\/Name><USR>s:11FWFramework9FWIsDebugSbvp<\/USR><Declaration>public let FWIsDebug: Bool<\/Declaration><CommentParts><Abstract><Para>是否是调试模式<\/Para><\/Abstract><\/CommentParts><\/Other>",
        "key.doc.line" : 14,
        "key.doc.name" : "FWIsDebug",
        "key.doc.type" : "Other",
        "key.doclength" : 26,
        "key.docoffset" : 189,
        "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAdaptive.swift",
        "key.fully_annotated_decl" : "<decl.var.global><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>FWIsDebug<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.var.type><\/decl.var.global>",
        "key.kind" : "source.lang.swift.decl.var.global",
        "key.length" : 45,
        "key.line" : 14,
        "key.name" : "FWIsDebug",
        "key.namelength" : 9,
        "key.nameoffset" : 226,
        "key.offset" : 222,
        "key.parsed_declaration" : "public let FWIsDebug: Bool = UIApplication.fwIsDebug",
        "key.parsed_scope.end" : 14,
        "key.parsed_scope.start" : 14,
        "key.typename" : "Bool",
        "key.typeusr" : "$sSbD",
        "key.usr" : "s:11FWFramework9FWIsDebugSbvp"
      },
      {
        "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
        "key.length" : 27,
        "key.name" : "MARK: - UIDevice+FWAdaptive",
        "key.namelength" : 0,
        "key.nameoffset" : 0,
        "key.offset" : 272
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 357
          }
        ],
        "key.doc.comment" : "是否是模拟器",
        "key.doclength" : 23,
        "key.docoffset" : 334,
        "key.internal_diagnostic" : "Unable to resolve cursor info.",
        "key.kind" : "source.lang.swift.decl.var.global",
        "key.length" : 30,
        "key.name" : "FWIsSimulator",
        "key.namelength" : 13,
        "key.nameoffset" : 368,
        "key.offset" : 364,
        "key.typename" : "Bool"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public let FWIsSimulator: <Type usr=\"s:Sb\">Bool<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 424
          }
        ],
        "key.column" : 12,
        "key.decl_lang" : "source.lang.swift",
        "key.doc.column" : 12,
        "key.doc.comment" : "是否是模拟器",
        "key.doc.declaration" : "public let FWIsSimulator: Bool",
        "key.doc.file" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAdaptive.swift",
        "key.doc.full_as_xml" : "<Other file=\"\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAdaptive.swift\" line=\"23\" column=\"12\"><Name>FWIsSimulator<\/Name><USR>s:11FWFramework13FWIsSimulatorSbvp<\/USR><Declaration>public let FWIsSimulator: Bool<\/Declaration><CommentParts><Abstract><Para>是否是模拟器<\/Para><\/Abstract><\/CommentParts><\/Other>",
        "key.doc.line" : 23,
        "key.doc.name" : "FWIsSimulator",
        "key.doc.type" : "Other",
        "key.doclength" : 23,
        "key.docoffset" : 401,
        "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAdaptive.swift",
        "key.fully_annotated_decl" : "<decl.var.global><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>FWIsSimulator<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.var.type><\/decl.var.global>",
        "key.kind" : "source.lang.swift.decl.var.global",
        "key.length" : 31,
        "key.line" : 23,
        "key.name" : "FWIsSimulator",
        "key.namelength" : 13,
        "key.nameoffset" : 435,
        "key.offset" : 431,
        "key.parsed_declaration" : "public let FWIsSimulator: Bool = false",
        "key.parsed_scope.end" : 23,
        "key.parsed_scope.start" : 23,
        "key.typename" : "Bool",
        "key.typeusr" : "$sSbD",
        "key.usr" : "s:11FWFramework13FWIsSimulatorSbvp"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public var FWIsIphone: <Type usr=\"s:Sb\">Bool<\/Type> { get }<\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 497
          }
        ],
        "key.bodylength" : 44,
        "key.bodyoffset" : 526,
        "key.column" : 12,
        "key.decl_lang" : "source.lang.swift",
        "key.doc.column" : 12,
        "key.doc.comment" : "是否是iPhone设备",
        "key.doc.declaration" : "public var FWIsIphone: Bool { get }",
        "key.doc.file" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAdaptive.swift",
        "key.doc.full_as_xml" : "<Other file=\"\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAdaptive.swift\" line=\"27\" column=\"12\"><Name>FWIsIphone<\/Name><USR>s:11FWFramework10FWIsIphoneSbvp<\/USR><Declaration>public var FWIsIphone: Bool { get }<\/Declaration><CommentParts><Abstract><Para>是否是iPhone设备<\/Para><\/Abstract><\/CommentParts><\/Other>",
        "key.doc.line" : 27,
        "key.doc.name" : "FWIsIphone",
        "key.doc.type" : "Other",
        "key.doclength" : 26,
        "key.docoffset" : 471,
        "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAdaptive.swift",
        "key.fully_annotated_decl" : "<decl.var.global><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>FWIsIphone<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.global>",
        "key.kind" : "source.lang.swift.decl.var.global",
        "key.length" : 67,
        "key.line" : 27,
        "key.name" : "FWIsIphone",
        "key.namelength" : 10,
        "key.nameoffset" : 508,
        "key.offset" : 504,
        "key.parsed_declaration" : "public var FWIsIphone: Bool",
        "key.parsed_scope.end" : 27,
        "key.parsed_scope.start" : 27,
        "key.typename" : "Bool",
        "key.typeusr" : "$sSbD",
        "key.usr" : "s:11FWFramework10FWIsIphoneSbvp"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public var FWIsIpad: <Type usr=\"s:Sb\">Bool<\/Type> { get }<\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 596
          }
        ],
        "key.bodylength" : 42,
        "key.bodyoffset" : 623,
        "key.column" : 12,
        "key.decl_lang" : "source.lang.swift",
        "key.doc.column" : 12,
        "key.doc.comment" : "是否是iPad设备",
        "key.doc.declaration" : "public var FWIsIpad: Bool { get }",
        "key.doc.file" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAdaptive.swift",
        "key.doc.full_as_xml" : "<Other file=\"\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAdaptive.swift\" line=\"29\" column=\"12\"><Name>FWIsIpad<\/Name><USR>s:11FWFramework8FWIsIpadSbvp<\/USR><Declaration>public var FWIsIpad: Bool { get }<\/Declaration><CommentParts><Abstract><Para>是否是iPad设备<\/Para><\/Abstract><\/CommentParts><\/Other>",
        "key.doc.line" : 29,
        "key.doc.name" : "FWIsIpad",
        "key.doc.type" : "Other",
        "key.doclength" : 24,
        "key.docoffset" : 572,
        "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAdaptive.swift",
        "key.fully_annotated_decl" : "<decl.var.global><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>FWIsIpad<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.global>",
        "key.kind" : "source.lang.swift.decl.var.global",
        "key.length" : 63,
        "key.line" : 29,
        "key.name" : "FWIsIpad",
        "key.namelength" : 8,
        "key.nameoffset" : 607,
        "key.offset" : 603,
        "key.parsed_declaration" : "public var FWIsIpad: Bool",
        "key.parsed_scope.end" : 29,
        "key.parsed_scope.start" : 29,
        "key.typename" : "Bool",
        "key.typeusr" : "$sSbD",
        "key.usr" : "s:11FWFramework8FWIsIpadSbvp"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public var FWIsMac: <Type usr=\"s:Sb\">Bool<\/Type> { get }<\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 690
          }
        ],
        "key.bodylength" : 25,
        "key.bodyoffset" : 716,
        "key.column" : 12,
        "key.decl_lang" : "source.lang.swift",
        "key.doc.column" : 12,
        "key.doc.comment" : "是否是Mac设备",
        "key.doc.declaration" : "public var FWIsMac: Bool { get }",
        "key.doc.file" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAdaptive.swift",
        "key.doc.full_as_xml" : "<Other file=\"\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAdaptive.swift\" line=\"31\" column=\"12\"><Name>FWIsMac<\/Name><USR>s:11FWFramework7FWIsMacSbvp<\/USR><Declaration>public var FWIsMac: Bool { get }<\/Declaration><CommentParts><Abstract><Para>是否是Mac设备<\/Para><\/Abstract><\/CommentParts><\/Other>",
        "key.doc.line" : 31,
        "key.doc.name" : "FWIsMac",
        "key.doc.type" : "Other",
        "key.doclength" : 23,
        "key.docoffset" : 667,
        "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAdaptive.swift",
        "key.fully_annotated_decl" : "<decl.var.global><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>FWIsMac<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.global>",
        "key.kind" : "source.lang.swift.decl.var.global",
        "key.length" : 45,
        "key.line" : 31,
        "key.name" : "FWIsMac",
        "key.namelength" : 7,
        "key.nameoffset" : 701,
        "key.offset" : 697,
        "key.parsed_declaration" : "public var FWIsMac: Bool",
        "key.parsed_scope.end" : 31,
        "key.parsed_scope.start" : 31,
        "key.typename" : "Bool",
        "key.typeusr" : "$sSbD",
        "key.usr" : "s:11FWFramework7FWIsMacSbvp"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public var FWIsLandscape: <Type usr=\"s:Sb\">Bool<\/Type> { get }<\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 767
          }
        ],
        "key.bodylength" : 62,
        "key.bodyoffset" : 799,
        "key.column" : 12,
        "key.decl_lang" : "source.lang.swift",
        "key.doc.column" : 12,
        "key.doc.comment" : "界面是否横屏",
        "key.doc.declaration" : "public var FWIsLandscape: Bool { get }",
        "key.doc.file" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAdaptive.swift",
        "key.doc.full_as_xml" : "<Other file=\"\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAdaptive.swift\" line=\"34\" column=\"12\"><Name>FWIsLandscape<\/Name><USR>s:11FWFramework13FWIsLandscapeSbvp<\/USR><Declaration>public var FWIsLandscape: Bool { get }<\/Declaration><CommentParts><Abstract><Para>界面是否横屏<\/Para><\/Abstract><\/CommentParts><\/Other>",
        "key.doc.line" : 34,
        "key.doc.name" : "FWIsLandscape",
        "key.doc.type" : "Other",
        "key.doclength" : 23,
        "key.docoffset" : 744,
        "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAdaptive.swift",
        "key.fully_annotated_decl" : "<decl.var.global><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>FWIsLandscape<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.global>",
        "key.kind" : "source.lang.swift.decl.var.global",
        "key.length" : 88,
        "key.line" : 34,
        "key.name" : "FWIsLandscape",
        "key.namelength" : 13,
        "key.nameoffset" : 778,
        "key.offset" : 774,
        "key.parsed_declaration" : "public var FWIsLandscape: Bool",
        "key.parsed_scope.end" : 34,
        "key.parsed_scope.start" : 34,
        "key.typename" : "Bool",
        "key.typeusr" : "$sSbD",
        "key.usr" : "s:11FWFramework13FWIsLandscapeSbvp"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public var FWIsDeviceLandscape: <Type usr=\"s:Sb\">Bool<\/Type> { get }<\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 913
          }
        ],
        "key.bodylength" : 49,
        "key.bodyoffset" : 951,
        "key.column" : 12,
        "key.decl_lang" : "source.lang.swift",
        "key.doc.column" : 12,
        "key.doc.comment" : "设备是否横屏，无论支不支持横屏",
        "key.doc.declaration" : "public var FWIsDeviceLandscape: Bool { get }",
        "key.doc.file" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAdaptive.swift",
        "key.doc.full_as_xml" : "<Other file=\"\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAdaptive.swift\" line=\"36\" column=\"12\"><Name>FWIsDeviceLandscape<\/Name><USR>s:11FWFramework19FWIsDeviceLandscapeSbvp<\/USR><Declaration>public var FWIsDeviceLandscape: Bool { get }<\/Declaration><CommentParts><Abstract><Para>设备是否横屏，无论支不支持横屏<\/Para><\/Abstract><\/CommentParts><\/Other>",
        "key.doc.line" : 36,
        "key.doc.name" : "FWIsDeviceLandscape",
        "key.doc.type" : "Other",
        "key.doclength" : 50,
        "key.docoffset" : 863,
        "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAdaptive.swift",
        "key.fully_annotated_decl" : "<decl.var.global><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>FWIsDeviceLandscape<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.global>",
        "key.kind" : "source.lang.swift.decl.var.global",
        "key.length" : 81,
        "key.line" : 36,
        "key.name" : "FWIsDeviceLandscape",
        "key.namelength" : 19,
        "key.nameoffset" : 924,
        "key.offset" : 920,
        "key.parsed_declaration" : "public var FWIsDeviceLandscape: Bool",
        "key.parsed_scope.end" : 36,
        "key.parsed_scope.start" : 36,
        "key.typename" : "Bool",
        "key.typeusr" : "$sSbD",
        "key.usr" : "s:11FWFramework19FWIsDeviceLandscapeSbvp"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public var FWIosVersion: <Type usr=\"s:Sd\">Double<\/Type> { get }<\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 1023
          }
        ],
        "key.bodylength" : 30,
        "key.bodyoffset" : 1056,
        "key.column" : 12,
        "key.decl_lang" : "source.lang.swift",
        "key.doc.column" : 12,
        "key.doc.comment" : "iOS系统版本",
        "key.doc.declaration" : "public var FWIosVersion: Double { get }",
        "key.doc.file" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAdaptive.swift",
        "key.doc.full_as_xml" : "<Other file=\"\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAdaptive.swift\" line=\"39\" column=\"12\"><Name>FWIosVersion<\/Name><USR>s:11FWFramework12FWIosVersionSdvp<\/USR><Declaration>public var FWIosVersion: Double { get }<\/Declaration><CommentParts><Abstract><Para>iOS系统版本<\/Para><\/Abstract><\/CommentParts><\/Other>",
        "key.doc.line" : 39,
        "key.doc.name" : "FWIosVersion",
        "key.doc.type" : "Other",
        "key.doclength" : 20,
        "key.docoffset" : 1003,
        "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAdaptive.swift",
        "key.fully_annotated_decl" : "<decl.var.global><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>FWIosVersion<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Sd\">Double<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.global>",
        "key.kind" : "source.lang.swift.decl.var.global",
        "key.length" : 57,
        "key.line" : 39,
        "key.name" : "FWIosVersion",
        "key.namelength" : 12,
        "key.nameoffset" : 1034,
        "key.offset" : 1030,
        "key.parsed_declaration" : "public var FWIosVersion: Double",
        "key.parsed_scope.end" : 39,
        "key.parsed_scope.start" : 39,
        "key.typename" : "Double",
        "key.typeusr" : "$sSdD",
        "key.usr" : "s:11FWFramework12FWIosVersionSdvp"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public func FWIsIos(_ version: <Type usr=\"s:Si\">Int<\/Type>) -&gt; <Type usr=\"s:Sb\">Bool<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 1120
          }
        ],
        "key.bodylength" : 34,
        "key.bodyoffset" : 1165,
        "key.column" : 13,
        "key.decl_lang" : "source.lang.swift",
        "key.doc.column" : 13,
        "key.doc.comment" : "是否是指定iOS主版本",
        "key.doc.declaration" : "public func FWIsIos(_ version: Int) -> Bool",
        "key.doc.file" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAdaptive.swift",
        "key.doc.full_as_xml" : "<Function file=\"\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAdaptive.swift\" line=\"41\" column=\"13\"><Name>FWIsIos(_:)<\/Name><USR>s:11FWFramework7FWIsIosySbSiF<\/USR><Declaration>public func FWIsIos(_ version: Int) -&gt; Bool<\/Declaration><CommentParts><Abstract><Para>是否是指定iOS主版本<\/Para><\/Abstract><\/CommentParts><\/Function>",
        "key.doc.line" : 41,
        "key.doc.name" : "FWIsIos(_:)",
        "key.doc.type" : "Function",
        "key.doclength" : 32,
        "key.docoffset" : 1088,
        "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAdaptive.swift",
        "key.fully_annotated_decl" : "<decl.function.free><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>FWIsIos<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>version<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.function.returntype><\/decl.function.free>",
        "key.kind" : "source.lang.swift.decl.function.free",
        "key.length" : 73,
        "key.line" : 41,
        "key.name" : "FWIsIos(_:)",
        "key.namelength" : 23,
        "key.nameoffset" : 1132,
        "key.offset" : 1127,
        "key.parsed_declaration" : "public func FWIsIos(_ version: Int) -> Bool",
        "key.parsed_scope.end" : 41,
        "key.parsed_scope.start" : 41,
        "key.substructure" : [

        ],
        "key.typename" : "(Int) -> Bool",
        "key.typeusr" : "$sySbSicD",
        "key.usr" : "s:11FWFramework7FWIsIosySbSiF"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public func FWIsIosLater(_ version: <Type usr=\"s:Si\">Int<\/Type>) -&gt; <Type usr=\"s:Sb\">Bool<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 1245
          }
        ],
        "key.bodylength" : 39,
        "key.bodyoffset" : 1295,
        "key.column" : 13,
        "key.decl_lang" : "source.lang.swift",
        "key.doc.column" : 13,
        "key.doc.comment" : "是否是大于等于指定iOS主版本",
        "key.doc.declaration" : "public func FWIsIosLater(_ version: Int) -> Bool",
        "key.doc.file" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAdaptive.swift",
        "key.doc.full_as_xml" : "<Function file=\"\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAdaptive.swift\" line=\"43\" column=\"13\"><Name>FWIsIosLater(_:)<\/Name><USR>s:11FWFramework12FWIsIosLaterySbSiF<\/USR><Declaration>public func FWIsIosLater(_ version: Int) -&gt; Bool<\/Declaration><CommentParts><Abstract><Para>是否是大于等于指定iOS主版本<\/Para><\/Abstract><\/CommentParts><\/Function>",
        "key.doc.line" : 43,
        "key.doc.name" : "FWIsIosLater(_:)",
        "key.doc.type" : "Function",
        "key.doclength" : 44,
        "key.docoffset" : 1201,
        "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAdaptive.swift",
        "key.fully_annotated_decl" : "<decl.function.free><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>FWIsIosLater<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>version<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.function.returntype><\/decl.function.free>",
        "key.kind" : "source.lang.swift.decl.function.free",
        "key.length" : 83,
        "key.line" : 43,
        "key.name" : "FWIsIosLater(_:)",
        "key.namelength" : 28,
        "key.nameoffset" : 1257,
        "key.offset" : 1252,
        "key.parsed_declaration" : "public func FWIsIosLater(_ version: Int) -> Bool",
        "key.parsed_scope.end" : 43,
        "key.parsed_scope.start" : 43,
        "key.substructure" : [

        ],
        "key.typename" : "(Int) -> Bool",
        "key.typeusr" : "$sySbSicD",
        "key.usr" : "s:11FWFramework12FWIsIosLaterySbSiF"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public var FWDeviceSize: <Type usr=\"c:@S@CGSize\">CGSize<\/Type> { get }<\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 1375
          }
        ],
        "key.bodylength" : 61,
        "key.bodyoffset" : 1408,
        "key.column" : 12,
        "key.decl_lang" : "source.lang.swift",
        "key.doc.column" : 12,
        "key.doc.comment" : "设备尺寸，跟横竖屏无关",
        "key.doc.declaration" : "public var FWDeviceSize: CGSize { get }",
        "key.doc.file" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAdaptive.swift",
        "key.doc.full_as_xml" : "<Other file=\"\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAdaptive.swift\" line=\"46\" column=\"12\"><Name>FWDeviceSize<\/Name><USR>s:11FWFramework12FWDeviceSizeSo6CGSizeVvp<\/USR><Declaration>public var FWDeviceSize: CGSize { get }<\/Declaration><CommentParts><Abstract><Para>设备尺寸，跟横竖屏无关<\/Para><\/Abstract><\/CommentParts><\/Other>",
        "key.doc.line" : 46,
        "key.doc.name" : "FWDeviceSize",
        "key.doc.type" : "Other",
        "key.doclength" : 38,
        "key.docoffset" : 1337,
        "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAdaptive.swift",
        "key.fully_annotated_decl" : "<decl.var.global><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>FWDeviceSize<\/decl.name>: <decl.var.type><ref.struct usr=\"c:@S@CGSize\">CGSize<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.global>",
        "key.kind" : "source.lang.swift.decl.var.global",
        "key.length" : 88,
        "key.line" : 46,
        "key.name" : "FWDeviceSize",
        "key.namelength" : 12,
        "key.nameoffset" : 1386,
        "key.offset" : 1382,
        "key.parsed_declaration" : "public var FWDeviceSize: CGSize",
        "key.parsed_scope.end" : 46,
        "key.parsed_scope.start" : 46,
        "key.typename" : "CGSize",
        "key.typeusr" : "$sSo6CGSizeVD",
        "key.usr" : "s:11FWFramework12FWDeviceSizeSo6CGSizeVvp"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public var FWDeviceWidth: <Type usr=\"s:12CoreGraphics7CGFloatV\">CGFloat<\/Type> { get }<\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 1509
          }
        ],
        "key.bodylength" : 79,
        "key.bodyoffset" : 1544,
        "key.column" : 12,
        "key.decl_lang" : "source.lang.swift",
        "key.doc.column" : 12,
        "key.doc.comment" : "设备宽度，跟横竖屏无关",
        "key.doc.declaration" : "public var FWDeviceWidth: CGFloat { get }",
        "key.doc.file" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAdaptive.swift",
        "key.doc.full_as_xml" : "<Other file=\"\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAdaptive.swift\" line=\"48\" column=\"12\"><Name>FWDeviceWidth<\/Name><USR>s:11FWFramework13FWDeviceWidth12CoreGraphics7CGFloatVvp<\/USR><Declaration>public var FWDeviceWidth: CGFloat { get }<\/Declaration><CommentParts><Abstract><Para>设备宽度，跟横竖屏无关<\/Para><\/Abstract><\/CommentParts><\/Other>",
        "key.doc.line" : 48,
        "key.doc.name" : "FWDeviceWidth",
        "key.doc.type" : "Other",
        "key.doclength" : 38,
        "key.docoffset" : 1471,
        "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAdaptive.swift",
        "key.fully_annotated_decl" : "<decl.var.global><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>FWDeviceWidth<\/decl.name>: <decl.var.type><ref.struct usr=\"s:12CoreGraphics7CGFloatV\">CGFloat<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.global>",
        "key.kind" : "source.lang.swift.decl.var.global",
        "key.length" : 108,
        "key.line" : 48,
        "key.name" : "FWDeviceWidth",
        "key.namelength" : 13,
        "key.nameoffset" : 1520,
        "key.offset" : 1516,
        "key.parsed_declaration" : "public var FWDeviceWidth: CGFloat",
        "key.parsed_scope.end" : 48,
        "key.parsed_scope.start" : 48,
        "key.typename" : "CGFloat",
        "key.typeusr" : "$s12CoreGraphics7CGFloatVD",
        "key.usr" : "s:11FWFramework13FWDeviceWidth12CoreGraphics7CGFloatVvp"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public var FWDeviceHeight: <Type usr=\"s:12CoreGraphics7CGFloatV\">CGFloat<\/Type> { get }<\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 1663
          }
        ],
        "key.bodylength" : 79,
        "key.bodyoffset" : 1699,
        "key.column" : 12,
        "key.decl_lang" : "source.lang.swift",
        "key.doc.column" : 12,
        "key.doc.comment" : "设备高度，跟横竖屏无关",
        "key.doc.declaration" : "public var FWDeviceHeight: CGFloat { get }",
        "key.doc.file" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAdaptive.swift",
        "key.doc.full_as_xml" : "<Other file=\"\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAdaptive.swift\" line=\"50\" column=\"12\"><Name>FWDeviceHeight<\/Name><USR>s:11FWFramework14FWDeviceHeight12CoreGraphics7CGFloatVvp<\/USR><Declaration>public var FWDeviceHeight: CGFloat { get }<\/Declaration><CommentParts><Abstract><Para>设备高度，跟横竖屏无关<\/Para><\/Abstract><\/CommentParts><\/Other>",
        "key.doc.line" : 50,
        "key.doc.name" : "FWDeviceHeight",
        "key.doc.type" : "Other",
        "key.doclength" : 38,
        "key.docoffset" : 1625,
        "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAdaptive.swift",
        "key.fully_annotated_decl" : "<decl.var.global><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>FWDeviceHeight<\/decl.name>: <decl.var.type><ref.struct usr=\"s:12CoreGraphics7CGFloatV\">CGFloat<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.global>",
        "key.kind" : "source.lang.swift.decl.var.global",
        "key.length" : 109,
        "key.line" : 50,
        "key.name" : "FWDeviceHeight",
        "key.namelength" : 14,
        "key.nameoffset" : 1674,
        "key.offset" : 1670,
        "key.parsed_declaration" : "public var FWDeviceHeight: CGFloat",
        "key.parsed_scope.end" : 50,
        "key.parsed_scope.start" : 50,
        "key.typename" : "CGFloat",
        "key.typeusr" : "$s12CoreGraphics7CGFloatVD",
        "key.usr" : "s:11FWFramework14FWDeviceHeight12CoreGraphics7CGFloatVvp"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public var FWDeviceResolution: <Type usr=\"c:@S@CGSize\">CGSize<\/Type> { get }<\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 1821
          }
        ],
        "key.bodylength" : 105,
        "key.bodyoffset" : 1860,
        "key.column" : 12,
        "key.decl_lang" : "source.lang.swift",
        "key.doc.column" : 12,
        "key.doc.comment" : "设备分辨率，跟横竖屏无关",
        "key.doc.declaration" : "public var FWDeviceResolution: CGSize { get }",
        "key.doc.file" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAdaptive.swift",
        "key.doc.full_as_xml" : "<Other file=\"\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAdaptive.swift\" line=\"52\" column=\"12\"><Name>FWDeviceResolution<\/Name><USR>s:11FWFramework18FWDeviceResolutionSo6CGSizeVvp<\/USR><Declaration>public var FWDeviceResolution: CGSize { get }<\/Declaration><CommentParts><Abstract><Para>设备分辨率，跟横竖屏无关<\/Para><\/Abstract><\/CommentParts><\/Other>",
        "key.doc.line" : 52,
        "key.doc.name" : "FWDeviceResolution",
        "key.doc.type" : "Other",
        "key.doclength" : 41,
        "key.docoffset" : 1780,
        "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAdaptive.swift",
        "key.fully_annotated_decl" : "<decl.var.global><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>FWDeviceResolution<\/decl.name>: <decl.var.type><ref.struct usr=\"c:@S@CGSize\">CGSize<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.global>",
        "key.kind" : "source.lang.swift.decl.var.global",
        "key.length" : 138,
        "key.line" : 52,
        "key.name" : "FWDeviceResolution",
        "key.namelength" : 18,
        "key.nameoffset" : 1832,
        "key.offset" : 1828,
        "key.parsed_declaration" : "public var FWDeviceResolution: CGSize",
        "key.parsed_scope.end" : 52,
        "key.parsed_scope.start" : 52,
        "key.typename" : "CGSize",
        "key.typeusr" : "$sSo6CGSizeVD",
        "key.usr" : "s:11FWFramework18FWDeviceResolutionSo6CGSizeVvp"
      },
      {
        "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
        "key.length" : 27,
        "key.name" : "MARK: - UIScreen+FWAdaptive",
        "key.namelength" : 0,
        "key.nameoffset" : 0,
        "key.offset" : 1971
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public var FWScreenSize: <Type usr=\"c:@S@CGSize\">CGSize<\/Type> { get }<\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 2017
          }
        ],
        "key.bodylength" : 34,
        "key.bodyoffset" : 2050,
        "key.column" : 12,
        "key.decl_lang" : "source.lang.swift",
        "key.doc.column" : 12,
        "key.doc.comment" : "屏幕尺寸",
        "key.doc.declaration" : "public var FWScreenSize: CGSize { get }",
        "key.doc.file" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAdaptive.swift",
        "key.doc.full_as_xml" : "<Other file=\"\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAdaptive.swift\" line=\"57\" column=\"12\"><Name>FWScreenSize<\/Name><USR>s:11FWFramework12FWScreenSizeSo6CGSizeVvp<\/USR><Declaration>public var FWScreenSize: CGSize { get }<\/Declaration><CommentParts><Abstract><Para>屏幕尺寸<\/Para><\/Abstract><\/CommentParts><\/Other>",
        "key.doc.line" : 57,
        "key.doc.name" : "FWScreenSize",
        "key.doc.type" : "Other",
        "key.doclength" : 17,
        "key.docoffset" : 2000,
        "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAdaptive.swift",
        "key.fully_annotated_decl" : "<decl.var.global><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>FWScreenSize<\/decl.name>: <decl.var.type><ref.struct usr=\"c:@S@CGSize\">CGSize<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.global>",
        "key.kind" : "source.lang.swift.decl.var.global",
        "key.length" : 61,
        "key.line" : 57,
        "key.name" : "FWScreenSize",
        "key.namelength" : 12,
        "key.nameoffset" : 2028,
        "key.offset" : 2024,
        "key.parsed_declaration" : "public var FWScreenSize: CGSize",
        "key.parsed_scope.end" : 57,
        "key.parsed_scope.start" : 57,
        "key.typename" : "CGSize",
        "key.typeusr" : "$sSo6CGSizeVD",
        "key.usr" : "s:11FWFramework12FWScreenSizeSo6CGSizeVvp"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public var FWScreenWidth: <Type usr=\"s:12CoreGraphics7CGFloatV\">CGFloat<\/Type> { get }<\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 2103
          }
        ],
        "key.bodylength" : 40,
        "key.bodyoffset" : 2138,
        "key.column" : 12,
        "key.decl_lang" : "source.lang.swift",
        "key.doc.column" : 12,
        "key.doc.comment" : "屏幕宽度",
        "key.doc.declaration" : "public var FWScreenWidth: CGFloat { get }",
        "key.doc.file" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAdaptive.swift",
        "key.doc.full_as_xml" : "<Other file=\"\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAdaptive.swift\" line=\"59\" column=\"12\"><Name>FWScreenWidth<\/Name><USR>s:11FWFramework13FWScreenWidth12CoreGraphics7CGFloatVvp<\/USR><Declaration>public var FWScreenWidth: CGFloat { get }<\/Declaration><CommentParts><Abstract><Para>屏幕宽度<\/Para><\/Abstract><\/CommentParts><\/Other>",
        "key.doc.line" : 59,
        "key.doc.name" : "FWScreenWidth",
        "key.doc.type" : "Other",
        "key.doclength" : 17,
        "key.docoffset" : 2086,
        "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAdaptive.swift",
        "key.fully_annotated_decl" : "<decl.var.global><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>FWScreenWidth<\/decl.name>: <decl.var.type><ref.struct usr=\"s:12CoreGraphics7CGFloatV\">CGFloat<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.global>",
        "key.kind" : "source.lang.swift.decl.var.global",
        "key.length" : 69,
        "key.line" : 59,
        "key.name" : "FWScreenWidth",
        "key.namelength" : 13,
        "key.nameoffset" : 2114,
        "key.offset" : 2110,
        "key.parsed_declaration" : "public var FWScreenWidth: CGFloat",
        "key.parsed_scope.end" : 59,
        "key.parsed_scope.start" : 59,
        "key.typename" : "CGFloat",
        "key.typeusr" : "$s12CoreGraphics7CGFloatVD",
        "key.usr" : "s:11FWFramework13FWScreenWidth12CoreGraphics7CGFloatVvp"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public var FWScreenHeight: <Type usr=\"s:12CoreGraphics7CGFloatV\">CGFloat<\/Type> { get }<\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 2197
          }
        ],
        "key.bodylength" : 41,
        "key.bodyoffset" : 2233,
        "key.column" : 12,
        "key.decl_lang" : "source.lang.swift",
        "key.doc.column" : 12,
        "key.doc.comment" : "屏幕高度",
        "key.doc.declaration" : "public var FWScreenHeight: CGFloat { get }",
        "key.doc.file" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAdaptive.swift",
        "key.doc.full_as_xml" : "<Other file=\"\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAdaptive.swift\" line=\"61\" column=\"12\"><Name>FWScreenHeight<\/Name><USR>s:11FWFramework14FWScreenHeight12CoreGraphics7CGFloatVvp<\/USR><Declaration>public var FWScreenHeight: CGFloat { get }<\/Declaration><CommentParts><Abstract><Para>屏幕高度<\/Para><\/Abstract><\/CommentParts><\/Other>",
        "key.doc.line" : 61,
        "key.doc.name" : "FWScreenHeight",
        "key.doc.type" : "Other",
        "key.doclength" : 17,
        "key.docoffset" : 2180,
        "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAdaptive.swift",
        "key.fully_annotated_decl" : "<decl.var.global><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>FWScreenHeight<\/decl.name>: <decl.var.type><ref.struct usr=\"s:12CoreGraphics7CGFloatV\">CGFloat<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.global>",
        "key.kind" : "source.lang.swift.decl.var.global",
        "key.length" : 71,
        "key.line" : 61,
        "key.name" : "FWScreenHeight",
        "key.namelength" : 14,
        "key.nameoffset" : 2208,
        "key.offset" : 2204,
        "key.parsed_declaration" : "public var FWScreenHeight: CGFloat",
        "key.parsed_scope.end" : 61,
        "key.parsed_scope.start" : 61,
        "key.typename" : "CGFloat",
        "key.typeusr" : "$s12CoreGraphics7CGFloatVD",
        "key.usr" : "s:11FWFramework14FWScreenHeight12CoreGraphics7CGFloatVvp"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public var FWScreenScale: <Type usr=\"s:12CoreGraphics7CGFloatV\">CGFloat<\/Type> { get }<\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 2299
          }
        ],
        "key.bodylength" : 28,
        "key.bodyoffset" : 2334,
        "key.column" : 12,
        "key.decl_lang" : "source.lang.swift",
        "key.doc.column" : 12,
        "key.doc.comment" : "屏幕像素比例",
        "key.doc.declaration" : "public var FWScreenScale: CGFloat { get }",
        "key.doc.file" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAdaptive.swift",
        "key.doc.full_as_xml" : "<Other file=\"\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAdaptive.swift\" line=\"63\" column=\"12\"><Name>FWScreenScale<\/Name><USR>s:11FWFramework13FWScreenScale12CoreGraphics7CGFloatVvp<\/USR><Declaration>public var FWScreenScale: CGFloat { get }<\/Declaration><CommentParts><Abstract><Para>屏幕像素比例<\/Para><\/Abstract><\/CommentParts><\/Other>",
        "key.doc.line" : 63,
        "key.doc.name" : "FWScreenScale",
        "key.doc.type" : "Other",
        "key.doclength" : 23,
        "key.docoffset" : 2276,
        "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAdaptive.swift",
        "key.fully_annotated_decl" : "<decl.var.global><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>FWScreenScale<\/decl.name>: <decl.var.type><ref.struct usr=\"s:12CoreGraphics7CGFloatV\">CGFloat<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.global>",
        "key.kind" : "source.lang.swift.decl.var.global",
        "key.length" : 57,
        "key.line" : 63,
        "key.name" : "FWScreenScale",
        "key.namelength" : 13,
        "key.nameoffset" : 2310,
        "key.offset" : 2306,
        "key.parsed_declaration" : "public var FWScreenScale: CGFloat",
        "key.parsed_scope.end" : 63,
        "key.parsed_scope.start" : 63,
        "key.typename" : "CGFloat",
        "key.typeusr" : "$s12CoreGraphics7CGFloatVD",
        "key.usr" : "s:11FWFramework13FWScreenScale12CoreGraphics7CGFloatVvp"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public func FWIsScreenInch(_ inch: <Type usr=\"c:FWAdaptive.h@T@FWScreenInch\">FWScreenInch<\/Type>) -&gt; <Type usr=\"s:Sb\">Bool<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 2387
          }
        ],
        "key.bodylength" : 38,
        "key.bodyoffset" : 2445,
        "key.column" : 13,
        "key.decl_lang" : "source.lang.swift",
        "key.doc.column" : 13,
        "key.doc.comment" : "判断屏幕英寸",
        "key.doc.declaration" : "public func FWIsScreenInch(_ inch: FWScreenInch) -> Bool",
        "key.doc.file" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAdaptive.swift",
        "key.doc.full_as_xml" : "<Function file=\"\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAdaptive.swift\" line=\"65\" column=\"13\"><Name>FWIsScreenInch(_:)<\/Name><USR>s:11FWFramework14FWIsScreenInchySbSo08FWScreenD0aF<\/USR><Declaration>public func FWIsScreenInch(_ inch: FWScreenInch) -&gt; Bool<\/Declaration><CommentParts><Abstract><Para>判断屏幕英寸<\/Para><\/Abstract><\/CommentParts><\/Function>",
        "key.doc.line" : 65,
        "key.doc.name" : "FWIsScreenInch(_:)",
        "key.doc.type" : "Function",
        "key.doclength" : 23,
        "key.docoffset" : 2364,
        "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAdaptive.swift",
        "key.fully_annotated_decl" : "<decl.function.free><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>FWIsScreenInch<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>inch<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"c:FWAdaptive.h@T@FWScreenInch\">FWScreenInch<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.function.returntype><\/decl.function.free>",
        "key.kind" : "source.lang.swift.decl.function.free",
        "key.length" : 90,
        "key.line" : 65,
        "key.name" : "FWIsScreenInch(_:)",
        "key.namelength" : 36,
        "key.nameoffset" : 2399,
        "key.offset" : 2394,
        "key.parsed_declaration" : "public func FWIsScreenInch(_ inch: FWScreenInch) -> Bool",
        "key.parsed_scope.end" : 65,
        "key.parsed_scope.start" : 65,
        "key.substructure" : [

        ],
        "key.typename" : "(FWScreenInch) -> Bool",
        "key.typeusr" : "$sySbSo12FWScreenInchacD",
        "key.usr" : "s:11FWFramework14FWIsScreenInchySbSo08FWScreenD0aF"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public var FWIsNotchedScreen: <Type usr=\"s:Sb\">Bool<\/Type> { get }<\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 2514
          }
        ],
        "key.bodylength" : 35,
        "key.bodyoffset" : 2550,
        "key.column" : 12,
        "key.decl_lang" : "source.lang.swift",
        "key.doc.column" : 12,
        "key.doc.comment" : "是否是全面屏屏幕",
        "key.doc.declaration" : "public var FWIsNotchedScreen: Bool { get }",
        "key.doc.file" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAdaptive.swift",
        "key.doc.full_as_xml" : "<Other file=\"\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAdaptive.swift\" line=\"67\" column=\"12\"><Name>FWIsNotchedScreen<\/Name><USR>s:11FWFramework17FWIsNotchedScreenSbvp<\/USR><Declaration>public var FWIsNotchedScreen: Bool { get }<\/Declaration><CommentParts><Abstract><Para>是否是全面屏屏幕<\/Para><\/Abstract><\/CommentParts><\/Other>",
        "key.doc.line" : 67,
        "key.doc.name" : "FWIsNotchedScreen",
        "key.doc.type" : "Other",
        "key.doclength" : 29,
        "key.docoffset" : 2485,
        "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAdaptive.swift",
        "key.fully_annotated_decl" : "<decl.var.global><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>FWIsNotchedScreen<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.global>",
        "key.kind" : "source.lang.swift.decl.var.global",
        "key.length" : 65,
        "key.line" : 67,
        "key.name" : "FWIsNotchedScreen",
        "key.namelength" : 17,
        "key.nameoffset" : 2525,
        "key.offset" : 2521,
        "key.parsed_declaration" : "public var FWIsNotchedScreen: Bool",
        "key.parsed_scope.end" : 67,
        "key.parsed_scope.start" : 67,
        "key.typename" : "Bool",
        "key.typeusr" : "$sSbD",
        "key.usr" : "s:11FWFramework17FWIsNotchedScreenSbvp"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public var FWPixelOne: <Type usr=\"s:12CoreGraphics7CGFloatV\">CGFloat<\/Type> { get }<\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 2616
          }
        ],
        "key.bodylength" : 28,
        "key.bodyoffset" : 2648,
        "key.column" : 12,
        "key.decl_lang" : "source.lang.swift",
        "key.doc.column" : 12,
        "key.doc.comment" : "屏幕一像素的大小",
        "key.doc.declaration" : "public var FWPixelOne: CGFloat { get }",
        "key.doc.file" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAdaptive.swift",
        "key.doc.full_as_xml" : "<Other file=\"\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAdaptive.swift\" line=\"69\" column=\"12\"><Name>FWPixelOne<\/Name><USR>s:11FWFramework10FWPixelOne12CoreGraphics7CGFloatVvp<\/USR><Declaration>public var FWPixelOne: CGFloat { get }<\/Declaration><CommentParts><Abstract><Para>屏幕一像素的大小<\/Para><\/Abstract><\/CommentParts><\/Other>",
        "key.doc.line" : 69,
        "key.doc.name" : "FWPixelOne",
        "key.doc.type" : "Other",
        "key.doclength" : 29,
        "key.docoffset" : 2587,
        "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAdaptive.swift",
        "key.fully_annotated_decl" : "<decl.var.global><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>FWPixelOne<\/decl.name>: <decl.var.type><ref.struct usr=\"s:12CoreGraphics7CGFloatV\">CGFloat<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.global>",
        "key.kind" : "source.lang.swift.decl.var.global",
        "key.length" : 54,
        "key.line" : 69,
        "key.name" : "FWPixelOne",
        "key.namelength" : 10,
        "key.nameoffset" : 2627,
        "key.offset" : 2623,
        "key.parsed_declaration" : "public var FWPixelOne: CGFloat",
        "key.parsed_scope.end" : 69,
        "key.parsed_scope.start" : 69,
        "key.typename" : "CGFloat",
        "key.typeusr" : "$s12CoreGraphics7CGFloatVD",
        "key.usr" : "s:11FWFramework10FWPixelOne12CoreGraphics7CGFloatVvp"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public var FWSafeAreaInsets: <Type usr=\"c:@S@UIEdgeInsets\">UIEdgeInsets<\/Type> { get }<\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 2707
          }
        ],
        "key.bodylength" : 34,
        "key.bodyoffset" : 2750,
        "key.column" : 12,
        "key.decl_lang" : "source.lang.swift",
        "key.doc.column" : 12,
        "key.doc.comment" : "屏幕安全区域距离",
        "key.doc.declaration" : "public var FWSafeAreaInsets: UIEdgeInsets { get }",
        "key.doc.file" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAdaptive.swift",
        "key.doc.full_as_xml" : "<Other file=\"\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAdaptive.swift\" line=\"71\" column=\"12\"><Name>FWSafeAreaInsets<\/Name><USR>s:11FWFramework16FWSafeAreaInsetsSo06UIEdgeD0Vvp<\/USR><Declaration>public var FWSafeAreaInsets: UIEdgeInsets { get }<\/Declaration><CommentParts><Abstract><Para>屏幕安全区域距离<\/Para><\/Abstract><\/CommentParts><\/Other>",
        "key.doc.line" : 71,
        "key.doc.name" : "FWSafeAreaInsets",
        "key.doc.type" : "Other",
        "key.doclength" : 29,
        "key.docoffset" : 2678,
        "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAdaptive.swift",
        "key.fully_annotated_decl" : "<decl.var.global><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>FWSafeAreaInsets<\/decl.name>: <decl.var.type><ref.struct usr=\"c:@S@UIEdgeInsets\">UIEdgeInsets<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.global>",
        "key.kind" : "source.lang.swift.decl.var.global",
        "key.length" : 71,
        "key.line" : 71,
        "key.name" : "FWSafeAreaInsets",
        "key.namelength" : 16,
        "key.nameoffset" : 2718,
        "key.offset" : 2714,
        "key.parsed_declaration" : "public var FWSafeAreaInsets: UIEdgeInsets",
        "key.parsed_scope.end" : 71,
        "key.parsed_scope.start" : 71,
        "key.typename" : "UIEdgeInsets",
        "key.typeusr" : "$sSo12UIEdgeInsetsVD",
        "key.usr" : "s:11FWFramework16FWSafeAreaInsetsSo06UIEdgeD0Vvp"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public var FWStatusBarHeight: <Type usr=\"s:12CoreGraphics7CGFloatV\">CGFloat<\/Type> { get }<\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 2831
          }
        ],
        "key.bodylength" : 35,
        "key.bodyoffset" : 2870,
        "key.column" : 12,
        "key.decl_lang" : "source.lang.swift",
        "key.doc.column" : 12,
        "key.doc.comment" : "状态栏高度，与是否隐藏无关",
        "key.doc.declaration" : "public var FWStatusBarHeight: CGFloat { get }",
        "key.doc.file" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAdaptive.swift",
        "key.doc.full_as_xml" : "<Other file=\"\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAdaptive.swift\" line=\"74\" column=\"12\"><Name>FWStatusBarHeight<\/Name><USR>s:11FWFramework17FWStatusBarHeight12CoreGraphics7CGFloatVvp<\/USR><Declaration>public var FWStatusBarHeight: CGFloat { get }<\/Declaration><CommentParts><Abstract><Para>状态栏高度，与是否隐藏无关<\/Para><\/Abstract><\/CommentParts><\/Other>",
        "key.doc.line" : 74,
        "key.doc.name" : "FWStatusBarHeight",
        "key.doc.type" : "Other",
        "key.doclength" : 44,
        "key.docoffset" : 2787,
        "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAdaptive.swift",
        "key.fully_annotated_decl" : "<decl.var.global><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>FWStatusBarHeight<\/decl.name>: <decl.var.type><ref.struct usr=\"s:12CoreGraphics7CGFloatV\">CGFloat<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.global>",
        "key.kind" : "source.lang.swift.decl.var.global",
        "key.length" : 68,
        "key.line" : 74,
        "key.name" : "FWStatusBarHeight",
        "key.namelength" : 17,
        "key.nameoffset" : 2842,
        "key.offset" : 2838,
        "key.parsed_declaration" : "public var FWStatusBarHeight: CGFloat",
        "key.parsed_scope.end" : 74,
        "key.parsed_scope.start" : 74,
        "key.typename" : "CGFloat",
        "key.typeusr" : "$s12CoreGraphics7CGFloatVD",
        "key.usr" : "s:11FWFramework17FWStatusBarHeight12CoreGraphics7CGFloatVvp"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public var FWNavigationBarHeight: <Type usr=\"s:12CoreGraphics7CGFloatV\">CGFloat<\/Type> { get }<\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 2951
          }
        ],
        "key.bodylength" : 39,
        "key.bodyoffset" : 2994,
        "key.column" : 12,
        "key.decl_lang" : "source.lang.swift",
        "key.doc.column" : 12,
        "key.doc.comment" : "导航栏高度，与是否隐藏无关",
        "key.doc.declaration" : "public var FWNavigationBarHeight: CGFloat { get }",
        "key.doc.file" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAdaptive.swift",
        "key.doc.full_as_xml" : "<Other file=\"\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAdaptive.swift\" line=\"76\" column=\"12\"><Name>FWNavigationBarHeight<\/Name><USR>s:11FWFramework21FWNavigationBarHeight12CoreGraphics7CGFloatVvp<\/USR><Declaration>public var FWNavigationBarHeight: CGFloat { get }<\/Declaration><CommentParts><Abstract><Para>导航栏高度，与是否隐藏无关<\/Para><\/Abstract><\/CommentParts><\/Other>",
        "key.doc.line" : 76,
        "key.doc.name" : "FWNavigationBarHeight",
        "key.doc.type" : "Other",
        "key.doclength" : 44,
        "key.docoffset" : 2907,
        "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAdaptive.swift",
        "key.fully_annotated_decl" : "<decl.var.global><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>FWNavigationBarHeight<\/decl.name>: <decl.var.type><ref.struct usr=\"s:12CoreGraphics7CGFloatV\">CGFloat<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.global>",
        "key.kind" : "source.lang.swift.decl.var.global",
        "key.length" : 76,
        "key.line" : 76,
        "key.name" : "FWNavigationBarHeight",
        "key.namelength" : 21,
        "key.nameoffset" : 2962,
        "key.offset" : 2958,
        "key.parsed_declaration" : "public var FWNavigationBarHeight: CGFloat",
        "key.parsed_scope.end" : 76,
        "key.parsed_scope.start" : 76,
        "key.typename" : "CGFloat",
        "key.typeusr" : "$s12CoreGraphics7CGFloatVD",
        "key.usr" : "s:11FWFramework21FWNavigationBarHeight12CoreGraphics7CGFloatVvp"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public var FWTopBarHeight: <Type usr=\"s:12CoreGraphics7CGFloatV\">CGFloat<\/Type> { get }<\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 3109
          }
        ],
        "key.bodylength" : 32,
        "key.bodyoffset" : 3145,
        "key.column" : 12,
        "key.decl_lang" : "source.lang.swift",
        "key.doc.column" : 12,
        "key.doc.comment" : "顶部栏高度，包含状态栏、导航栏，与是否隐藏无关",
        "key.doc.declaration" : "public var FWTopBarHeight: CGFloat { get }",
        "key.doc.file" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAdaptive.swift",
        "key.doc.full_as_xml" : "<Other file=\"\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAdaptive.swift\" line=\"78\" column=\"12\"><Name>FWTopBarHeight<\/Name><USR>s:11FWFramework14FWTopBarHeight12CoreGraphics7CGFloatVvp<\/USR><Declaration>public var FWTopBarHeight: CGFloat { get }<\/Declaration><CommentParts><Abstract><Para>顶部栏高度，包含状态栏、导航栏，与是否隐藏无关<\/Para><\/Abstract><\/CommentParts><\/Other>",
        "key.doc.line" : 78,
        "key.doc.name" : "FWTopBarHeight",
        "key.doc.type" : "Other",
        "key.doclength" : 74,
        "key.docoffset" : 3035,
        "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAdaptive.swift",
        "key.fully_annotated_decl" : "<decl.var.global><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>FWTopBarHeight<\/decl.name>: <decl.var.type><ref.struct usr=\"s:12CoreGraphics7CGFloatV\">CGFloat<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.global>",
        "key.kind" : "source.lang.swift.decl.var.global",
        "key.length" : 62,
        "key.line" : 78,
        "key.name" : "FWTopBarHeight",
        "key.namelength" : 14,
        "key.nameoffset" : 3120,
        "key.offset" : 3116,
        "key.parsed_declaration" : "public var FWTopBarHeight: CGFloat",
        "key.parsed_scope.end" : 78,
        "key.parsed_scope.start" : 78,
        "key.typename" : "CGFloat",
        "key.typeusr" : "$s12CoreGraphics7CGFloatVD",
        "key.usr" : "s:11FWFramework14FWTopBarHeight12CoreGraphics7CGFloatVvp"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public var FWTabBarHeight: <Type usr=\"s:12CoreGraphics7CGFloatV\">CGFloat<\/Type> { get }<\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 3223
          }
        ],
        "key.bodylength" : 32,
        "key.bodyoffset" : 3259,
        "key.column" : 12,
        "key.decl_lang" : "source.lang.swift",
        "key.doc.column" : 12,
        "key.doc.comment" : "标签栏高度，与是否隐藏无关",
        "key.doc.declaration" : "public var FWTabBarHeight: CGFloat { get }",
        "key.doc.file" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAdaptive.swift",
        "key.doc.full_as_xml" : "<Other file=\"\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAdaptive.swift\" line=\"80\" column=\"12\"><Name>FWTabBarHeight<\/Name><USR>s:11FWFramework14FWTabBarHeight12CoreGraphics7CGFloatVvp<\/USR><Declaration>public var FWTabBarHeight: CGFloat { get }<\/Declaration><CommentParts><Abstract><Para>标签栏高度，与是否隐藏无关<\/Para><\/Abstract><\/CommentParts><\/Other>",
        "key.doc.line" : 80,
        "key.doc.name" : "FWTabBarHeight",
        "key.doc.type" : "Other",
        "key.doclength" : 44,
        "key.docoffset" : 3179,
        "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAdaptive.swift",
        "key.fully_annotated_decl" : "<decl.var.global><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>FWTabBarHeight<\/decl.name>: <decl.var.type><ref.struct usr=\"s:12CoreGraphics7CGFloatV\">CGFloat<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.global>",
        "key.kind" : "source.lang.swift.decl.var.global",
        "key.length" : 62,
        "key.line" : 80,
        "key.name" : "FWTabBarHeight",
        "key.namelength" : 14,
        "key.nameoffset" : 3234,
        "key.offset" : 3230,
        "key.parsed_declaration" : "public var FWTabBarHeight: CGFloat",
        "key.parsed_scope.end" : 80,
        "key.parsed_scope.start" : 80,
        "key.typename" : "CGFloat",
        "key.typeusr" : "$s12CoreGraphics7CGFloatVD",
        "key.usr" : "s:11FWFramework14FWTabBarHeight12CoreGraphics7CGFloatVvp"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public var FWToolBarHeight: <Type usr=\"s:12CoreGraphics7CGFloatV\">CGFloat<\/Type> { get }<\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 3337
          }
        ],
        "key.bodylength" : 33,
        "key.bodyoffset" : 3374,
        "key.column" : 12,
        "key.decl_lang" : "source.lang.swift",
        "key.doc.column" : 12,
        "key.doc.comment" : "工具栏高度，与是否隐藏无关",
        "key.doc.declaration" : "public var FWToolBarHeight: CGFloat { get }",
        "key.doc.file" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAdaptive.swift",
        "key.doc.full_as_xml" : "<Other file=\"\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAdaptive.swift\" line=\"82\" column=\"12\"><Name>FWToolBarHeight<\/Name><USR>s:11FWFramework15FWToolBarHeight12CoreGraphics7CGFloatVvp<\/USR><Declaration>public var FWToolBarHeight: CGFloat { get }<\/Declaration><CommentParts><Abstract><Para>工具栏高度，与是否隐藏无关<\/Para><\/Abstract><\/CommentParts><\/Other>",
        "key.doc.line" : 82,
        "key.doc.name" : "FWToolBarHeight",
        "key.doc.type" : "Other",
        "key.doclength" : 44,
        "key.docoffset" : 3293,
        "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAdaptive.swift",
        "key.fully_annotated_decl" : "<decl.var.global><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>FWToolBarHeight<\/decl.name>: <decl.var.type><ref.struct usr=\"s:12CoreGraphics7CGFloatV\">CGFloat<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.global>",
        "key.kind" : "source.lang.swift.decl.var.global",
        "key.length" : 64,
        "key.line" : 82,
        "key.name" : "FWToolBarHeight",
        "key.namelength" : 15,
        "key.nameoffset" : 3348,
        "key.offset" : 3344,
        "key.parsed_declaration" : "public var FWToolBarHeight: CGFloat",
        "key.parsed_scope.end" : 82,
        "key.parsed_scope.start" : 82,
        "key.typename" : "CGFloat",
        "key.typeusr" : "$s12CoreGraphics7CGFloatVD",
        "key.usr" : "s:11FWFramework15FWToolBarHeight12CoreGraphics7CGFloatVvp"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public var FWScaleFactorWidth: <Type usr=\"s:12CoreGraphics7CGFloatV\">CGFloat<\/Type> { get }<\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 3445
          }
        ],
        "key.bodylength" : 36,
        "key.bodyoffset" : 3485,
        "key.column" : 12,
        "key.decl_lang" : "source.lang.swift",
        "key.doc.column" : 12,
        "key.doc.comment" : "当前屏幕宽度缩放比例",
        "key.doc.declaration" : "public var FWScaleFactorWidth: CGFloat { get }",
        "key.doc.file" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAdaptive.swift",
        "key.doc.full_as_xml" : "<Other file=\"\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAdaptive.swift\" line=\"85\" column=\"12\"><Name>FWScaleFactorWidth<\/Name><USR>s:11FWFramework18FWScaleFactorWidth12CoreGraphics7CGFloatVvp<\/USR><Declaration>public var FWScaleFactorWidth: CGFloat { get }<\/Declaration><CommentParts><Abstract><Para>当前屏幕宽度缩放比例<\/Para><\/Abstract><\/CommentParts><\/Other>",
        "key.doc.line" : 85,
        "key.doc.name" : "FWScaleFactorWidth",
        "key.doc.type" : "Other",
        "key.doclength" : 35,
        "key.docoffset" : 3410,
        "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAdaptive.swift",
        "key.fully_annotated_decl" : "<decl.var.global><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>FWScaleFactorWidth<\/decl.name>: <decl.var.type><ref.struct usr=\"s:12CoreGraphics7CGFloatV\">CGFloat<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.global>",
        "key.kind" : "source.lang.swift.decl.var.global",
        "key.length" : 70,
        "key.line" : 85,
        "key.name" : "FWScaleFactorWidth",
        "key.namelength" : 18,
        "key.nameoffset" : 3456,
        "key.offset" : 3452,
        "key.parsed_declaration" : "public var FWScaleFactorWidth: CGFloat",
        "key.parsed_scope.end" : 85,
        "key.parsed_scope.start" : 85,
        "key.typename" : "CGFloat",
        "key.typeusr" : "$s12CoreGraphics7CGFloatVD",
        "key.usr" : "s:11FWFramework18FWScaleFactorWidth12CoreGraphics7CGFloatVvp"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public var FWScaleFactorHeight: <Type usr=\"s:12CoreGraphics7CGFloatV\">CGFloat<\/Type> { get }<\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 3558
          }
        ],
        "key.bodylength" : 37,
        "key.bodyoffset" : 3599,
        "key.column" : 12,
        "key.decl_lang" : "source.lang.swift",
        "key.doc.column" : 12,
        "key.doc.comment" : "当前屏幕高度缩放比例",
        "key.doc.declaration" : "public var FWScaleFactorHeight: CGFloat { get }",
        "key.doc.file" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAdaptive.swift",
        "key.doc.full_as_xml" : "<Other file=\"\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAdaptive.swift\" line=\"87\" column=\"12\"><Name>FWScaleFactorHeight<\/Name><USR>s:11FWFramework19FWScaleFactorHeight12CoreGraphics7CGFloatVvp<\/USR><Declaration>public var FWScaleFactorHeight: CGFloat { get }<\/Declaration><CommentParts><Abstract><Para>当前屏幕高度缩放比例<\/Para><\/Abstract><\/CommentParts><\/Other>",
        "key.doc.line" : 87,
        "key.doc.name" : "FWScaleFactorHeight",
        "key.doc.type" : "Other",
        "key.doclength" : 35,
        "key.docoffset" : 3523,
        "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAdaptive.swift",
        "key.fully_annotated_decl" : "<decl.var.global><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>FWScaleFactorHeight<\/decl.name>: <decl.var.type><ref.struct usr=\"s:12CoreGraphics7CGFloatV\">CGFloat<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.global>",
        "key.kind" : "source.lang.swift.decl.var.global",
        "key.length" : 72,
        "key.line" : 87,
        "key.name" : "FWScaleFactorHeight",
        "key.namelength" : 19,
        "key.nameoffset" : 3569,
        "key.offset" : 3565,
        "key.parsed_declaration" : "public var FWScaleFactorHeight: CGFloat",
        "key.parsed_scope.end" : 87,
        "key.parsed_scope.start" : 87,
        "key.typename" : "CGFloat",
        "key.typeusr" : "$s12CoreGraphics7CGFloatVD",
        "key.usr" : "s:11FWFramework19FWScaleFactorHeight12CoreGraphics7CGFloatVvp"
      }
    ]
  }
}, {
  "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAnnotation.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 3336,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>@propertyWrapper public struct FWUserDefaultAnnotation&lt;T&gt;<\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 336
          },
          {
            "key.attribute" : "source.decl.attribute.propertyWrapper",
            "key.length" : 16,
            "key.offset" : 319
          }
        ],
        "key.bodylength" : 454,
        "key.bodyoffset" : 378,
        "key.column" : 15,
        "key.decl_lang" : "source.lang.swift",
        "key.doc.column" : 15,
        "key.doc.comment" : "UserDefault属性包装器注解\n使用示例：\n@FWUserDefaultAnnotation(\"userName\", defaultValue: \"test\")\npublic static var userName: String",
        "key.doc.declaration" : "@propertyWrapper public struct FWUserDefaultAnnotation<T>",
        "key.doc.file" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAnnotation.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAnnotation.swift\" line=\"16\" column=\"15\"><Name>FWUserDefaultAnnotation<\/Name><USR>s:11FWFramework23FWUserDefaultAnnotationV<\/USR><Declaration>@propertyWrapper public struct FWUserDefaultAnnotation&lt;T&gt;<\/Declaration><CommentParts><Abstract><Para>UserDefault属性包装器注解 使用示例： @FWUserDefaultAnnotation(“userName”, defaultValue: “test”) public static var userName: String<\/Para><\/Abstract><\/CommentParts><\/Class>",
        "key.doc.line" : 16,
        "key.doc.name" : "FWUserDefaultAnnotation",
        "key.doc.type" : "Class",
        "key.doclength" : 159,
        "key.docoffset" : 160,
        "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAnnotation.swift",
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@propertyWrapper<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>FWUserDefaultAnnotation<\/decl.name>&lt;<decl.generic_type_param usr=\"s:11FWFramework23FWUserDefaultAnnotationV1Txmfp\"><decl.generic_type_param.name>T<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;<\/decl.struct>",
        "key.kind" : "source.lang.swift.decl.struct",
        "key.length" : 490,
        "key.line" : 16,
        "key.name" : "FWUserDefaultAnnotation",
        "key.namelength" : 23,
        "key.nameoffset" : 350,
        "key.offset" : 343,
        "key.parsed_declaration" : "public struct FWUserDefaultAnnotation<T>",
        "key.parsed_scope.end" : 34,
        "key.parsed_scope.start" : 16,
        "key.substructure" : [
          {
            "key.annotated_decl" : "<Declaration>T<\/Declaration>",
            "key.column" : 39,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAnnotation.swift",
            "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>T<\/decl.generic_type_param.name><\/decl.generic_type_param>",
            "key.kind" : "source.lang.swift.decl.generic_type_param",
            "key.length" : 1,
            "key.line" : 16,
            "key.name" : "T",
            "key.namelength" : 1,
            "key.nameoffset" : 374,
            "key.offset" : 374,
            "key.parsed_declaration" : "public struct FWUserDefaultAnnotation<T",
            "key.parsed_scope.end" : 16,
            "key.parsed_scope.start" : 16,
            "key.typename" : "T.Type",
            "key.typeusr" : "$sxmD",
            "key.usr" : "s:11FWFramework23FWUserDefaultAnnotationV1Txmfp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>let key: <Type usr=\"s:SS\">String<\/Type><\/Declaration>",
            "key.column" : 9,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAnnotation.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>key<\/decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 15,
            "key.line" : 17,
            "key.name" : "key",
            "key.namelength" : 3,
            "key.nameoffset" : 387,
            "key.offset" : 383,
            "key.parsed_declaration" : "let key: String",
            "key.parsed_scope.end" : 17,
            "key.parsed_scope.start" : 17,
            "key.typename" : "String",
            "key.typeusr" : "$sSSD",
            "key.usr" : "s:11FWFramework23FWUserDefaultAnnotationV3keySSvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>let defaultValue: <Type usr=\"s:11FWFramework23FWUserDefaultAnnotationV1Txmfp\">T<\/Type><\/Declaration>",
            "key.column" : 9,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAnnotation.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>defaultValue<\/decl.name>: <decl.var.type><ref.generic_type_param usr=\"s:11FWFramework23FWUserDefaultAnnotationV1Txmfp\">T<\/ref.generic_type_param><\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 19,
            "key.line" : 18,
            "key.name" : "defaultValue",
            "key.namelength" : 12,
            "key.nameoffset" : 407,
            "key.offset" : 403,
            "key.parsed_declaration" : "let defaultValue: T",
            "key.parsed_scope.end" : 18,
            "key.parsed_scope.start" : 18,
            "key.typename" : "T",
            "key.typeusr" : "$sxD",
            "key.usr" : "s:11FWFramework23FWUserDefaultAnnotationV12defaultValuexvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public init(_ key: <Type usr=\"s:SS\">String<\/Type>, defaultValue: <Type usr=\"s:11FWFramework23FWUserDefaultAnnotationV1Txmfp\">T<\/Type>)<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 432
              }
            ],
            "key.bodylength" : 69,
            "key.bodyoffset" : 477,
            "key.column" : 12,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAnnotation.swift",
            "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>init<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>key<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>defaultValue<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:11FWFramework23FWUserDefaultAnnotationV1Txmfp\">T<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.constructor>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 108,
            "key.line" : 20,
            "key.name" : "init(_:defaultValue:)",
            "key.namelength" : 36,
            "key.nameoffset" : 439,
            "key.offset" : 439,
            "key.parsed_declaration" : "public init(_ key: String, defaultValue: T)",
            "key.parsed_scope.end" : 23,
            "key.parsed_scope.start" : 20,
            "key.substructure" : [

            ],
            "key.typename" : "<T> (FWUserDefaultAnnotation<T>.Type) -> (String, T) -> FWUserDefaultAnnotation<T>",
            "key.typeusr" : "$s_12defaultValue11FWFramework23FWUserDefaultAnnotationVyxGSS_xtcD",
            "key.usr" : "s:11FWFramework23FWUserDefaultAnnotationV_12defaultValueACyxGSS_xtcfc"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var wrappedValue: <Type usr=\"s:11FWFramework23FWUserDefaultAnnotationV1Txmfp\">T<\/Type> { get set }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 557
              }
            ],
            "key.bodylength" : 245,
            "key.bodyoffset" : 585,
            "key.column" : 16,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAnnotation.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>wrappedValue<\/decl.name>: <decl.var.type><ref.generic_type_param usr=\"s:11FWFramework23FWUserDefaultAnnotationV1Txmfp\">T<\/ref.generic_type_param><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> <syntaxtype.keyword>set<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 267,
            "key.line" : 25,
            "key.name" : "wrappedValue",
            "key.namelength" : 12,
            "key.nameoffset" : 568,
            "key.offset" : 564,
            "key.parsed_declaration" : "public var wrappedValue: T",
            "key.parsed_scope.end" : 33,
            "key.parsed_scope.start" : 25,
            "key.setter_accessibility" : "source.lang.swift.accessibility.public",
            "key.typename" : "T",
            "key.typeusr" : "$sxD",
            "key.usr" : "s:11FWFramework23FWUserDefaultAnnotationV12wrappedValuexvp"
          }
        ],
        "key.typename" : "FWUserDefaultAnnotation<T>.Type",
        "key.typeusr" : "$s11FWFramework23FWUserDefaultAnnotationVyxGmD",
        "key.usr" : "s:11FWFramework23FWUserDefaultAnnotationV"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>@propertyWrapper public struct FWModuleAnnotation&lt;T&gt;<\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 997
          },
          {
            "key.attribute" : "source.decl.attribute.propertyWrapper",
            "key.length" : 16,
            "key.offset" : 980
          }
        ],
        "key.bodylength" : 657,
        "key.bodyoffset" : 1034,
        "key.column" : 15,
        "key.decl_lang" : "source.lang.swift",
        "key.doc.column" : 15,
        "key.doc.comment" : "模块属性包装器注解\n使用示例：\n@FWModuleAnnotation(UserModuleService.self)\nstatic var userModule: UserModuleService",
        "key.doc.declaration" : "@propertyWrapper public struct FWModuleAnnotation<T>",
        "key.doc.file" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAnnotation.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAnnotation.swift\" line=\"41\" column=\"15\"><Name>FWModuleAnnotation<\/Name><USR>s:11FWFramework18FWModuleAnnotationV<\/USR><Declaration>@propertyWrapper public struct FWModuleAnnotation&lt;T&gt;<\/Declaration><CommentParts><Abstract><Para>模块属性包装器注解 使用示例： @FWModuleAnnotation(UserModuleService.self) static var userModule: UserModuleService<\/Para><\/Abstract><\/CommentParts><\/Class>",
        "key.doc.line" : 41,
        "key.doc.name" : "FWModuleAnnotation",
        "key.doc.type" : "Class",
        "key.doclength" : 145,
        "key.docoffset" : 835,
        "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAnnotation.swift",
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@propertyWrapper<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>FWModuleAnnotation<\/decl.name>&lt;<decl.generic_type_param usr=\"s:11FWFramework18FWModuleAnnotationV1Txmfp\"><decl.generic_type_param.name>T<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;<\/decl.struct>",
        "key.kind" : "source.lang.swift.decl.struct",
        "key.length" : 688,
        "key.line" : 41,
        "key.name" : "FWModuleAnnotation",
        "key.namelength" : 18,
        "key.nameoffset" : 1011,
        "key.offset" : 1004,
        "key.parsed_declaration" : "public struct FWModuleAnnotation<T>",
        "key.parsed_scope.end" : 66,
        "key.parsed_scope.start" : 41,
        "key.substructure" : [
          {
            "key.annotated_decl" : "<Declaration>T<\/Declaration>",
            "key.column" : 34,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAnnotation.swift",
            "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>T<\/decl.generic_type_param.name><\/decl.generic_type_param>",
            "key.kind" : "source.lang.swift.decl.generic_type_param",
            "key.length" : 1,
            "key.line" : 41,
            "key.name" : "T",
            "key.namelength" : 1,
            "key.nameoffset" : 1030,
            "key.offset" : 1030,
            "key.parsed_declaration" : "public struct FWModuleAnnotation<T",
            "key.parsed_scope.end" : 41,
            "key.parsed_scope.start" : 41,
            "key.typename" : "T.Type",
            "key.typeusr" : "$sxmD",
            "key.usr" : "s:11FWFramework18FWModuleAnnotationV1Txmfp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>let serviceProtocol: <Type usr=\"c:objc(cs)Protocol\">Protocol<\/Type><\/Declaration>",
            "key.column" : 9,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAnnotation.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>serviceProtocol<\/decl.name>: <decl.var.type><ref.class usr=\"c:objc(cs)Protocol\">Protocol<\/ref.class><\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 29,
            "key.line" : 42,
            "key.name" : "serviceProtocol",
            "key.namelength" : 15,
            "key.nameoffset" : 1043,
            "key.offset" : 1039,
            "key.parsed_declaration" : "let serviceProtocol: Protocol",
            "key.parsed_scope.end" : 42,
            "key.parsed_scope.start" : 42,
            "key.typename" : "Protocol",
            "key.typeusr" : "$sSo8ProtocolCD",
            "key.usr" : "s:11FWFramework18FWModuleAnnotationV15serviceProtocolSo0E0Cvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>var module: <Type usr=\"s:11FWFramework18FWModuleAnnotationV1Txmfp\">T<\/Type>?<\/Declaration>",
            "key.column" : 9,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAnnotation.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>module<\/decl.name>: <decl.var.type><ref.generic_type_param usr=\"s:11FWFramework18FWModuleAnnotationV1Txmfp\">T<\/ref.generic_type_param>?<\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 14,
            "key.line" : 43,
            "key.name" : "module",
            "key.namelength" : 6,
            "key.nameoffset" : 1077,
            "key.offset" : 1073,
            "key.parsed_declaration" : "var module: T?",
            "key.parsed_scope.end" : 43,
            "key.parsed_scope.start" : 43,
            "key.setter_accessibility" : "source.lang.swift.accessibility.internal",
            "key.typename" : "T?",
            "key.typeusr" : "$sxSgD",
            "key.usr" : "s:11FWFramework18FWModuleAnnotationV6modulexSgvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public init(_ serviceProtocol: <Type usr=\"c:objc(cs)Protocol\">Protocol<\/Type>)<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 1097
              }
            ],
            "key.bodylength" : 52,
            "key.bodyoffset" : 1139,
            "key.column" : 12,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAnnotation.swift",
            "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>init<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>serviceProtocol<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"c:objc(cs)Protocol\">Protocol<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.constructor>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 88,
            "key.line" : 45,
            "key.name" : "init(_:)",
            "key.namelength" : 33,
            "key.nameoffset" : 1104,
            "key.offset" : 1104,
            "key.parsed_declaration" : "public init(_ serviceProtocol: Protocol)",
            "key.parsed_scope.end" : 47,
            "key.parsed_scope.start" : 45,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework18FWModuleAnnotationV_6moduleACyxGSo8ProtocolC_So0bE0_pXptcfc\">init(_:module:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "<T> (FWModuleAnnotation<T>.Type) -> (Protocol) -> FWModuleAnnotation<T>",
            "key.typeusr" : "$sy11FWFramework18FWModuleAnnotationVyxGSo8ProtocolCcD",
            "key.usr" : "s:11FWFramework18FWModuleAnnotationVyACyxGSo8ProtocolCcfc"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public init(_ serviceProtocol: <Type usr=\"c:objc(cs)Protocol\">Protocol<\/Type>, module: <Type usr=\"c:objc(pl)FWModuleProtocol\">FWModuleProtocol<\/Type>.Type)<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 1202
              }
            ],
            "key.bodylength" : 124,
            "key.bodyoffset" : 1275,
            "key.column" : 12,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAnnotation.swift",
            "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>init<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>serviceProtocol<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"c:objc(cs)Protocol\">Protocol<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>module<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.protocol usr=\"c:objc(pl)FWModuleProtocol\">FWModuleProtocol<\/ref.protocol>.Type<\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.constructor>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 191,
            "key.line" : 49,
            "key.name" : "init(_:module:)",
            "key.namelength" : 64,
            "key.nameoffset" : 1209,
            "key.offset" : 1209,
            "key.parsed_declaration" : "public init(_ serviceProtocol: Protocol, module: FWModuleProtocol.Type)",
            "key.parsed_scope.end" : 52,
            "key.parsed_scope.start" : 49,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework18FWModuleAnnotationVyACyxGSo8ProtocolCcfc\">init(_:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "<T> (FWModuleAnnotation<T>.Type) -> (Protocol, FWModuleProtocol.Type) -> FWModuleAnnotation<T>",
            "key.typeusr" : "$s_6module11FWFramework18FWModuleAnnotationVyxGSo8ProtocolC_So0cE0_pXptcD",
            "key.usr" : "s:11FWFramework18FWModuleAnnotationV_6moduleACyxGSo8ProtocolC_So0bE0_pXptcfc"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var wrappedValue: <Type usr=\"s:11FWFramework18FWModuleAnnotationV1Txmfp\">T<\/Type> { get set }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 1410
              }
            ],
            "key.bodylength" : 251,
            "key.bodyoffset" : 1438,
            "key.column" : 16,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAnnotation.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>wrappedValue<\/decl.name>: <decl.var.type><ref.generic_type_param usr=\"s:11FWFramework18FWModuleAnnotationV1Txmfp\">T<\/ref.generic_type_param><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> <syntaxtype.keyword>set<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 273,
            "key.line" : 54,
            "key.name" : "wrappedValue",
            "key.namelength" : 12,
            "key.nameoffset" : 1421,
            "key.offset" : 1417,
            "key.parsed_declaration" : "public var wrappedValue: T",
            "key.parsed_scope.end" : 65,
            "key.parsed_scope.start" : 54,
            "key.setter_accessibility" : "source.lang.swift.accessibility.public",
            "key.typename" : "T",
            "key.typeusr" : "$sxD",
            "key.usr" : "s:11FWFramework18FWModuleAnnotationV12wrappedValuexvp"
          }
        ],
        "key.typename" : "FWModuleAnnotation<T>.Type",
        "key.typeusr" : "$s11FWFramework18FWModuleAnnotationVyxGmD",
        "key.usr" : "s:11FWFramework18FWModuleAnnotationV"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>@propertyWrapper public struct FWPluginAnnotation&lt;T&gt;<\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 1858
          },
          {
            "key.attribute" : "source.decl.attribute.propertyWrapper",
            "key.length" : 16,
            "key.offset" : 1841
          }
        ],
        "key.bodylength" : 633,
        "key.bodyoffset" : 1895,
        "key.column" : 15,
        "key.decl_lang" : "source.lang.swift",
        "key.doc.column" : 15,
        "key.doc.comment" : "插件属性包装器注解\n使用示例：\n@FWPluginAnnotation(TestPluginProtocol.self)\nstatic var testPlugin: TestPluginProtocol",
        "key.doc.declaration" : "@propertyWrapper public struct FWPluginAnnotation<T>",
        "key.doc.file" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAnnotation.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAnnotation.swift\" line=\"73\" column=\"15\"><Name>FWPluginAnnotation<\/Name><USR>s:11FWFramework18FWPluginAnnotationV<\/USR><Declaration>@propertyWrapper public struct FWPluginAnnotation&lt;T&gt;<\/Declaration><CommentParts><Abstract><Para>插件属性包装器注解 使用示例： @FWPluginAnnotation(TestPluginProtocol.self) static var testPlugin: TestPluginProtocol<\/Para><\/Abstract><\/CommentParts><\/Class>",
        "key.doc.line" : 73,
        "key.doc.name" : "FWPluginAnnotation",
        "key.doc.type" : "Class",
        "key.doclength" : 147,
        "key.docoffset" : 1694,
        "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAnnotation.swift",
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@propertyWrapper<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>FWPluginAnnotation<\/decl.name>&lt;<decl.generic_type_param usr=\"s:11FWFramework18FWPluginAnnotationV1Txmfp\"><decl.generic_type_param.name>T<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;<\/decl.struct>",
        "key.kind" : "source.lang.swift.decl.struct",
        "key.length" : 664,
        "key.line" : 73,
        "key.name" : "FWPluginAnnotation",
        "key.namelength" : 18,
        "key.nameoffset" : 1872,
        "key.offset" : 1865,
        "key.parsed_declaration" : "public struct FWPluginAnnotation<T>",
        "key.parsed_scope.end" : 98,
        "key.parsed_scope.start" : 73,
        "key.substructure" : [
          {
            "key.annotated_decl" : "<Declaration>T<\/Declaration>",
            "key.column" : 34,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAnnotation.swift",
            "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>T<\/decl.generic_type_param.name><\/decl.generic_type_param>",
            "key.kind" : "source.lang.swift.decl.generic_type_param",
            "key.length" : 1,
            "key.line" : 73,
            "key.name" : "T",
            "key.namelength" : 1,
            "key.nameoffset" : 1891,
            "key.offset" : 1891,
            "key.parsed_declaration" : "public struct FWPluginAnnotation<T",
            "key.parsed_scope.end" : 73,
            "key.parsed_scope.start" : 73,
            "key.typename" : "T.Type",
            "key.typeusr" : "$sxmD",
            "key.usr" : "s:11FWFramework18FWPluginAnnotationV1Txmfp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>let pluginProtocol: <Type usr=\"c:objc(cs)Protocol\">Protocol<\/Type><\/Declaration>",
            "key.column" : 9,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAnnotation.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>pluginProtocol<\/decl.name>: <decl.var.type><ref.class usr=\"c:objc(cs)Protocol\">Protocol<\/ref.class><\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 28,
            "key.line" : 74,
            "key.name" : "pluginProtocol",
            "key.namelength" : 14,
            "key.nameoffset" : 1904,
            "key.offset" : 1900,
            "key.parsed_declaration" : "let pluginProtocol: Protocol",
            "key.parsed_scope.end" : 74,
            "key.parsed_scope.start" : 74,
            "key.typename" : "Protocol",
            "key.typeusr" : "$sSo8ProtocolCD",
            "key.usr" : "s:11FWFramework18FWPluginAnnotationV14pluginProtocolSo0E0Cvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>var plugin: <Type usr=\"s:11FWFramework18FWPluginAnnotationV1Txmfp\">T<\/Type>?<\/Declaration>",
            "key.column" : 9,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAnnotation.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>plugin<\/decl.name>: <decl.var.type><ref.generic_type_param usr=\"s:11FWFramework18FWPluginAnnotationV1Txmfp\">T<\/ref.generic_type_param>?<\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 14,
            "key.line" : 75,
            "key.name" : "plugin",
            "key.namelength" : 6,
            "key.nameoffset" : 1937,
            "key.offset" : 1933,
            "key.parsed_declaration" : "var plugin: T?",
            "key.parsed_scope.end" : 75,
            "key.parsed_scope.start" : 75,
            "key.setter_accessibility" : "source.lang.swift.accessibility.internal",
            "key.typename" : "T?",
            "key.typeusr" : "$sxSgD",
            "key.usr" : "s:11FWFramework18FWPluginAnnotationV6pluginxSgvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public init(_ pluginProtocol: <Type usr=\"c:objc(cs)Protocol\">Protocol<\/Type>)<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 1957
              }
            ],
            "key.bodylength" : 50,
            "key.bodyoffset" : 1998,
            "key.column" : 12,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAnnotation.swift",
            "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>init<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>pluginProtocol<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"c:objc(cs)Protocol\">Protocol<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.constructor>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 85,
            "key.line" : 77,
            "key.name" : "init(_:)",
            "key.namelength" : 32,
            "key.nameoffset" : 1964,
            "key.offset" : 1964,
            "key.parsed_declaration" : "public init(_ pluginProtocol: Protocol)",
            "key.parsed_scope.end" : 79,
            "key.parsed_scope.start" : 77,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework18FWPluginAnnotationV_6objectACyxGSo8ProtocolC_yptcfc\">init(_:object:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "<T> (FWPluginAnnotation<T>.Type) -> (Protocol) -> FWPluginAnnotation<T>",
            "key.typeusr" : "$sy11FWFramework18FWPluginAnnotationVyxGSo8ProtocolCcD",
            "key.usr" : "s:11FWFramework18FWPluginAnnotationVyACyxGSo8ProtocolCcfc"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public init(_ pluginProtocol: <Type usr=\"c:objc(cs)Protocol\">Protocol<\/Type>, object: Any)<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 2059
              }
            ],
            "key.bodylength" : 119,
            "key.bodyoffset" : 2113,
            "key.column" : 12,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAnnotation.swift",
            "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>init<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>pluginProtocol<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"c:objc(cs)Protocol\">Protocol<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>object<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><syntaxtype.keyword>Any<\/syntaxtype.keyword><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.constructor>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 167,
            "key.line" : 81,
            "key.name" : "init(_:object:)",
            "key.namelength" : 45,
            "key.nameoffset" : 2066,
            "key.offset" : 2066,
            "key.parsed_declaration" : "public init(_ pluginProtocol: Protocol, object: Any)",
            "key.parsed_scope.end" : 84,
            "key.parsed_scope.start" : 81,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework18FWPluginAnnotationVyACyxGSo8ProtocolCcfc\">init(_:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "<T> (FWPluginAnnotation<T>.Type) -> (Protocol, Any) -> FWPluginAnnotation<T>",
            "key.typeusr" : "$s_6object11FWFramework18FWPluginAnnotationVyxGSo8ProtocolC_yptcD",
            "key.usr" : "s:11FWFramework18FWPluginAnnotationV_6objectACyxGSo8ProtocolC_yptcfc"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var wrappedValue: <Type usr=\"s:11FWFramework18FWPluginAnnotationV1Txmfp\">T<\/Type> { get set }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 2243
              }
            ],
            "key.bodylength" : 255,
            "key.bodyoffset" : 2271,
            "key.column" : 16,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAnnotation.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>wrappedValue<\/decl.name>: <decl.var.type><ref.generic_type_param usr=\"s:11FWFramework18FWPluginAnnotationV1Txmfp\">T<\/ref.generic_type_param><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> <syntaxtype.keyword>set<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 277,
            "key.line" : 86,
            "key.name" : "wrappedValue",
            "key.namelength" : 12,
            "key.nameoffset" : 2254,
            "key.offset" : 2250,
            "key.parsed_declaration" : "public var wrappedValue: T",
            "key.parsed_scope.end" : 97,
            "key.parsed_scope.start" : 86,
            "key.setter_accessibility" : "source.lang.swift.accessibility.public",
            "key.typename" : "T",
            "key.typeusr" : "$sxD",
            "key.usr" : "s:11FWFramework18FWPluginAnnotationV12wrappedValuexvp"
          }
        ],
        "key.typename" : "FWPluginAnnotation<T>.Type",
        "key.typeusr" : "$s11FWFramework18FWPluginAnnotationVyxGmD",
        "key.usr" : "s:11FWFramework18FWPluginAnnotationV"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>@propertyWrapper public struct FWRouterAnnotation&lt;T&gt;<\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 2677
          },
          {
            "key.attribute" : "source.decl.attribute.propertyWrapper",
            "key.length" : 16,
            "key.offset" : 2660
          }
        ],
        "key.bodylength" : 620,
        "key.bodyoffset" : 2714,
        "key.column" : 15,
        "key.decl_lang" : "source.lang.swift",
        "key.doc.column" : 15,
        "key.doc.comment" : "路由属性包装器注解\n使用示例：\n@FWRouterAnnotation(\"app:\/\/plugin\/:id\")\nstatic var pluginUrl: String",
        "key.doc.declaration" : "@propertyWrapper public struct FWRouterAnnotation<T>",
        "key.doc.file" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAnnotation.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAnnotation.swift\" line=\"105\" column=\"15\"><Name>FWRouterAnnotation<\/Name><USR>s:11FWFramework18FWRouterAnnotationV<\/USR><Declaration>@propertyWrapper public struct FWRouterAnnotation&lt;T&gt;<\/Declaration><CommentParts><Abstract><Para>路由属性包装器注解 使用示例： @FWRouterAnnotation(“app:\/\/plugin\/:id”) static var pluginUrl: String<\/Para><\/Abstract><\/CommentParts><\/Class>",
        "key.doc.line" : 105,
        "key.doc.name" : "FWRouterAnnotation",
        "key.doc.type" : "Class",
        "key.doclength" : 129,
        "key.docoffset" : 2531,
        "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAnnotation.swift",
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@propertyWrapper<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>FWRouterAnnotation<\/decl.name>&lt;<decl.generic_type_param usr=\"s:11FWFramework18FWRouterAnnotationV1Txmfp\"><decl.generic_type_param.name>T<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;<\/decl.struct>",
        "key.kind" : "source.lang.swift.decl.struct",
        "key.length" : 651,
        "key.line" : 105,
        "key.name" : "FWRouterAnnotation",
        "key.namelength" : 18,
        "key.nameoffset" : 2691,
        "key.offset" : 2684,
        "key.parsed_declaration" : "public struct FWRouterAnnotation<T>",
        "key.parsed_scope.end" : 130,
        "key.parsed_scope.start" : 105,
        "key.substructure" : [
          {
            "key.annotated_decl" : "<Declaration>T<\/Declaration>",
            "key.column" : 34,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAnnotation.swift",
            "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>T<\/decl.generic_type_param.name><\/decl.generic_type_param>",
            "key.kind" : "source.lang.swift.decl.generic_type_param",
            "key.length" : 1,
            "key.line" : 105,
            "key.name" : "T",
            "key.namelength" : 1,
            "key.nameoffset" : 2710,
            "key.offset" : 2710,
            "key.parsed_declaration" : "public struct FWRouterAnnotation<T",
            "key.parsed_scope.end" : 105,
            "key.parsed_scope.start" : 105,
            "key.typename" : "T.Type",
            "key.typeusr" : "$sxmD",
            "key.usr" : "s:11FWFramework18FWRouterAnnotationV1Txmfp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>var url: Any<\/Declaration>",
            "key.column" : 9,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAnnotation.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>url<\/decl.name>: <decl.var.type><syntaxtype.keyword>Any<\/syntaxtype.keyword><\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 12,
            "key.line" : 106,
            "key.name" : "url",
            "key.namelength" : 3,
            "key.nameoffset" : 2723,
            "key.offset" : 2719,
            "key.parsed_declaration" : "var url: Any",
            "key.parsed_scope.end" : 106,
            "key.parsed_scope.start" : 106,
            "key.setter_accessibility" : "source.lang.swift.accessibility.internal",
            "key.typename" : "Any",
            "key.typeusr" : "$sypD",
            "key.usr" : "s:11FWFramework18FWRouterAnnotationV3urlypvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public init(_ url: <Type usr=\"s:SS\">String<\/Type>)<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 2741
              }
            ],
            "key.bodylength" : 28,
            "key.bodyoffset" : 2769,
            "key.column" : 12,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAnnotation.swift",
            "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>init<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>url<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.constructor>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 50,
            "key.line" : 108,
            "key.name" : "init(_:)",
            "key.namelength" : 19,
            "key.nameoffset" : 2748,
            "key.offset" : 2748,
            "key.parsed_declaration" : "public init(_ url: String)",
            "key.parsed_scope.end" : 110,
            "key.parsed_scope.start" : 108,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework18FWRouterAnnotationV_10parametersACyxGSS_ypSgtcfc\">init(_:parameters:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework18FWRouterAnnotationV_6routerACyxGSS_So0B8Protocol_pXptcfc\">init(_:router:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework18FWRouterAnnotationV_7handlerACyxGSS_ypSgSo0B7ContextCctcfc\">init(_:handler:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "<T> (FWRouterAnnotation<T>.Type) -> (String) -> FWRouterAnnotation<T>",
            "key.typeusr" : "$sy11FWFramework18FWRouterAnnotationVyxGSScD",
            "key.usr" : "s:11FWFramework18FWRouterAnnotationVyACyxGSScfc"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public init(_ url: <Type usr=\"s:SS\">String<\/Type>, parameters: Any?)<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 2808
              }
            ],
            "key.bodylength" : 74,
            "key.bodyoffset" : 2854,
            "key.column" : 12,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAnnotation.swift",
            "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>init<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>url<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>parameters<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><syntaxtype.keyword>Any<\/syntaxtype.keyword>?<\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.constructor>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 114,
            "key.line" : 112,
            "key.name" : "init(_:parameters:)",
            "key.namelength" : 37,
            "key.nameoffset" : 2815,
            "key.offset" : 2815,
            "key.parsed_declaration" : "public init(_ url: String, parameters: Any?)",
            "key.parsed_scope.end" : 114,
            "key.parsed_scope.start" : 112,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework18FWRouterAnnotationVyACyxGSScfc\">init(_:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework18FWRouterAnnotationV_6routerACyxGSS_So0B8Protocol_pXptcfc\">init(_:router:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework18FWRouterAnnotationV_7handlerACyxGSS_ypSgSo0B7ContextCctcfc\">init(_:handler:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "<T> (FWRouterAnnotation<T>.Type) -> (String, Any?) -> FWRouterAnnotation<T>",
            "key.typeusr" : "$s_10parameters11FWFramework18FWRouterAnnotationVyxGSS_ypSgtcD",
            "key.usr" : "s:11FWFramework18FWRouterAnnotationV_10parametersACyxGSS_ypSgtcfc"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public init(_ url: <Type usr=\"s:SS\">String<\/Type>, router: <Type usr=\"c:objc(pl)FWRouterProtocol\">FWRouterProtocol<\/Type>.Type)<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 2939
              }
            ],
            "key.bodylength" : 67,
            "key.bodyoffset" : 2998,
            "key.column" : 12,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAnnotation.swift",
            "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>init<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>url<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>router<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.protocol usr=\"c:objc(pl)FWRouterProtocol\">FWRouterProtocol<\/ref.protocol>.Type<\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.constructor>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 120,
            "key.line" : 116,
            "key.name" : "init(_:router:)",
            "key.namelength" : 50,
            "key.nameoffset" : 2946,
            "key.offset" : 2946,
            "key.parsed_declaration" : "public init(_ url: String, router: FWRouterProtocol.Type)",
            "key.parsed_scope.end" : 119,
            "key.parsed_scope.start" : 116,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework18FWRouterAnnotationVyACyxGSScfc\">init(_:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework18FWRouterAnnotationV_10parametersACyxGSS_ypSgtcfc\">init(_:parameters:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework18FWRouterAnnotationV_7handlerACyxGSS_ypSgSo0B7ContextCctcfc\">init(_:handler:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "<T> (FWRouterAnnotation<T>.Type) -> (String, FWRouterProtocol.Type) -> FWRouterAnnotation<T>",
            "key.typeusr" : "$s_6router11FWFramework18FWRouterAnnotationVyxGSS_So0C8Protocol_pXptcD",
            "key.usr" : "s:11FWFramework18FWRouterAnnotationV_6routerACyxGSS_So0B8Protocol_pXptcfc"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public init(_ url: <Type usr=\"s:SS\">String<\/Type>, handler: @escaping <Type usr=\"c:FWRouter.h@T@FWRouterHandler\">FWRouterHandler<\/Type>)<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 3076
              }
            ],
            "key.bodylength" : 84,
            "key.bodyoffset" : 3140,
            "key.column" : 12,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAnnotation.swift",
            "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>init<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>url<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>handler<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <ref.typealias usr=\"c:FWRouter.h@T@FWRouterHandler\">FWRouterHandler<\/ref.typealias><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.constructor>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 142,
            "key.line" : 121,
            "key.name" : "init(_:handler:)",
            "key.namelength" : 55,
            "key.nameoffset" : 3083,
            "key.offset" : 3083,
            "key.parsed_declaration" : "public init(_ url: String, handler: @escaping FWRouterHandler)",
            "key.parsed_scope.end" : 124,
            "key.parsed_scope.start" : 121,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework18FWRouterAnnotationVyACyxGSScfc\">init(_:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework18FWRouterAnnotationV_10parametersACyxGSS_ypSgtcfc\">init(_:parameters:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework18FWRouterAnnotationV_6routerACyxGSS_So0B8Protocol_pXptcfc\">init(_:router:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "<T> (FWRouterAnnotation<T>.Type) -> (String, @escaping (FWRouterContext) -> Any?) -> FWRouterAnnotation<T>",
            "key.typeusr" : "$s_7handler11FWFramework18FWRouterAnnotationVyxGSS_ypSgSo0C7ContextCctcD",
            "key.usr" : "s:11FWFramework18FWRouterAnnotationV_7handlerACyxGSS_ypSgSo0B7ContextCctcfc"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var wrappedValue: <Type usr=\"s:11FWFramework18FWRouterAnnotationV1Txmfp\">T<\/Type> { get set }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 3235
              }
            ],
            "key.bodylength" : 69,
            "key.bodyoffset" : 3263,
            "key.column" : 16,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAnnotation.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>wrappedValue<\/decl.name>: <decl.var.type><ref.generic_type_param usr=\"s:11FWFramework18FWRouterAnnotationV1Txmfp\">T<\/ref.generic_type_param><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> <syntaxtype.keyword>set<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 91,
            "key.line" : 126,
            "key.name" : "wrappedValue",
            "key.namelength" : 12,
            "key.nameoffset" : 3246,
            "key.offset" : 3242,
            "key.parsed_declaration" : "public var wrappedValue: T",
            "key.parsed_scope.end" : 129,
            "key.parsed_scope.start" : 126,
            "key.setter_accessibility" : "source.lang.swift.accessibility.public",
            "key.typename" : "T",
            "key.typeusr" : "$sxD",
            "key.usr" : "s:11FWFramework18FWRouterAnnotationV12wrappedValuexvp"
          }
        ],
        "key.typename" : "FWRouterAnnotation<T>.Type",
        "key.typeusr" : "$s11FWFramework18FWRouterAnnotationVyxGmD",
        "key.usr" : "s:11FWFramework18FWRouterAnnotationV"
      }
    ]
  }
}, {
  "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAutoLayout.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 20258,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
        "key.length" : 21,
        "key.name" : "MARK: - FWLayoutChain",
        "key.namelength" : 0,
        "key.nameoffset" : 0,
        "key.offset" : 163
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public class FWLayoutChain<\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 397
          }
        ],
        "key.bodylength" : 19012,
        "key.bodyoffset" : 425,
        "key.column" : 14,
        "key.decl_lang" : "source.lang.swift",
        "key.doc.column" : 14,
        "key.doc.comment" : "视图链式布局类。如果约束条件完全相同，会自动更新约束而不是重新添加。\n另外，默认布局方式使用LTR，如果需要RTL布局，可通过fwAutoLayoutRTL统一启用",
        "key.doc.declaration" : "public class FWLayoutChain",
        "key.doc.file" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAutoLayout.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAutoLayout.swift\" line=\"15\" column=\"14\"><Name>FWLayoutChain<\/Name><USR>s:11FWFramework13FWLayoutChainC<\/USR><Declaration>public class FWLayoutChain<\/Declaration><CommentParts><Abstract><Para>视图链式布局类。如果约束条件完全相同，会自动更新约束而不是重新添加。 另外，默认布局方式使用LTR，如果需要RTL布局，可通过fwAutoLayoutRTL统一启用<\/Para><\/Abstract><\/CommentParts><\/Class>",
        "key.doc.line" : 15,
        "key.doc.name" : "FWLayoutChain",
        "key.doc.type" : "Class",
        "key.doclength" : 211,
        "key.docoffset" : 186,
        "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAutoLayout.swift",
        "key.fully_annotated_decl" : "<decl.class><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>class<\/syntaxtype.keyword> <decl.name>FWLayoutChain<\/decl.name><\/decl.class>",
        "key.kind" : "source.lang.swift.decl.class",
        "key.length" : 19034,
        "key.line" : 15,
        "key.name" : "FWLayoutChain",
        "key.namelength" : 13,
        "key.nameoffset" : 410,
        "key.offset" : 404,
        "key.parsed_declaration" : "public class FWLayoutChain",
        "key.parsed_scope.end" : 507,
        "key.parsed_scope.start" : 15,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>private weak var view: <Type usr=\"c:objc(cs)UIView\">UIView<\/Type>?<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.weak",
                "key.length" : 4,
                "key.offset" : 469
              },
              {
                "key.attribute" : "source.decl.attribute.private",
                "key.length" : 7,
                "key.offset" : 461
              }
            ],
            "key.column" : 22,
            "key.decl_lang" : "source.lang.swift",
            "key.doc.column" : 22,
            "key.doc.comment" : "weak引用内部视图",
            "key.doc.declaration" : "private weak var view: UIView?",
            "key.doc.file" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAutoLayout.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAutoLayout.swift\" line=\"17\" column=\"22\"><Name>view<\/Name><USR>s:11FWFramework13FWLayoutChainC4view33_EF2BAB0CBB71D9D213B64E16DD6CFF51LLSo6UIViewCSgvp<\/USR><Declaration>private weak var view: UIView?<\/Declaration><CommentParts><Abstract><Para>weak引用内部视图<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 17,
            "key.doc.name" : "view",
            "key.doc.type" : "Other",
            "key.doclength" : 27,
            "key.docoffset" : 430,
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAutoLayout.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>weak<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>view<\/decl.name>: <decl.var.type><ref.class usr=\"c:objc(cs)UIView\">UIView<\/ref.class>?<\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 17,
            "key.line" : 17,
            "key.name" : "view",
            "key.namelength" : 4,
            "key.nameoffset" : 478,
            "key.offset" : 474,
            "key.parsed_declaration" : "private weak var view: UIView?",
            "key.parsed_scope.end" : 17,
            "key.parsed_scope.start" : 17,
            "key.setter_accessibility" : "source.lang.swift.accessibility.private",
            "key.typename" : "UIView?",
            "key.typeusr" : "$sSo6UIViewCSgD",
            "key.usr" : "s:11FWFramework13FWLayoutChainC4view33_EF2BAB0CBB71D9D213B64E16DD6CFF51LLSo6UIViewCSgvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public required init(view: <Type usr=\"c:objc(cs)UIView\">UIView<\/Type>?)<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.required",
                "key.length" : 8,
                "key.offset" : 525
              },
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 518
              }
            ],
            "key.bodylength" : 30,
            "key.bodyoffset" : 555,
            "key.column" : 21,
            "key.decl_lang" : "source.lang.swift",
            "key.doc.column" : 21,
            "key.doc.comment" : "构造方法",
            "key.doc.declaration" : "public required init(view: UIView?)",
            "key.doc.file" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAutoLayout.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAutoLayout.swift\" line=\"20\" column=\"21\"><Name>init(view:)<\/Name><USR>s:11FWFramework13FWLayoutChainC4viewACSo6UIViewCSg_tcfc<\/USR><Declaration>public required init(view: UIView?)<\/Declaration><CommentParts><Abstract><Para>构造方法<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 20,
            "key.doc.name" : "init(view:)",
            "key.doc.type" : "Function",
            "key.doclength" : 17,
            "key.docoffset" : 497,
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAutoLayout.swift",
            "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>required<\/syntaxtype.keyword> <syntaxtype.keyword>init<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>view<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:objc(cs)UIView\">UIView<\/ref.class>?<\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.constructor>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 52,
            "key.line" : 20,
            "key.name" : "init(view:)",
            "key.namelength" : 19,
            "key.nameoffset" : 534,
            "key.offset" : 534,
            "key.parsed_declaration" : "public required init(view: UIView?)",
            "key.parsed_scope.end" : 22,
            "key.parsed_scope.start" : 20,
            "key.substructure" : [

            ],
            "key.typename" : "(FWLayoutChain.Type) -> (UIView?) -> FWLayoutChain",
            "key.typeusr" : "$s4view11FWFramework13FWLayoutChainCSo6UIViewCSg_tcD",
            "key.usr" : "s:11FWFramework13FWLayoutChainC4viewACSo6UIViewCSg_tcfc"
          },
          {
            "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
            "key.length" : 15,
            "key.name" : "MARK: - Install",
            "key.namelength" : 0,
            "key.nameoffset" : 0,
            "key.offset" : 595
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>@discardableResult public func remake() -&gt; <Type usr=\"s:11FWFramework13FWLayoutChainC\">FWLayoutChain<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 639
              },
              {
                "key.attribute" : "source.decl.attribute.discardableResult",
                "key.length" : 18,
                "key.offset" : 616
              }
            ],
            "key.bodylength" : 64,
            "key.bodyoffset" : 678,
            "key.column" : 17,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAutoLayout.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@discardableResult<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>remake<\/decl.name>() -&gt; <decl.function.returntype><ref.class usr=\"s:11FWFramework13FWLayoutChainC\">FWLayoutChain<\/ref.class><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 97,
            "key.line" : 27,
            "key.name" : "remake()",
            "key.namelength" : 8,
            "key.nameoffset" : 651,
            "key.offset" : 646,
            "key.parsed_declaration" : "public func remake() -> FWLayoutChain",
            "key.parsed_scope.end" : 30,
            "key.parsed_scope.start" : 27,
            "key.substructure" : [

            ],
            "key.typename" : "(FWLayoutChain) -> () -> FWLayoutChain",
            "key.typeusr" : "$s11FWFramework13FWLayoutChainCycD",
            "key.usr" : "s:11FWFramework13FWLayoutChainC6remakeACyF"
          },
          {
            "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
            "key.length" : 19,
            "key.name" : "MARK: - Compression",
            "key.namelength" : 0,
            "key.nameoffset" : 0,
            "key.offset" : 752
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>@discardableResult public func compressionHorizontal(_ priority: <Type usr=\"c:@T@UILayoutPriority\">UILayoutPriority<\/Type>) -&gt; <Type usr=\"s:11FWFramework13FWLayoutChainC\">FWLayoutChain<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 800
              },
              {
                "key.attribute" : "source.decl.attribute.discardableResult",
                "key.length" : 18,
                "key.offset" : 777
              }
            ],
            "key.bodylength" : 74,
            "key.bodyoffset" : 882,
            "key.column" : 17,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAutoLayout.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@discardableResult<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>compressionHorizontal<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>priority<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"c:@T@UILayoutPriority\">UILayoutPriority<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:11FWFramework13FWLayoutChainC\">FWLayoutChain<\/ref.class><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 150,
            "key.line" : 35,
            "key.name" : "compressionHorizontal(_:)",
            "key.namelength" : 51,
            "key.nameoffset" : 812,
            "key.offset" : 807,
            "key.parsed_declaration" : "public func compressionHorizontal(_ priority: UILayoutPriority) -> FWLayoutChain",
            "key.parsed_scope.end" : 38,
            "key.parsed_scope.start" : 35,
            "key.substructure" : [

            ],
            "key.typename" : "(FWLayoutChain) -> (UILayoutPriority) -> FWLayoutChain",
            "key.typeusr" : "$sy11FWFramework13FWLayoutChainCSo16UILayoutPriorityacD",
            "key.usr" : "s:11FWFramework13FWLayoutChainC21compressionHorizontalyACSo16UILayoutPriorityaF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>@discardableResult public func compressionVertical(_ priority: <Type usr=\"c:@T@UILayoutPriority\">UILayoutPriority<\/Type>) -&gt; <Type usr=\"s:11FWFramework13FWLayoutChainC\">FWLayoutChain<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 986
              },
              {
                "key.attribute" : "source.decl.attribute.discardableResult",
                "key.length" : 18,
                "key.offset" : 963
              }
            ],
            "key.bodylength" : 72,
            "key.bodyoffset" : 1066,
            "key.column" : 17,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAutoLayout.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@discardableResult<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>compressionVertical<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>priority<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"c:@T@UILayoutPriority\">UILayoutPriority<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:11FWFramework13FWLayoutChainC\">FWLayoutChain<\/ref.class><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 146,
            "key.line" : 41,
            "key.name" : "compressionVertical(_:)",
            "key.namelength" : 49,
            "key.nameoffset" : 998,
            "key.offset" : 993,
            "key.parsed_declaration" : "public func compressionVertical(_ priority: UILayoutPriority) -> FWLayoutChain",
            "key.parsed_scope.end" : 44,
            "key.parsed_scope.start" : 41,
            "key.substructure" : [

            ],
            "key.typename" : "(FWLayoutChain) -> (UILayoutPriority) -> FWLayoutChain",
            "key.typeusr" : "$sy11FWFramework13FWLayoutChainCSo16UILayoutPriorityacD",
            "key.usr" : "s:11FWFramework13FWLayoutChainC19compressionVerticalyACSo16UILayoutPriorityaF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>@discardableResult public func huggingHorizontal(_ priority: <Type usr=\"c:@T@UILayoutPriority\">UILayoutPriority<\/Type>) -&gt; <Type usr=\"s:11FWFramework13FWLayoutChainC\">FWLayoutChain<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 1172
              },
              {
                "key.attribute" : "source.decl.attribute.discardableResult",
                "key.length" : 18,
                "key.offset" : 1149
              }
            ],
            "key.bodylength" : 70,
            "key.bodyoffset" : 1250,
            "key.column" : 17,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAutoLayout.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@discardableResult<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>huggingHorizontal<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>priority<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"c:@T@UILayoutPriority\">UILayoutPriority<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:11FWFramework13FWLayoutChainC\">FWLayoutChain<\/ref.class><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 142,
            "key.line" : 47,
            "key.name" : "huggingHorizontal(_:)",
            "key.namelength" : 47,
            "key.nameoffset" : 1184,
            "key.offset" : 1179,
            "key.parsed_declaration" : "public func huggingHorizontal(_ priority: UILayoutPriority) -> FWLayoutChain",
            "key.parsed_scope.end" : 50,
            "key.parsed_scope.start" : 47,
            "key.substructure" : [

            ],
            "key.typename" : "(FWLayoutChain) -> (UILayoutPriority) -> FWLayoutChain",
            "key.typeusr" : "$sy11FWFramework13FWLayoutChainCSo16UILayoutPriorityacD",
            "key.usr" : "s:11FWFramework13FWLayoutChainC17huggingHorizontalyACSo16UILayoutPriorityaF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>@discardableResult public func huggingVertical(_ priority: <Type usr=\"c:@T@UILayoutPriority\">UILayoutPriority<\/Type>) -&gt; <Type usr=\"s:11FWFramework13FWLayoutChainC\">FWLayoutChain<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 1350
              },
              {
                "key.attribute" : "source.decl.attribute.discardableResult",
                "key.length" : 18,
                "key.offset" : 1327
              }
            ],
            "key.bodylength" : 68,
            "key.bodyoffset" : 1426,
            "key.column" : 17,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAutoLayout.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@discardableResult<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>huggingVertical<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>priority<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"c:@T@UILayoutPriority\">UILayoutPriority<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:11FWFramework13FWLayoutChainC\">FWLayoutChain<\/ref.class><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 138,
            "key.line" : 53,
            "key.name" : "huggingVertical(_:)",
            "key.namelength" : 45,
            "key.nameoffset" : 1362,
            "key.offset" : 1357,
            "key.parsed_declaration" : "public func huggingVertical(_ priority: UILayoutPriority) -> FWLayoutChain",
            "key.parsed_scope.end" : 56,
            "key.parsed_scope.start" : 53,
            "key.substructure" : [

            ],
            "key.typename" : "(FWLayoutChain) -> (UILayoutPriority) -> FWLayoutChain",
            "key.typeusr" : "$sy11FWFramework13FWLayoutChainCSo16UILayoutPriorityacD",
            "key.usr" : "s:11FWFramework13FWLayoutChainC15huggingVerticalyACSo16UILayoutPriorityaF"
          },
          {
            "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
            "key.length" : 16,
            "key.name" : "MARK: - Collapse",
            "key.namelength" : 0,
            "key.nameoffset" : 0,
            "key.offset" : 1508
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>@discardableResult public func collapsed(_ collapsed: <Type usr=\"s:Sb\">Bool<\/Type>) -&gt; <Type usr=\"s:11FWFramework13FWLayoutChainC\">FWLayoutChain<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 1553
              },
              {
                "key.attribute" : "source.decl.attribute.discardableResult",
                "key.length" : 18,
                "key.offset" : 1530
              }
            ],
            "key.bodylength" : 63,
            "key.bodyoffset" : 1612,
            "key.column" : 17,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAutoLayout.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@discardableResult<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>collapsed<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>collapsed<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:11FWFramework13FWLayoutChainC\">FWLayoutChain<\/ref.class><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 116,
            "key.line" : 61,
            "key.name" : "collapsed(_:)",
            "key.namelength" : 28,
            "key.nameoffset" : 1565,
            "key.offset" : 1560,
            "key.parsed_declaration" : "public func collapsed(_ collapsed: Bool) -> FWLayoutChain",
            "key.parsed_scope.end" : 64,
            "key.parsed_scope.start" : 61,
            "key.substructure" : [

            ],
            "key.typename" : "(FWLayoutChain) -> (Bool) -> FWLayoutChain",
            "key.typeusr" : "$sy11FWFramework13FWLayoutChainCSbcD",
            "key.usr" : "s:11FWFramework13FWLayoutChainC9collapsedyACSbF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>@discardableResult public func autoCollapse(_ autoCollapse: <Type usr=\"s:Sb\">Bool<\/Type>) -&gt; <Type usr=\"s:11FWFramework13FWLayoutChainC\">FWLayoutChain<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 1705
              },
              {
                "key.attribute" : "source.decl.attribute.discardableResult",
                "key.length" : 18,
                "key.offset" : 1682
              }
            ],
            "key.bodylength" : 69,
            "key.bodyoffset" : 1770,
            "key.column" : 17,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAutoLayout.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@discardableResult<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>autoCollapse<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>autoCollapse<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:11FWFramework13FWLayoutChainC\">FWLayoutChain<\/ref.class><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 128,
            "key.line" : 67,
            "key.name" : "autoCollapse(_:)",
            "key.namelength" : 34,
            "key.nameoffset" : 1717,
            "key.offset" : 1712,
            "key.parsed_declaration" : "public func autoCollapse(_ autoCollapse: Bool) -> FWLayoutChain",
            "key.parsed_scope.end" : 70,
            "key.parsed_scope.start" : 67,
            "key.substructure" : [

            ],
            "key.typename" : "(FWLayoutChain) -> (Bool) -> FWLayoutChain",
            "key.typeusr" : "$sy11FWFramework13FWLayoutChainCSbcD",
            "key.usr" : "s:11FWFramework13FWLayoutChainC12autoCollapseyACSbF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>@discardableResult public func hiddenCollapse(_ hiddenCollapse: <Type usr=\"s:Sb\">Bool<\/Type>) -&gt; <Type usr=\"s:11FWFramework13FWLayoutChainC\">FWLayoutChain<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 1873
              },
              {
                "key.attribute" : "source.decl.attribute.discardableResult",
                "key.length" : 18,
                "key.offset" : 1850
              }
            ],
            "key.bodylength" : 73,
            "key.bodyoffset" : 1942,
            "key.column" : 17,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAutoLayout.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@discardableResult<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>hiddenCollapse<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>hiddenCollapse<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:11FWFramework13FWLayoutChainC\">FWLayoutChain<\/ref.class><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 136,
            "key.line" : 73,
            "key.name" : "hiddenCollapse(_:)",
            "key.namelength" : 38,
            "key.nameoffset" : 1885,
            "key.offset" : 1880,
            "key.parsed_declaration" : "public func hiddenCollapse(_ hiddenCollapse: Bool) -> FWLayoutChain",
            "key.parsed_scope.end" : 76,
            "key.parsed_scope.start" : 73,
            "key.substructure" : [

            ],
            "key.typename" : "(FWLayoutChain) -> (Bool) -> FWLayoutChain",
            "key.typeusr" : "$sy11FWFramework13FWLayoutChainCSbcD",
            "key.usr" : "s:11FWFramework13FWLayoutChainC14hiddenCollapseyACSbF"
          },
          {
            "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
            "key.length" : 12,
            "key.name" : "MARK: - Axis",
            "key.namelength" : 0,
            "key.nameoffset" : 0,
            "key.offset" : 2025
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>@discardableResult public func center() -&gt; <Type usr=\"s:11FWFramework13FWLayoutChainC\">FWLayoutChain<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 2066
              },
              {
                "key.attribute" : "source.decl.attribute.discardableResult",
                "key.length" : 18,
                "key.offset" : 2043
              }
            ],
            "key.bodylength" : 66,
            "key.bodyoffset" : 2105,
            "key.column" : 17,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAutoLayout.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@discardableResult<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>center<\/decl.name>() -&gt; <decl.function.returntype><ref.class usr=\"s:11FWFramework13FWLayoutChainC\">FWLayoutChain<\/ref.class><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 99,
            "key.line" : 81,
            "key.name" : "center()",
            "key.namelength" : 8,
            "key.nameoffset" : 2078,
            "key.offset" : 2073,
            "key.parsed_declaration" : "public func center() -> FWLayoutChain",
            "key.parsed_scope.end" : 84,
            "key.parsed_scope.start" : 81,
            "key.substructure" : [

            ],
            "key.typename" : "(FWLayoutChain) -> () -> FWLayoutChain",
            "key.typeusr" : "$s11FWFramework13FWLayoutChainCycD",
            "key.usr" : "s:11FWFramework13FWLayoutChainC6centerACyF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>@discardableResult public func centerX() -&gt; <Type usr=\"s:11FWFramework13FWLayoutChainC\">FWLayoutChain<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 2201
              },
              {
                "key.attribute" : "source.decl.attribute.discardableResult",
                "key.length" : 18,
                "key.offset" : 2178
              }
            ],
            "key.bodylength" : 74,
            "key.bodyoffset" : 2241,
            "key.column" : 17,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAutoLayout.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@discardableResult<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>centerX<\/decl.name>() -&gt; <decl.function.returntype><ref.class usr=\"s:11FWFramework13FWLayoutChainC\">FWLayoutChain<\/ref.class><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 108,
            "key.line" : 87,
            "key.name" : "centerX()",
            "key.namelength" : 9,
            "key.nameoffset" : 2213,
            "key.offset" : 2208,
            "key.parsed_declaration" : "public func centerX() -> FWLayoutChain",
            "key.parsed_scope.end" : 90,
            "key.parsed_scope.start" : 87,
            "key.substructure" : [

            ],
            "key.typename" : "(FWLayoutChain) -> () -> FWLayoutChain",
            "key.typeusr" : "$s11FWFramework13FWLayoutChainCycD",
            "key.usr" : "s:11FWFramework13FWLayoutChainC7centerXACyF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>@discardableResult public func centerY() -&gt; <Type usr=\"s:11FWFramework13FWLayoutChainC\">FWLayoutChain<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 2345
              },
              {
                "key.attribute" : "source.decl.attribute.discardableResult",
                "key.length" : 18,
                "key.offset" : 2322
              }
            ],
            "key.bodylength" : 74,
            "key.bodyoffset" : 2385,
            "key.column" : 17,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAutoLayout.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@discardableResult<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>centerY<\/decl.name>() -&gt; <decl.function.returntype><ref.class usr=\"s:11FWFramework13FWLayoutChainC\">FWLayoutChain<\/ref.class><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 108,
            "key.line" : 93,
            "key.name" : "centerY()",
            "key.namelength" : 9,
            "key.nameoffset" : 2357,
            "key.offset" : 2352,
            "key.parsed_declaration" : "public func centerY() -> FWLayoutChain",
            "key.parsed_scope.end" : 96,
            "key.parsed_scope.start" : 93,
            "key.substructure" : [

            ],
            "key.typename" : "(FWLayoutChain) -> () -> FWLayoutChain",
            "key.typeusr" : "$s11FWFramework13FWLayoutChainCycD",
            "key.usr" : "s:11FWFramework13FWLayoutChainC7centerYACyF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>@discardableResult public func centerToView(_ view: Any) -&gt; <Type usr=\"s:11FWFramework13FWLayoutChainC\">FWLayoutChain<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 2489
              },
              {
                "key.attribute" : "source.decl.attribute.discardableResult",
                "key.length" : 18,
                "key.offset" : 2466
              }
            ],
            "key.bodylength" : 135,
            "key.bodyoffset" : 2545,
            "key.column" : 17,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAutoLayout.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@discardableResult<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>centerToView<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>view<\/decl.var.parameter.name>: <decl.var.parameter.type><syntaxtype.keyword>Any<\/syntaxtype.keyword><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:11FWFramework13FWLayoutChainC\">FWLayoutChain<\/ref.class><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 185,
            "key.line" : 99,
            "key.name" : "centerToView(_:)",
            "key.namelength" : 25,
            "key.nameoffset" : 2501,
            "key.offset" : 2496,
            "key.parsed_declaration" : "public func centerToView(_ view: Any) -> FWLayoutChain",
            "key.parsed_scope.end" : 103,
            "key.parsed_scope.start" : 99,
            "key.substructure" : [

            ],
            "key.typename" : "(FWLayoutChain) -> (Any) -> FWLayoutChain",
            "key.typeusr" : "$sy11FWFramework13FWLayoutChainCypcD",
            "key.usr" : "s:11FWFramework13FWLayoutChainC12centerToViewyACypF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>@discardableResult public func centerXToView(_ view: Any, withOffset offset: <Type usr=\"s:12CoreGraphics7CGFloatV\">CGFloat<\/Type> = 0) -&gt; <Type usr=\"s:11FWFramework13FWLayoutChainC\">FWLayoutChain<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 2710
              },
              {
                "key.attribute" : "source.decl.attribute.discardableResult",
                "key.length" : 18,
                "key.offset" : 2687
              }
            ],
            "key.bodylength" : 100,
            "key.bodyoffset" : 2799,
            "key.column" : 17,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAutoLayout.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@discardableResult<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>centerXToView<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>view<\/decl.var.parameter.name>: <decl.var.parameter.type><syntaxtype.keyword>Any<\/syntaxtype.keyword><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>withOffset<\/decl.var.parameter.argument_label> <decl.var.parameter.name>offset<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:12CoreGraphics7CGFloatV\">CGFloat<\/ref.struct><\/decl.var.parameter.type> = 0<\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:11FWFramework13FWLayoutChainC\">FWLayoutChain<\/ref.class><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 183,
            "key.line" : 106,
            "key.name" : "centerXToView(_:withOffset:)",
            "key.namelength" : 58,
            "key.nameoffset" : 2722,
            "key.offset" : 2717,
            "key.parsed_declaration" : "public func centerXToView(_ view: Any, withOffset offset: CGFloat = 0) -> FWLayoutChain",
            "key.parsed_scope.end" : 109,
            "key.parsed_scope.start" : 106,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework13FWLayoutChainC13centerXToView_14withMultiplierACyp_12CoreGraphics7CGFloatVtF\">centerXToView(_:withMultiplier:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "(FWLayoutChain) -> (Any, CGFloat) -> FWLayoutChain",
            "key.typeusr" : "$s_10withOffset11FWFramework13FWLayoutChainCyp_12CoreGraphics7CGFloatVtcD",
            "key.usr" : "s:11FWFramework13FWLayoutChainC13centerXToView_10withOffsetACyp_12CoreGraphics7CGFloatVtF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>@discardableResult public func centerYToView(_ view: Any, withOffset offset: <Type usr=\"s:12CoreGraphics7CGFloatV\">CGFloat<\/Type> = 0) -&gt; <Type usr=\"s:11FWFramework13FWLayoutChainC\">FWLayoutChain<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 2929
              },
              {
                "key.attribute" : "source.decl.attribute.discardableResult",
                "key.length" : 18,
                "key.offset" : 2906
              }
            ],
            "key.bodylength" : 100,
            "key.bodyoffset" : 3018,
            "key.column" : 17,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAutoLayout.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@discardableResult<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>centerYToView<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>view<\/decl.var.parameter.name>: <decl.var.parameter.type><syntaxtype.keyword>Any<\/syntaxtype.keyword><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>withOffset<\/decl.var.parameter.argument_label> <decl.var.parameter.name>offset<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:12CoreGraphics7CGFloatV\">CGFloat<\/ref.struct><\/decl.var.parameter.type> = 0<\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:11FWFramework13FWLayoutChainC\">FWLayoutChain<\/ref.class><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 183,
            "key.line" : 112,
            "key.name" : "centerYToView(_:withOffset:)",
            "key.namelength" : 58,
            "key.nameoffset" : 2941,
            "key.offset" : 2936,
            "key.parsed_declaration" : "public func centerYToView(_ view: Any, withOffset offset: CGFloat = 0) -> FWLayoutChain",
            "key.parsed_scope.end" : 115,
            "key.parsed_scope.start" : 112,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework13FWLayoutChainC13centerYToView_14withMultiplierACyp_12CoreGraphics7CGFloatVtF\">centerYToView(_:withMultiplier:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "(FWLayoutChain) -> (Any, CGFloat) -> FWLayoutChain",
            "key.typeusr" : "$s_10withOffset11FWFramework13FWLayoutChainCyp_12CoreGraphics7CGFloatVtcD",
            "key.usr" : "s:11FWFramework13FWLayoutChainC13centerYToView_10withOffsetACyp_12CoreGraphics7CGFloatVtF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>@discardableResult public func centerXToView(_ view: Any, withMultiplier multiplier: <Type usr=\"s:12CoreGraphics7CGFloatV\">CGFloat<\/Type>) -&gt; <Type usr=\"s:11FWFramework13FWLayoutChainC\">FWLayoutChain<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 3148
              },
              {
                "key.attribute" : "source.decl.attribute.discardableResult",
                "key.length" : 18,
                "key.offset" : 3125
              }
            ],
            "key.bodylength" : 108,
            "key.bodyoffset" : 3241,
            "key.column" : 17,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAutoLayout.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@discardableResult<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>centerXToView<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>view<\/decl.var.parameter.name>: <decl.var.parameter.type><syntaxtype.keyword>Any<\/syntaxtype.keyword><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>withMultiplier<\/decl.var.parameter.argument_label> <decl.var.parameter.name>multiplier<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:12CoreGraphics7CGFloatV\">CGFloat<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:11FWFramework13FWLayoutChainC\">FWLayoutChain<\/ref.class><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 195,
            "key.line" : 118,
            "key.name" : "centerXToView(_:withMultiplier:)",
            "key.namelength" : 62,
            "key.nameoffset" : 3160,
            "key.offset" : 3155,
            "key.parsed_declaration" : "public func centerXToView(_ view: Any, withMultiplier multiplier: CGFloat) -> FWLayoutChain",
            "key.parsed_scope.end" : 121,
            "key.parsed_scope.start" : 118,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework13FWLayoutChainC13centerXToView_10withOffsetACyp_12CoreGraphics7CGFloatVtF\">centerXToView(_:withOffset:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "(FWLayoutChain) -> (Any, CGFloat) -> FWLayoutChain",
            "key.typeusr" : "$s_14withMultiplier11FWFramework13FWLayoutChainCyp_12CoreGraphics7CGFloatVtcD",
            "key.usr" : "s:11FWFramework13FWLayoutChainC13centerXToView_14withMultiplierACyp_12CoreGraphics7CGFloatVtF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>@discardableResult public func centerYToView(_ view: Any, withMultiplier multiplier: <Type usr=\"s:12CoreGraphics7CGFloatV\">CGFloat<\/Type>) -&gt; <Type usr=\"s:11FWFramework13FWLayoutChainC\">FWLayoutChain<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 3379
              },
              {
                "key.attribute" : "source.decl.attribute.discardableResult",
                "key.length" : 18,
                "key.offset" : 3356
              }
            ],
            "key.bodylength" : 108,
            "key.bodyoffset" : 3472,
            "key.column" : 17,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAutoLayout.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@discardableResult<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>centerYToView<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>view<\/decl.var.parameter.name>: <decl.var.parameter.type><syntaxtype.keyword>Any<\/syntaxtype.keyword><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>withMultiplier<\/decl.var.parameter.argument_label> <decl.var.parameter.name>multiplier<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:12CoreGraphics7CGFloatV\">CGFloat<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:11FWFramework13FWLayoutChainC\">FWLayoutChain<\/ref.class><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 195,
            "key.line" : 124,
            "key.name" : "centerYToView(_:withMultiplier:)",
            "key.namelength" : 62,
            "key.nameoffset" : 3391,
            "key.offset" : 3386,
            "key.parsed_declaration" : "public func centerYToView(_ view: Any, withMultiplier multiplier: CGFloat) -> FWLayoutChain",
            "key.parsed_scope.end" : 127,
            "key.parsed_scope.start" : 124,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework13FWLayoutChainC13centerYToView_10withOffsetACyp_12CoreGraphics7CGFloatVtF\">centerYToView(_:withOffset:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "(FWLayoutChain) -> (Any, CGFloat) -> FWLayoutChain",
            "key.typeusr" : "$s_14withMultiplier11FWFramework13FWLayoutChainCyp_12CoreGraphics7CGFloatVtcD",
            "key.usr" : "s:11FWFramework13FWLayoutChainC13centerYToView_14withMultiplierACyp_12CoreGraphics7CGFloatVtF"
          },
          {
            "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
            "key.length" : 12,
            "key.name" : "MARK: - Edge",
            "key.namelength" : 0,
            "key.nameoffset" : 0,
            "key.offset" : 3590
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>@discardableResult public func edges(_ insets: <Type usr=\"c:@S@UIEdgeInsets\">UIEdgeInsets<\/Type> = UIEdgeInsets.zero) -&gt; <Type usr=\"s:11FWFramework13FWLayoutChainC\">FWLayoutChain<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 3631
              },
              {
                "key.attribute" : "source.decl.attribute.discardableResult",
                "key.length" : 18,
                "key.offset" : 3608
              }
            ],
            "key.bodylength" : 75,
            "key.bodyoffset" : 3711,
            "key.column" : 17,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAutoLayout.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@discardableResult<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>edges<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>insets<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"c:@S@UIEdgeInsets\">UIEdgeInsets<\/ref.struct><\/decl.var.parameter.type> = UIEdgeInsets.zero<\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:11FWFramework13FWLayoutChainC\">FWLayoutChain<\/ref.class><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 149,
            "key.line" : 132,
            "key.name" : "edges(_:)",
            "key.namelength" : 49,
            "key.nameoffset" : 3643,
            "key.offset" : 3638,
            "key.parsed_declaration" : "public func edges(_ insets: UIEdgeInsets = UIEdgeInsets.zero) -> FWLayoutChain",
            "key.parsed_scope.end" : 135,
            "key.parsed_scope.start" : 132,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework13FWLayoutChainC5edges_13excludingEdgeACSo12UIEdgeInsetsV_So17NSLayoutAttributeVtF\">edges(_:excludingEdge:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "(FWLayoutChain) -> (UIEdgeInsets) -> FWLayoutChain",
            "key.typeusr" : "$sy11FWFramework13FWLayoutChainCSo12UIEdgeInsetsVcD",
            "key.usr" : "s:11FWFramework13FWLayoutChainC5edgesyACSo12UIEdgeInsetsVF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>@discardableResult public func edges(_ insets: <Type usr=\"c:@S@UIEdgeInsets\">UIEdgeInsets<\/Type> = UIEdgeInsets.zero, excludingEdge edge: <Type usr=\"c:objc(cs)NSLayoutConstraint\">NSLayoutConstraint<\/Type>.<Type usr=\"c:@E@NSLayoutAttribute\">Attribute<\/Type>) -&gt; <Type usr=\"s:11FWFramework13FWLayoutChainC\">FWLayoutChain<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 3820
              },
              {
                "key.attribute" : "source.decl.attribute.discardableResult",
                "key.length" : 18,
                "key.offset" : 3797
              }
            ],
            "key.bodylength" : 96,
            "key.bodyoffset" : 3950,
            "key.column" : 17,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAutoLayout.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@discardableResult<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>edges<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>insets<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"c:@S@UIEdgeInsets\">UIEdgeInsets<\/ref.struct><\/decl.var.parameter.type> = UIEdgeInsets.zero<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>excludingEdge<\/decl.var.parameter.argument_label> <decl.var.parameter.name>edge<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"c:objc(cs)NSLayoutConstraint\">NSLayoutConstraint<\/ref.class>.<ref.enum usr=\"c:@E@NSLayoutAttribute\">Attribute<\/ref.enum><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:11FWFramework13FWLayoutChainC\">FWLayoutChain<\/ref.class><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 220,
            "key.line" : 138,
            "key.name" : "edges(_:excludingEdge:)",
            "key.namelength" : 99,
            "key.nameoffset" : 3832,
            "key.offset" : 3827,
            "key.parsed_declaration" : "public func edges(_ insets: UIEdgeInsets = UIEdgeInsets.zero, excludingEdge edge: NSLayoutConstraint.Attribute) -> FWLayoutChain",
            "key.parsed_scope.end" : 141,
            "key.parsed_scope.start" : 138,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework13FWLayoutChainC5edgesyACSo12UIEdgeInsetsVF\">edges(_:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "(FWLayoutChain) -> (UIEdgeInsets, NSLayoutConstraint.Attribute) -> FWLayoutChain",
            "key.typeusr" : "$s_13excludingEdge11FWFramework13FWLayoutChainCSo12UIEdgeInsetsV_So17NSLayoutAttributeVtcD",
            "key.usr" : "s:11FWFramework13FWLayoutChainC5edges_13excludingEdgeACSo12UIEdgeInsetsV_So17NSLayoutAttributeVtF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>@discardableResult public func edgesHorizontal() -&gt; <Type usr=\"s:11FWFramework13FWLayoutChainC\">FWLayoutChain<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 4076
              },
              {
                "key.attribute" : "source.decl.attribute.discardableResult",
                "key.length" : 18,
                "key.offset" : 4053
              }
            ],
            "key.bodylength" : 73,
            "key.bodyoffset" : 4124,
            "key.column" : 17,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAutoLayout.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@discardableResult<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>edgesHorizontal<\/decl.name>() -&gt; <decl.function.returntype><ref.class usr=\"s:11FWFramework13FWLayoutChainC\">FWLayoutChain<\/ref.class><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 115,
            "key.line" : 144,
            "key.name" : "edgesHorizontal()",
            "key.namelength" : 17,
            "key.nameoffset" : 4088,
            "key.offset" : 4083,
            "key.parsed_declaration" : "public func edgesHorizontal() -> FWLayoutChain",
            "key.parsed_scope.end" : 147,
            "key.parsed_scope.start" : 144,
            "key.substructure" : [

            ],
            "key.typename" : "(FWLayoutChain) -> () -> FWLayoutChain",
            "key.typeusr" : "$s11FWFramework13FWLayoutChainCycD",
            "key.usr" : "s:11FWFramework13FWLayoutChainC15edgesHorizontalACyF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>@discardableResult public func edgesVertical() -&gt; <Type usr=\"s:11FWFramework13FWLayoutChainC\">FWLayoutChain<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 4227
              },
              {
                "key.attribute" : "source.decl.attribute.discardableResult",
                "key.length" : 18,
                "key.offset" : 4204
              }
            ],
            "key.bodylength" : 71,
            "key.bodyoffset" : 4273,
            "key.column" : 17,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAutoLayout.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@discardableResult<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>edgesVertical<\/decl.name>() -&gt; <decl.function.returntype><ref.class usr=\"s:11FWFramework13FWLayoutChainC\">FWLayoutChain<\/ref.class><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 111,
            "key.line" : 150,
            "key.name" : "edgesVertical()",
            "key.namelength" : 15,
            "key.nameoffset" : 4239,
            "key.offset" : 4234,
            "key.parsed_declaration" : "public func edgesVertical() -> FWLayoutChain",
            "key.parsed_scope.end" : 153,
            "key.parsed_scope.start" : 150,
            "key.substructure" : [

            ],
            "key.typename" : "(FWLayoutChain) -> () -> FWLayoutChain",
            "key.typeusr" : "$s11FWFramework13FWLayoutChainCycD",
            "key.usr" : "s:11FWFramework13FWLayoutChainC13edgesVerticalACyF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>@discardableResult public func top(_ inset: <Type usr=\"s:12CoreGraphics7CGFloatV\">CGFloat<\/Type> = 0) -&gt; <Type usr=\"s:11FWFramework13FWLayoutChainC\">FWLayoutChain<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 4374
              },
              {
                "key.attribute" : "source.decl.attribute.discardableResult",
                "key.length" : 18,
                "key.offset" : 4351
              }
            ],
            "key.bodylength" : 86,
            "key.bodyoffset" : 4430,
            "key.column" : 17,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAutoLayout.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@discardableResult<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>top<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>inset<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:12CoreGraphics7CGFloatV\">CGFloat<\/ref.struct><\/decl.var.parameter.type> = 0<\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:11FWFramework13FWLayoutChainC\">FWLayoutChain<\/ref.class><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 136,
            "key.line" : 156,
            "key.name" : "top(_:)",
            "key.namelength" : 25,
            "key.nameoffset" : 4386,
            "key.offset" : 4381,
            "key.parsed_declaration" : "public func top(_ inset: CGFloat = 0) -> FWLayoutChain",
            "key.parsed_scope.end" : 159,
            "key.parsed_scope.start" : 156,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework13FWLayoutChainC3top_8relationAC12CoreGraphics7CGFloatV_So16NSLayoutRelationVtF\">top(_:relation:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "(FWLayoutChain) -> (CGFloat) -> FWLayoutChain",
            "key.typeusr" : "$sy11FWFramework13FWLayoutChainC12CoreGraphics7CGFloatVcD",
            "key.usr" : "s:11FWFramework13FWLayoutChainC3topyAC12CoreGraphics7CGFloatVF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>@discardableResult public func top(_ inset: <Type usr=\"s:12CoreGraphics7CGFloatV\">CGFloat<\/Type> = 0, relation: <Type usr=\"c:objc(cs)NSLayoutConstraint\">NSLayoutConstraint<\/Type>.<Type usr=\"c:@E@NSLayoutRelation\">Relation<\/Type>) -&gt; <Type usr=\"s:11FWFramework13FWLayoutChainC\">FWLayoutChain<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 4550
              },
              {
                "key.attribute" : "source.decl.attribute.discardableResult",
                "key.length" : 18,
                "key.offset" : 4527
              }
            ],
            "key.bodylength" : 106,
            "key.bodyoffset" : 4645,
            "key.column" : 17,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAutoLayout.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@discardableResult<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>top<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>inset<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:12CoreGraphics7CGFloatV\">CGFloat<\/ref.struct><\/decl.var.parameter.type> = 0<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>relation<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:objc(cs)NSLayoutConstraint\">NSLayoutConstraint<\/ref.class>.<ref.enum usr=\"c:@E@NSLayoutRelation\">Relation<\/ref.enum><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:11FWFramework13FWLayoutChainC\">FWLayoutChain<\/ref.class><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 195,
            "key.line" : 162,
            "key.name" : "top(_:relation:)",
            "key.namelength" : 64,
            "key.nameoffset" : 4562,
            "key.offset" : 4557,
            "key.parsed_declaration" : "public func top(_ inset: CGFloat = 0, relation: NSLayoutConstraint.Relation) -> FWLayoutChain",
            "key.parsed_scope.end" : 165,
            "key.parsed_scope.start" : 162,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework13FWLayoutChainC3topyAC12CoreGraphics7CGFloatVF\">top(_:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "(FWLayoutChain) -> (CGFloat, NSLayoutConstraint.Relation) -> FWLayoutChain",
            "key.typeusr" : "$s_8relation11FWFramework13FWLayoutChainC12CoreGraphics7CGFloatV_So16NSLayoutRelationVtcD",
            "key.usr" : "s:11FWFramework13FWLayoutChainC3top_8relationAC12CoreGraphics7CGFloatV_So16NSLayoutRelationVtF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>@discardableResult public func bottom(_ inset: <Type usr=\"s:12CoreGraphics7CGFloatV\">CGFloat<\/Type> = 0) -&gt; <Type usr=\"s:11FWFramework13FWLayoutChainC\">FWLayoutChain<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 4781
              },
              {
                "key.attribute" : "source.decl.attribute.discardableResult",
                "key.length" : 18,
                "key.offset" : 4758
              }
            ],
            "key.bodylength" : 89,
            "key.bodyoffset" : 4840,
            "key.column" : 17,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAutoLayout.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@discardableResult<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>bottom<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>inset<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:12CoreGraphics7CGFloatV\">CGFloat<\/ref.struct><\/decl.var.parameter.type> = 0<\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:11FWFramework13FWLayoutChainC\">FWLayoutChain<\/ref.class><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 142,
            "key.line" : 168,
            "key.name" : "bottom(_:)",
            "key.namelength" : 28,
            "key.nameoffset" : 4793,
            "key.offset" : 4788,
            "key.parsed_declaration" : "public func bottom(_ inset: CGFloat = 0) -> FWLayoutChain",
            "key.parsed_scope.end" : 171,
            "key.parsed_scope.start" : 168,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework13FWLayoutChainC6bottom_8relationAC12CoreGraphics7CGFloatV_So16NSLayoutRelationVtF\">bottom(_:relation:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "(FWLayoutChain) -> (CGFloat) -> FWLayoutChain",
            "key.typeusr" : "$sy11FWFramework13FWLayoutChainC12CoreGraphics7CGFloatVcD",
            "key.usr" : "s:11FWFramework13FWLayoutChainC6bottomyAC12CoreGraphics7CGFloatVF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>@discardableResult public func bottom(_ inset: <Type usr=\"s:12CoreGraphics7CGFloatV\">CGFloat<\/Type> = 0, relation: <Type usr=\"c:objc(cs)NSLayoutConstraint\">NSLayoutConstraint<\/Type>.<Type usr=\"c:@E@NSLayoutRelation\">Relation<\/Type>) -&gt; <Type usr=\"s:11FWFramework13FWLayoutChainC\">FWLayoutChain<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 4963
              },
              {
                "key.attribute" : "source.decl.attribute.discardableResult",
                "key.length" : 18,
                "key.offset" : 4940
              }
            ],
            "key.bodylength" : 109,
            "key.bodyoffset" : 5061,
            "key.column" : 17,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAutoLayout.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@discardableResult<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>bottom<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>inset<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:12CoreGraphics7CGFloatV\">CGFloat<\/ref.struct><\/decl.var.parameter.type> = 0<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>relation<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:objc(cs)NSLayoutConstraint\">NSLayoutConstraint<\/ref.class>.<ref.enum usr=\"c:@E@NSLayoutRelation\">Relation<\/ref.enum><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:11FWFramework13FWLayoutChainC\">FWLayoutChain<\/ref.class><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 201,
            "key.line" : 174,
            "key.name" : "bottom(_:relation:)",
            "key.namelength" : 67,
            "key.nameoffset" : 4975,
            "key.offset" : 4970,
            "key.parsed_declaration" : "public func bottom(_ inset: CGFloat = 0, relation: NSLayoutConstraint.Relation) -> FWLayoutChain",
            "key.parsed_scope.end" : 177,
            "key.parsed_scope.start" : 174,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework13FWLayoutChainC6bottomyAC12CoreGraphics7CGFloatVF\">bottom(_:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "(FWLayoutChain) -> (CGFloat, NSLayoutConstraint.Relation) -> FWLayoutChain",
            "key.typeusr" : "$s_8relation11FWFramework13FWLayoutChainC12CoreGraphics7CGFloatV_So16NSLayoutRelationVtcD",
            "key.usr" : "s:11FWFramework13FWLayoutChainC6bottom_8relationAC12CoreGraphics7CGFloatV_So16NSLayoutRelationVtF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>@discardableResult public func left(_ inset: <Type usr=\"s:12CoreGraphics7CGFloatV\">CGFloat<\/Type> = 0) -&gt; <Type usr=\"s:11FWFramework13FWLayoutChainC\">FWLayoutChain<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 5200
              },
              {
                "key.attribute" : "source.decl.attribute.discardableResult",
                "key.length" : 18,
                "key.offset" : 5177
              }
            ],
            "key.bodylength" : 87,
            "key.bodyoffset" : 5257,
            "key.column" : 17,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAutoLayout.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@discardableResult<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>left<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>inset<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:12CoreGraphics7CGFloatV\">CGFloat<\/ref.struct><\/decl.var.parameter.type> = 0<\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:11FWFramework13FWLayoutChainC\">FWLayoutChain<\/ref.class><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 138,
            "key.line" : 180,
            "key.name" : "left(_:)",
            "key.namelength" : 26,
            "key.nameoffset" : 5212,
            "key.offset" : 5207,
            "key.parsed_declaration" : "public func left(_ inset: CGFloat = 0) -> FWLayoutChain",
            "key.parsed_scope.end" : 183,
            "key.parsed_scope.start" : 180,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework13FWLayoutChainC4left_8relationAC12CoreGraphics7CGFloatV_So16NSLayoutRelationVtF\">left(_:relation:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "(FWLayoutChain) -> (CGFloat) -> FWLayoutChain",
            "key.typeusr" : "$sy11FWFramework13FWLayoutChainC12CoreGraphics7CGFloatVcD",
            "key.usr" : "s:11FWFramework13FWLayoutChainC4leftyAC12CoreGraphics7CGFloatVF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>@discardableResult public func left(_ inset: <Type usr=\"s:12CoreGraphics7CGFloatV\">CGFloat<\/Type> = 0, relation: <Type usr=\"c:objc(cs)NSLayoutConstraint\">NSLayoutConstraint<\/Type>.<Type usr=\"c:@E@NSLayoutRelation\">Relation<\/Type>) -&gt; <Type usr=\"s:11FWFramework13FWLayoutChainC\">FWLayoutChain<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 5378
              },
              {
                "key.attribute" : "source.decl.attribute.discardableResult",
                "key.length" : 18,
                "key.offset" : 5355
              }
            ],
            "key.bodylength" : 107,
            "key.bodyoffset" : 5474,
            "key.column" : 17,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAutoLayout.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@discardableResult<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>left<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>inset<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:12CoreGraphics7CGFloatV\">CGFloat<\/ref.struct><\/decl.var.parameter.type> = 0<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>relation<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:objc(cs)NSLayoutConstraint\">NSLayoutConstraint<\/ref.class>.<ref.enum usr=\"c:@E@NSLayoutRelation\">Relation<\/ref.enum><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:11FWFramework13FWLayoutChainC\">FWLayoutChain<\/ref.class><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 197,
            "key.line" : 186,
            "key.name" : "left(_:relation:)",
            "key.namelength" : 65,
            "key.nameoffset" : 5390,
            "key.offset" : 5385,
            "key.parsed_declaration" : "public func left(_ inset: CGFloat = 0, relation: NSLayoutConstraint.Relation) -> FWLayoutChain",
            "key.parsed_scope.end" : 189,
            "key.parsed_scope.start" : 186,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework13FWLayoutChainC4leftyAC12CoreGraphics7CGFloatVF\">left(_:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "(FWLayoutChain) -> (CGFloat, NSLayoutConstraint.Relation) -> FWLayoutChain",
            "key.typeusr" : "$s_8relation11FWFramework13FWLayoutChainC12CoreGraphics7CGFloatV_So16NSLayoutRelationVtcD",
            "key.usr" : "s:11FWFramework13FWLayoutChainC4left_8relationAC12CoreGraphics7CGFloatV_So16NSLayoutRelationVtF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>@discardableResult public func right(_ inset: <Type usr=\"s:12CoreGraphics7CGFloatV\">CGFloat<\/Type> = 0) -&gt; <Type usr=\"s:11FWFramework13FWLayoutChainC\">FWLayoutChain<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 5611
              },
              {
                "key.attribute" : "source.decl.attribute.discardableResult",
                "key.length" : 18,
                "key.offset" : 5588
              }
            ],
            "key.bodylength" : 88,
            "key.bodyoffset" : 5669,
            "key.column" : 17,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAutoLayout.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@discardableResult<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>right<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>inset<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:12CoreGraphics7CGFloatV\">CGFloat<\/ref.struct><\/decl.var.parameter.type> = 0<\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:11FWFramework13FWLayoutChainC\">FWLayoutChain<\/ref.class><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 140,
            "key.line" : 192,
            "key.name" : "right(_:)",
            "key.namelength" : 27,
            "key.nameoffset" : 5623,
            "key.offset" : 5618,
            "key.parsed_declaration" : "public func right(_ inset: CGFloat = 0) -> FWLayoutChain",
            "key.parsed_scope.end" : 195,
            "key.parsed_scope.start" : 192,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework13FWLayoutChainC5right_8relationAC12CoreGraphics7CGFloatV_So16NSLayoutRelationVtF\">right(_:relation:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "(FWLayoutChain) -> (CGFloat) -> FWLayoutChain",
            "key.typeusr" : "$sy11FWFramework13FWLayoutChainC12CoreGraphics7CGFloatVcD",
            "key.usr" : "s:11FWFramework13FWLayoutChainC5rightyAC12CoreGraphics7CGFloatVF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>@discardableResult public func right(_ inset: <Type usr=\"s:12CoreGraphics7CGFloatV\">CGFloat<\/Type> = 0, relation: <Type usr=\"c:objc(cs)NSLayoutConstraint\">NSLayoutConstraint<\/Type>.<Type usr=\"c:@E@NSLayoutRelation\">Relation<\/Type>) -&gt; <Type usr=\"s:11FWFramework13FWLayoutChainC\">FWLayoutChain<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 5791
              },
              {
                "key.attribute" : "source.decl.attribute.discardableResult",
                "key.length" : 18,
                "key.offset" : 5768
              }
            ],
            "key.bodylength" : 108,
            "key.bodyoffset" : 5888,
            "key.column" : 17,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAutoLayout.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@discardableResult<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>right<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>inset<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:12CoreGraphics7CGFloatV\">CGFloat<\/ref.struct><\/decl.var.parameter.type> = 0<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>relation<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:objc(cs)NSLayoutConstraint\">NSLayoutConstraint<\/ref.class>.<ref.enum usr=\"c:@E@NSLayoutRelation\">Relation<\/ref.enum><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:11FWFramework13FWLayoutChainC\">FWLayoutChain<\/ref.class><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 199,
            "key.line" : 198,
            "key.name" : "right(_:relation:)",
            "key.namelength" : 66,
            "key.nameoffset" : 5803,
            "key.offset" : 5798,
            "key.parsed_declaration" : "public func right(_ inset: CGFloat = 0, relation: NSLayoutConstraint.Relation) -> FWLayoutChain",
            "key.parsed_scope.end" : 201,
            "key.parsed_scope.start" : 198,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework13FWLayoutChainC5rightyAC12CoreGraphics7CGFloatVF\">right(_:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "(FWLayoutChain) -> (CGFloat, NSLayoutConstraint.Relation) -> FWLayoutChain",
            "key.typeusr" : "$s_8relation11FWFramework13FWLayoutChainC12CoreGraphics7CGFloatV_So16NSLayoutRelationVtcD",
            "key.usr" : "s:11FWFramework13FWLayoutChainC5right_8relationAC12CoreGraphics7CGFloatV_So16NSLayoutRelationVtF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>@discardableResult public func topToView(_ view: Any, withOffset offset: <Type usr=\"s:12CoreGraphics7CGFloatV\">CGFloat<\/Type> = 0) -&gt; <Type usr=\"s:11FWFramework13FWLayoutChainC\">FWLayoutChain<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 6026
              },
              {
                "key.attribute" : "source.decl.attribute.discardableResult",
                "key.length" : 18,
                "key.offset" : 6003
              }
            ],
            "key.bodylength" : 108,
            "key.bodyoffset" : 6111,
            "key.column" : 17,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAutoLayout.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@discardableResult<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>topToView<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>view<\/decl.var.parameter.name>: <decl.var.parameter.type><syntaxtype.keyword>Any<\/syntaxtype.keyword><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>withOffset<\/decl.var.parameter.argument_label> <decl.var.parameter.name>offset<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:12CoreGraphics7CGFloatV\">CGFloat<\/ref.struct><\/decl.var.parameter.type> = 0<\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:11FWFramework13FWLayoutChainC\">FWLayoutChain<\/ref.class><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 187,
            "key.line" : 204,
            "key.name" : "topToView(_:withOffset:)",
            "key.namelength" : 54,
            "key.nameoffset" : 6038,
            "key.offset" : 6033,
            "key.parsed_declaration" : "public func topToView(_ view: Any, withOffset offset: CGFloat = 0) -> FWLayoutChain",
            "key.parsed_scope.end" : 207,
            "key.parsed_scope.start" : 204,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework13FWLayoutChainC9topToView_10withOffset8relationACyp_12CoreGraphics7CGFloatVSo16NSLayoutRelationVtF\">topToView(_:withOffset:relation:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "(FWLayoutChain) -> (Any, CGFloat) -> FWLayoutChain",
            "key.typeusr" : "$s_10withOffset11FWFramework13FWLayoutChainCyp_12CoreGraphics7CGFloatVtcD",
            "key.usr" : "s:11FWFramework13FWLayoutChainC9topToView_10withOffsetACyp_12CoreGraphics7CGFloatVtF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>@discardableResult public func topToView(_ view: Any, withOffset offset: <Type usr=\"s:12CoreGraphics7CGFloatV\">CGFloat<\/Type> = 0, relation: <Type usr=\"c:objc(cs)NSLayoutConstraint\">NSLayoutConstraint<\/Type>.<Type usr=\"c:@E@NSLayoutRelation\">Relation<\/Type>) -&gt; <Type usr=\"s:11FWFramework13FWLayoutChainC\">FWLayoutChain<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 6253
              },
              {
                "key.attribute" : "source.decl.attribute.discardableResult",
                "key.length" : 18,
                "key.offset" : 6230
              }
            ],
            "key.bodylength" : 128,
            "key.bodyoffset" : 6377,
            "key.column" : 17,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAutoLayout.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@discardableResult<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>topToView<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>view<\/decl.var.parameter.name>: <decl.var.parameter.type><syntaxtype.keyword>Any<\/syntaxtype.keyword><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>withOffset<\/decl.var.parameter.argument_label> <decl.var.parameter.name>offset<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:12CoreGraphics7CGFloatV\">CGFloat<\/ref.struct><\/decl.var.parameter.type> = 0<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>relation<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:objc(cs)NSLayoutConstraint\">NSLayoutConstraint<\/ref.class>.<ref.enum usr=\"c:@E@NSLayoutRelation\">Relation<\/ref.enum><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:11FWFramework13FWLayoutChainC\">FWLayoutChain<\/ref.class><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 246,
            "key.line" : 210,
            "key.name" : "topToView(_:withOffset:relation:)",
            "key.namelength" : 93,
            "key.nameoffset" : 6265,
            "key.offset" : 6260,
            "key.parsed_declaration" : "public func topToView(_ view: Any, withOffset offset: CGFloat = 0, relation: NSLayoutConstraint.Relation) -> FWLayoutChain",
            "key.parsed_scope.end" : 213,
            "key.parsed_scope.start" : 210,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework13FWLayoutChainC9topToView_10withOffsetACyp_12CoreGraphics7CGFloatVtF\">topToView(_:withOffset:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "(FWLayoutChain) -> (Any, CGFloat, NSLayoutConstraint.Relation) -> FWLayoutChain",
            "key.typeusr" : "$s_10withOffset8relation11FWFramework13FWLayoutChainCyp_12CoreGraphics7CGFloatVSo16NSLayoutRelationVtcD",
            "key.usr" : "s:11FWFramework13FWLayoutChainC9topToView_10withOffset8relationACyp_12CoreGraphics7CGFloatVSo16NSLayoutRelationVtF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>@discardableResult public func bottomToView(_ view: Any, withOffset offset: <Type usr=\"s:12CoreGraphics7CGFloatV\">CGFloat<\/Type> = 0) -&gt; <Type usr=\"s:11FWFramework13FWLayoutChainC\">FWLayoutChain<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 6535
              },
              {
                "key.attribute" : "source.decl.attribute.discardableResult",
                "key.length" : 18,
                "key.offset" : 6512
              }
            ],
            "key.bodylength" : 114,
            "key.bodyoffset" : 6623,
            "key.column" : 17,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAutoLayout.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@discardableResult<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>bottomToView<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>view<\/decl.var.parameter.name>: <decl.var.parameter.type><syntaxtype.keyword>Any<\/syntaxtype.keyword><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>withOffset<\/decl.var.parameter.argument_label> <decl.var.parameter.name>offset<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:12CoreGraphics7CGFloatV\">CGFloat<\/ref.struct><\/decl.var.parameter.type> = 0<\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:11FWFramework13FWLayoutChainC\">FWLayoutChain<\/ref.class><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 196,
            "key.line" : 216,
            "key.name" : "bottomToView(_:withOffset:)",
            "key.namelength" : 57,
            "key.nameoffset" : 6547,
            "key.offset" : 6542,
            "key.parsed_declaration" : "public func bottomToView(_ view: Any, withOffset offset: CGFloat = 0) -> FWLayoutChain",
            "key.parsed_scope.end" : 219,
            "key.parsed_scope.start" : 216,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework13FWLayoutChainC12bottomToView_10withOffset8relationACyp_12CoreGraphics7CGFloatVSo16NSLayoutRelationVtF\">bottomToView(_:withOffset:relation:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "(FWLayoutChain) -> (Any, CGFloat) -> FWLayoutChain",
            "key.typeusr" : "$s_10withOffset11FWFramework13FWLayoutChainCyp_12CoreGraphics7CGFloatVtcD",
            "key.usr" : "s:11FWFramework13FWLayoutChainC12bottomToView_10withOffsetACyp_12CoreGraphics7CGFloatVtF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>@discardableResult public func bottomToView(_ view: Any, withOffset offset: <Type usr=\"s:12CoreGraphics7CGFloatV\">CGFloat<\/Type> = 0, relation: <Type usr=\"c:objc(cs)NSLayoutConstraint\">NSLayoutConstraint<\/Type>.<Type usr=\"c:@E@NSLayoutRelation\">Relation<\/Type>) -&gt; <Type usr=\"s:11FWFramework13FWLayoutChainC\">FWLayoutChain<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 6771
              },
              {
                "key.attribute" : "source.decl.attribute.discardableResult",
                "key.length" : 18,
                "key.offset" : 6748
              }
            ],
            "key.bodylength" : 134,
            "key.bodyoffset" : 6898,
            "key.column" : 17,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAutoLayout.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@discardableResult<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>bottomToView<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>view<\/decl.var.parameter.name>: <decl.var.parameter.type><syntaxtype.keyword>Any<\/syntaxtype.keyword><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>withOffset<\/decl.var.parameter.argument_label> <decl.var.parameter.name>offset<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:12CoreGraphics7CGFloatV\">CGFloat<\/ref.struct><\/decl.var.parameter.type> = 0<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>relation<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:objc(cs)NSLayoutConstraint\">NSLayoutConstraint<\/ref.class>.<ref.enum usr=\"c:@E@NSLayoutRelation\">Relation<\/ref.enum><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:11FWFramework13FWLayoutChainC\">FWLayoutChain<\/ref.class><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 255,
            "key.line" : 222,
            "key.name" : "bottomToView(_:withOffset:relation:)",
            "key.namelength" : 96,
            "key.nameoffset" : 6783,
            "key.offset" : 6778,
            "key.parsed_declaration" : "public func bottomToView(_ view: Any, withOffset offset: CGFloat = 0, relation: NSLayoutConstraint.Relation) -> FWLayoutChain",
            "key.parsed_scope.end" : 225,
            "key.parsed_scope.start" : 222,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework13FWLayoutChainC12bottomToView_10withOffsetACyp_12CoreGraphics7CGFloatVtF\">bottomToView(_:withOffset:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "(FWLayoutChain) -> (Any, CGFloat, NSLayoutConstraint.Relation) -> FWLayoutChain",
            "key.typeusr" : "$s_10withOffset8relation11FWFramework13FWLayoutChainCyp_12CoreGraphics7CGFloatVSo16NSLayoutRelationVtcD",
            "key.usr" : "s:11FWFramework13FWLayoutChainC12bottomToView_10withOffset8relationACyp_12CoreGraphics7CGFloatVSo16NSLayoutRelationVtF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>@discardableResult public func leftToView(_ view: Any, withOffset offset: <Type usr=\"s:12CoreGraphics7CGFloatV\">CGFloat<\/Type> = 0) -&gt; <Type usr=\"s:11FWFramework13FWLayoutChainC\">FWLayoutChain<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 7062
              },
              {
                "key.attribute" : "source.decl.attribute.discardableResult",
                "key.length" : 18,
                "key.offset" : 7039
              }
            ],
            "key.bodylength" : 110,
            "key.bodyoffset" : 7148,
            "key.column" : 17,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAutoLayout.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@discardableResult<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>leftToView<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>view<\/decl.var.parameter.name>: <decl.var.parameter.type><syntaxtype.keyword>Any<\/syntaxtype.keyword><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>withOffset<\/decl.var.parameter.argument_label> <decl.var.parameter.name>offset<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:12CoreGraphics7CGFloatV\">CGFloat<\/ref.struct><\/decl.var.parameter.type> = 0<\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:11FWFramework13FWLayoutChainC\">FWLayoutChain<\/ref.class><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 190,
            "key.line" : 228,
            "key.name" : "leftToView(_:withOffset:)",
            "key.namelength" : 55,
            "key.nameoffset" : 7074,
            "key.offset" : 7069,
            "key.parsed_declaration" : "public func leftToView(_ view: Any, withOffset offset: CGFloat = 0) -> FWLayoutChain",
            "key.parsed_scope.end" : 231,
            "key.parsed_scope.start" : 228,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework13FWLayoutChainC10leftToView_10withOffset8relationACyp_12CoreGraphics7CGFloatVSo16NSLayoutRelationVtF\">leftToView(_:withOffset:relation:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "(FWLayoutChain) -> (Any, CGFloat) -> FWLayoutChain",
            "key.typeusr" : "$s_10withOffset11FWFramework13FWLayoutChainCyp_12CoreGraphics7CGFloatVtcD",
            "key.usr" : "s:11FWFramework13FWLayoutChainC10leftToView_10withOffsetACyp_12CoreGraphics7CGFloatVtF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>@discardableResult public func leftToView(_ view: Any, withOffset offset: <Type usr=\"s:12CoreGraphics7CGFloatV\">CGFloat<\/Type> = 0, relation: <Type usr=\"c:objc(cs)NSLayoutConstraint\">NSLayoutConstraint<\/Type>.<Type usr=\"c:@E@NSLayoutRelation\">Relation<\/Type>) -&gt; <Type usr=\"s:11FWFramework13FWLayoutChainC\">FWLayoutChain<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 7292
              },
              {
                "key.attribute" : "source.decl.attribute.discardableResult",
                "key.length" : 18,
                "key.offset" : 7269
              }
            ],
            "key.bodylength" : 130,
            "key.bodyoffset" : 7417,
            "key.column" : 17,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAutoLayout.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@discardableResult<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>leftToView<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>view<\/decl.var.parameter.name>: <decl.var.parameter.type><syntaxtype.keyword>Any<\/syntaxtype.keyword><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>withOffset<\/decl.var.parameter.argument_label> <decl.var.parameter.name>offset<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:12CoreGraphics7CGFloatV\">CGFloat<\/ref.struct><\/decl.var.parameter.type> = 0<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>relation<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:objc(cs)NSLayoutConstraint\">NSLayoutConstraint<\/ref.class>.<ref.enum usr=\"c:@E@NSLayoutRelation\">Relation<\/ref.enum><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:11FWFramework13FWLayoutChainC\">FWLayoutChain<\/ref.class><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 249,
            "key.line" : 234,
            "key.name" : "leftToView(_:withOffset:relation:)",
            "key.namelength" : 94,
            "key.nameoffset" : 7304,
            "key.offset" : 7299,
            "key.parsed_declaration" : "public func leftToView(_ view: Any, withOffset offset: CGFloat = 0, relation: NSLayoutConstraint.Relation) -> FWLayoutChain",
            "key.parsed_scope.end" : 237,
            "key.parsed_scope.start" : 234,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework13FWLayoutChainC10leftToView_10withOffsetACyp_12CoreGraphics7CGFloatVtF\">leftToView(_:withOffset:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "(FWLayoutChain) -> (Any, CGFloat, NSLayoutConstraint.Relation) -> FWLayoutChain",
            "key.typeusr" : "$s_10withOffset8relation11FWFramework13FWLayoutChainCyp_12CoreGraphics7CGFloatVSo16NSLayoutRelationVtcD",
            "key.usr" : "s:11FWFramework13FWLayoutChainC10leftToView_10withOffset8relationACyp_12CoreGraphics7CGFloatVSo16NSLayoutRelationVtF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>@discardableResult public func rightToView(_ view: Any, withOffset offset: <Type usr=\"s:12CoreGraphics7CGFloatV\">CGFloat<\/Type> = 0) -&gt; <Type usr=\"s:11FWFramework13FWLayoutChainC\">FWLayoutChain<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 7577
              },
              {
                "key.attribute" : "source.decl.attribute.discardableResult",
                "key.length" : 18,
                "key.offset" : 7554
              }
            ],
            "key.bodylength" : 112,
            "key.bodyoffset" : 7664,
            "key.column" : 17,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAutoLayout.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@discardableResult<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>rightToView<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>view<\/decl.var.parameter.name>: <decl.var.parameter.type><syntaxtype.keyword>Any<\/syntaxtype.keyword><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>withOffset<\/decl.var.parameter.argument_label> <decl.var.parameter.name>offset<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:12CoreGraphics7CGFloatV\">CGFloat<\/ref.struct><\/decl.var.parameter.type> = 0<\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:11FWFramework13FWLayoutChainC\">FWLayoutChain<\/ref.class><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 193,
            "key.line" : 240,
            "key.name" : "rightToView(_:withOffset:)",
            "key.namelength" : 56,
            "key.nameoffset" : 7589,
            "key.offset" : 7584,
            "key.parsed_declaration" : "public func rightToView(_ view: Any, withOffset offset: CGFloat = 0) -> FWLayoutChain",
            "key.parsed_scope.end" : 243,
            "key.parsed_scope.start" : 240,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework13FWLayoutChainC11rightToView_10withOffset8relationACyp_12CoreGraphics7CGFloatVSo16NSLayoutRelationVtF\">rightToView(_:withOffset:relation:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "(FWLayoutChain) -> (Any, CGFloat) -> FWLayoutChain",
            "key.typeusr" : "$s_10withOffset11FWFramework13FWLayoutChainCyp_12CoreGraphics7CGFloatVtcD",
            "key.usr" : "s:11FWFramework13FWLayoutChainC11rightToView_10withOffsetACyp_12CoreGraphics7CGFloatVtF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>@discardableResult public func rightToView(_ view: Any, withOffset offset: <Type usr=\"s:12CoreGraphics7CGFloatV\">CGFloat<\/Type> = 0, relation: <Type usr=\"c:objc(cs)NSLayoutConstraint\">NSLayoutConstraint<\/Type>.<Type usr=\"c:@E@NSLayoutRelation\">Relation<\/Type>) -&gt; <Type usr=\"s:11FWFramework13FWLayoutChainC\">FWLayoutChain<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 7810
              },
              {
                "key.attribute" : "source.decl.attribute.discardableResult",
                "key.length" : 18,
                "key.offset" : 7787
              }
            ],
            "key.bodylength" : 132,
            "key.bodyoffset" : 7936,
            "key.column" : 17,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAutoLayout.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@discardableResult<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>rightToView<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>view<\/decl.var.parameter.name>: <decl.var.parameter.type><syntaxtype.keyword>Any<\/syntaxtype.keyword><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>withOffset<\/decl.var.parameter.argument_label> <decl.var.parameter.name>offset<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:12CoreGraphics7CGFloatV\">CGFloat<\/ref.struct><\/decl.var.parameter.type> = 0<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>relation<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:objc(cs)NSLayoutConstraint\">NSLayoutConstraint<\/ref.class>.<ref.enum usr=\"c:@E@NSLayoutRelation\">Relation<\/ref.enum><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:11FWFramework13FWLayoutChainC\">FWLayoutChain<\/ref.class><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 252,
            "key.line" : 246,
            "key.name" : "rightToView(_:withOffset:relation:)",
            "key.namelength" : 95,
            "key.nameoffset" : 7822,
            "key.offset" : 7817,
            "key.parsed_declaration" : "public func rightToView(_ view: Any, withOffset offset: CGFloat = 0, relation: NSLayoutConstraint.Relation) -> FWLayoutChain",
            "key.parsed_scope.end" : 249,
            "key.parsed_scope.start" : 246,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework13FWLayoutChainC11rightToView_10withOffsetACyp_12CoreGraphics7CGFloatVtF\">rightToView(_:withOffset:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "(FWLayoutChain) -> (Any, CGFloat, NSLayoutConstraint.Relation) -> FWLayoutChain",
            "key.typeusr" : "$s_10withOffset8relation11FWFramework13FWLayoutChainCyp_12CoreGraphics7CGFloatVSo16NSLayoutRelationVtcD",
            "key.usr" : "s:11FWFramework13FWLayoutChainC11rightToView_10withOffset8relationACyp_12CoreGraphics7CGFloatVSo16NSLayoutRelationVtF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>@discardableResult public func topToBottomOfView(_ view: Any, withOffset offset: <Type usr=\"s:12CoreGraphics7CGFloatV\">CGFloat<\/Type> = 0) -&gt; <Type usr=\"s:11FWFramework13FWLayoutChainC\">FWLayoutChain<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 8098
              },
              {
                "key.attribute" : "source.decl.attribute.discardableResult",
                "key.length" : 18,
                "key.offset" : 8075
              }
            ],
            "key.bodylength" : 111,
            "key.bodyoffset" : 8191,
            "key.column" : 17,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAutoLayout.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@discardableResult<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>topToBottomOfView<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>view<\/decl.var.parameter.name>: <decl.var.parameter.type><syntaxtype.keyword>Any<\/syntaxtype.keyword><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>withOffset<\/decl.var.parameter.argument_label> <decl.var.parameter.name>offset<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:12CoreGraphics7CGFloatV\">CGFloat<\/ref.struct><\/decl.var.parameter.type> = 0<\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:11FWFramework13FWLayoutChainC\">FWLayoutChain<\/ref.class><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 198,
            "key.line" : 252,
            "key.name" : "topToBottomOfView(_:withOffset:)",
            "key.namelength" : 62,
            "key.nameoffset" : 8110,
            "key.offset" : 8105,
            "key.parsed_declaration" : "public func topToBottomOfView(_ view: Any, withOffset offset: CGFloat = 0) -> FWLayoutChain",
            "key.parsed_scope.end" : 255,
            "key.parsed_scope.start" : 252,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework13FWLayoutChainC17topToBottomOfView_10withOffset8relationACyp_12CoreGraphics7CGFloatVSo16NSLayoutRelationVtF\">topToBottomOfView(_:withOffset:relation:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "(FWLayoutChain) -> (Any, CGFloat) -> FWLayoutChain",
            "key.typeusr" : "$s_10withOffset11FWFramework13FWLayoutChainCyp_12CoreGraphics7CGFloatVtcD",
            "key.usr" : "s:11FWFramework13FWLayoutChainC17topToBottomOfView_10withOffsetACyp_12CoreGraphics7CGFloatVtF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>@discardableResult public func topToBottomOfView(_ view: Any, withOffset offset: <Type usr=\"s:12CoreGraphics7CGFloatV\">CGFloat<\/Type> = 0, relation: <Type usr=\"c:objc(cs)NSLayoutConstraint\">NSLayoutConstraint<\/Type>.<Type usr=\"c:@E@NSLayoutRelation\">Relation<\/Type>) -&gt; <Type usr=\"s:11FWFramework13FWLayoutChainC\">FWLayoutChain<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 8336
              },
              {
                "key.attribute" : "source.decl.attribute.discardableResult",
                "key.length" : 18,
                "key.offset" : 8313
              }
            ],
            "key.bodylength" : 131,
            "key.bodyoffset" : 8468,
            "key.column" : 17,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAutoLayout.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@discardableResult<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>topToBottomOfView<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>view<\/decl.var.parameter.name>: <decl.var.parameter.type><syntaxtype.keyword>Any<\/syntaxtype.keyword><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>withOffset<\/decl.var.parameter.argument_label> <decl.var.parameter.name>offset<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:12CoreGraphics7CGFloatV\">CGFloat<\/ref.struct><\/decl.var.parameter.type> = 0<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>relation<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:objc(cs)NSLayoutConstraint\">NSLayoutConstraint<\/ref.class>.<ref.enum usr=\"c:@E@NSLayoutRelation\">Relation<\/ref.enum><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:11FWFramework13FWLayoutChainC\">FWLayoutChain<\/ref.class><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 257,
            "key.line" : 258,
            "key.name" : "topToBottomOfView(_:withOffset:relation:)",
            "key.namelength" : 101,
            "key.nameoffset" : 8348,
            "key.offset" : 8343,
            "key.parsed_declaration" : "public func topToBottomOfView(_ view: Any, withOffset offset: CGFloat = 0, relation: NSLayoutConstraint.Relation) -> FWLayoutChain",
            "key.parsed_scope.end" : 261,
            "key.parsed_scope.start" : 258,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework13FWLayoutChainC17topToBottomOfView_10withOffsetACyp_12CoreGraphics7CGFloatVtF\">topToBottomOfView(_:withOffset:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "(FWLayoutChain) -> (Any, CGFloat, NSLayoutConstraint.Relation) -> FWLayoutChain",
            "key.typeusr" : "$s_10withOffset8relation11FWFramework13FWLayoutChainCyp_12CoreGraphics7CGFloatVSo16NSLayoutRelationVtcD",
            "key.usr" : "s:11FWFramework13FWLayoutChainC17topToBottomOfView_10withOffset8relationACyp_12CoreGraphics7CGFloatVSo16NSLayoutRelationVtF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>@discardableResult public func bottomToTopOfView(_ view: Any, withOffset offset: <Type usr=\"s:12CoreGraphics7CGFloatV\">CGFloat<\/Type> = 0) -&gt; <Type usr=\"s:11FWFramework13FWLayoutChainC\">FWLayoutChain<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 8633
              },
              {
                "key.attribute" : "source.decl.attribute.discardableResult",
                "key.length" : 18,
                "key.offset" : 8610
              }
            ],
            "key.bodylength" : 111,
            "key.bodyoffset" : 8726,
            "key.column" : 17,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAutoLayout.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@discardableResult<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>bottomToTopOfView<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>view<\/decl.var.parameter.name>: <decl.var.parameter.type><syntaxtype.keyword>Any<\/syntaxtype.keyword><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>withOffset<\/decl.var.parameter.argument_label> <decl.var.parameter.name>offset<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:12CoreGraphics7CGFloatV\">CGFloat<\/ref.struct><\/decl.var.parameter.type> = 0<\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:11FWFramework13FWLayoutChainC\">FWLayoutChain<\/ref.class><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 198,
            "key.line" : 264,
            "key.name" : "bottomToTopOfView(_:withOffset:)",
            "key.namelength" : 62,
            "key.nameoffset" : 8645,
            "key.offset" : 8640,
            "key.parsed_declaration" : "public func bottomToTopOfView(_ view: Any, withOffset offset: CGFloat = 0) -> FWLayoutChain",
            "key.parsed_scope.end" : 267,
            "key.parsed_scope.start" : 264,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework13FWLayoutChainC17bottomToTopOfView_10withOffset8relationACyp_12CoreGraphics7CGFloatVSo16NSLayoutRelationVtF\">bottomToTopOfView(_:withOffset:relation:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "(FWLayoutChain) -> (Any, CGFloat) -> FWLayoutChain",
            "key.typeusr" : "$s_10withOffset11FWFramework13FWLayoutChainCyp_12CoreGraphics7CGFloatVtcD",
            "key.usr" : "s:11FWFramework13FWLayoutChainC17bottomToTopOfView_10withOffsetACyp_12CoreGraphics7CGFloatVtF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>@discardableResult public func bottomToTopOfView(_ view: Any, withOffset offset: <Type usr=\"s:12CoreGraphics7CGFloatV\">CGFloat<\/Type> = 0, relation: <Type usr=\"c:objc(cs)NSLayoutConstraint\">NSLayoutConstraint<\/Type>.<Type usr=\"c:@E@NSLayoutRelation\">Relation<\/Type>) -&gt; <Type usr=\"s:11FWFramework13FWLayoutChainC\">FWLayoutChain<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 8867
              },
              {
                "key.attribute" : "source.decl.attribute.discardableResult",
                "key.length" : 18,
                "key.offset" : 8844
              }
            ],
            "key.bodylength" : 131,
            "key.bodyoffset" : 8999,
            "key.column" : 17,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAutoLayout.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@discardableResult<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>bottomToTopOfView<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>view<\/decl.var.parameter.name>: <decl.var.parameter.type><syntaxtype.keyword>Any<\/syntaxtype.keyword><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>withOffset<\/decl.var.parameter.argument_label> <decl.var.parameter.name>offset<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:12CoreGraphics7CGFloatV\">CGFloat<\/ref.struct><\/decl.var.parameter.type> = 0<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>relation<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:objc(cs)NSLayoutConstraint\">NSLayoutConstraint<\/ref.class>.<ref.enum usr=\"c:@E@NSLayoutRelation\">Relation<\/ref.enum><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:11FWFramework13FWLayoutChainC\">FWLayoutChain<\/ref.class><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 257,
            "key.line" : 270,
            "key.name" : "bottomToTopOfView(_:withOffset:relation:)",
            "key.namelength" : 101,
            "key.nameoffset" : 8879,
            "key.offset" : 8874,
            "key.parsed_declaration" : "public func bottomToTopOfView(_ view: Any, withOffset offset: CGFloat = 0, relation: NSLayoutConstraint.Relation) -> FWLayoutChain",
            "key.parsed_scope.end" : 273,
            "key.parsed_scope.start" : 270,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework13FWLayoutChainC17bottomToTopOfView_10withOffsetACyp_12CoreGraphics7CGFloatVtF\">bottomToTopOfView(_:withOffset:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "(FWLayoutChain) -> (Any, CGFloat, NSLayoutConstraint.Relation) -> FWLayoutChain",
            "key.typeusr" : "$s_10withOffset8relation11FWFramework13FWLayoutChainCyp_12CoreGraphics7CGFloatVSo16NSLayoutRelationVtcD",
            "key.usr" : "s:11FWFramework13FWLayoutChainC17bottomToTopOfView_10withOffset8relationACyp_12CoreGraphics7CGFloatVSo16NSLayoutRelationVtF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>@discardableResult public func leftToRightOfView(_ view: Any, withOffset offset: <Type usr=\"s:12CoreGraphics7CGFloatV\">CGFloat<\/Type> = 0) -&gt; <Type usr=\"s:11FWFramework13FWLayoutChainC\">FWLayoutChain<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 9160
              },
              {
                "key.attribute" : "source.decl.attribute.discardableResult",
                "key.length" : 18,
                "key.offset" : 9137
              }
            ],
            "key.bodylength" : 111,
            "key.bodyoffset" : 9253,
            "key.column" : 17,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAutoLayout.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@discardableResult<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>leftToRightOfView<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>view<\/decl.var.parameter.name>: <decl.var.parameter.type><syntaxtype.keyword>Any<\/syntaxtype.keyword><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>withOffset<\/decl.var.parameter.argument_label> <decl.var.parameter.name>offset<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:12CoreGraphics7CGFloatV\">CGFloat<\/ref.struct><\/decl.var.parameter.type> = 0<\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:11FWFramework13FWLayoutChainC\">FWLayoutChain<\/ref.class><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 198,
            "key.line" : 276,
            "key.name" : "leftToRightOfView(_:withOffset:)",
            "key.namelength" : 62,
            "key.nameoffset" : 9172,
            "key.offset" : 9167,
            "key.parsed_declaration" : "public func leftToRightOfView(_ view: Any, withOffset offset: CGFloat = 0) -> FWLayoutChain",
            "key.parsed_scope.end" : 279,
            "key.parsed_scope.start" : 276,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework13FWLayoutChainC17leftToRightOfView_10withOffset8relationACyp_12CoreGraphics7CGFloatVSo16NSLayoutRelationVtF\">leftToRightOfView(_:withOffset:relation:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "(FWLayoutChain) -> (Any, CGFloat) -> FWLayoutChain",
            "key.typeusr" : "$s_10withOffset11FWFramework13FWLayoutChainCyp_12CoreGraphics7CGFloatVtcD",
            "key.usr" : "s:11FWFramework13FWLayoutChainC17leftToRightOfView_10withOffsetACyp_12CoreGraphics7CGFloatVtF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>@discardableResult public func leftToRightOfView(_ view: Any, withOffset offset: <Type usr=\"s:12CoreGraphics7CGFloatV\">CGFloat<\/Type> = 0, relation: <Type usr=\"c:objc(cs)NSLayoutConstraint\">NSLayoutConstraint<\/Type>.<Type usr=\"c:@E@NSLayoutRelation\">Relation<\/Type>) -&gt; <Type usr=\"s:11FWFramework13FWLayoutChainC\">FWLayoutChain<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 9398
              },
              {
                "key.attribute" : "source.decl.attribute.discardableResult",
                "key.length" : 18,
                "key.offset" : 9375
              }
            ],
            "key.bodylength" : 131,
            "key.bodyoffset" : 9530,
            "key.column" : 17,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAutoLayout.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@discardableResult<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>leftToRightOfView<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>view<\/decl.var.parameter.name>: <decl.var.parameter.type><syntaxtype.keyword>Any<\/syntaxtype.keyword><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>withOffset<\/decl.var.parameter.argument_label> <decl.var.parameter.name>offset<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:12CoreGraphics7CGFloatV\">CGFloat<\/ref.struct><\/decl.var.parameter.type> = 0<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>relation<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:objc(cs)NSLayoutConstraint\">NSLayoutConstraint<\/ref.class>.<ref.enum usr=\"c:@E@NSLayoutRelation\">Relation<\/ref.enum><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:11FWFramework13FWLayoutChainC\">FWLayoutChain<\/ref.class><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 257,
            "key.line" : 282,
            "key.name" : "leftToRightOfView(_:withOffset:relation:)",
            "key.namelength" : 101,
            "key.nameoffset" : 9410,
            "key.offset" : 9405,
            "key.parsed_declaration" : "public func leftToRightOfView(_ view: Any, withOffset offset: CGFloat = 0, relation: NSLayoutConstraint.Relation) -> FWLayoutChain",
            "key.parsed_scope.end" : 285,
            "key.parsed_scope.start" : 282,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework13FWLayoutChainC17leftToRightOfView_10withOffsetACyp_12CoreGraphics7CGFloatVtF\">leftToRightOfView(_:withOffset:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "(FWLayoutChain) -> (Any, CGFloat, NSLayoutConstraint.Relation) -> FWLayoutChain",
            "key.typeusr" : "$s_10withOffset8relation11FWFramework13FWLayoutChainCyp_12CoreGraphics7CGFloatVSo16NSLayoutRelationVtcD",
            "key.usr" : "s:11FWFramework13FWLayoutChainC17leftToRightOfView_10withOffset8relationACyp_12CoreGraphics7CGFloatVSo16NSLayoutRelationVtF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>@discardableResult public func rightToLeftOfView(_ view: Any, withOffset offset: <Type usr=\"s:12CoreGraphics7CGFloatV\">CGFloat<\/Type> = 0) -&gt; <Type usr=\"s:11FWFramework13FWLayoutChainC\">FWLayoutChain<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 9695
              },
              {
                "key.attribute" : "source.decl.attribute.discardableResult",
                "key.length" : 18,
                "key.offset" : 9672
              }
            ],
            "key.bodylength" : 111,
            "key.bodyoffset" : 9788,
            "key.column" : 17,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAutoLayout.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@discardableResult<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>rightToLeftOfView<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>view<\/decl.var.parameter.name>: <decl.var.parameter.type><syntaxtype.keyword>Any<\/syntaxtype.keyword><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>withOffset<\/decl.var.parameter.argument_label> <decl.var.parameter.name>offset<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:12CoreGraphics7CGFloatV\">CGFloat<\/ref.struct><\/decl.var.parameter.type> = 0<\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:11FWFramework13FWLayoutChainC\">FWLayoutChain<\/ref.class><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 198,
            "key.line" : 288,
            "key.name" : "rightToLeftOfView(_:withOffset:)",
            "key.namelength" : 62,
            "key.nameoffset" : 9707,
            "key.offset" : 9702,
            "key.parsed_declaration" : "public func rightToLeftOfView(_ view: Any, withOffset offset: CGFloat = 0) -> FWLayoutChain",
            "key.parsed_scope.end" : 291,
            "key.parsed_scope.start" : 288,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework13FWLayoutChainC17rightToLeftOfView_10withOffset8relationACyp_12CoreGraphics7CGFloatVSo16NSLayoutRelationVtF\">rightToLeftOfView(_:withOffset:relation:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "(FWLayoutChain) -> (Any, CGFloat) -> FWLayoutChain",
            "key.typeusr" : "$s_10withOffset11FWFramework13FWLayoutChainCyp_12CoreGraphics7CGFloatVtcD",
            "key.usr" : "s:11FWFramework13FWLayoutChainC17rightToLeftOfView_10withOffsetACyp_12CoreGraphics7CGFloatVtF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>@discardableResult public func rightToLeftOfView(_ view: Any, withOffset offset: <Type usr=\"s:12CoreGraphics7CGFloatV\">CGFloat<\/Type> = 0, relation: <Type usr=\"c:objc(cs)NSLayoutConstraint\">NSLayoutConstraint<\/Type>.<Type usr=\"c:@E@NSLayoutRelation\">Relation<\/Type>) -&gt; <Type usr=\"s:11FWFramework13FWLayoutChainC\">FWLayoutChain<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 9929
              },
              {
                "key.attribute" : "source.decl.attribute.discardableResult",
                "key.length" : 18,
                "key.offset" : 9906
              }
            ],
            "key.bodylength" : 131,
            "key.bodyoffset" : 10061,
            "key.column" : 17,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAutoLayout.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@discardableResult<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>rightToLeftOfView<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>view<\/decl.var.parameter.name>: <decl.var.parameter.type><syntaxtype.keyword>Any<\/syntaxtype.keyword><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>withOffset<\/decl.var.parameter.argument_label> <decl.var.parameter.name>offset<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:12CoreGraphics7CGFloatV\">CGFloat<\/ref.struct><\/decl.var.parameter.type> = 0<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>relation<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:objc(cs)NSLayoutConstraint\">NSLayoutConstraint<\/ref.class>.<ref.enum usr=\"c:@E@NSLayoutRelation\">Relation<\/ref.enum><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:11FWFramework13FWLayoutChainC\">FWLayoutChain<\/ref.class><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 257,
            "key.line" : 294,
            "key.name" : "rightToLeftOfView(_:withOffset:relation:)",
            "key.namelength" : 101,
            "key.nameoffset" : 9941,
            "key.offset" : 9936,
            "key.parsed_declaration" : "public func rightToLeftOfView(_ view: Any, withOffset offset: CGFloat = 0, relation: NSLayoutConstraint.Relation) -> FWLayoutChain",
            "key.parsed_scope.end" : 297,
            "key.parsed_scope.start" : 294,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework13FWLayoutChainC17rightToLeftOfView_10withOffsetACyp_12CoreGraphics7CGFloatVtF\">rightToLeftOfView(_:withOffset:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "(FWLayoutChain) -> (Any, CGFloat, NSLayoutConstraint.Relation) -> FWLayoutChain",
            "key.typeusr" : "$s_10withOffset8relation11FWFramework13FWLayoutChainCyp_12CoreGraphics7CGFloatVSo16NSLayoutRelationVtcD",
            "key.usr" : "s:11FWFramework13FWLayoutChainC17rightToLeftOfView_10withOffset8relationACyp_12CoreGraphics7CGFloatVSo16NSLayoutRelationVtF"
          },
          {
            "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
            "key.length" : 16,
            "key.name" : "MARK: - SafeArea",
            "key.namelength" : 0,
            "key.nameoffset" : 0,
            "key.offset" : 10202
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>@discardableResult public func centerToSafeArea(_ offset: <Type usr=\"c:@S@CGPoint\">CGPoint<\/Type> = CGPoint.zero) -&gt; <Type usr=\"s:11FWFramework13FWLayoutChainC\">FWLayoutChain<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 10247
              },
              {
                "key.attribute" : "source.decl.attribute.discardableResult",
                "key.length" : 18,
                "key.offset" : 10224
              }
            ],
            "key.bodylength" : 92,
            "key.bodyoffset" : 10328,
            "key.column" : 17,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAutoLayout.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@discardableResult<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>centerToSafeArea<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>offset<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"c:@S@CGPoint\">CGPoint<\/ref.struct><\/decl.var.parameter.type> = CGPoint.zero<\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:11FWFramework13FWLayoutChainC\">FWLayoutChain<\/ref.class><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 167,
            "key.line" : 302,
            "key.name" : "centerToSafeArea(_:)",
            "key.namelength" : 50,
            "key.nameoffset" : 10259,
            "key.offset" : 10254,
            "key.parsed_declaration" : "public func centerToSafeArea(_ offset: CGPoint = CGPoint.zero) -> FWLayoutChain",
            "key.parsed_scope.end" : 305,
            "key.parsed_scope.start" : 302,
            "key.substructure" : [

            ],
            "key.typename" : "(FWLayoutChain) -> (CGPoint) -> FWLayoutChain",
            "key.typeusr" : "$sy11FWFramework13FWLayoutChainCSo7CGPointVcD",
            "key.usr" : "s:11FWFramework13FWLayoutChainC16centerToSafeAreayACSo7CGPointVF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>@discardableResult public func centerXToSafeArea(_ offset: <Type usr=\"s:12CoreGraphics7CGFloatV\">CGFloat<\/Type> = 0) -&gt; <Type usr=\"s:11FWFramework13FWLayoutChainC\">FWLayoutChain<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 10450
              },
              {
                "key.attribute" : "source.decl.attribute.discardableResult",
                "key.length" : 18,
                "key.offset" : 10427
              }
            ],
            "key.bodylength" : 102,
            "key.bodyoffset" : 10521,
            "key.column" : 17,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAutoLayout.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@discardableResult<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>centerXToSafeArea<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>offset<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:12CoreGraphics7CGFloatV\">CGFloat<\/ref.struct><\/decl.var.parameter.type> = 0<\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:11FWFramework13FWLayoutChainC\">FWLayoutChain<\/ref.class><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 167,
            "key.line" : 308,
            "key.name" : "centerXToSafeArea(_:)",
            "key.namelength" : 40,
            "key.nameoffset" : 10462,
            "key.offset" : 10457,
            "key.parsed_declaration" : "public func centerXToSafeArea(_ offset: CGFloat = 0) -> FWLayoutChain",
            "key.parsed_scope.end" : 311,
            "key.parsed_scope.start" : 308,
            "key.substructure" : [

            ],
            "key.typename" : "(FWLayoutChain) -> (CGFloat) -> FWLayoutChain",
            "key.typeusr" : "$sy11FWFramework13FWLayoutChainC12CoreGraphics7CGFloatVcD",
            "key.usr" : "s:11FWFramework13FWLayoutChainC17centerXToSafeAreayAC12CoreGraphics7CGFloatVF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>@discardableResult public func centerYToSafeArea(_ offset: <Type usr=\"s:12CoreGraphics7CGFloatV\">CGFloat<\/Type> = 0) -&gt; <Type usr=\"s:11FWFramework13FWLayoutChainC\">FWLayoutChain<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 10653
              },
              {
                "key.attribute" : "source.decl.attribute.discardableResult",
                "key.length" : 18,
                "key.offset" : 10630
              }
            ],
            "key.bodylength" : 102,
            "key.bodyoffset" : 10724,
            "key.column" : 17,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAutoLayout.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@discardableResult<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>centerYToSafeArea<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>offset<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:12CoreGraphics7CGFloatV\">CGFloat<\/ref.struct><\/decl.var.parameter.type> = 0<\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:11FWFramework13FWLayoutChainC\">FWLayoutChain<\/ref.class><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 167,
            "key.line" : 314,
            "key.name" : "centerYToSafeArea(_:)",
            "key.namelength" : 40,
            "key.nameoffset" : 10665,
            "key.offset" : 10660,
            "key.parsed_declaration" : "public func centerYToSafeArea(_ offset: CGFloat = 0) -> FWLayoutChain",
            "key.parsed_scope.end" : 317,
            "key.parsed_scope.start" : 314,
            "key.substructure" : [

            ],
            "key.typename" : "(FWLayoutChain) -> (CGFloat) -> FWLayoutChain",
            "key.typeusr" : "$sy11FWFramework13FWLayoutChainC12CoreGraphics7CGFloatVcD",
            "key.usr" : "s:11FWFramework13FWLayoutChainC17centerYToSafeAreayAC12CoreGraphics7CGFloatVF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>@discardableResult public func edgesToSafeArea(_ insets: <Type usr=\"c:@S@UIEdgeInsets\">UIEdgeInsets<\/Type> = UIEdgeInsets.zero) -&gt; <Type usr=\"s:11FWFramework13FWLayoutChainC\">FWLayoutChain<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 10856
              },
              {
                "key.attribute" : "source.decl.attribute.discardableResult",
                "key.length" : 18,
                "key.offset" : 10833
              }
            ],
            "key.bodylength" : 83,
            "key.bodyoffset" : 10946,
            "key.column" : 17,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAutoLayout.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@discardableResult<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>edgesToSafeArea<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>insets<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"c:@S@UIEdgeInsets\">UIEdgeInsets<\/ref.struct><\/decl.var.parameter.type> = UIEdgeInsets.zero<\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:11FWFramework13FWLayoutChainC\">FWLayoutChain<\/ref.class><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 167,
            "key.line" : 320,
            "key.name" : "edgesToSafeArea(_:)",
            "key.namelength" : 59,
            "key.nameoffset" : 10868,
            "key.offset" : 10863,
            "key.parsed_declaration" : "public func edgesToSafeArea(_ insets: UIEdgeInsets = UIEdgeInsets.zero) -> FWLayoutChain",
            "key.parsed_scope.end" : 323,
            "key.parsed_scope.start" : 320,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework13FWLayoutChainC15edgesToSafeArea_13excludingEdgeACSo12UIEdgeInsetsV_So17NSLayoutAttributeVtF\">edgesToSafeArea(_:excludingEdge:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "(FWLayoutChain) -> (UIEdgeInsets) -> FWLayoutChain",
            "key.typeusr" : "$sy11FWFramework13FWLayoutChainCSo12UIEdgeInsetsVcD",
            "key.usr" : "s:11FWFramework13FWLayoutChainC15edgesToSafeAreayACSo12UIEdgeInsetsVF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>@discardableResult public func edgesToSafeArea(_ insets: <Type usr=\"c:@S@UIEdgeInsets\">UIEdgeInsets<\/Type> = UIEdgeInsets.zero, excludingEdge edge: <Type usr=\"c:objc(cs)NSLayoutConstraint\">NSLayoutConstraint<\/Type>.<Type usr=\"c:@E@NSLayoutAttribute\">Attribute<\/Type>) -&gt; <Type usr=\"s:11FWFramework13FWLayoutChainC\">FWLayoutChain<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 11063
              },
              {
                "key.attribute" : "source.decl.attribute.discardableResult",
                "key.length" : 18,
                "key.offset" : 11040
              }
            ],
            "key.bodylength" : 104,
            "key.bodyoffset" : 11203,
            "key.column" : 17,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAutoLayout.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@discardableResult<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>edgesToSafeArea<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>insets<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"c:@S@UIEdgeInsets\">UIEdgeInsets<\/ref.struct><\/decl.var.parameter.type> = UIEdgeInsets.zero<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>excludingEdge<\/decl.var.parameter.argument_label> <decl.var.parameter.name>edge<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"c:objc(cs)NSLayoutConstraint\">NSLayoutConstraint<\/ref.class>.<ref.enum usr=\"c:@E@NSLayoutAttribute\">Attribute<\/ref.enum><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:11FWFramework13FWLayoutChainC\">FWLayoutChain<\/ref.class><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 238,
            "key.line" : 326,
            "key.name" : "edgesToSafeArea(_:excludingEdge:)",
            "key.namelength" : 109,
            "key.nameoffset" : 11075,
            "key.offset" : 11070,
            "key.parsed_declaration" : "public func edgesToSafeArea(_ insets: UIEdgeInsets = UIEdgeInsets.zero, excludingEdge edge: NSLayoutConstraint.Attribute) -> FWLayoutChain",
            "key.parsed_scope.end" : 329,
            "key.parsed_scope.start" : 326,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework13FWLayoutChainC15edgesToSafeAreayACSo12UIEdgeInsetsVF\">edgesToSafeArea(_:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "(FWLayoutChain) -> (UIEdgeInsets, NSLayoutConstraint.Attribute) -> FWLayoutChain",
            "key.typeusr" : "$s_13excludingEdge11FWFramework13FWLayoutChainCSo12UIEdgeInsetsV_So17NSLayoutAttributeVtcD",
            "key.usr" : "s:11FWFramework13FWLayoutChainC15edgesToSafeArea_13excludingEdgeACSo12UIEdgeInsetsV_So17NSLayoutAttributeVtF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>@discardableResult public func edgesToSafeAreaHorizontal() -&gt; <Type usr=\"s:11FWFramework13FWLayoutChainC\">FWLayoutChain<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 11337
              },
              {
                "key.attribute" : "source.decl.attribute.discardableResult",
                "key.length" : 18,
                "key.offset" : 11314
              }
            ],
            "key.bodylength" : 81,
            "key.bodyoffset" : 11395,
            "key.column" : 17,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAutoLayout.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@discardableResult<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>edgesToSafeAreaHorizontal<\/decl.name>() -&gt; <decl.function.returntype><ref.class usr=\"s:11FWFramework13FWLayoutChainC\">FWLayoutChain<\/ref.class><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 133,
            "key.line" : 332,
            "key.name" : "edgesToSafeAreaHorizontal()",
            "key.namelength" : 27,
            "key.nameoffset" : 11349,
            "key.offset" : 11344,
            "key.parsed_declaration" : "public func edgesToSafeAreaHorizontal() -> FWLayoutChain",
            "key.parsed_scope.end" : 335,
            "key.parsed_scope.start" : 332,
            "key.substructure" : [

            ],
            "key.typename" : "(FWLayoutChain) -> () -> FWLayoutChain",
            "key.typeusr" : "$s11FWFramework13FWLayoutChainCycD",
            "key.usr" : "s:11FWFramework13FWLayoutChainC25edgesToSafeAreaHorizontalACyF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>@discardableResult public func edgesToSafeAreaVertical() -&gt; <Type usr=\"s:11FWFramework13FWLayoutChainC\">FWLayoutChain<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 11506
              },
              {
                "key.attribute" : "source.decl.attribute.discardableResult",
                "key.length" : 18,
                "key.offset" : 11483
              }
            ],
            "key.bodylength" : 79,
            "key.bodyoffset" : 11562,
            "key.column" : 17,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAutoLayout.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@discardableResult<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>edgesToSafeAreaVertical<\/decl.name>() -&gt; <decl.function.returntype><ref.class usr=\"s:11FWFramework13FWLayoutChainC\">FWLayoutChain<\/ref.class><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 129,
            "key.line" : 338,
            "key.name" : "edgesToSafeAreaVertical()",
            "key.namelength" : 25,
            "key.nameoffset" : 11518,
            "key.offset" : 11513,
            "key.parsed_declaration" : "public func edgesToSafeAreaVertical() -> FWLayoutChain",
            "key.parsed_scope.end" : 341,
            "key.parsed_scope.start" : 338,
            "key.substructure" : [

            ],
            "key.typename" : "(FWLayoutChain) -> () -> FWLayoutChain",
            "key.typeusr" : "$s11FWFramework13FWLayoutChainCycD",
            "key.usr" : "s:11FWFramework13FWLayoutChainC23edgesToSafeAreaVerticalACyF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>@discardableResult public func topToSafeArea(_ inset: <Type usr=\"s:12CoreGraphics7CGFloatV\">CGFloat<\/Type> = 0) -&gt; <Type usr=\"s:11FWFramework13FWLayoutChainC\">FWLayoutChain<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 11671
              },
              {
                "key.attribute" : "source.decl.attribute.discardableResult",
                "key.length" : 18,
                "key.offset" : 11648
              }
            ],
            "key.bodylength" : 94,
            "key.bodyoffset" : 11737,
            "key.column" : 17,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAutoLayout.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@discardableResult<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>topToSafeArea<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>inset<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:12CoreGraphics7CGFloatV\">CGFloat<\/ref.struct><\/decl.var.parameter.type> = 0<\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:11FWFramework13FWLayoutChainC\">FWLayoutChain<\/ref.class><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 154,
            "key.line" : 344,
            "key.name" : "topToSafeArea(_:)",
            "key.namelength" : 35,
            "key.nameoffset" : 11683,
            "key.offset" : 11678,
            "key.parsed_declaration" : "public func topToSafeArea(_ inset: CGFloat = 0) -> FWLayoutChain",
            "key.parsed_scope.end" : 347,
            "key.parsed_scope.start" : 344,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework13FWLayoutChainC13topToSafeArea_8relationAC12CoreGraphics7CGFloatV_So16NSLayoutRelationVtF\">topToSafeArea(_:relation:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "(FWLayoutChain) -> (CGFloat) -> FWLayoutChain",
            "key.typeusr" : "$sy11FWFramework13FWLayoutChainC12CoreGraphics7CGFloatVcD",
            "key.usr" : "s:11FWFramework13FWLayoutChainC13topToSafeAreayAC12CoreGraphics7CGFloatVF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>@discardableResult public func topToSafeArea(_ inset: <Type usr=\"s:12CoreGraphics7CGFloatV\">CGFloat<\/Type> = 0, relation: <Type usr=\"c:objc(cs)NSLayoutConstraint\">NSLayoutConstraint<\/Type>.<Type usr=\"c:@E@NSLayoutRelation\">Relation<\/Type>) -&gt; <Type usr=\"s:11FWFramework13FWLayoutChainC\">FWLayoutChain<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 11865
              },
              {
                "key.attribute" : "source.decl.attribute.discardableResult",
                "key.length" : 18,
                "key.offset" : 11842
              }
            ],
            "key.bodylength" : 114,
            "key.bodyoffset" : 11970,
            "key.column" : 17,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAutoLayout.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@discardableResult<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>topToSafeArea<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>inset<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:12CoreGraphics7CGFloatV\">CGFloat<\/ref.struct><\/decl.var.parameter.type> = 0<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>relation<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:objc(cs)NSLayoutConstraint\">NSLayoutConstraint<\/ref.class>.<ref.enum usr=\"c:@E@NSLayoutRelation\">Relation<\/ref.enum><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:11FWFramework13FWLayoutChainC\">FWLayoutChain<\/ref.class><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 213,
            "key.line" : 350,
            "key.name" : "topToSafeArea(_:relation:)",
            "key.namelength" : 74,
            "key.nameoffset" : 11877,
            "key.offset" : 11872,
            "key.parsed_declaration" : "public func topToSafeArea(_ inset: CGFloat = 0, relation: NSLayoutConstraint.Relation) -> FWLayoutChain",
            "key.parsed_scope.end" : 353,
            "key.parsed_scope.start" : 350,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework13FWLayoutChainC13topToSafeAreayAC12CoreGraphics7CGFloatVF\">topToSafeArea(_:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "(FWLayoutChain) -> (CGFloat, NSLayoutConstraint.Relation) -> FWLayoutChain",
            "key.typeusr" : "$s_8relation11FWFramework13FWLayoutChainC12CoreGraphics7CGFloatV_So16NSLayoutRelationVtcD",
            "key.usr" : "s:11FWFramework13FWLayoutChainC13topToSafeArea_8relationAC12CoreGraphics7CGFloatV_So16NSLayoutRelationVtF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>@discardableResult public func bottomToSafeArea(_ inset: <Type usr=\"s:12CoreGraphics7CGFloatV\">CGFloat<\/Type> = 0) -&gt; <Type usr=\"s:11FWFramework13FWLayoutChainC\">FWLayoutChain<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 12118
              },
              {
                "key.attribute" : "source.decl.attribute.discardableResult",
                "key.length" : 18,
                "key.offset" : 12095
              }
            ],
            "key.bodylength" : 97,
            "key.bodyoffset" : 12187,
            "key.column" : 17,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAutoLayout.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@discardableResult<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>bottomToSafeArea<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>inset<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:12CoreGraphics7CGFloatV\">CGFloat<\/ref.struct><\/decl.var.parameter.type> = 0<\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:11FWFramework13FWLayoutChainC\">FWLayoutChain<\/ref.class><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 160,
            "key.line" : 356,
            "key.name" : "bottomToSafeArea(_:)",
            "key.namelength" : 38,
            "key.nameoffset" : 12130,
            "key.offset" : 12125,
            "key.parsed_declaration" : "public func bottomToSafeArea(_ inset: CGFloat = 0) -> FWLayoutChain",
            "key.parsed_scope.end" : 359,
            "key.parsed_scope.start" : 356,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework13FWLayoutChainC16bottomToSafeArea_8relationAC12CoreGraphics7CGFloatV_So16NSLayoutRelationVtF\">bottomToSafeArea(_:relation:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "(FWLayoutChain) -> (CGFloat) -> FWLayoutChain",
            "key.typeusr" : "$sy11FWFramework13FWLayoutChainC12CoreGraphics7CGFloatVcD",
            "key.usr" : "s:11FWFramework13FWLayoutChainC16bottomToSafeAreayAC12CoreGraphics7CGFloatVF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>@discardableResult public func bottomToSafeArea(_ inset: <Type usr=\"s:12CoreGraphics7CGFloatV\">CGFloat<\/Type> = 0, relation: <Type usr=\"c:objc(cs)NSLayoutConstraint\">NSLayoutConstraint<\/Type>.<Type usr=\"c:@E@NSLayoutRelation\">Relation<\/Type>) -&gt; <Type usr=\"s:11FWFramework13FWLayoutChainC\">FWLayoutChain<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 12314
              },
              {
                "key.attribute" : "source.decl.attribute.discardableResult",
                "key.length" : 18,
                "key.offset" : 12291
              }
            ],
            "key.bodylength" : 117,
            "key.bodyoffset" : 12422,
            "key.column" : 17,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAutoLayout.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@discardableResult<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>bottomToSafeArea<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>inset<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:12CoreGraphics7CGFloatV\">CGFloat<\/ref.struct><\/decl.var.parameter.type> = 0<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>relation<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:objc(cs)NSLayoutConstraint\">NSLayoutConstraint<\/ref.class>.<ref.enum usr=\"c:@E@NSLayoutRelation\">Relation<\/ref.enum><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:11FWFramework13FWLayoutChainC\">FWLayoutChain<\/ref.class><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 219,
            "key.line" : 362,
            "key.name" : "bottomToSafeArea(_:relation:)",
            "key.namelength" : 77,
            "key.nameoffset" : 12326,
            "key.offset" : 12321,
            "key.parsed_declaration" : "public func bottomToSafeArea(_ inset: CGFloat = 0, relation: NSLayoutConstraint.Relation) -> FWLayoutChain",
            "key.parsed_scope.end" : 365,
            "key.parsed_scope.start" : 362,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework13FWLayoutChainC16bottomToSafeAreayAC12CoreGraphics7CGFloatVF\">bottomToSafeArea(_:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "(FWLayoutChain) -> (CGFloat, NSLayoutConstraint.Relation) -> FWLayoutChain",
            "key.typeusr" : "$s_8relation11FWFramework13FWLayoutChainC12CoreGraphics7CGFloatV_So16NSLayoutRelationVtcD",
            "key.usr" : "s:11FWFramework13FWLayoutChainC16bottomToSafeArea_8relationAC12CoreGraphics7CGFloatV_So16NSLayoutRelationVtF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>@discardableResult public func leftToSafeArea(_ inset: <Type usr=\"s:12CoreGraphics7CGFloatV\">CGFloat<\/Type> = 0) -&gt; <Type usr=\"s:11FWFramework13FWLayoutChainC\">FWLayoutChain<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 12569
              },
              {
                "key.attribute" : "source.decl.attribute.discardableResult",
                "key.length" : 18,
                "key.offset" : 12546
              }
            ],
            "key.bodylength" : 95,
            "key.bodyoffset" : 12636,
            "key.column" : 17,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAutoLayout.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@discardableResult<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>leftToSafeArea<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>inset<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:12CoreGraphics7CGFloatV\">CGFloat<\/ref.struct><\/decl.var.parameter.type> = 0<\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:11FWFramework13FWLayoutChainC\">FWLayoutChain<\/ref.class><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 156,
            "key.line" : 368,
            "key.name" : "leftToSafeArea(_:)",
            "key.namelength" : 36,
            "key.nameoffset" : 12581,
            "key.offset" : 12576,
            "key.parsed_declaration" : "public func leftToSafeArea(_ inset: CGFloat = 0) -> FWLayoutChain",
            "key.parsed_scope.end" : 371,
            "key.parsed_scope.start" : 368,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework13FWLayoutChainC14leftToSafeArea_8relationAC12CoreGraphics7CGFloatV_So16NSLayoutRelationVtF\">leftToSafeArea(_:relation:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "(FWLayoutChain) -> (CGFloat) -> FWLayoutChain",
            "key.typeusr" : "$sy11FWFramework13FWLayoutChainC12CoreGraphics7CGFloatVcD",
            "key.usr" : "s:11FWFramework13FWLayoutChainC14leftToSafeAreayAC12CoreGraphics7CGFloatVF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>@discardableResult public func leftToSafeArea(_ inset: <Type usr=\"s:12CoreGraphics7CGFloatV\">CGFloat<\/Type> = 0, relation: <Type usr=\"c:objc(cs)NSLayoutConstraint\">NSLayoutConstraint<\/Type>.<Type usr=\"c:@E@NSLayoutRelation\">Relation<\/Type>) -&gt; <Type usr=\"s:11FWFramework13FWLayoutChainC\">FWLayoutChain<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 12765
              },
              {
                "key.attribute" : "source.decl.attribute.discardableResult",
                "key.length" : 18,
                "key.offset" : 12742
              }
            ],
            "key.bodylength" : 115,
            "key.bodyoffset" : 12871,
            "key.column" : 17,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAutoLayout.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@discardableResult<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>leftToSafeArea<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>inset<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:12CoreGraphics7CGFloatV\">CGFloat<\/ref.struct><\/decl.var.parameter.type> = 0<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>relation<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:objc(cs)NSLayoutConstraint\">NSLayoutConstraint<\/ref.class>.<ref.enum usr=\"c:@E@NSLayoutRelation\">Relation<\/ref.enum><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:11FWFramework13FWLayoutChainC\">FWLayoutChain<\/ref.class><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 215,
            "key.line" : 374,
            "key.name" : "leftToSafeArea(_:relation:)",
            "key.namelength" : 75,
            "key.nameoffset" : 12777,
            "key.offset" : 12772,
            "key.parsed_declaration" : "public func leftToSafeArea(_ inset: CGFloat = 0, relation: NSLayoutConstraint.Relation) -> FWLayoutChain",
            "key.parsed_scope.end" : 377,
            "key.parsed_scope.start" : 374,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework13FWLayoutChainC14leftToSafeAreayAC12CoreGraphics7CGFloatVF\">leftToSafeArea(_:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "(FWLayoutChain) -> (CGFloat, NSLayoutConstraint.Relation) -> FWLayoutChain",
            "key.typeusr" : "$s_8relation11FWFramework13FWLayoutChainC12CoreGraphics7CGFloatV_So16NSLayoutRelationVtcD",
            "key.usr" : "s:11FWFramework13FWLayoutChainC14leftToSafeArea_8relationAC12CoreGraphics7CGFloatV_So16NSLayoutRelationVtF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>@discardableResult public func rightToSafeArea(_ inset: <Type usr=\"s:12CoreGraphics7CGFloatV\">CGFloat<\/Type> = 0) -&gt; <Type usr=\"s:11FWFramework13FWLayoutChainC\">FWLayoutChain<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 13020
              },
              {
                "key.attribute" : "source.decl.attribute.discardableResult",
                "key.length" : 18,
                "key.offset" : 12997
              }
            ],
            "key.bodylength" : 96,
            "key.bodyoffset" : 13088,
            "key.column" : 17,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAutoLayout.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@discardableResult<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>rightToSafeArea<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>inset<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:12CoreGraphics7CGFloatV\">CGFloat<\/ref.struct><\/decl.var.parameter.type> = 0<\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:11FWFramework13FWLayoutChainC\">FWLayoutChain<\/ref.class><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 158,
            "key.line" : 380,
            "key.name" : "rightToSafeArea(_:)",
            "key.namelength" : 37,
            "key.nameoffset" : 13032,
            "key.offset" : 13027,
            "key.parsed_declaration" : "public func rightToSafeArea(_ inset: CGFloat = 0) -> FWLayoutChain",
            "key.parsed_scope.end" : 383,
            "key.parsed_scope.start" : 380,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework13FWLayoutChainC15rightToSafeArea_8relationAC12CoreGraphics7CGFloatV_So16NSLayoutRelationVtF\">rightToSafeArea(_:relation:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "(FWLayoutChain) -> (CGFloat) -> FWLayoutChain",
            "key.typeusr" : "$sy11FWFramework13FWLayoutChainC12CoreGraphics7CGFloatVcD",
            "key.usr" : "s:11FWFramework13FWLayoutChainC15rightToSafeAreayAC12CoreGraphics7CGFloatVF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>@discardableResult public func rightToSafeArea(_ inset: <Type usr=\"s:12CoreGraphics7CGFloatV\">CGFloat<\/Type> = 0, relation: <Type usr=\"c:objc(cs)NSLayoutConstraint\">NSLayoutConstraint<\/Type>.<Type usr=\"c:@E@NSLayoutRelation\">Relation<\/Type>) -&gt; <Type usr=\"s:11FWFramework13FWLayoutChainC\">FWLayoutChain<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 13214
              },
              {
                "key.attribute" : "source.decl.attribute.discardableResult",
                "key.length" : 18,
                "key.offset" : 13191
              }
            ],
            "key.bodylength" : 116,
            "key.bodyoffset" : 13321,
            "key.column" : 17,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAutoLayout.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@discardableResult<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>rightToSafeArea<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>inset<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:12CoreGraphics7CGFloatV\">CGFloat<\/ref.struct><\/decl.var.parameter.type> = 0<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>relation<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:objc(cs)NSLayoutConstraint\">NSLayoutConstraint<\/ref.class>.<ref.enum usr=\"c:@E@NSLayoutRelation\">Relation<\/ref.enum><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:11FWFramework13FWLayoutChainC\">FWLayoutChain<\/ref.class><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 217,
            "key.line" : 386,
            "key.name" : "rightToSafeArea(_:relation:)",
            "key.namelength" : 76,
            "key.nameoffset" : 13226,
            "key.offset" : 13221,
            "key.parsed_declaration" : "public func rightToSafeArea(_ inset: CGFloat = 0, relation: NSLayoutConstraint.Relation) -> FWLayoutChain",
            "key.parsed_scope.end" : 389,
            "key.parsed_scope.start" : 386,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework13FWLayoutChainC15rightToSafeAreayAC12CoreGraphics7CGFloatVF\">rightToSafeArea(_:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "(FWLayoutChain) -> (CGFloat, NSLayoutConstraint.Relation) -> FWLayoutChain",
            "key.typeusr" : "$s_8relation11FWFramework13FWLayoutChainC12CoreGraphics7CGFloatV_So16NSLayoutRelationVtcD",
            "key.usr" : "s:11FWFramework13FWLayoutChainC15rightToSafeArea_8relationAC12CoreGraphics7CGFloatV_So16NSLayoutRelationVtF"
          },
          {
            "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
            "key.length" : 17,
            "key.name" : "MARK: - Dimension",
            "key.namelength" : 0,
            "key.nameoffset" : 0,
            "key.offset" : 13447
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>@discardableResult public func size(_ size: <Type usr=\"c:@S@CGSize\">CGSize<\/Type>) -&gt; <Type usr=\"s:11FWFramework13FWLayoutChainC\">FWLayoutChain<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 13493
              },
              {
                "key.attribute" : "source.decl.attribute.discardableResult",
                "key.length" : 18,
                "key.offset" : 13470
              }
            ],
            "key.bodylength" : 65,
            "key.bodyoffset" : 13544,
            "key.column" : 17,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAutoLayout.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@discardableResult<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>size<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>size<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"c:@S@CGSize\">CGSize<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:11FWFramework13FWLayoutChainC\">FWLayoutChain<\/ref.class><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 110,
            "key.line" : 394,
            "key.name" : "size(_:)",
            "key.namelength" : 20,
            "key.nameoffset" : 13505,
            "key.offset" : 13500,
            "key.parsed_declaration" : "public func size(_ size: CGSize) -> FWLayoutChain",
            "key.parsed_scope.end" : 397,
            "key.parsed_scope.start" : 394,
            "key.substructure" : [

            ],
            "key.typename" : "(FWLayoutChain) -> (CGSize) -> FWLayoutChain",
            "key.typeusr" : "$sy11FWFramework13FWLayoutChainCSo6CGSizeVcD",
            "key.usr" : "s:11FWFramework13FWLayoutChainC4sizeyACSo6CGSizeVF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>@discardableResult public func width(_ width: <Type usr=\"s:12CoreGraphics7CGFloatV\">CGFloat<\/Type>, relation: <Type usr=\"c:objc(cs)NSLayoutConstraint\">NSLayoutConstraint<\/Type>.<Type usr=\"c:@E@NSLayoutRelation\">Relation<\/Type> = NSLayoutConstraint.Relation.equal) -&gt; <Type usr=\"s:11FWFramework13FWLayoutChainC\">FWLayoutChain<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 13639
              },
              {
                "key.attribute" : "source.decl.attribute.discardableResult",
                "key.length" : 18,
                "key.offset" : 13616
              }
            ],
            "key.bodylength" : 97,
            "key.bodyoffset" : 13768,
            "key.column" : 17,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAutoLayout.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@discardableResult<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>width<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>width<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:12CoreGraphics7CGFloatV\">CGFloat<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>relation<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:objc(cs)NSLayoutConstraint\">NSLayoutConstraint<\/ref.class>.<ref.enum usr=\"c:@E@NSLayoutRelation\">Relation<\/ref.enum><\/decl.var.parameter.type> = NSLayoutConstraint.Relation.equal<\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:11FWFramework13FWLayoutChainC\">FWLayoutChain<\/ref.class><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 220,
            "key.line" : 400,
            "key.name" : "width(_:relation:)",
            "key.namelength" : 98,
            "key.nameoffset" : 13651,
            "key.offset" : 13646,
            "key.parsed_declaration" : "public func width(_ width: CGFloat, relation: NSLayoutConstraint.Relation = NSLayoutConstraint.Relation.equal) -> FWLayoutChain",
            "key.parsed_scope.end" : 403,
            "key.parsed_scope.start" : 400,
            "key.substructure" : [

            ],
            "key.typename" : "(FWLayoutChain) -> (CGFloat, NSLayoutConstraint.Relation) -> FWLayoutChain",
            "key.typeusr" : "$s_8relation11FWFramework13FWLayoutChainC12CoreGraphics7CGFloatV_So16NSLayoutRelationVtcD",
            "key.usr" : "s:11FWFramework13FWLayoutChainC5width_8relationAC12CoreGraphics7CGFloatV_So16NSLayoutRelationVtF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>@discardableResult public func height(_ height: <Type usr=\"s:12CoreGraphics7CGFloatV\">CGFloat<\/Type>, relation: <Type usr=\"c:objc(cs)NSLayoutConstraint\">NSLayoutConstraint<\/Type>.<Type usr=\"c:@E@NSLayoutRelation\">Relation<\/Type> = NSLayoutConstraint.Relation.equal) -&gt; <Type usr=\"s:11FWFramework13FWLayoutChainC\">FWLayoutChain<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 13895
              },
              {
                "key.attribute" : "source.decl.attribute.discardableResult",
                "key.length" : 18,
                "key.offset" : 13872
              }
            ],
            "key.bodylength" : 99,
            "key.bodyoffset" : 14026,
            "key.column" : 17,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAutoLayout.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@discardableResult<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>height<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>height<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:12CoreGraphics7CGFloatV\">CGFloat<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>relation<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:objc(cs)NSLayoutConstraint\">NSLayoutConstraint<\/ref.class>.<ref.enum usr=\"c:@E@NSLayoutRelation\">Relation<\/ref.enum><\/decl.var.parameter.type> = NSLayoutConstraint.Relation.equal<\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:11FWFramework13FWLayoutChainC\">FWLayoutChain<\/ref.class><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 224,
            "key.line" : 406,
            "key.name" : "height(_:relation:)",
            "key.namelength" : 100,
            "key.nameoffset" : 13907,
            "key.offset" : 13902,
            "key.parsed_declaration" : "public func height(_ height: CGFloat, relation: NSLayoutConstraint.Relation = NSLayoutConstraint.Relation.equal) -> FWLayoutChain",
            "key.parsed_scope.end" : 409,
            "key.parsed_scope.start" : 406,
            "key.substructure" : [

            ],
            "key.typename" : "(FWLayoutChain) -> (CGFloat, NSLayoutConstraint.Relation) -> FWLayoutChain",
            "key.typeusr" : "$s_8relation11FWFramework13FWLayoutChainC12CoreGraphics7CGFloatV_So16NSLayoutRelationVtcD",
            "key.usr" : "s:11FWFramework13FWLayoutChainC6height_8relationAC12CoreGraphics7CGFloatV_So16NSLayoutRelationVtF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>@discardableResult public func widthToHeight(_ multiplier: <Type usr=\"s:12CoreGraphics7CGFloatV\">CGFloat<\/Type>, relation: <Type usr=\"c:objc(cs)NSLayoutConstraint\">NSLayoutConstraint<\/Type>.<Type usr=\"c:@E@NSLayoutRelation\">Relation<\/Type> = NSLayoutConstraint.Relation.equal) -&gt; <Type usr=\"s:11FWFramework13FWLayoutChainC\">FWLayoutChain<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 14159
              },
              {
                "key.attribute" : "source.decl.attribute.discardableResult",
                "key.length" : 18,
                "key.offset" : 14136
              }
            ],
            "key.bodylength" : 134,
            "key.bodyoffset" : 14301,
            "key.column" : 17,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAutoLayout.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@discardableResult<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>widthToHeight<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>multiplier<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:12CoreGraphics7CGFloatV\">CGFloat<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>relation<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:objc(cs)NSLayoutConstraint\">NSLayoutConstraint<\/ref.class>.<ref.enum usr=\"c:@E@NSLayoutRelation\">Relation<\/ref.enum><\/decl.var.parameter.type> = NSLayoutConstraint.Relation.equal<\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:11FWFramework13FWLayoutChainC\">FWLayoutChain<\/ref.class><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 270,
            "key.line" : 412,
            "key.name" : "widthToHeight(_:relation:)",
            "key.namelength" : 111,
            "key.nameoffset" : 14171,
            "key.offset" : 14166,
            "key.parsed_declaration" : "public func widthToHeight(_ multiplier: CGFloat, relation: NSLayoutConstraint.Relation = NSLayoutConstraint.Relation.equal) -> FWLayoutChain",
            "key.parsed_scope.end" : 415,
            "key.parsed_scope.start" : 412,
            "key.substructure" : [

            ],
            "key.typename" : "(FWLayoutChain) -> (CGFloat, NSLayoutConstraint.Relation) -> FWLayoutChain",
            "key.typeusr" : "$s_8relation11FWFramework13FWLayoutChainC12CoreGraphics7CGFloatV_So16NSLayoutRelationVtcD",
            "key.usr" : "s:11FWFramework13FWLayoutChainC13widthToHeight_8relationAC12CoreGraphics7CGFloatV_So16NSLayoutRelationVtF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>@discardableResult public func heightToWidth(_ multiplier: <Type usr=\"s:12CoreGraphics7CGFloatV\">CGFloat<\/Type>, relation: <Type usr=\"c:objc(cs)NSLayoutConstraint\">NSLayoutConstraint<\/Type>.<Type usr=\"c:@E@NSLayoutRelation\">Relation<\/Type> = NSLayoutConstraint.Relation.equal) -&gt; <Type usr=\"s:11FWFramework13FWLayoutChainC\">FWLayoutChain<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 14469
              },
              {
                "key.attribute" : "source.decl.attribute.discardableResult",
                "key.length" : 18,
                "key.offset" : 14446
              }
            ],
            "key.bodylength" : 134,
            "key.bodyoffset" : 14611,
            "key.column" : 17,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAutoLayout.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@discardableResult<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>heightToWidth<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>multiplier<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:12CoreGraphics7CGFloatV\">CGFloat<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>relation<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:objc(cs)NSLayoutConstraint\">NSLayoutConstraint<\/ref.class>.<ref.enum usr=\"c:@E@NSLayoutRelation\">Relation<\/ref.enum><\/decl.var.parameter.type> = NSLayoutConstraint.Relation.equal<\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:11FWFramework13FWLayoutChainC\">FWLayoutChain<\/ref.class><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 270,
            "key.line" : 418,
            "key.name" : "heightToWidth(_:relation:)",
            "key.namelength" : 111,
            "key.nameoffset" : 14481,
            "key.offset" : 14476,
            "key.parsed_declaration" : "public func heightToWidth(_ multiplier: CGFloat, relation: NSLayoutConstraint.Relation = NSLayoutConstraint.Relation.equal) -> FWLayoutChain",
            "key.parsed_scope.end" : 421,
            "key.parsed_scope.start" : 418,
            "key.substructure" : [

            ],
            "key.typename" : "(FWLayoutChain) -> (CGFloat, NSLayoutConstraint.Relation) -> FWLayoutChain",
            "key.typeusr" : "$s_8relation11FWFramework13FWLayoutChainC12CoreGraphics7CGFloatV_So16NSLayoutRelationVtcD",
            "key.usr" : "s:11FWFramework13FWLayoutChainC13heightToWidth_8relationAC12CoreGraphics7CGFloatV_So16NSLayoutRelationVtF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>@discardableResult public func sizeToView(_ view: Any) -&gt; <Type usr=\"s:11FWFramework13FWLayoutChainC\">FWLayoutChain<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 14775
              },
              {
                "key.attribute" : "source.decl.attribute.discardableResult",
                "key.length" : 18,
                "key.offset" : 14752
              }
            ],
            "key.bodylength" : 185,
            "key.bodyoffset" : 14829,
            "key.column" : 17,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAutoLayout.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@discardableResult<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>sizeToView<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>view<\/decl.var.parameter.name>: <decl.var.parameter.type><syntaxtype.keyword>Any<\/syntaxtype.keyword><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:11FWFramework13FWLayoutChainC\">FWLayoutChain<\/ref.class><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 233,
            "key.line" : 424,
            "key.name" : "sizeToView(_:)",
            "key.namelength" : 23,
            "key.nameoffset" : 14787,
            "key.offset" : 14782,
            "key.parsed_declaration" : "public func sizeToView(_ view: Any) -> FWLayoutChain",
            "key.parsed_scope.end" : 428,
            "key.parsed_scope.start" : 424,
            "key.substructure" : [

            ],
            "key.typename" : "(FWLayoutChain) -> (Any) -> FWLayoutChain",
            "key.typeusr" : "$sy11FWFramework13FWLayoutChainCypcD",
            "key.usr" : "s:11FWFramework13FWLayoutChainC10sizeToViewyACypF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>@discardableResult public func widthToView(_ view: Any, withOffset offset: <Type usr=\"s:12CoreGraphics7CGFloatV\">CGFloat<\/Type> = 0) -&gt; <Type usr=\"s:11FWFramework13FWLayoutChainC\">FWLayoutChain<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 15044
              },
              {
                "key.attribute" : "source.decl.attribute.discardableResult",
                "key.length" : 18,
                "key.offset" : 15021
              }
            ],
            "key.bodylength" : 124,
            "key.bodyoffset" : 15131,
            "key.column" : 17,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAutoLayout.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@discardableResult<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>widthToView<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>view<\/decl.var.parameter.name>: <decl.var.parameter.type><syntaxtype.keyword>Any<\/syntaxtype.keyword><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>withOffset<\/decl.var.parameter.argument_label> <decl.var.parameter.name>offset<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:12CoreGraphics7CGFloatV\">CGFloat<\/ref.struct><\/decl.var.parameter.type> = 0<\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:11FWFramework13FWLayoutChainC\">FWLayoutChain<\/ref.class><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 205,
            "key.line" : 431,
            "key.name" : "widthToView(_:withOffset:)",
            "key.namelength" : 56,
            "key.nameoffset" : 15056,
            "key.offset" : 15051,
            "key.parsed_declaration" : "public func widthToView(_ view: Any, withOffset offset: CGFloat = 0) -> FWLayoutChain",
            "key.parsed_scope.end" : 434,
            "key.parsed_scope.start" : 431,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework13FWLayoutChainC11widthToView_10withOffset8relationACyp_12CoreGraphics7CGFloatVSo16NSLayoutRelationVtF\">widthToView(_:withOffset:relation:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework13FWLayoutChainC11widthToView_14withMultiplier8relationACyp_12CoreGraphics7CGFloatVSo16NSLayoutRelationVtF\">widthToView(_:withMultiplier:relation:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "(FWLayoutChain) -> (Any, CGFloat) -> FWLayoutChain",
            "key.typeusr" : "$s_10withOffset11FWFramework13FWLayoutChainCyp_12CoreGraphics7CGFloatVtcD",
            "key.usr" : "s:11FWFramework13FWLayoutChainC11widthToView_10withOffsetACyp_12CoreGraphics7CGFloatVtF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>@discardableResult public func widthToView(_ view: Any, withOffset offset: <Type usr=\"s:12CoreGraphics7CGFloatV\">CGFloat<\/Type> = 0, relation: <Type usr=\"c:objc(cs)NSLayoutConstraint\">NSLayoutConstraint<\/Type>.<Type usr=\"c:@E@NSLayoutRelation\">Relation<\/Type>) -&gt; <Type usr=\"s:11FWFramework13FWLayoutChainC\">FWLayoutChain<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 15289
              },
              {
                "key.attribute" : "source.decl.attribute.discardableResult",
                "key.length" : 18,
                "key.offset" : 15266
              }
            ],
            "key.bodylength" : 144,
            "key.bodyoffset" : 15415,
            "key.column" : 17,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAutoLayout.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@discardableResult<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>widthToView<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>view<\/decl.var.parameter.name>: <decl.var.parameter.type><syntaxtype.keyword>Any<\/syntaxtype.keyword><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>withOffset<\/decl.var.parameter.argument_label> <decl.var.parameter.name>offset<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:12CoreGraphics7CGFloatV\">CGFloat<\/ref.struct><\/decl.var.parameter.type> = 0<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>relation<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:objc(cs)NSLayoutConstraint\">NSLayoutConstraint<\/ref.class>.<ref.enum usr=\"c:@E@NSLayoutRelation\">Relation<\/ref.enum><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:11FWFramework13FWLayoutChainC\">FWLayoutChain<\/ref.class><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 264,
            "key.line" : 437,
            "key.name" : "widthToView(_:withOffset:relation:)",
            "key.namelength" : 95,
            "key.nameoffset" : 15301,
            "key.offset" : 15296,
            "key.parsed_declaration" : "public func widthToView(_ view: Any, withOffset offset: CGFloat = 0, relation: NSLayoutConstraint.Relation) -> FWLayoutChain",
            "key.parsed_scope.end" : 440,
            "key.parsed_scope.start" : 437,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework13FWLayoutChainC11widthToView_10withOffsetACyp_12CoreGraphics7CGFloatVtF\">widthToView(_:withOffset:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework13FWLayoutChainC11widthToView_14withMultiplier8relationACyp_12CoreGraphics7CGFloatVSo16NSLayoutRelationVtF\">widthToView(_:withMultiplier:relation:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "(FWLayoutChain) -> (Any, CGFloat, NSLayoutConstraint.Relation) -> FWLayoutChain",
            "key.typeusr" : "$s_10withOffset8relation11FWFramework13FWLayoutChainCyp_12CoreGraphics7CGFloatVSo16NSLayoutRelationVtcD",
            "key.usr" : "s:11FWFramework13FWLayoutChainC11widthToView_10withOffset8relationACyp_12CoreGraphics7CGFloatVSo16NSLayoutRelationVtF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>@discardableResult public func heightToView(_ view: Any, withOffset offset: <Type usr=\"s:12CoreGraphics7CGFloatV\">CGFloat<\/Type> = 0) -&gt; <Type usr=\"s:11FWFramework13FWLayoutChainC\">FWLayoutChain<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 15593
              },
              {
                "key.attribute" : "source.decl.attribute.discardableResult",
                "key.length" : 18,
                "key.offset" : 15570
              }
            ],
            "key.bodylength" : 126,
            "key.bodyoffset" : 15681,
            "key.column" : 17,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAutoLayout.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@discardableResult<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>heightToView<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>view<\/decl.var.parameter.name>: <decl.var.parameter.type><syntaxtype.keyword>Any<\/syntaxtype.keyword><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>withOffset<\/decl.var.parameter.argument_label> <decl.var.parameter.name>offset<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:12CoreGraphics7CGFloatV\">CGFloat<\/ref.struct><\/decl.var.parameter.type> = 0<\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:11FWFramework13FWLayoutChainC\">FWLayoutChain<\/ref.class><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 208,
            "key.line" : 443,
            "key.name" : "heightToView(_:withOffset:)",
            "key.namelength" : 57,
            "key.nameoffset" : 15605,
            "key.offset" : 15600,
            "key.parsed_declaration" : "public func heightToView(_ view: Any, withOffset offset: CGFloat = 0) -> FWLayoutChain",
            "key.parsed_scope.end" : 446,
            "key.parsed_scope.start" : 443,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework13FWLayoutChainC12heightToView_10withOffset8relationACyp_12CoreGraphics7CGFloatVSo16NSLayoutRelationVtF\">heightToView(_:withOffset:relation:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework13FWLayoutChainC12heightToView_14withMultiplier8relationACyp_12CoreGraphics7CGFloatVSo16NSLayoutRelationVtF\">heightToView(_:withMultiplier:relation:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "(FWLayoutChain) -> (Any, CGFloat) -> FWLayoutChain",
            "key.typeusr" : "$s_10withOffset11FWFramework13FWLayoutChainCyp_12CoreGraphics7CGFloatVtcD",
            "key.usr" : "s:11FWFramework13FWLayoutChainC12heightToView_10withOffsetACyp_12CoreGraphics7CGFloatVtF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>@discardableResult public func heightToView(_ view: Any, withOffset offset: <Type usr=\"s:12CoreGraphics7CGFloatV\">CGFloat<\/Type> = 0, relation: <Type usr=\"c:objc(cs)NSLayoutConstraint\">NSLayoutConstraint<\/Type>.<Type usr=\"c:@E@NSLayoutRelation\">Relation<\/Type>) -&gt; <Type usr=\"s:11FWFramework13FWLayoutChainC\">FWLayoutChain<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 15837
              },
              {
                "key.attribute" : "source.decl.attribute.discardableResult",
                "key.length" : 18,
                "key.offset" : 15814
              }
            ],
            "key.bodylength" : 146,
            "key.bodyoffset" : 15964,
            "key.column" : 17,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAutoLayout.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@discardableResult<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>heightToView<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>view<\/decl.var.parameter.name>: <decl.var.parameter.type><syntaxtype.keyword>Any<\/syntaxtype.keyword><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>withOffset<\/decl.var.parameter.argument_label> <decl.var.parameter.name>offset<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:12CoreGraphics7CGFloatV\">CGFloat<\/ref.struct><\/decl.var.parameter.type> = 0<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>relation<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:objc(cs)NSLayoutConstraint\">NSLayoutConstraint<\/ref.class>.<ref.enum usr=\"c:@E@NSLayoutRelation\">Relation<\/ref.enum><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:11FWFramework13FWLayoutChainC\">FWLayoutChain<\/ref.class><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 267,
            "key.line" : 449,
            "key.name" : "heightToView(_:withOffset:relation:)",
            "key.namelength" : 96,
            "key.nameoffset" : 15849,
            "key.offset" : 15844,
            "key.parsed_declaration" : "public func heightToView(_ view: Any, withOffset offset: CGFloat = 0, relation: NSLayoutConstraint.Relation) -> FWLayoutChain",
            "key.parsed_scope.end" : 452,
            "key.parsed_scope.start" : 449,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework13FWLayoutChainC12heightToView_10withOffsetACyp_12CoreGraphics7CGFloatVtF\">heightToView(_:withOffset:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework13FWLayoutChainC12heightToView_14withMultiplier8relationACyp_12CoreGraphics7CGFloatVSo16NSLayoutRelationVtF\">heightToView(_:withMultiplier:relation:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "(FWLayoutChain) -> (Any, CGFloat, NSLayoutConstraint.Relation) -> FWLayoutChain",
            "key.typeusr" : "$s_10withOffset8relation11FWFramework13FWLayoutChainCyp_12CoreGraphics7CGFloatVSo16NSLayoutRelationVtcD",
            "key.usr" : "s:11FWFramework13FWLayoutChainC12heightToView_10withOffset8relationACyp_12CoreGraphics7CGFloatVSo16NSLayoutRelationVtF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>@discardableResult public func widthToView(_ view: Any, withMultiplier multiplier: <Type usr=\"s:12CoreGraphics7CGFloatV\">CGFloat<\/Type>, relation: <Type usr=\"c:objc(cs)NSLayoutConstraint\">NSLayoutConstraint<\/Type>.<Type usr=\"c:@E@NSLayoutRelation\">Relation<\/Type> = NSLayoutConstraint.Relation.equal) -&gt; <Type usr=\"s:11FWFramework13FWLayoutChainC\">FWLayoutChain<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 16140
              },
              {
                "key.attribute" : "source.decl.attribute.discardableResult",
                "key.length" : 18,
                "key.offset" : 16117
              }
            ],
            "key.bodylength" : 152,
            "key.bodyoffset" : 16306,
            "key.column" : 17,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAutoLayout.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@discardableResult<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>widthToView<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>view<\/decl.var.parameter.name>: <decl.var.parameter.type><syntaxtype.keyword>Any<\/syntaxtype.keyword><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>withMultiplier<\/decl.var.parameter.argument_label> <decl.var.parameter.name>multiplier<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:12CoreGraphics7CGFloatV\">CGFloat<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>relation<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:objc(cs)NSLayoutConstraint\">NSLayoutConstraint<\/ref.class>.<ref.enum usr=\"c:@E@NSLayoutRelation\">Relation<\/ref.enum><\/decl.var.parameter.type> = NSLayoutConstraint.Relation.equal<\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:11FWFramework13FWLayoutChainC\">FWLayoutChain<\/ref.class><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 312,
            "key.line" : 455,
            "key.name" : "widthToView(_:withMultiplier:relation:)",
            "key.namelength" : 135,
            "key.nameoffset" : 16152,
            "key.offset" : 16147,
            "key.parsed_declaration" : "public func widthToView(_ view: Any, withMultiplier multiplier: CGFloat, relation: NSLayoutConstraint.Relation = NSLayoutConstraint.Relation.equal) -> FWLayoutChain",
            "key.parsed_scope.end" : 458,
            "key.parsed_scope.start" : 455,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework13FWLayoutChainC11widthToView_10withOffsetACyp_12CoreGraphics7CGFloatVtF\">widthToView(_:withOffset:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework13FWLayoutChainC11widthToView_10withOffset8relationACyp_12CoreGraphics7CGFloatVSo16NSLayoutRelationVtF\">widthToView(_:withOffset:relation:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "(FWLayoutChain) -> (Any, CGFloat, NSLayoutConstraint.Relation) -> FWLayoutChain",
            "key.typeusr" : "$s_14withMultiplier8relation11FWFramework13FWLayoutChainCyp_12CoreGraphics7CGFloatVSo16NSLayoutRelationVtcD",
            "key.usr" : "s:11FWFramework13FWLayoutChainC11widthToView_14withMultiplier8relationACyp_12CoreGraphics7CGFloatVSo16NSLayoutRelationVtF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>@discardableResult public func heightToView(_ view: Any, withMultiplier multiplier: <Type usr=\"s:12CoreGraphics7CGFloatV\">CGFloat<\/Type>, relation: <Type usr=\"c:objc(cs)NSLayoutConstraint\">NSLayoutConstraint<\/Type>.<Type usr=\"c:@E@NSLayoutRelation\">Relation<\/Type> = NSLayoutConstraint.Relation.equal) -&gt; <Type usr=\"s:11FWFramework13FWLayoutChainC\">FWLayoutChain<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 16488
              },
              {
                "key.attribute" : "source.decl.attribute.discardableResult",
                "key.length" : 18,
                "key.offset" : 16465
              }
            ],
            "key.bodylength" : 154,
            "key.bodyoffset" : 16655,
            "key.column" : 17,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAutoLayout.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@discardableResult<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>heightToView<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>view<\/decl.var.parameter.name>: <decl.var.parameter.type><syntaxtype.keyword>Any<\/syntaxtype.keyword><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>withMultiplier<\/decl.var.parameter.argument_label> <decl.var.parameter.name>multiplier<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:12CoreGraphics7CGFloatV\">CGFloat<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>relation<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:objc(cs)NSLayoutConstraint\">NSLayoutConstraint<\/ref.class>.<ref.enum usr=\"c:@E@NSLayoutRelation\">Relation<\/ref.enum><\/decl.var.parameter.type> = NSLayoutConstraint.Relation.equal<\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:11FWFramework13FWLayoutChainC\">FWLayoutChain<\/ref.class><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 315,
            "key.line" : 461,
            "key.name" : "heightToView(_:withMultiplier:relation:)",
            "key.namelength" : 136,
            "key.nameoffset" : 16500,
            "key.offset" : 16495,
            "key.parsed_declaration" : "public func heightToView(_ view: Any, withMultiplier multiplier: CGFloat, relation: NSLayoutConstraint.Relation = NSLayoutConstraint.Relation.equal) -> FWLayoutChain",
            "key.parsed_scope.end" : 464,
            "key.parsed_scope.start" : 461,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework13FWLayoutChainC12heightToView_10withOffsetACyp_12CoreGraphics7CGFloatVtF\">heightToView(_:withOffset:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework13FWLayoutChainC12heightToView_10withOffset8relationACyp_12CoreGraphics7CGFloatVSo16NSLayoutRelationVtF\">heightToView(_:withOffset:relation:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "(FWLayoutChain) -> (Any, CGFloat, NSLayoutConstraint.Relation) -> FWLayoutChain",
            "key.typeusr" : "$s_14withMultiplier8relation11FWFramework13FWLayoutChainCyp_12CoreGraphics7CGFloatVSo16NSLayoutRelationVtcD",
            "key.usr" : "s:11FWFramework13FWLayoutChainC12heightToView_14withMultiplier8relationACyp_12CoreGraphics7CGFloatVSo16NSLayoutRelationVtF"
          },
          {
            "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
            "key.length" : 17,
            "key.name" : "MARK: - Attribute",
            "key.namelength" : 0,
            "key.nameoffset" : 0,
            "key.offset" : 16819
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>@discardableResult public func attribute(_ attribute: <Type usr=\"c:objc(cs)NSLayoutConstraint\">NSLayoutConstraint<\/Type>.<Type usr=\"c:@E@NSLayoutAttribute\">Attribute<\/Type>, toAttribute: <Type usr=\"c:objc(cs)NSLayoutConstraint\">NSLayoutConstraint<\/Type>.<Type usr=\"c:@E@NSLayoutAttribute\">Attribute<\/Type>, ofView view: Any?, withOffset offset: <Type usr=\"s:12CoreGraphics7CGFloatV\">CGFloat<\/Type> = 0) -&gt; <Type usr=\"s:11FWFramework13FWLayoutChainC\">FWLayoutChain<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 16865
              },
              {
                "key.attribute" : "source.decl.attribute.discardableResult",
                "key.length" : 18,
                "key.offset" : 16842
              }
            ],
            "key.bodylength" : 127,
            "key.bodyoffset" : 17042,
            "key.column" : 17,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAutoLayout.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@discardableResult<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>attribute<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>attribute<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"c:objc(cs)NSLayoutConstraint\">NSLayoutConstraint<\/ref.class>.<ref.enum usr=\"c:@E@NSLayoutAttribute\">Attribute<\/ref.enum><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>toAttribute<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:objc(cs)NSLayoutConstraint\">NSLayoutConstraint<\/ref.class>.<ref.enum usr=\"c:@E@NSLayoutAttribute\">Attribute<\/ref.enum><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>ofView<\/decl.var.parameter.argument_label> <decl.var.parameter.name>view<\/decl.var.parameter.name>: <decl.var.parameter.type><syntaxtype.keyword>Any<\/syntaxtype.keyword>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>withOffset<\/decl.var.parameter.argument_label> <decl.var.parameter.name>offset<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:12CoreGraphics7CGFloatV\">CGFloat<\/ref.struct><\/decl.var.parameter.type> = 0<\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:11FWFramework13FWLayoutChainC\">FWLayoutChain<\/ref.class><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 298,
            "key.line" : 469,
            "key.name" : "attribute(_:toAttribute:ofView:withOffset:)",
            "key.namelength" : 146,
            "key.nameoffset" : 16877,
            "key.offset" : 16872,
            "key.parsed_declaration" : "public func attribute(_ attribute: NSLayoutConstraint.Attribute, toAttribute: NSLayoutConstraint.Attribute, ofView view: Any?, withOffset offset: CGFloat = 0) -> FWLayoutChain",
            "key.parsed_scope.end" : 472,
            "key.parsed_scope.start" : 469,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework13FWLayoutChainC9attribute_11toAttribute6ofView10withOffset8relationACSo08NSLayoutF0V_AJypSg12CoreGraphics7CGFloatVSo0L8RelationVtF\">attribute(_:toAttribute:ofView:withOffset:relation:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework13FWLayoutChainC9attribute_11toAttribute6ofView14withMultiplier8relationACSo08NSLayoutF0V_AJypSg12CoreGraphics7CGFloatVSo0L8RelationVtF\">attribute(_:toAttribute:ofView:withMultiplier:relation:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "(FWLayoutChain) -> (NSLayoutConstraint.Attribute, NSLayoutConstraint.Attribute, Any?, CGFloat) -> FWLayoutChain",
            "key.typeusr" : "$s_11toAttribute6ofView10withOffset11FWFramework13FWLayoutChainCSo08NSLayoutB0V_AHypSg12CoreGraphics7CGFloatVtcD",
            "key.usr" : "s:11FWFramework13FWLayoutChainC9attribute_11toAttribute6ofView10withOffsetACSo08NSLayoutF0V_AIypSg12CoreGraphics7CGFloatVtF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>@discardableResult public func attribute(_ attribute: <Type usr=\"c:objc(cs)NSLayoutConstraint\">NSLayoutConstraint<\/Type>.<Type usr=\"c:@E@NSLayoutAttribute\">Attribute<\/Type>, toAttribute: <Type usr=\"c:objc(cs)NSLayoutConstraint\">NSLayoutConstraint<\/Type>.<Type usr=\"c:@E@NSLayoutAttribute\">Attribute<\/Type>, ofView view: Any?, withOffset offset: <Type usr=\"s:12CoreGraphics7CGFloatV\">CGFloat<\/Type> = 0, relation: <Type usr=\"c:objc(cs)NSLayoutConstraint\">NSLayoutConstraint<\/Type>.<Type usr=\"c:@E@NSLayoutRelation\">Relation<\/Type>) -&gt; <Type usr=\"s:11FWFramework13FWLayoutChainC\">FWLayoutChain<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 17203
              },
              {
                "key.attribute" : "source.decl.attribute.discardableResult",
                "key.length" : 18,
                "key.offset" : 17180
              }
            ],
            "key.bodylength" : 147,
            "key.bodyoffset" : 17419,
            "key.column" : 17,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAutoLayout.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@discardableResult<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>attribute<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>attribute<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"c:objc(cs)NSLayoutConstraint\">NSLayoutConstraint<\/ref.class>.<ref.enum usr=\"c:@E@NSLayoutAttribute\">Attribute<\/ref.enum><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>toAttribute<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:objc(cs)NSLayoutConstraint\">NSLayoutConstraint<\/ref.class>.<ref.enum usr=\"c:@E@NSLayoutAttribute\">Attribute<\/ref.enum><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>ofView<\/decl.var.parameter.argument_label> <decl.var.parameter.name>view<\/decl.var.parameter.name>: <decl.var.parameter.type><syntaxtype.keyword>Any<\/syntaxtype.keyword>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>withOffset<\/decl.var.parameter.argument_label> <decl.var.parameter.name>offset<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:12CoreGraphics7CGFloatV\">CGFloat<\/ref.struct><\/decl.var.parameter.type> = 0<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>relation<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:objc(cs)NSLayoutConstraint\">NSLayoutConstraint<\/ref.class>.<ref.enum usr=\"c:@E@NSLayoutRelation\">Relation<\/ref.enum><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:11FWFramework13FWLayoutChainC\">FWLayoutChain<\/ref.class><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 357,
            "key.line" : 475,
            "key.name" : "attribute(_:toAttribute:ofView:withOffset:relation:)",
            "key.namelength" : 185,
            "key.nameoffset" : 17215,
            "key.offset" : 17210,
            "key.parsed_declaration" : "public func attribute(_ attribute: NSLayoutConstraint.Attribute, toAttribute: NSLayoutConstraint.Attribute, ofView view: Any?, withOffset offset: CGFloat = 0, relation: NSLayoutConstraint.Relation) -> FWLayoutChain",
            "key.parsed_scope.end" : 478,
            "key.parsed_scope.start" : 475,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework13FWLayoutChainC9attribute_11toAttribute6ofView10withOffsetACSo08NSLayoutF0V_AIypSg12CoreGraphics7CGFloatVtF\">attribute(_:toAttribute:ofView:withOffset:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework13FWLayoutChainC9attribute_11toAttribute6ofView14withMultiplier8relationACSo08NSLayoutF0V_AJypSg12CoreGraphics7CGFloatVSo0L8RelationVtF\">attribute(_:toAttribute:ofView:withMultiplier:relation:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "(FWLayoutChain) -> (NSLayoutConstraint.Attribute, NSLayoutConstraint.Attribute, Any?, CGFloat, NSLayoutConstraint.Relation) -> FWLayoutChain",
            "key.typeusr" : "$s_11toAttribute6ofView10withOffset8relation11FWFramework13FWLayoutChainCSo08NSLayoutB0V_AIypSg12CoreGraphics7CGFloatVSo0K8RelationVtcD",
            "key.usr" : "s:11FWFramework13FWLayoutChainC9attribute_11toAttribute6ofView10withOffset8relationACSo08NSLayoutF0V_AJypSg12CoreGraphics7CGFloatVSo0L8RelationVtF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>@discardableResult public func attribute(_ attribute: <Type usr=\"c:objc(cs)NSLayoutConstraint\">NSLayoutConstraint<\/Type>.<Type usr=\"c:@E@NSLayoutAttribute\">Attribute<\/Type>, toAttribute: <Type usr=\"c:objc(cs)NSLayoutConstraint\">NSLayoutConstraint<\/Type>.<Type usr=\"c:@E@NSLayoutAttribute\">Attribute<\/Type>, ofView view: Any?, withMultiplier multiplier: <Type usr=\"s:12CoreGraphics7CGFloatV\">CGFloat<\/Type>, relation: <Type usr=\"c:objc(cs)NSLayoutConstraint\">NSLayoutConstraint<\/Type>.<Type usr=\"c:@E@NSLayoutRelation\">Relation<\/Type> = NSLayoutConstraint.Relation.equal) -&gt; <Type usr=\"s:11FWFramework13FWLayoutChainC\">FWLayoutChain<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 17596
              },
              {
                "key.attribute" : "source.decl.attribute.discardableResult",
                "key.length" : 18,
                "key.offset" : 17573
              }
            ],
            "key.bodylength" : 155,
            "key.bodyoffset" : 17852,
            "key.column" : 17,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAutoLayout.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@discardableResult<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>attribute<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>attribute<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"c:objc(cs)NSLayoutConstraint\">NSLayoutConstraint<\/ref.class>.<ref.enum usr=\"c:@E@NSLayoutAttribute\">Attribute<\/ref.enum><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>toAttribute<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:objc(cs)NSLayoutConstraint\">NSLayoutConstraint<\/ref.class>.<ref.enum usr=\"c:@E@NSLayoutAttribute\">Attribute<\/ref.enum><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>ofView<\/decl.var.parameter.argument_label> <decl.var.parameter.name>view<\/decl.var.parameter.name>: <decl.var.parameter.type><syntaxtype.keyword>Any<\/syntaxtype.keyword>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>withMultiplier<\/decl.var.parameter.argument_label> <decl.var.parameter.name>multiplier<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:12CoreGraphics7CGFloatV\">CGFloat<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>relation<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:objc(cs)NSLayoutConstraint\">NSLayoutConstraint<\/ref.class>.<ref.enum usr=\"c:@E@NSLayoutRelation\">Relation<\/ref.enum><\/decl.var.parameter.type> = NSLayoutConstraint.Relation.equal<\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:11FWFramework13FWLayoutChainC\">FWLayoutChain<\/ref.class><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 405,
            "key.line" : 481,
            "key.name" : "attribute(_:toAttribute:ofView:withMultiplier:relation:)",
            "key.namelength" : 225,
            "key.nameoffset" : 17608,
            "key.offset" : 17603,
            "key.parsed_declaration" : "public func attribute(_ attribute: NSLayoutConstraint.Attribute, toAttribute: NSLayoutConstraint.Attribute, ofView view: Any?, withMultiplier multiplier: CGFloat, relation: NSLayoutConstraint.Relation = NSLayoutConstraint.Relation.equal) -> FWLayoutChain",
            "key.parsed_scope.end" : 484,
            "key.parsed_scope.start" : 481,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework13FWLayoutChainC9attribute_11toAttribute6ofView10withOffsetACSo08NSLayoutF0V_AIypSg12CoreGraphics7CGFloatVtF\">attribute(_:toAttribute:ofView:withOffset:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework13FWLayoutChainC9attribute_11toAttribute6ofView10withOffset8relationACSo08NSLayoutF0V_AJypSg12CoreGraphics7CGFloatVSo0L8RelationVtF\">attribute(_:toAttribute:ofView:withOffset:relation:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "(FWLayoutChain) -> (NSLayoutConstraint.Attribute, NSLayoutConstraint.Attribute, Any?, CGFloat, NSLayoutConstraint.Relation) -> FWLayoutChain",
            "key.typeusr" : "$s_11toAttribute6ofView14withMultiplier8relation11FWFramework13FWLayoutChainCSo08NSLayoutB0V_AIypSg12CoreGraphics7CGFloatVSo0K8RelationVtcD",
            "key.usr" : "s:11FWFramework13FWLayoutChainC9attribute_11toAttribute6ofView14withMultiplier8relationACSo08NSLayoutF0V_AJypSg12CoreGraphics7CGFloatVSo0L8RelationVtF"
          },
          {
            "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
            "key.length" : 18,
            "key.name" : "MARK: - Constraint",
            "key.namelength" : 0,
            "key.nameoffset" : 0,
            "key.offset" : 18021
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var constraint: <Type usr=\"c:objc(cs)NSLayoutConstraint\">NSLayoutConstraint<\/Type>? { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 18049
              }
            ],
            "key.bodylength" : 48,
            "key.bodyoffset" : 18093,
            "key.column" : 16,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAutoLayout.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>constraint<\/decl.name>: <decl.var.type><ref.class usr=\"c:objc(cs)NSLayoutConstraint\">NSLayoutConstraint<\/ref.class>?<\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 86,
            "key.line" : 488,
            "key.name" : "constraint",
            "key.namelength" : 10,
            "key.nameoffset" : 18060,
            "key.offset" : 18056,
            "key.parsed_declaration" : "public var constraint: NSLayoutConstraint?",
            "key.parsed_scope.end" : 490,
            "key.parsed_scope.start" : 488,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework13FWLayoutChainC10constraint_8relationSo18NSLayoutConstraintCSgSo0F9AttributeV_So0F8RelationVtF\">constraint(_:relation:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework13FWLayoutChainC10constraint_11toAttribute6ofView8relationSo18NSLayoutConstraintCSgSo0jF0V_ALypSgSo0J8RelationVtF\">constraint(_:toAttribute:ofView:relation:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework13FWLayoutChainC10constraint_11toAttribute6ofView14withMultiplier8relationSo18NSLayoutConstraintCSgSo0lF0V_AMypSg12CoreGraphics7CGFloatVSo0L8RelationVtF\">constraint(_:toAttribute:ofView:withMultiplier:relation:)<\/RelatedName>"
              }
            ],
            "key.typename" : "NSLayoutConstraint?",
            "key.typeusr" : "$sSo18NSLayoutConstraintCSgD",
            "key.usr" : "s:11FWFramework13FWLayoutChainC10constraintSo18NSLayoutConstraintCSgvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func constraint(_ attribute: <Type usr=\"c:objc(cs)NSLayoutConstraint\">NSLayoutConstraint<\/Type>.<Type usr=\"c:@E@NSLayoutAttribute\">Attribute<\/Type>, relation: <Type usr=\"c:objc(cs)NSLayoutConstraint\">NSLayoutConstraint<\/Type>.<Type usr=\"c:@E@NSLayoutRelation\">Relation<\/Type> = NSLayoutConstraint.Relation.equal) -&gt; <Type usr=\"c:objc(cs)NSLayoutConstraint\">NSLayoutConstraint<\/Type>?<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 18152
              }
            ],
            "key.bodylength" : 88,
            "key.bodyoffset" : 18317,
            "key.column" : 17,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAutoLayout.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>constraint<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>attribute<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"c:objc(cs)NSLayoutConstraint\">NSLayoutConstraint<\/ref.class>.<ref.enum usr=\"c:@E@NSLayoutAttribute\">Attribute<\/ref.enum><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>relation<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:objc(cs)NSLayoutConstraint\">NSLayoutConstraint<\/ref.class>.<ref.enum usr=\"c:@E@NSLayoutRelation\">Relation<\/ref.enum><\/decl.var.parameter.type> = NSLayoutConstraint.Relation.equal<\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"c:objc(cs)NSLayoutConstraint\">NSLayoutConstraint<\/ref.class>?<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 247,
            "key.line" : 492,
            "key.name" : "constraint(_:relation:)",
            "key.namelength" : 128,
            "key.nameoffset" : 18164,
            "key.offset" : 18159,
            "key.parsed_declaration" : "public func constraint(_ attribute: NSLayoutConstraint.Attribute, relation: NSLayoutConstraint.Relation = NSLayoutConstraint.Relation.equal) -> NSLayoutConstraint?",
            "key.parsed_scope.end" : 494,
            "key.parsed_scope.start" : 492,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework13FWLayoutChainC10constraintSo18NSLayoutConstraintCSgvp\">constraint<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework13FWLayoutChainC10constraint_11toAttribute6ofView8relationSo18NSLayoutConstraintCSgSo0jF0V_ALypSgSo0J8RelationVtF\">constraint(_:toAttribute:ofView:relation:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework13FWLayoutChainC10constraint_11toAttribute6ofView14withMultiplier8relationSo18NSLayoutConstraintCSgSo0lF0V_AMypSg12CoreGraphics7CGFloatVSo0L8RelationVtF\">constraint(_:toAttribute:ofView:withMultiplier:relation:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "(FWLayoutChain) -> (NSLayoutConstraint.Attribute, NSLayoutConstraint.Relation) -> NSLayoutConstraint?",
            "key.typeusr" : "$s_8relationSo18NSLayoutConstraintCSgSo0B9AttributeV_So0B8RelationVtcD",
            "key.usr" : "s:11FWFramework13FWLayoutChainC10constraint_8relationSo18NSLayoutConstraintCSgSo0F9AttributeV_So0F8RelationVtF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func constraintToSafeArea(_ attribute: <Type usr=\"c:objc(cs)NSLayoutConstraint\">NSLayoutConstraint<\/Type>.<Type usr=\"c:@E@NSLayoutAttribute\">Attribute<\/Type>, relation: <Type usr=\"c:objc(cs)NSLayoutConstraint\">NSLayoutConstraint<\/Type>.<Type usr=\"c:@E@NSLayoutRelation\">Relation<\/Type> = NSLayoutConstraint.Relation.equal) -&gt; <Type usr=\"c:objc(cs)NSLayoutConstraint\">NSLayoutConstraint<\/Type>?<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 18416
              }
            ],
            "key.bodylength" : 96,
            "key.bodyoffset" : 18591,
            "key.column" : 17,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAutoLayout.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>constraintToSafeArea<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>attribute<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"c:objc(cs)NSLayoutConstraint\">NSLayoutConstraint<\/ref.class>.<ref.enum usr=\"c:@E@NSLayoutAttribute\">Attribute<\/ref.enum><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>relation<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:objc(cs)NSLayoutConstraint\">NSLayoutConstraint<\/ref.class>.<ref.enum usr=\"c:@E@NSLayoutRelation\">Relation<\/ref.enum><\/decl.var.parameter.type> = NSLayoutConstraint.Relation.equal<\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"c:objc(cs)NSLayoutConstraint\">NSLayoutConstraint<\/ref.class>?<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 265,
            "key.line" : 496,
            "key.name" : "constraintToSafeArea(_:relation:)",
            "key.namelength" : 138,
            "key.nameoffset" : 18428,
            "key.offset" : 18423,
            "key.parsed_declaration" : "public func constraintToSafeArea(_ attribute: NSLayoutConstraint.Attribute, relation: NSLayoutConstraint.Relation = NSLayoutConstraint.Relation.equal) -> NSLayoutConstraint?",
            "key.parsed_scope.end" : 498,
            "key.parsed_scope.start" : 496,
            "key.substructure" : [

            ],
            "key.typename" : "(FWLayoutChain) -> (NSLayoutConstraint.Attribute, NSLayoutConstraint.Relation) -> NSLayoutConstraint?",
            "key.typeusr" : "$s_8relationSo18NSLayoutConstraintCSgSo0B9AttributeV_So0B8RelationVtcD",
            "key.usr" : "s:11FWFramework13FWLayoutChainC20constraintToSafeArea_8relationSo18NSLayoutConstraintCSgSo0I9AttributeV_So0I8RelationVtF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func constraint(_ attribute: <Type usr=\"c:objc(cs)NSLayoutConstraint\">NSLayoutConstraint<\/Type>.<Type usr=\"c:@E@NSLayoutAttribute\">Attribute<\/Type>, toAttribute: <Type usr=\"c:objc(cs)NSLayoutConstraint\">NSLayoutConstraint<\/Type>.<Type usr=\"c:@E@NSLayoutAttribute\">Attribute<\/Type>, ofView view: Any?, relation: <Type usr=\"c:objc(cs)NSLayoutConstraint\">NSLayoutConstraint<\/Type>.<Type usr=\"c:@E@NSLayoutRelation\">Relation<\/Type> = NSLayoutConstraint.Relation.equal) -&gt; <Type usr=\"c:objc(cs)NSLayoutConstraint\">NSLayoutConstraint<\/Type>?<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 18694
              }
            ],
            "key.bodylength" : 106,
            "key.bodyoffset" : 18921,
            "key.column" : 17,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAutoLayout.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>constraint<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>attribute<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"c:objc(cs)NSLayoutConstraint\">NSLayoutConstraint<\/ref.class>.<ref.enum usr=\"c:@E@NSLayoutAttribute\">Attribute<\/ref.enum><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>toAttribute<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:objc(cs)NSLayoutConstraint\">NSLayoutConstraint<\/ref.class>.<ref.enum usr=\"c:@E@NSLayoutAttribute\">Attribute<\/ref.enum><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>ofView<\/decl.var.parameter.argument_label> <decl.var.parameter.name>view<\/decl.var.parameter.name>: <decl.var.parameter.type><syntaxtype.keyword>Any<\/syntaxtype.keyword>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>relation<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:objc(cs)NSLayoutConstraint\">NSLayoutConstraint<\/ref.class>.<ref.enum usr=\"c:@E@NSLayoutRelation\">Relation<\/ref.enum><\/decl.var.parameter.type> = NSLayoutConstraint.Relation.equal<\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"c:objc(cs)NSLayoutConstraint\">NSLayoutConstraint<\/ref.class>?<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 327,
            "key.line" : 500,
            "key.name" : "constraint(_:toAttribute:ofView:relation:)",
            "key.namelength" : 190,
            "key.nameoffset" : 18706,
            "key.offset" : 18701,
            "key.parsed_declaration" : "public func constraint(_ attribute: NSLayoutConstraint.Attribute, toAttribute: NSLayoutConstraint.Attribute, ofView view: Any?, relation: NSLayoutConstraint.Relation = NSLayoutConstraint.Relation.equal) -> NSLayoutConstraint?",
            "key.parsed_scope.end" : 502,
            "key.parsed_scope.start" : 500,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework13FWLayoutChainC10constraintSo18NSLayoutConstraintCSgvp\">constraint<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework13FWLayoutChainC10constraint_8relationSo18NSLayoutConstraintCSgSo0F9AttributeV_So0F8RelationVtF\">constraint(_:relation:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework13FWLayoutChainC10constraint_11toAttribute6ofView14withMultiplier8relationSo18NSLayoutConstraintCSgSo0lF0V_AMypSg12CoreGraphics7CGFloatVSo0L8RelationVtF\">constraint(_:toAttribute:ofView:withMultiplier:relation:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "(FWLayoutChain) -> (NSLayoutConstraint.Attribute, NSLayoutConstraint.Attribute, Any?, NSLayoutConstraint.Relation) -> NSLayoutConstraint?",
            "key.typeusr" : "$s_11toAttribute6ofView8relationSo18NSLayoutConstraintCSgSo0fB0V_AHypSgSo0F8RelationVtcD",
            "key.usr" : "s:11FWFramework13FWLayoutChainC10constraint_11toAttribute6ofView8relationSo18NSLayoutConstraintCSgSo0jF0V_ALypSgSo0J8RelationVtF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func constraint(_ attribute: <Type usr=\"c:objc(cs)NSLayoutConstraint\">NSLayoutConstraint<\/Type>.<Type usr=\"c:@E@NSLayoutAttribute\">Attribute<\/Type>, toAttribute: <Type usr=\"c:objc(cs)NSLayoutConstraint\">NSLayoutConstraint<\/Type>.<Type usr=\"c:@E@NSLayoutAttribute\">Attribute<\/Type>, ofView view: Any?, withMultiplier multiplier: <Type usr=\"s:12CoreGraphics7CGFloatV\">CGFloat<\/Type>, relation: <Type usr=\"c:objc(cs)NSLayoutConstraint\">NSLayoutConstraint<\/Type>.<Type usr=\"c:@E@NSLayoutRelation\">Relation<\/Type> = NSLayoutConstraint.Relation.equal) -&gt; <Type usr=\"c:objc(cs)NSLayoutConstraint\">NSLayoutConstraint<\/Type>?<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 19038
              }
            ],
            "key.bodylength" : 134,
            "key.bodyoffset" : 19301,
            "key.column" : 17,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAutoLayout.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>constraint<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>attribute<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"c:objc(cs)NSLayoutConstraint\">NSLayoutConstraint<\/ref.class>.<ref.enum usr=\"c:@E@NSLayoutAttribute\">Attribute<\/ref.enum><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>toAttribute<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:objc(cs)NSLayoutConstraint\">NSLayoutConstraint<\/ref.class>.<ref.enum usr=\"c:@E@NSLayoutAttribute\">Attribute<\/ref.enum><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>ofView<\/decl.var.parameter.argument_label> <decl.var.parameter.name>view<\/decl.var.parameter.name>: <decl.var.parameter.type><syntaxtype.keyword>Any<\/syntaxtype.keyword>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>withMultiplier<\/decl.var.parameter.argument_label> <decl.var.parameter.name>multiplier<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:12CoreGraphics7CGFloatV\">CGFloat<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>relation<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:objc(cs)NSLayoutConstraint\">NSLayoutConstraint<\/ref.class>.<ref.enum usr=\"c:@E@NSLayoutRelation\">Relation<\/ref.enum><\/decl.var.parameter.type> = NSLayoutConstraint.Relation.equal<\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"c:objc(cs)NSLayoutConstraint\">NSLayoutConstraint<\/ref.class>?<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 391,
            "key.line" : 504,
            "key.name" : "constraint(_:toAttribute:ofView:withMultiplier:relation:)",
            "key.namelength" : 226,
            "key.nameoffset" : 19050,
            "key.offset" : 19045,
            "key.parsed_declaration" : "public func constraint(_ attribute: NSLayoutConstraint.Attribute, toAttribute: NSLayoutConstraint.Attribute, ofView view: Any?, withMultiplier multiplier: CGFloat, relation: NSLayoutConstraint.Relation = NSLayoutConstraint.Relation.equal) -> NSLayoutConstraint?",
            "key.parsed_scope.end" : 506,
            "key.parsed_scope.start" : 504,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework13FWLayoutChainC10constraintSo18NSLayoutConstraintCSgvp\">constraint<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework13FWLayoutChainC10constraint_8relationSo18NSLayoutConstraintCSgSo0F9AttributeV_So0F8RelationVtF\">constraint(_:relation:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11FWFramework13FWLayoutChainC10constraint_11toAttribute6ofView8relationSo18NSLayoutConstraintCSgSo0jF0V_ALypSgSo0J8RelationVtF\">constraint(_:toAttribute:ofView:relation:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "(FWLayoutChain) -> (NSLayoutConstraint.Attribute, NSLayoutConstraint.Attribute, Any?, CGFloat, NSLayoutConstraint.Relation) -> NSLayoutConstraint?",
            "key.typeusr" : "$s_11toAttribute6ofView14withMultiplier8relationSo18NSLayoutConstraintCSgSo0hB0V_AIypSg12CoreGraphics7CGFloatVSo0H8RelationVtcD",
            "key.usr" : "s:11FWFramework13FWLayoutChainC10constraint_11toAttribute6ofView14withMultiplier8relationSo18NSLayoutConstraintCSgSo0lF0V_AMypSg12CoreGraphics7CGFloatVSo0L8RelationVtF"
          }
        ],
        "key.typename" : "FWLayoutChain.Type",
        "key.typeusr" : "$s11FWFramework13FWLayoutChainCmD",
        "key.usr" : "s:11FWFramework13FWLayoutChainC"
      },
      {
        "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
        "key.length" : 28,
        "key.name" : "MARK: - UIView+FWLayoutChain",
        "key.namelength" : 0,
        "key.nameoffset" : 0,
        "key.offset" : 19443
      },
      {
        "key.annotated_decl" : "<Declaration>@<Type usr=\"s:ScM\">MainActor<\/Type> class UIView : <Type usr=\"c:objc(cs)UIResponder\">UIResponder<\/Type>, <Type usr=\"c:objc(pl)NSCoding\">NSCoding<\/Type>, <Type usr=\"c:objc(pl)UIAppearance\">UIAppearance<\/Type>, <Type usr=\"c:objc(pl)UIAppearanceContainer\">UIAppearanceContainer<\/Type>, <Type usr=\"c:objc(pl)UIDynamicItem\">UIDynamicItem<\/Type>, <Type usr=\"c:objc(pl)UITraitEnvironment\">UITraitEnvironment<\/Type>, <Type usr=\"c:objc(pl)UICoordinateSpace\">UICoordinateSpace<\/Type>, <Type usr=\"c:objc(pl)UIFocusItem\">UIFocusItem<\/Type>, <Type usr=\"c:objc(pl)UIFocusItemContainer\">UIFocusItemContainer<\/Type>, <Type usr=\"c:objc(pl)CALayerDelegate\">CALayerDelegate<\/Type><\/Declaration>",
        "key.bodylength" : 736,
        "key.bodyoffset" : 19520,
        "key.column" : 12,
        "key.decl_lang" : "source.lang.objc",
        "key.doc.comment" : "视图链式布局扩展",
        "key.doclength" : 29,
        "key.docoffset" : 19473,
        "key.filepath" : "\/Applications\/Xcode.app\/Contents\/Developer\/Platforms\/MacOSX.platform\/Developer\/SDKs\/MacOSX12.0.sdk\/System\/iOSSupport\/System\/Library\/Frameworks\/UIKit.framework\/Headers\/UIView.h",
        "key.fully_annotated_decl" : "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@<ref.class usr=\"s:ScM\">MainActor<\/ref.class><\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>class<\/syntaxtype.keyword> <decl.name>UIView<\/decl.name> : <ref.class usr=\"c:objc(cs)UIResponder\">UIResponder<\/ref.class>, <ref.protocol usr=\"c:objc(pl)NSCoding\">NSCoding<\/ref.protocol>, <ref.protocol usr=\"c:objc(pl)UIAppearance\">UIAppearance<\/ref.protocol>, <ref.protocol usr=\"c:objc(pl)UIAppearanceContainer\">UIAppearanceContainer<\/ref.protocol>, <ref.protocol usr=\"c:objc(pl)UIDynamicItem\">UIDynamicItem<\/ref.protocol>, <ref.protocol usr=\"c:objc(pl)UITraitEnvironment\">UITraitEnvironment<\/ref.protocol>, <ref.protocol usr=\"c:objc(pl)UICoordinateSpace\">UICoordinateSpace<\/ref.protocol>, <ref.protocol usr=\"c:objc(pl)UIFocusItem\">UIFocusItem<\/ref.protocol>, <ref.protocol usr=\"c:objc(pl)UIFocusItemContainer\">UIFocusItemContainer<\/ref.protocol>, <ref.protocol usr=\"c:objc(pl)CALayerDelegate\">CALayerDelegate<\/ref.protocol><\/decl.class>",
        "key.is_system" : true,
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 755,
        "key.line" : 145,
        "key.modulename" : "UIKit.UIView",
        "key.name" : "UIView",
        "key.namelength" : 6,
        "key.nameoffset" : 19512,
        "key.offset" : 19502,
        "key.parsed_declaration" : "extension UIView",
        "key.parsed_scope.end" : 532,
        "key.parsed_scope.start" : 512,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>private struct FWLayoutChainAssociatedKeys<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.private",
                "key.length" : 7,
                "key.offset" : 19549
              }
            ],
            "key.bodylength" : 58,
            "key.bodyoffset" : 19593,
            "key.column" : 20,
            "key.decl_lang" : "source.lang.swift",
            "key.doc.column" : 20,
            "key.doc.comment" : "关联对象Key",
            "key.doc.declaration" : "private struct FWLayoutChainAssociatedKeys",
            "key.doc.file" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAutoLayout.swift",
            "key.doc.full_as_xml" : "<Class file=\"\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAutoLayout.swift\" line=\"514\" column=\"20\"><Name>FWLayoutChainAssociatedKeys<\/Name><USR>s:So6UIViewC11FWFrameworkE27FWLayoutChainAssociatedKeys33_EF2BAB0CBB71D9D213B64E16DD6CFF51LLV<\/USR><Declaration>private struct FWLayoutChainAssociatedKeys<\/Declaration><CommentParts><Abstract><Para>关联对象Key<\/Para><\/Abstract><\/CommentParts><\/Class>",
            "key.doc.line" : 514,
            "key.doc.name" : "FWLayoutChainAssociatedKeys",
            "key.doc.type" : "Class",
            "key.doclength" : 20,
            "key.docoffset" : 19525,
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAutoLayout.swift",
            "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>FWLayoutChainAssociatedKeys<\/decl.name><\/decl.struct>",
            "key.kind" : "source.lang.swift.decl.struct",
            "key.length" : 95,
            "key.line" : 514,
            "key.name" : "FWLayoutChainAssociatedKeys",
            "key.namelength" : 27,
            "key.nameoffset" : 19564,
            "key.offset" : 19557,
            "key.parsed_declaration" : "private struct FWLayoutChainAssociatedKeys",
            "key.parsed_scope.end" : 516,
            "key.parsed_scope.start" : 514,
            "key.substructure" : [
              {
                "key.accessibility" : "source.lang.swift.accessibility.internal",
                "key.annotated_decl" : "<Declaration>static var layoutChainKey: <Type usr=\"s:SS\">String<\/Type><\/Declaration>",
                "key.column" : 20,
                "key.decl_lang" : "source.lang.swift",
                "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAutoLayout.swift",
                "key.fully_annotated_decl" : "<decl.var.static><syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>layoutChainKey<\/decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.type><\/decl.var.static>",
                "key.kind" : "source.lang.swift.decl.var.static",
                "key.length" : 44,
                "key.line" : 515,
                "key.name" : "layoutChainKey",
                "key.namelength" : 14,
                "key.nameoffset" : 19613,
                "key.offset" : 19602,
                "key.parsed_declaration" : "static var layoutChainKey = \"layoutChainKey\"",
                "key.parsed_scope.end" : 515,
                "key.parsed_scope.start" : 515,
                "key.setter_accessibility" : "source.lang.swift.accessibility.internal",
                "key.typename" : "String",
                "key.typeusr" : "$sSSD",
                "key.usr" : "s:So6UIViewC11FWFrameworkE27FWLayoutChainAssociatedKeys33_EF2BAB0CBB71D9D213B64E16DD6CFF51LLV06layoutD3KeySSvpZ"
              }
            ],
            "key.typename" : "UIView.FWLayoutChainAssociatedKeys.Type",
            "key.typeusr" : "$sSo6UIViewC11FWFrameworkE27FWLayoutChainAssociatedKeys33_EF2BAB0CBB71D9D213B64E16DD6CFF51LLVmD",
            "key.usr" : "s:So6UIViewC11FWFrameworkE27FWLayoutChainAssociatedKeys33_EF2BAB0CBB71D9D213B64E16DD6CFF51LLV"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var fwLayoutChain: <Type usr=\"s:11FWFramework13FWLayoutChainC\">FWLayoutChain<\/Type> { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 19685
              }
            ],
            "key.bodylength" : 383,
            "key.bodyoffset" : 19726,
            "key.column" : 16,
            "key.decl_lang" : "source.lang.swift",
            "key.doc.column" : 16,
            "key.doc.comment" : "链式布局对象",
            "key.doc.declaration" : "public var fwLayoutChain: FWLayoutChain { get }",
            "key.doc.file" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAutoLayout.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAutoLayout.swift\" line=\"519\" column=\"16\"><Name>fwLayoutChain<\/Name><USR>s:So6UIViewC11FWFrameworkE13fwLayoutChainAC08FWLayoutE0Cvp<\/USR><Declaration>public var fwLayoutChain: FWLayoutChain { get }<\/Declaration><CommentParts><Abstract><Para>链式布局对象<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 519,
            "key.doc.name" : "fwLayoutChain",
            "key.doc.type" : "Other",
            "key.doclength" : 23,
            "key.docoffset" : 19658,
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAutoLayout.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>fwLayoutChain<\/decl.name>: <decl.var.type><ref.class usr=\"s:11FWFramework13FWLayoutChainC\">FWLayoutChain<\/ref.class><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 418,
            "key.line" : 519,
            "key.name" : "fwLayoutChain",
            "key.namelength" : 13,
            "key.nameoffset" : 19696,
            "key.offset" : 19692,
            "key.parsed_declaration" : "public var fwLayoutChain: FWLayoutChain",
            "key.parsed_scope.end" : 526,
            "key.parsed_scope.start" : 519,
            "key.typename" : "FWLayoutChain",
            "key.typeusr" : "$s11FWFramework13FWLayoutChainCD",
            "key.usr" : "s:So6UIViewC11FWFrameworkE13fwLayoutChainAC08FWLayoutE0Cvp"
          },
          {
            "key.annotated_decl" : "<Declaration>var layoutChain: Any?<\/Declaration>",
            "key.column" : 13,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAutoLayout.swift",
            "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>layoutChain<\/decl.name>: <decl.var.type><syntaxtype.keyword>Any<\/syntaxtype.keyword>?<\/decl.var.type><\/decl.var.local>",
            "key.kind" : "source.lang.swift.decl.var.local",
            "key.length" : 93,
            "key.line" : 520,
            "key.name" : "layoutChain",
            "key.namelength" : 11,
            "key.nameoffset" : 19739,
            "key.offset" : 19735,
            "key.parsed_declaration" : "var layoutChain = objc_getAssociatedObject(self, &FWLayoutChainAssociatedKeys.layoutChainKey)",
            "key.parsed_scope.end" : 520,
            "key.parsed_scope.start" : 520,
            "key.typename" : "Any?",
            "key.typeusr" : "$sypSgD",
            "key.usr" : "s:So6UIViewC11FWFrameworkE13fwLayoutChainAC08FWLayoutE0Cvg06layoutE0L_ypSgvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func fwLayoutMaker(_ closure: (_ make: <Type usr=\"s:11FWFramework13FWLayoutChainC\">FWLayoutChain<\/Type>) -&gt; <Type usr=\"s:s4Voida\">Void<\/Type>)<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 20147
              }
            ],
            "key.bodylength" : 36,
            "key.bodyoffset" : 20218,
            "key.column" : 17,
            "key.decl_lang" : "source.lang.swift",
            "key.doc.column" : 17,
            "key.doc.comment" : "链式布局闭包",
            "key.doc.declaration" : "public func fwLayoutMaker(_ closure: (_ make: FWLayoutChain) -> Void)",
            "key.doc.file" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAutoLayout.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAutoLayout.swift\" line=\"529\" column=\"17\"><Name>fwLayoutMaker(_:)<\/Name><USR>s:So6UIViewC11FWFrameworkE13fwLayoutMakeryyyAC13FWLayoutChainCXEF<\/USR><Declaration>public func fwLayoutMaker(_ closure: (_ make: FWLayoutChain) -&gt; Void)<\/Declaration><CommentParts><Abstract><Para>链式布局闭包<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 529,
            "key.doc.name" : "fwLayoutMaker(_:)",
            "key.doc.type" : "Function",
            "key.doclength" : 23,
            "key.docoffset" : 20120,
            "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWAutoLayout.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>fwLayoutMaker<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>closure<\/decl.var.parameter.name>: <decl.var.parameter.type>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>make<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"s:11FWFramework13FWLayoutChainC\">FWLayoutChain<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:s4Voida\">Void<\/ref.typealias><\/decl.function.returntype><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 101,
            "key.line" : 529,
            "key.name" : "fwLayoutMaker(_:)",
            "key.namelength" : 57,
            "key.nameoffset" : 20159,
            "key.offset" : 20154,
            "key.parsed_declaration" : "public func fwLayoutMaker(_ closure: (_ make: FWLayoutChain) -> Void)",
            "key.parsed_scope.end" : 531,
            "key.parsed_scope.start" : 529,
            "key.substructure" : [

            ],
            "key.typename" : "(UIView) -> ((FWLayoutChain) -> ()) -> ()",
            "key.typeusr" : "$syyy11FWFramework13FWLayoutChainCXEcD",
            "key.usr" : "s:So6UIViewC11FWFrameworkE13fwLayoutMakeryyyAC13FWLayoutChainCXEF"
          }
        ],
        "key.typename" : "UIView.Type",
        "key.typeusr" : "$sSo6UIViewCmD",
        "key.usr" : "c:objc(cs)UIView"
      }
    ]
  }
}, {
  "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWToolkit.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 1290,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
        "key.length" : 25,
        "key.name" : "MARK: - UIColor+FWToolkit",
        "key.namelength" : 0,
        "key.nameoffset" : 0,
        "key.offset" : 156
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public func FWColorHex(_ hex: <Type usr=\"s:Si\">Int<\/Type>, _ alpha: <Type usr=\"s:12CoreGraphics7CGFloatV\">CGFloat<\/Type> = 1.0) -&gt; <Type usr=\"c:objc(cs)UIColor\">UIColor<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 346
          }
        ],
        "key.bodylength" : 160,
        "key.bodyoffset" : 417,
        "key.column" : 13,
        "key.decl_lang" : "source.lang.swift",
        "key.doc.column" : 13,
        "key.doc.comment" : "从16进制创建UIColor\n\n- Parameters:\n  - hex: 十六进制值，格式0xFFFFFF\n  - alpha: 透明度可选，默认1.0\n- Returns: UIColor",
        "key.doc.declaration" : "public func FWColorHex(_ hex: Int, _ alpha: CGFloat = 1.0) -> UIColor",
        "key.doc.file" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWToolkit.swift",
        "key.doc.full_as_xml" : "<Function file=\"\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWToolkit.swift\" line=\"19\" column=\"13\"><Name>FWColorHex(_:_:)<\/Name><USR>s:11FWFramework10FWColorHexySo7UIColorCSi_12CoreGraphics7CGFloatVtF<\/USR><Declaration>public func FWColorHex(_ hex: Int, _ alpha: CGFloat = 1.0) -&gt; UIColor<\/Declaration><CommentParts><Abstract><Para>从16进制创建UIColor<\/Para><\/Abstract><Parameters><Parameter><Name>hex<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>十六进制值，格式0xFFFFFF<\/Para><\/Discussion><\/Parameter><Parameter><Name>alpha<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>透明度可选，默认1.0<\/Para><\/Discussion><\/Parameter><\/Parameters><ResultDiscussion><Para>UIColor<\/Para><\/ResultDiscussion><\/CommentParts><\/Function>",
        "key.doc.line" : 19,
        "key.doc.name" : "FWColorHex(_:_:)",
        "key.doc.parameters" : [
          {
            "discussion" : [
              {
                "Para" : "十六进制值，格式0xFFFFFF"
              }
            ],
            "name" : "hex"
          },
          {
            "discussion" : [
              {
                "Para" : "透明度可选，默认1.0"
              }
            ],
            "name" : "alpha"
          }
        ],
        "key.doc.result_discussion" : [
          {
            "Para" : "UIColor"
          }
        ],
        "key.doc.type" : "Function",
        "key.doclength" : 163,
        "key.docoffset" : 183,
        "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWToolkit.swift",
        "key.fully_annotated_decl" : "<decl.function.free><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>FWColorHex<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>hex<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>alpha<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:12CoreGraphics7CGFloatV\">CGFloat<\/ref.struct><\/decl.var.parameter.type> = 1.0<\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"c:objc(cs)UIColor\">UIColor<\/ref.class><\/decl.function.returntype><\/decl.function.free>",
        "key.kind" : "source.lang.swift.decl.function.free",
        "key.length" : 225,
        "key.line" : 19,
        "key.name" : "FWColorHex(_:_:)",
        "key.namelength" : 46,
        "key.nameoffset" : 358,
        "key.offset" : 353,
        "key.parsed_declaration" : "public func FWColorHex(_ hex: Int, _ alpha: CGFloat = 1.0) -> UIColor",
        "key.parsed_scope.end" : 21,
        "key.parsed_scope.start" : 19,
        "key.substructure" : [

        ],
        "key.typename" : "(Int, CGFloat) -> UIColor",
        "key.typeusr" : "$sySo7UIColorCSi_12CoreGraphics7CGFloatVtcD",
        "key.usr" : "s:11FWFramework10FWColorHexySo7UIColorCSi_12CoreGraphics7CGFloatVtF"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public func FWColorRgb(_ red: <Type usr=\"s:12CoreGraphics7CGFloatV\">CGFloat<\/Type>, _ green: <Type usr=\"s:12CoreGraphics7CGFloatV\">CGFloat<\/Type>, _ blue: <Type usr=\"s:12CoreGraphics7CGFloatV\">CGFloat<\/Type>, _ alpha: <Type usr=\"s:12CoreGraphics7CGFloatV\">CGFloat<\/Type> = 1.0) -&gt; <Type usr=\"c:objc(cs)UIColor\">UIColor<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 764
          }
        ],
        "key.bodylength" : 94,
        "key.bodyoffset" : 874,
        "key.column" : 13,
        "key.decl_lang" : "source.lang.swift",
        "key.doc.column" : 13,
        "key.doc.comment" : "从RGB创建UIColor\n\n- Parameters:\n  - red: 红色值\n  - green: 绿色值\n  - blue: 蓝色值\n  - alpha: 透明度可选，默认1.0\n- Returns: UIColor",
        "key.doc.declaration" : "public func FWColorRgb(_ red: CGFloat, _ green: CGFloat, _ blue: CGFloat, _ alpha: CGFloat = 1.0) -> UIColor",
        "key.doc.file" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWToolkit.swift",
        "key.doc.full_as_xml" : "<Function file=\"\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWToolkit.swift\" line=\"31\" column=\"13\"><Name>FWColorRgb(_:_:_:_:)<\/Name><USR>s:11FWFramework10FWColorRgbySo7UIColorC12CoreGraphics7CGFloatV_A3GtF<\/USR><Declaration>public func FWColorRgb(_ red: CGFloat, _ green: CGFloat, _ blue: CGFloat, _ alpha: CGFloat = 1.0) -&gt; UIColor<\/Declaration><CommentParts><Abstract><Para>从RGB创建UIColor<\/Para><\/Abstract><Parameters><Parameter><Name>red<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>红色值<\/Para><\/Discussion><\/Parameter><Parameter><Name>green<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>绿色值<\/Para><\/Discussion><\/Parameter><Parameter><Name>blue<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>蓝色值<\/Para><\/Discussion><\/Parameter><Parameter><Name>alpha<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>透明度可选，默认1.0<\/Para><\/Discussion><\/Parameter><\/Parameters><ResultDiscussion><Para>UIColor<\/Para><\/ResultDiscussion><\/CommentParts><\/Function>",
        "key.doc.line" : 31,
        "key.doc.name" : "FWColorRgb(_:_:_:_:)",
        "key.doc.parameters" : [
          {
            "discussion" : [
              {
                "Para" : "红色值"
              }
            ],
            "name" : "red"
          },
          {
            "discussion" : [
              {
                "Para" : "绿色值"
              }
            ],
            "name" : "green"
          },
          {
            "discussion" : [
              {
                "Para" : "蓝色值"
              }
            ],
            "name" : "blue"
          },
          {
            "discussion" : [
              {
                "Para" : "透明度可选，默认1.0"
              }
            ],
            "name" : "alpha"
          }
        ],
        "key.doc.result_discussion" : [
          {
            "Para" : "UIColor"
          }
        ],
        "key.doc.type" : "Function",
        "key.doclength" : 184,
        "key.docoffset" : 580,
        "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWToolkit.swift",
        "key.fully_annotated_decl" : "<decl.function.free><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>FWColorRgb<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>red<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:12CoreGraphics7CGFloatV\">CGFloat<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>green<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:12CoreGraphics7CGFloatV\">CGFloat<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>blue<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:12CoreGraphics7CGFloatV\">CGFloat<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>alpha<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:12CoreGraphics7CGFloatV\">CGFloat<\/ref.struct><\/decl.var.parameter.type> = 1.0<\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"c:objc(cs)UIColor\">UIColor<\/ref.class><\/decl.function.returntype><\/decl.function.free>",
        "key.kind" : "source.lang.swift.decl.function.free",
        "key.length" : 198,
        "key.line" : 31,
        "key.name" : "FWColorRgb(_:_:_:_:)",
        "key.namelength" : 85,
        "key.nameoffset" : 776,
        "key.offset" : 771,
        "key.parsed_declaration" : "public func FWColorRgb(_ red: CGFloat, _ green: CGFloat, _ blue: CGFloat, _ alpha: CGFloat = 1.0) -> UIColor",
        "key.parsed_scope.end" : 33,
        "key.parsed_scope.start" : 31,
        "key.substructure" : [

        ],
        "key.typename" : "(CGFloat, CGFloat, CGFloat, CGFloat) -> UIColor",
        "key.typeusr" : "$sySo7UIColorC12CoreGraphics7CGFloatV_A3EtcD",
        "key.usr" : "s:11FWFramework10FWColorRgbySo7UIColorC12CoreGraphics7CGFloatV_A3GtF"
      },
      {
        "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
        "key.length" : 24,
        "key.name" : "MARK: - UIFont+FWToolkit",
        "key.namelength" : 0,
        "key.nameoffset" : 0,
        "key.offset" : 974
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public func FWFontSize(_ size: <Type usr=\"s:12CoreGraphics7CGFloatV\">CGFloat<\/Type>, _ weight: <Type usr=\"c:objc(cs)UIFont\">UIFont<\/Type>.<Type usr=\"c:@T@UIFontWeight\">Weight<\/Type> = .regular) -&gt; <Type usr=\"c:objc(cs)UIFont\">UIFont<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 1145
          }
        ],
        "key.bodylength" : 56,
        "key.bodyoffset" : 1232,
        "key.column" : 13,
        "key.decl_lang" : "source.lang.swift",
        "key.doc.column" : 13,
        "key.doc.comment" : "快速创建系统字体\n\n- Parameters:\n  - size: 字体字号\n  - weight: 字重可选，默认Regular\n- Returns: UIFont",
        "key.doc.declaration" : "public func FWFontSize(_ size: CGFloat, _ weight: UIFont.Weight = .regular) -> UIFont",
        "key.doc.file" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWToolkit.swift",
        "key.doc.full_as_xml" : "<Function file=\"\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWToolkit.swift\" line=\"43\" column=\"13\"><Name>FWFontSize(_:_:)<\/Name><USR>s:11FWFramework10FWFontSizeySo6UIFontC12CoreGraphics7CGFloatV_So0D6WeightatF<\/USR><Declaration>public func FWFontSize(_ size: CGFloat, _ weight: UIFont.Weight = .regular) -&gt; UIFont<\/Declaration><CommentParts><Abstract><Para>快速创建系统字体<\/Para><\/Abstract><Parameters><Parameter><Name>size<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>字体字号<\/Para><\/Discussion><\/Parameter><Parameter><Name>weight<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>字重可选，默认Regular<\/Para><\/Discussion><\/Parameter><\/Parameters><ResultDiscussion><Para>UIFont<\/Para><\/ResultDiscussion><\/CommentParts><\/Function>",
        "key.doc.line" : 43,
        "key.doc.name" : "FWFontSize(_:_:)",
        "key.doc.parameters" : [
          {
            "discussion" : [
              {
                "Para" : "字体字号"
              }
            ],
            "name" : "size"
          },
          {
            "discussion" : [
              {
                "Para" : "字重可选，默认Regular"
              }
            ],
            "name" : "weight"
          }
        ],
        "key.doc.result_discussion" : [
          {
            "Para" : "UIFont"
          }
        ],
        "key.doc.type" : "Function",
        "key.doclength" : 145,
        "key.docoffset" : 1000,
        "key.filepath" : "\/Users\/wuyong\/Documents\/github\/FWFramework\/FWFramework\/Classes\/Toolkit\/FWToolkit.swift",
        "key.fully_annotated_decl" : "<decl.function.free><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>FWFontSize<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>size<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:12CoreGraphics7CGFloatV\">CGFloat<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>weight<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"c:objc(cs)UIFont\">UIFont<\/ref.class>.<ref.struct usr=\"c:@T@UIFontWeight\">Weight<\/ref.struct><\/decl.var.parameter.type> = .regular<\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"c:objc(cs)UIFont\">UIFont<\/ref.class><\/decl.function.returntype><\/decl.function.free>",
        "key.kind" : "source.lang.swift.decl.function.free",
        "key.length" : 137,
        "key.line" : 43,
        "key.name" : "FWFontSize(_:_:)",
        "key.namelength" : 63,
        "key.nameoffset" : 1157,
        "key.offset" : 1152,
        "key.parsed_declaration" : "public func FWFontSize(_ size: CGFloat, _ weight: UIFont.Weight = .regular) -> UIFont",
        "key.parsed_scope.end" : 45,
        "key.parsed_scope.start" : 43,
        "key.substructure" : [

        ],
        "key.typename" : "(CGFloat, UIFont.Weight) -> UIFont",
        "key.typeusr" : "$sySo6UIFontC12CoreGraphics7CGFloatV_So0A6WeightatcD",
        "key.usr" : "s:11FWFramework10FWFontSizeySo6UIFontC12CoreGraphics7CGFloatV_So0D6WeightatF"
      }
    ]
  }
}]
